---
layout: page
title: Enable HTTPS access to the Akana Administration Console for Policy Manager
description: Configure the container system.properties file to enable HTTPS access to the Akana Administration Console.
product: ag
category: learn
sub-nav-class: Operations
weight: 15
subcategory: Technical Note
type: page
nav-title: Enable HTTPS Access to the SOA Software Administration Console
---
<h2 id="top">Enable HTTPS access to the Akana Administration Console for Policy Manager</h2>
<p>Configure the container <strong>system.properties</strong> file to enable HTTPS access to the Akana Administration Console.</p>
<div class = "divider1"></div>



<ol class="table_of_contents">
<li><a href="#introduction">Introduction</a></li>
<li><a href="#configuration">Configuration</a></li>
<li><a href="#troubleshooting">Troubleshooting</a></li>
</ol>
<div class = "divider1"></div>



<h3 id="introduction">Introduction</h3>
<p>If you would like to facilitate your own role-based access to the Akana Administration Console, you can do so by enabling an HTTPS port.</p>
<p>This process involves:</p>
<ul>
	<li><strong>Adding an HTTPS listener to Policy Manager or Network Director container instance folders ({release_directory}\instances):</strong> You can do this by adding an HTTPS port to the <strong>system.properties</strong> file (for UI browsing only), or by adding an HTTPS listener to the Policy Manager Management Console and to the <strong>system.properties</strong> file (for hosting services and UI browsing). </li>
	<li><strong>Adding a new configuration category to the Akana Administration Console to control whether you want \admin access for both HTTP and HTTPS, or HTTPS only:</strong> This can be done by manually adding a .cfg file to the \deploy folder of the {release_directory}\instances\{container name}\deploy folder. </li>
</ul>

<h5>Notes on Configuring an HTTPS Listener</h5>
<p>Several important points to note on configuring an HTTPS listener:</p>
<ul>
	<li>If you add an HTTPS listener to the <strong>system.properties</strong> file (as described in the following scenarios) <em>before</em> you install the Policy Manager features, the HTTPS listener will be registered automatically in the database when you install the Policy Manager features and the listener will be present in the <strong>Containers</strong> section of the Policy Manager Management Console. </li>
	<li>If you add an HTTPS listener to the <strong>system.properties</strong> file <em>after</em> you install the Policy Manager features, the HTTPS listener will not registered automatically in the database and you will need to add an HTTPS listener using the <strong>Add Container Listener</strong> function in the Policy Manager <strong>Containers</strong> section in order to update the container metadata. Note that the HTTPS listener configuration should have <strong>Bind to all interfaces</strong> checked, and you can optionally choose to clone services hosted on other listeners. You must also generate a certificate for the listener after it is defined using the <strong>Manage PKI Keys </strong>option. See screen examples below. </li>
	<li>If you add a UI-Browsing listener to the <strong>system.properties</strong> file, Policy Manager will get the listener information from the <strong>system.properties</strong> file. </li>
</ul>
<p><img src="images/kb_adminconsole_https_add_https_listener.jpg" alt="" /></p>
<p><img src="images/kb_adminconsole_https_manage_pki_keys.jpg" alt="" /></p>
<p><a href="#top">Back to top</a></p>



<h3 id="configuration">Configuration</h3>
<p>Let's take a quick walkthrough of the HTTPS configuration process to get you started.</p>

<h5>Step 1: Add HTTPS Listener (Options)</h5>
<p>To enable an HTTPS listener you must update the <strong>system.properties</strong> file in the \{release_directory}\instancesÂ  folder. Load the <strong>system.properties</strong> file into an editor and configure it based on the following Akana Administration Console access scenarios. We use port 9446 in these examples.</p>
<p><img src="images/kb_adminconsole_https_system_properties_folder.jpg" alt="" /></p>

<h5>Option 1: HTTPS Access / UI Browsing Only</h5>
<p>This option restricts access to the Akana Administration Console to the specified HTTPS listener.</p>
<p><strong>Note:</strong> You must also delete the HTTP listener defined in the Policy Manager Management Console.</p>
<p>Settings:</p>

<ul>
	<li><strong>com.soa.http.bind.all=true</strong> (Remove for HTTPS access ONLY)</li>
	<li><strong>com.soa.http.bind.all.secure=true</strong> (Add to enable HTTPS access)</li>
	<li><strong>org.osgi.service.http.port=9000</strong> (Remove for HTTPS access only)</li>
	<li><strong>org.osgi.service.http.port.secure=9446</strong> (Add to enable HTTPS access)</li>
</ul>
<h5>Option 2: HTTPS and HTTP Access</h5>
<p>This option restricts access to the Akana Administration Console to the specified HTTPS listener and the default HTTP listener defined in the Policy Manager Management Console. You can have a UI browsing only HTTPS listener (i.e., listener is not configured in Policy Manager), or a listener that can host services (i.e., listener must be configured in Policy Manager ).</p>
<p><strong>Note</strong>: If you would like your HTTPS listener to host services, you must manually add it to the Policy Manager Management Console. You must also configure keys for this listener using the Manage PKI Keys function.</p>
<p><strong>com.soa.http.bind.all.secure=true (Add to enable HTTPS access)</strong></p>
<p><strong>org.osgi.service.http.port.secure=9446 (Add to enable HTTPS access)</strong></p>

<h5>Option 3: Multiple HTTPS Listeners</h5>
<p>If you would like to have multiple HTTPS listeners, you can add one UI browsing only HTTPS listener, and one HTTPS listener to the Policy Manager Management Console and specify both listeners in the <strong>system.properties</strong> file.</p>
<p><strong>Note</strong>: You must add a certificate to the listener in Policy Manager using the <strong>Manage PKI Keys</strong> function.</p>
<p>Settings:</p>
<ul>
	<li><strong>com.soa.http.bind.all.secure=true</strong> (Add to enable HTTPS access)</li>
	<li><strong>org.osgi.service.http.port.secure=9446</strong> (Add to enable HTTPS access - UI Browsing Only - No listener configured in Policy Manager)</li>
	<li><strong>org.osgi.service.http.port.secure=9448</strong> (Add to enable HTTPS access - For Hosting Services - Listener configured in Policy Manager)</li>
</ul>
	
<h5>Step 2: Configure HTTPS Access to Akana Administration Console</h5>
<p>If you want access to the Akana Administration Console via HTTPS, you must add a new configuration category. You can do this manually by adding a .cfg file to the \{release_directory}\instances\{container name}\deploy folder.</p>

<h5>Add Configuration Category File</h5>
<ol>
	<li>Create a new file in the \{release_directory} directory and call it:
		<p><strong>com.soa.admin.console.cfg</strong></p></li>
	<li>Add the following line to the file:
		<p><strong>admin.console.access.restricted=true</strong> (if you want /admin access to be HTTPS only).</p>
		<p><strong>admin.console.access.restricted=false</strong> (if you want /admin access to be HTTP and HTTPS).</p></li>
	<li>Copy the file to the \deploy folder as illustrated below:
		<p><img src="images/kb_adminconsole_https_admin_console_config.jpg" alt="" /></p></li>
	<li>Restart the container.</li>
</ol>

<h5>Step 3: Test HTTPS Access to Akana Administration Console</h5>
<p>When the container is up and running launch the Akana Administration Console (https://localhost:{port}/admin/). It should only accessible on the port defined in Step 1, and comply with the rules for the configuration category you selected as follows:</p>

<h5>com.soa.admin.console.cfg enabled (True)</h5>
<ul>
	<li>You can access the Akana Administration Console through HTTPS port only. </li>
	<li>If you try to access Akana Administration Console using the default HTTP port you will receive a 404 error.</li>
</ul>

<h5>com.soa.admin.console.cfg enabled (False)</h5>
<ul>
	<li>You can access the Akana Administration Console through the HTTP port and through the HTTPS port:
	<p><img src="images/kb_adminconsole_https_admin_config_category.jpg" alt="" /></p></li>
</ul>
<p><a href="#top">back to top</a></p>



<h3 id="troubleshooting">Troubleshooting</h3>
<p>If everything appears to be configured correctly and you are still seeing 404 errors when you try to launch Policy Manager or Network Director, review the following steps to attempt to troubleshoot the problem.</p>

<h5>Step 1: Inspect Log</h5>
<p>Inspect the container logs in {release_directory}\instances\{instance name}\logs and search for the following errors which occur near the startup:</p>
<pre>Caused by: java.net.BindException: Address already in use
  at java.net.PlainSocketImpl.socketBind(Native Method)
  at java.net.PlainSocketImpl.bind(Unknown Source)
  at java.net.ServerSocket.bind(Unknown Source)
  at java.net.ServerSocket.&lt;init&gt;(Unknown Source)</pre>
<p>These errors mean that the container is trying to start its listener, but something is already listening.</p>

<h5>Step 2: Resolve</h5>
<ol>
	<li>Stop the container and check to make sure that nothing is running on the port that the container is configured to run on. <strong>If nothing is running</strong>, it means that the container is trying to start <strong>TWO</strong> listeners on the same port. </li>
	<li>Check <strong>system.properties</strong> in the container directory. It will have the listeners specified that the container uses on initial startup. For example:
<pre>com.soa.http.host=hostname
org.osgi.service.http.port=9900
org.osgi.service.http.port.secure=9446
com.soa.http.bind.all=true
com.soa.http.bind.all.secure=true</pre>
</li>
	<li>Compare the host, port and bind settings above (for HTTP and HTTPS) with the actual Policy Manager listeners defined in the Policy Manager Management Console. (*.secure just refers to the HTTPS options; the same rules apply to HTTP and HTTPS). If the ports specified in the <strong>system.properties</strong> file are different from the ports specified in Policy Manager, the problem must exist elsewhere. If the port numbers match, then ONE of the following must occur:
<ul>
			<li><strong>com.soa.http.bind.all</strong> in the system.properties file AND the <strong>Bind to All Interfaces</strong> option for the HTTPS Container Listener in the Policy Manager Management Console must both be set.</li>
			<li>The <strong>com.soa.http.host</strong> value in the <strong>system.properties</strong> file and the <strong>hostname</strong> in the Policy Manager Management Console must match.</li>
</ul>
<p>The reason is that when Policy Manager starts its listener, it tries to determine whether one already exists on the same port and host. If it finds one already running,  it uses that port. If the host names are different, or if they are not running on all interfaces, Policy Manager might not be able to find the listener already running, and might therefore try to start a new one on the same port.</p></li>
</ol>
<p><a href="#top">Back to top</a></p>