---
layout: page
title: Workflow Reserved Actions
description: Description of reserved  states and actions  that can be defined in a workflow definition.
product: ag
category: learn
sub-nav-class: Workflow
weight:	8
type: page
nav-title: Workflow Reserved Actions

--- 

<a name="top" id="top"></a>
<h2 name="top">Workflow Reserved Actions</h2>

<p>Description of reserved  states and actions  that can be defined in a workflow definition.</p>


<a href="workflow_management.htm" class="button secondary">Workflow Management</a>

<a href="workflow_library.htm" class="button secondary">Workflow Library</a>

<a href="http://docs.soa.com/ag/assets/PM_workflow_developers_reference_61_7x.pdf" class="button secondary"> Workflow Developers Guide</a>
<p></p>




<div class = "divider1"></div>
<h3 style="color: gray;">Table of Contents</h3>


<ol class="table_of_contents">



<li><a href="#introduction">Introduction</a></li>

<li><a href="#generic_actions">Generic Reserved Actions</a></li>

<li><a href="#service_actions">Service Specific Reserved Actions</a></li>

<li><a href="#contract_actions">Contract Specific Reserved Actions</a></li>




</ol>
  <div class = "divider1"></div>
  
    <a name="introduction">
<h2>Introduction</h2>
</a>
    <p>The Policy Manager Workflow Library includes a Reserved Actions that are arbitrary states and actions that can be defined in a Workflow Definition. The following reserved actions have special meaning to be interpreted by Policy Manager's Workflow Engine. All Reserved Actions have @ as prefix. A reference to a &quot;Workbench Object&quot; means the &quot;service&quot; or &quot;contract&quot; under the control of a Workflow Instance.</p>
    <p><em>Note: Policy Workflow does not policy-specific actions. </em></p>

    
<a name="generic_actions">
<h2>Generic Reserved Actions</h2></a>
<table width="700
" cellspacing="0px" class="doctable">
  <thead>
  </thead>
  <tr>
    <th width="188">Action Name</th>
    <th width="471">Description</th>
    <td width="33"></thead></td>
  </tr>
  <tr class="t2row">
    <td height="26"><p>@read</p></td>
    <td>This reserved action is used to specify additional set of users who can read the 
      workbench objects.
      
     
      <ul class="usingOrderedList">
        <li>By default, any Administrator who can perform any non-reserved Workflow action automatically        has permission to read the underlying object.</li>
        <li>In some cases, an Administrator may want to allow other users who cannot directly        invoke Workflow actions to have the read-only access to the underlying objects. This        can be achieved using the @read action.</li>
        <li>The @read action will never be invoked by Workflow Engine; only the restriction rules        defined in it will be evaluated to decide whether the caller has the read permission        to the object.  </li>
      </ul>
      
      <p>The following rules are used to decide if a specific user can read a Workflow object        at any moment:</p>
      <ul class="usingOrderedList">
        <li>If a user has permission to invoke any non-reserved actions under current Workflow        state, then the user is allowed to read the content of the Workflow object.</li>
        <li>Otherwise, if the current state of the Workflow instance has a &quot;read&quot; action and        the user has permission to invoke it, then the user is allowed to read the content        of the Workflow object.</li>
      </ul>
      <p>In summary, the reserved &quot;@read&quot; action provides a mechanism for Administrators to        grant a set of users the ability to track/monitor the progress of the Workflow object    without allowing those users the ability to influence the Workflow process.</p></td>
  </tr>
  <tr class="t1row">
    <td height="496"><p>@modify</p></td
    >
    <td></li><p>This reserved action is used to specify who can modify the Workflow document. Similar        to @read, @modify will never be directly invoked by the Workflow Engine - only the        restriction rules defined in it will be evaluated.
      </p>
      <p>The following rules are used to decide if a specific user can modify a Workflow object:</p>
      <ul class="usingOrderedList">
        <li>If a user does not have permission to invoke any non-reserved action of the current        Workflow state, he cannot modify the content of the Workflow object.</li>
        <li>Otherwise, if the current Workflow state has an &quot;@modify&quot; action and the user is        allowed to invoke it, then he can modify the content of the Workflow object.</li>
      </ul>
      <p>Customers can use the &quot;@modify&quot; action to restrict the rights of modifying the Workbench        objects to only a subset of Workflow participants. For example:</p>
      <ul class="usingOrderedList">
        <li>If a Workflow state does not have an &quot;@modify&quot; action, then this object is read-only        in this state.  <br />
        </li>
        <li>If a Workflow state has an &quot;@modify&quot; action with no restriction rules, then whoever        has the permission to invoke any non-reserved Workflow action is able to modify the        content of the Workflow object.</li>
        <li>If a Workflow state has an &quot;@modify&quot; action with an authorizeByRole restriction against&quot;developer,&quot; then only developer can modify the content of workbench objects.
        </li>
      </ul></td>
  </tr>
  <tr class="t2row">
    <td height="30">@reset</td>
    <td>This reserved initial action is invoked when a new version of a Workflow definition      is uploaded and user has selected to reset all the active Workflow instances associated      with that Workflow definition. Users can use this action to reset the object to the      proper initialized state.<br />
      <br />
   
    Note that only users with System Administrator role can modify a Workflow definition,        thus the caller of the @reset action may not be normal business users. In general,        a Workflow definition should not put restriction on the caller of the @reset action    and should not set the caller of the @reset action as the owner of the Workflow.</p></td>
  </tr>
  
</table>
<p><a href="#top">back to top</a></p>

<a name="service_actions">
<h2>Service Specific Reserved Actions</h2></a>
<table width="700
" cellspacing="0px" class="doctable">
  <thead>
  </thead>
  <tr>
    <th width="188">Action Name</th>
    <th width="471">Description</th>
    <td width="33"></thead></td>
  </tr>
  <tr class="t2row">
    <td height="26"><p>@create</p></td>
    <td>This reserved initial action is invoked when a new service is created. Multiple @create    actions can be defined.</td>
  </tr>
  <tr class="t1row">
    <td height="26"><p>@discover</p></td
    >
    <td></li>This reserved initial action is invoked when a new service is discovered. Since service        is always discovered automatically by Policy Manager, the user who invokes the @discover        action is always Policy Manager instead of normal business users.<br />
      </p>
      <p>In general, a Workflow definition should not put a restriction on the caller of the        @discover action and should not set the caller of @discover action as the owner of      the Workflow. </p></td>
  </tr>
  <tr class="t2row">
    <td height="30">@updateInterface</td>
    <td>The @updateInterface action identifies the ability to change the schemas, portTypes,    or bindings of a service.</td>
  </tr>
   <tr class="t1row">
    <td height="30">@updateBinding</td>
    <td>The @updateBinding action identifies the ability to change the bindings of a service.</td>
  </tr>
  
</table>
<p><a href="#top">back to top</a></p>

<a name="contract_actions">
<h2>Contract Specific Reserved Actions</h2></a>
<table width="700
" cellspacing="0px" class="doctable">
  <thead>
  </thead>
  <tr>
    <th width="188">Action Name</th>
    <th width="471">Description</th>
    <td width="33"></thead></td>
  </tr>
  <tr class="t2row">
    <td height="26"><p>@CreateOffer</p></td>
    <td>This reserved initial action is invoked when a new offer is created. Multiple @CreateOffer    actions can be defined.</td>
  </tr>
  <tr class="t1row">
    <td height="26"><p>@CreateRequest</p></td
    >
    <td></li>
      This reserved initial action is invoked when a new request is created.  Multiple
      @CreateRequest actions can be defined.</td>
  </tr>
  
  
</table>

<p><a href="#top">back to top</a></p>
<p>&nbsp;</p>



<div class = "divider1"></div>
