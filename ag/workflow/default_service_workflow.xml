<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE workflow PUBLIC "-//OpenSymphony Group//DTD OSWorkflow 2.8//EN"
                 "http://www.opensymphony.com/osworkflow/workflow_2_8.dtd">
<!-- ============================================================
	default_service_workflow.xml
	
	This is the default service workflow with lifecycle support.   
================================================================== -->
 
<workflow>
	<initial-actions>
		<action id="1" name="@create">
			<results>
				<unconditional-result old-status="Created" status="Draft" step="100" owner="${caller}"/>
			</results>
			<post-functions>
				<function type="setLifecycleStage">
					<arg name="stage">Design</arg>
				</function>
			</post-functions>
		</action>
		<action id="2" name="@discover">
			<results>
				<unconditional-result old-status="Discovered" status="Discovered" step="400" owner="${caller}"/>
			</results>
			<post-functions>
				<function type="setLifecycleStage">
					<arg name="stage">Design</arg>
				</function>
			</post-functions>
		</action>
		<action id="3" name="@reset">
			<results>
				<unconditional-result old-status="Reset" status="Reset" step="500" owner="${caller}"/>
			</results>
			<post-functions>
				<function type="setLifecycleStage">
					<arg name="stage">Design</arg>
				</function>
			</post-functions>
		</action>
		<action id="4" name="@ImportService">
			<results>
				<unconditional-result old-status="Imported" status="In Staging" step="1100" owner="${caller}"/> 
			</results>
			<post-functions>
				<function type="setLifecycleStage">
					<arg name="stage">Staging</arg>
				</function>
			</post-functions>
		</action>
	</initial-actions>
	<steps>
		<step id="100" name="Draft">
			<actions>
				<action id="101" name="Submit for Approval">
					<!--  Anybody with update permission can submit for approve can submit for approve -->
					<restrict-to>
						<conditions type="AND">
							<condition type="authorizeByPrivilege">
								<arg name="scope">${service.scope}</arg>
								<arg name="action">Add,Modify</arg>
							</condition>
						</conditions>
					</restrict-to>
					<results>
						<unconditional-result old-status="Draft" status="Pending Approval" step="200" owner="${caller}"/>
					</results>
				</action>
				<!--  Reserved action, specify who can update -->
				<action id="190" name="@modify">
					<results>
						<unconditional-result old-status="Draft" status="Draft" step="-1"/>
					</results>
				</action>
				<action id="191" name="@UpdateBinding">
					<results>
						<unconditional-result old-status="Draft" status="Draft" step="-1"/>
					</results>
				</action>
				<action id="192" name="@UpdateInterface">
					<results>
						<unconditional-result old-status="Draft" status="Draft" step="-1"/>
					</results>
				</action>
				
			</actions>
		</step>
		<step id="400" name="Discovered">
			<actions>
				<action id="401" name="Submit for Approval">
					<!--  Anybody with update permission can submit for approve can submit for approve -->
					<restrict-to>
						<conditions type="AND">
							<condition type="authorizeByPrivilege">
								<arg name="scope">${service.scope}</arg>
								<arg name="action">Add,Modify</arg>
							</condition>
						</conditions>
					</restrict-to>
					<results>
						<unconditional-result old-status="Discovered" status="Pending Approval" step="200" owner="${caller}"/>
					</results>
				</action>
				<!--  Reserved action, specify who can update -->
				<action id="490" name="@modify">
					<results>
						<unconditional-result old-status="Discovered" status="Pending Approval" step="-1"/>
					</results>
				</action>
			</actions>
		</step>
		<step id="500" name="Reset">
			<actions>
				<action id="501" name="Submit for Approval">
					<restrict-to>
						<conditions type="AND">
							<condition type="authorizeByPrivilege">
								<arg name="scope">${service.scope}</arg>
								<arg name="action">Add,Modify</arg>
							</condition>
						</conditions>
					</restrict-to>
					<results>
						<unconditional-result old-status="Reset" status="Pending Approval" step="200" owner="${caller}"/>
					</results>
				</action>
				<!--  Reserved action, specify who can update -->
				<action id="590" name="@modify">
					<results>
						<unconditional-result old-status="Reset" status="Pending Approval" step="-1"/>
					</results>
				</action>
			</actions>
		</step>
    
    <!--  
     	Use one or more  "!" symbols to mark the workflow is in a state to be drawn immediate attention, 
    		the workflow will be shown in the workflow task list. 
    -->
		
		<step id="200" name="Pending Approval!!!">
			<!--  
				Uncomment the following lines if you want to send email notification to approvers.  
				Approvers are contact of the parent organization with usetype as "Approvers". 
				Note that you must assigne the "smtpHost" parameter with the correct host name, and 
				the "from" parameter with a sensible email address.   
			 -->
			<!--
          	<pre-functions>
				<function type="getOrganizationEmailContact">
					<arg name="variable">Approvers</arg>
					<arg name="contactType">Approvers</arg>
				</function>	          		
           		<function type="email">
			          <arg name="parseVariables">true</arg>
			          <arg name="smtpHost">SMTP HOST NAME HERE</arg>
			          <arg name="to">${Approvers}</arg>
			          <arg name="from">SENDER EMAIL ADDRESS HERE</arg>
			          <arg name="subject">New service pending approval!</arg>
			          <arg name="cc"></arg>
			          <arg name="message">Service ${serviceName} (${serviceKey}) has been submitted by ${caller} for approval</arg>
          		</function>
          	</pre-functions>
			 -->
	
			<actions>
				<action id="201" name="Approve">
					<restrict-to>
						<conditions type="AND">
							<condition type="authorizeByPrivilege">
								<arg name="action">Approve</arg>
							</condition>
						</conditions>
					</restrict-to>
					<results>
						<unconditional-result old-status="Pending Approval" status="Approved" step="300" owner="${caller}"/>
					</results>
				</action>
				<action id="202" name="Reject">
					<restrict-to>
						<conditions type="AND">
							<condition type="authorizeByPrivilege">
								<arg name="action">Approve</arg>
							</condition>
						</conditions>
					</restrict-to>
					<results>
						<unconditional-result old-status="Pending Approval" status="Rejected" step="100" owner="${caller}"/>
					</results>
				</action>

				<!--  Reserved action, specify additional set of uers who can trace the service-->				
				<action id="290" name="@read">
					<restrict-to>
						<conditions type="AND">
							<condition type="authorizeByPrivilege">
								<arg name="scope">${service.scope}</arg>
								<arg name="action">Add,Modify</arg>
							</condition>
						</conditions>
					</restrict-to>
					<results>
						<unconditional-result old-status="Pending Approval" status="Pending Approval" step="-1"/>
					</results>
				</action>				
			</actions>
		</step>
		<step id="300" name="Approved">
				<!--  
					Uncomment the following lines if you want to send email notification to Subscribers.  
					Subscribers are contact of the parent organization with usetype as "Subscribers". 
					Note that you must assigne the "smtpHost" parameter with the correct host name, and 
					the "from" parameter with a sensible email address.   
				 -->
				<!-- 
			<pre-functions>
				<function type="getOrganizationEmailContact">
					<arg name="variable">Subscribers</arg>
					<arg name="contactType">Subscribers</arg>
				</function>	          		
           		<function type="email">
			          <arg name="parseVariables">true</arg>
			          <arg name="smtpHost">SMTP HOST NAME HERE</arg>
			          <arg name="to">${Subscribers}</arg>
			          <arg name="from">SENDER EMAIL ADDRESS HERE</arg>
			          <arg name="subject">New service has been published!</arg>
			          <arg name="cc"></arg>
			          <arg name="message">New service ${serviceName} (${serviceKey}) has been published</arg>
          		</function>
			</pre-functions>
				 -->
			<actions>
				<action id="301" name="Submit to Development">
					<restrict-to>
						<conditions type="AND">
							<condition type="authorizeByPrivilege">
								<arg name="scope">${service.scope}</arg>
								<arg name="action">Add,Modify</arg>
							</condition>
						</conditions>
					</restrict-to>
					<results>
						<unconditional-result old-status="Published" status="Pending Promotion to Development" step="600" owner="${caller}"/>
					</results>
				</action>
				<action id="390" name="@read">
					<results>
						<unconditional-result old-status="Approved" status="Approved" step="-1"/>
					</results>
				</action>
				<action id="391" name="@modify">
					<results>
						<unconditional-result old-status="Approved" status="Approved" step="-1"/>
					</results>
				</action>
			</actions>
		</step>
    
    <!--  
     	Use one or more  "!" symbols to mark the workflow is in a state to be drawn immediate attention, 
    		the workflow will be shown in the workflow task list. 
    -->
		
		<step id="600" name="Pending Promotion to Development!!!">
			<!--  
				Uncomment the following lines if you want to send email notification to approvers.  
				Approvers are contact of the parent organization with usetype as "Approvers". 
				Note that you must assigne the "smtpHost" parameter with the correct host name, and 
				the "from" parameter with a sensible email address.   
			 -->
			<!--
          	<pre-functions>
				<function type="getOrganizationEmailContact">
					<arg name="variable">Approvers</arg>
					<arg name="contactType">Approvers</arg>
				</function>	          		
           		<function type="email">
			          <arg name="parseVariables">true</arg>
			          <arg name="smtpHost">SMTP HOST NAME HERE</arg>
			          <arg name="to">${Approvers}</arg>
			          <arg name="from">SENDER EMAIL ADDRESS HERE</arg>
			          <arg name="subject">New service pending approval!</arg>
			          <arg name="cc"></arg>
			          <arg name="message">Service ${serviceName} (${serviceKey}) has been submitted by ${caller} for approval</arg>
          		</function>
          	</pre-functions>
			 -->
	
			<actions>
				<action id="601" name="Promote">
					<restrict-to>
						<conditions type="AND">
							<condition type="authorizeByPrivilege">
								<arg name="action">Approve</arg>
							</condition>
						</conditions>
					</restrict-to>
					<results>
						<unconditional-result old-status="Pending Promotion to Development" status="In Development" step="700" owner="${caller}"/>
					</results>
					<post-functions>
						<function type="setLifecycleStage">
							<arg name="stage">Development</arg>
						</function>
					</post-functions>
				</action>
				<action id="602" name="Reject">
					<restrict-to>
						<conditions type="AND">
							<condition type="authorizeByPrivilege">
								<arg name="action">Approve</arg>
							</condition>
						</conditions>
					</restrict-to>
					<results>
						<unconditional-result old-status="Pending Promotion to Development" status="Rejected" step="300" owner="${caller}"/>
					</results>
				</action>
				
				<!--  Reserved action, specify additional set of uers who can trace the service-->								
				<action id="690" name="@read">
					<results>
						<unconditional-result old-status="Pending Promotion to Development" status="Pending Promotion to Development" step="-1"/>
					</results>
				</action>				
			</actions>
		</step>
		<step id="700" name="In Development">
			<actions>
				<action id="701" name="Submit to Test">
					<restrict-to>
						<conditions type="AND">
							<condition type="authorizeByPrivilege">
								<arg name="scope">${service.scope}</arg>
								<arg name="action">Add,Modify</arg>
							</condition>
						</conditions>
					</restrict-to>
					<results>
						<unconditional-result old-status="In Development" status="Pending Promotion to Test" step="800" owner="${caller}"/>
					</results>
				</action>
				<action id="780" name="@read">
					<results>
						<unconditional-result old-status="In Development" status="In Development" step="-1"/>
					</results>
				</action>
				<action id="790" name="@modify">
					<results>
						<unconditional-result old-status="In Development" status="In Development" step="-1"/>
					</results>
				</action>
			</actions>
		</step>
    
    <!--  
     	Use one or more  "!" symbols to mark the workflow is in a state to be drawn immediate attention, 
    		the workflow will be shown in the workflow task list. 
    -->
		
		<step id="800" name="Pending Promotion to Test!!!">
			<!--  
				Uncomment the following lines if you want to send email notification to approvers.  
				Approvers are contact of the parent organization with usetype as "Approvers". 
				Note that you must assigne the "smtpHost" parameter with the correct host name, and 
				the "from" parameter with a sensible email address.   
			 -->
			<!--
          	<pre-functions>
				<function type="getOrganizationEmailContact">
					<arg name="variable">Approvers</arg>
					<arg name="contactType">Approvers</arg>
				</function>	          		
           		<function type="email">
			          <arg name="parseVariables">true</arg>
			          <arg name="smtpHost">SMTP HOST NAME HERE</arg>
			          <arg name="to">${Approvers}</arg>
			          <arg name="from">SENDER EMAIL ADDRESS HERE</arg>
			          <arg name="subject">New service pending approval!</arg>
			          <arg name="cc"></arg>
			          <arg name="message">Service ${serviceName} (${serviceKey}) has been submitted by ${caller} for approval</arg>
          		</function>
          	</pre-functions>
			 -->
			
			<actions>
				<action id="801" name="Promote">
					<restrict-to>
						<conditions type="AND">
							<condition type="authorizeByPrivilege">
								<arg name="action">Approve</arg>
							</condition>
						</conditions>
					</restrict-to>
					<results>
						<unconditional-result old-status="Pending Promotion to Test" status="In Test" step="900" owner="${caller}"/>
					</results>
					<post-functions>
						<function type="setLifecycleStage">
							<arg name="stage">Test</arg>
						</function>
					</post-functions>
				</action>
				<action id="802" name="Reject">
					<restrict-to>
						<conditions type="AND">
							<condition type="authorizeByPrivilege">
								<arg name="action">Approve</arg>
							</condition>
						</conditions>
					</restrict-to>
					<results>
						<unconditional-result old-status="Pending Promotion to Test" status="Rejected" step="700" owner="${caller}"/>
					</results>
				</action>
				
				<!--  Reserved action, specify additional set of uers who can trace the service-->								
				<action id="890" name="@read">
					<results>
						<unconditional-result old-status="Pending Promotion to Test" status="Pending Promotion to Test" step="-1"/>
					</results>
				</action>
				<!--  Reserved action, specify additional set of uers who can modify the service-->
				<action id="891" name="@modify">
					<results>
						<unconditional-result old-status="Pending Promotion to Test" status="Pending Promotion to Test" step="-1"/>
					</results>
				</action>
			</actions>
		</step>
		<step id="900" name="In Test">
			<actions>
				<action id="901" name="Submit to Staging">
					<restrict-to>
						<conditions type="AND">
							<condition type="authorizeByPrivilege">
								<arg name="scope">${service.scope}</arg>
								<arg name="action">Add,Modify</arg>
							</condition>
						</conditions>
					</restrict-to>
					<results>
						<unconditional-result old-status="In Test" status="Pending Promotion to Staging" step="1000" owner="${caller}"/>
					</results>
				</action>
				<!--  Reserved action, specify additional set of uers who can trace the service-->								
				<action id="990" name="@read">
					<results>
						<unconditional-result old-status="In Test" status="In Test" step="-1"/>
					</results>
				</action>
				<!--  Reserved action, specify additional set of uers who can modify the service-->
				<action id="991" name="@modify">
					<results>
						<unconditional-result old-status="In Test" status="In Test" step="-1"/>
					</results>
				</action>
			</actions>
		</step>

    
    <!--  
     	Use one or more  "!" symbols to mark the workflow is in a state to be drawn immediate attention, 
    		the workflow will be shown in the workflow task list. 
    -->
		
		<step id="1000" name="Pending Promotion to Staging!!!">
			<!--  
				Uncomment the following lines if you want to send email notification to approvers.  
				Approvers are contact of the parent organization with usetype as "Approvers". 
				Note that you must assigne the "smtpHost" parameter with the correct host name, and 
				the "from" parameter with a sensible email address.   
			 -->
			<!--
          	<pre-functions>
				<function type="getOrganizationEmailContact">
					<arg name="variable">Approvers</arg>
					<arg name="contactType">Approvers</arg>
				</function>	          		
           		<function type="email">
			          <arg name="parseVariables">true</arg>
			          <arg name="smtpHost">SMTP HOST NAME HERE</arg>
			          <arg name="to">${Approvers}</arg>
			          <arg name="from">SENDER EMAIL ADDRESS HERE</arg>
			          <arg name="subject">New service pending approval!</arg>
			          <arg name="cc"></arg>
			          <arg name="message">Service ${serviceName} (${serviceKey}) has been submitted by ${caller} for approval</arg>
          		</function>
          	</pre-functions>
			 -->
	
			<actions>
				<action id="1001" name="Promote">
					<restrict-to>
						<conditions type="AND">
							<condition type="authorizeByPrivilege">
								<arg name="action">Approve</arg>
							</condition>
						</conditions>
					</restrict-to>
					<results>
						<unconditional-result old-status="Pending Promotion to Staging" status="In Staging" step="1100" owner="${caller}"/>
					</results>
					<post-functions>
						<function type="setLifecycleStage">
							<arg name="stage">Staging</arg>
						</function>
					</post-functions>
				</action>
				<action id="1002" name="Reject">
					<restrict-to>
						<conditions type="AND">
							<condition type="authorizeByPrivilege">
								<arg name="action">Approve</arg>
							</condition>
						</conditions>
					</restrict-to>
					<results>
						<unconditional-result old-status="Pending Promotion to Staging" status="Rejected" step="900" owner="${caller}"/>
					</results>
				</action>
				
				<!--  Reserved action, specify additional set of uers who can trace the service-->				
				<action id="1090" name="@read">
					<results>
						<unconditional-result old-status="Pending Promotion to Staging" status="Pending Promotion to Staging" step="-1"/>
					</results>
				</action>				
				<action id="1091" name="@modify">
					<results>
						<unconditional-result old-status="Pending Promotion to Staging" status="Pending Promotion to Staging" step="-1"/>
					</results>
				</action>				
				
			</actions>
		</step>
		<step id="1100" name="In Staging">
			<actions>
				<action id="1101" name="Submit to Production">
					<restrict-to>
						<conditions type="AND">
							<condition type="authorizeByPrivilege">
								<arg name="scope">${service.scope}</arg>
								<arg name="action">Add,Modify</arg>
							</condition>
						</conditions>
					</restrict-to>
					<results>
						<unconditional-result old-status="In Staging" status="Pending Promotion to Production" step="1200" owner="${caller}"/>
					</results>
				</action>
				<action id="1189" name="@read">
					<results>
						<unconditional-result old-status="In Staging" status="In Staging" step="-1"/>
					</results>
				</action>
				<action id="1190" name="@modify">
					<results>
						<unconditional-result old-status="In Staging" status="In Staging" step="-1"/>
					</results>
				</action>
				<action id="1191" name="@UpdateBinding">
					<results>
						<unconditional-result old-status="In Staging" status="In Staging" step="-1"/>
					</results>
				</action>
				<action id="1192" name="@UpdateInterface">
					<results>
						<unconditional-result old-status="In Staging" status="In Staging" step="-1"/>
					</results>
				</action>
			</actions>
		</step>
    
    <!--  
     	Use one or more  "!" symbols to mark the workflow is in a state to be drawn immediate attention, 
    		the workflow will be shown in the workflow task list. 
    -->

		<step id="1200" name="Pending Promotion to Production!!!">
			<!--  
				Uncomment the following lines if you want to send email notification to approvers.  
				Approvers are contact of the parent organization with usetype as "Approvers". 
				Note that you must assigne the "smtpHost" parameter with the correct host name, and 
				the "from" parameter with a sensible email address.   
			 -->
			<!--
          	<pre-functions>
				<function type="getOrganizationEmailContact">
					<arg name="variable">Approvers</arg>
					<arg name="contactType">Approvers</arg>
				</function>	          		
           		<function type="email">
			          <arg name="parseVariables">true</arg>
			          <arg name="smtpHost">SMTP HOST NAME HERE</arg>
			          <arg name="to">${Approvers}</arg>
			          <arg name="from">SENDER EMAIL ADDRESS HERE</arg>
			          <arg name="subject">New service pending approval!</arg>
			          <arg name="cc"></arg>
			          <arg name="message">Service ${serviceName} (${serviceKey}) has been submitted by ${caller} for approval</arg>
          		</function>
          	</pre-functions>
			 -->
	
			<actions>
				<action id="1201" name="Promote">
					<restrict-to>
						<conditions type="AND">
							<condition type="authorizeByPrivilege">
								<arg name="action">Approve</arg>
							</condition>
						</conditions>
					</restrict-to>
					<results>
						<unconditional-result old-status="Pending Promotion to Production" status="In Production" step="1300" owner="${caller}"/>
					</results>
					<post-functions>
						<function type="setLifecycleStage">
							<arg name="stage">Production</arg>
						</function>
					</post-functions>
				</action>
				<action id="1202" name="Reject">
					<restrict-to>
						<conditions type="AND">
							<condition type="authorizeByPrivilege">
								<arg name="action">Approve</arg>
							</condition>
						</conditions>
					</restrict-to>
					<results>
						<unconditional-result old-status="Pending Promotion to Production" status="Rejected" step="1100" owner="${caller}"/>
					</results>
				</action>
				
				
				<action id="1290" name="@read">
					<results>
						<unconditional-result old-status="Pending Promotion to Production" status="Pending Promotion to Production" step="-1"/>
					</results>
				</action>				
				<action id="1291" name="@modify">
					<results>
						<unconditional-result old-status="Pending Promotion to Production" status="Pending Promotion to Production" step="-1"/>
					</results>
				</action>				
				
			</actions>
		</step>
		<step id="1300" name="In Production">
			<actions>
				<action id="1301" name="Submit for Deprecation">
					<restrict-to>
						<conditions type="AND">
							<condition type="authorizeByPrivilege">
								<arg name="scope">${service.scope}</arg>
								<arg name="action">Add,Modify</arg>
							</condition>
						</conditions>
					</restrict-to>
					<results>
						<unconditional-result old-status="In Production" status="Pending Deprecation" step="1400" owner="${caller}"/>
					</results>
				</action>
				<action id="1390" name="@read">
					<results>
						<unconditional-result old-status="In Production" status="In Production" step="-1"/>
					</results>
				</action>				
				<action id="1391" name="@modify">
					<results>
						<unconditional-result old-status="In Production" status="In Production" step="-1"/>
					</results>
				</action>				
			</actions>
		</step>
    
    <!--  
     	Use one or more  "!" symbols to mark the workflow is in a state to be drawn immediate attention, 
    		the workflow will be shown in the workflow task list. 
    -->
		
		<step id="1400" name="Pending Deprecation!!!">
			<!--  
				Uncomment the following lines if you want to send email notification to approvers.  
				Approvers are contact of the parent organization with usetype as "Approvers". 
				Note that you must assigne the "smtpHost" parameter with the correct host name, and 
				the "from" parameter with a sensible email address.   
			 -->
			<!--
          	<pre-functions>
				<function type="getOrganizationEmailContact">
					<arg name="variable">Approvers</arg>
					<arg name="contactType">Approvers</arg>
				</function>	          		
           		<function type="email">
			          <arg name="parseVariables">true</arg>
			          <arg name="smtpHost">SMTP HOST NAME HERE</arg>
			          <arg name="to">${Approvers}</arg>
			          <arg name="from">SENDER EMAIL ADDRESS HERE</arg>
			          <arg name="subject">New service pending approval!</arg>
			          <arg name="cc"></arg>
			          <arg name="message">Service ${serviceName} (${serviceKey}) has been submitted by ${caller} for approval</arg>
          		</function>
          	</pre-functions>
			 -->
			
			<actions>
				<action id="1401" name="Deprecate">
					<restrict-to>
						<conditions type="AND">
							<condition type="authorizeByPrivilege">
								<arg name="action">Approve</arg>
							</condition>
						</conditions>
					</restrict-to>
					<results>
						<unconditional-result old-status="Pending Deprecation" status="Deprecated" step="1500" owner="${caller}"/>
					</results>
					<post-functions>
						<function type="setLifecycleStage">
							<arg name="stage">Deprecated</arg>
						</function>
					</post-functions>
				</action>
				<action id="1402" name="Reject">
					<restrict-to>
						<conditions type="AND">
							<condition type="authorizeByPrivilege">
								<arg name="action">Approve</arg>
							</condition>
						</conditions>
					</restrict-to>
					<results>
						<unconditional-result old-status="Pending Deprecation" status="Rejected" step="1300" owner="${caller}"/>
					</results>
				</action>
				<action id="1490" name="@read">
					<results>
						<unconditional-result old-status="Pending Deprecation" status="Pending Deprecation" step="-1"/>
					</results>
				</action>				
				<action id="1491" name="@modify">
					<results>
						<unconditional-result old-status="Pending Deprecation" status="Pending Deprecation" step="-1"/>
					</results>
				</action>				
			</actions>
		</step>
		<step id="1500" name="Deprecated">
      </step>
	</steps>
</workflow>
