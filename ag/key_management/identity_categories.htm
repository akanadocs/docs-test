---
layout: page
title: Identity Categories in Policy Manager 7.x
description: Overview of Service, Organization, Container, and User identity categories and associated key management functions.
product: ag
category: learn
sub-nav-class: Security
weight:	6
Subcategory: Key Management
type: page
nav-title: Identity Categories

---
<h2 name="top">Identity Categories</h2>

<p>Overview of Service, Organization, Container, and User identity categories and associated key management functions. </p>


<a href="key_management.htm" class="button secondary"> Key Management</a>

<a href="using_external_keystore.htm" class="button secondary"> Using External Keystore</a>

<p></p>


<div class = "divider1"></div>
<h3 style="color: gray;">Table of Contents</h3>


<ol class="table_of_contents">


<li><a href="#overview">Overview</a></li>

<li><a href="#service_identities">Service Identities</a></li>

<li><a href="#org_identities">Organization Identities</a></li>
<li><a href="#container_identities">Container Identities</a></li>
<li><a href="#user_identities">User Identities</a></li>






</ol>
  <div class = "divider1"></div>

  
  <a name="overview">
<h2>Overview</h2>
</a>
  <p>Key management can be performed on Service, Organization, Container, and User identity categories using the <em>Manage PKI Keys Wizard</em>. As a prerequisite to  performing key management tasks using the <em>Manage PKI Keys Wizard</em> you must define a CA Certificate in the <em>Configure &gt; Security &gt; Certificates &gt; Certificate Authority</em> section. </p>
  <p>This topic includes:</p>

  <ul class="usingOrderedList">
    <li>Functional description of each identity category.</li>
    <li>Description of what type of key management is supported for the identity category by the <em>Manage PKI Keys Wizard</em>.</li>
    <li>Location of the Manage PKI Keys function in the Policy Manager Management Console.</li>
    <li> Screen capture of the initial page that shows what functions are available for the identity category for the default Policy Manager Keystore and External Keystore Feature.</li>
  </ul>
  <p>Key management options that are grayed out are not available for the identity type. See <a href="key_management.htm" > Key Management</a> for a list of available options.  To perform a key management task, select the desired option, and follow the wizard help text and prompts.</p>
  <p><em><strong>Note:</strong> The <strong>Generate PKI Keys</strong> and <strong>Export Private Keys and X.509 Certificate</strong> options are grayed out (i.e., not available) for all Manage PKI Keys Wizard when the SOA Software External Keystore Feature is installed.</em></p>
<a name="service_identities">
<h2>Service Identities</h2>
</a>

<ul class="usingOrderedList">
  <li>Represents the default service identity in the local domain.</li>
    <li>Every service has one identity by default. </li>
    <li>A service can be assigned a single key identity and can be deployed in multiple SOA Containers. The complete service identity is then represented by the service key plus the SOA Container listener configuration, and defined service path. </li>
    <li> Policy Manager uses the service identity to associate the PKI keys to the service.</li>
    <li>The username for service identity is derived from a service key.</li>
    <li>User identities are not displayed  anywhere in the configuration screens with the exception of on the <em>Service Details</em> page to indicate the default username of the service.</li>
    <li> PKI Keys of the service are managed from the <em>Service Details</em> page using the <em>Manage PKI Keys</em> option by anyone that has the Service/Modify permission. </li>
  </ul>
<h5>Configuration</h5>
<p>The <em>Manage PKI Keys (Service Identities) Wizard</em> provides key management  options that allow you to generate public and private keys to facilitate service  access. A service can be assigned a single key identity and can be deployed in  multiple SOA  Containers.</p>
<p><strong>Location:</strong></p>
<p>Service Details &gt; Manage PKI Keys (from Actions portlet)</p>
<p><img src="images/managekeys_serviceidentity_default.jpg" width="612" height="217" /><br>
  Figure. Manage PKI Keys (Service Identities) - Available options using the default Policy Manager keystore</p>
<p><img src="images/managekeys_serviceidentity_external.jpg" width="612" height="222" /><br>
  Figure. Manage PKI Keys (Organization Identities) - Available options using the External Keystore feature</p>
<p><a href="#top">back to top</a>
</p>


<a name="org_identities">
<h2>Organization Identities</h2>
</a>

<ul class="usingOrderedList">
    <li>Also referred to as a consumer identity.</li>
    <li>This identity is assigned to the organization.</li>
    <li>Organization administrators can fully manage these identities (i.e., create, update, view, delete, associate PKI keys). </li>
    <li>A consumer identity is used to model any application that is consuming web services, but it itself is not a web service. If the consumer is a web service, user can model the service using the service artifact.</li>
    <li>To model all consumers that are not services, Policy Manager uses Organization Identities (or consumer applications or application users). Therefore, these and web services represent consumer applications, these are visible along with services in the Contract's Consumer identities portlet for selecting the consumers of the contract. </li>
    <li>These identities are assigned only to contracts. </li>
    <li>One consumer application identity belongs to one organization only like the service belongs to one organization. </li>
    <li>Consumer applications can be local domain users or external domain users (like LDAP users). </li>
    <li>PKI Keys of the organization identity are managed from the <em>Organization Details</em> page using the <em>Manage PKI Keys</em> option by anyone that has the Organization/Modify permission. </li>
  </ul>
<h5>Configuration</h5>
<p>The <em>Manage PKI Keys (Organization Identities) Wizard </em>provides  key management options that allow you to generate public and private keys to  facilitate consumer applications that will be accessing an Organization.  Consumers (other than Services) are identified in Policy Manager with an  identity. Identity can be an external domain user or local domain user.  </p>
<p><strong>Location:</strong></p>
  <p>Organization Details &gt; Organization Identities Portlet &gt; Manage PKI Keys (from drop-down menu)</p>
  <p><img src="images/manage_keys_org_identity_default.jpg" width="609" height="214" /><br>
  Figure. Manage PKI Keys (Organization Identities) - Available options using the default Policy Manager keystore</p>
<p><img src="images/manage_keys_org_identity_external.jpg" width="608" height="223" /><br>
  Figure. Manage PKI Keys (Organization Identities) - Available options using the External Keystore feature</p>
<p><a href="#top">back to top</a>
</p>


<a name="container_identities">
<h2>Container Identities</h2>
</a>

<ul class="usingOrderedList">
    <li>A container identity stores the identity of the container and the inbound/outbound HTTPS certificate with private key.</li>
    <li>Every container has one identity by default. </li>
    <li>Policy Manager uses the container identity to associate the container seed and PKI keys to the Container.</li>
    <li> It is also used to associate the inbound SSL and outbound SSL certificate and private key to Containers. </li>
    <li>This identity is not displayed anywhere</li>
    <li> The container identity is a local domain. </li>
    <li>PKI Keys of the container identity are managed from the <em>Container Details</em> page using the <em>Manage PKI Keys</em> option by anyone that has the Container/Modify permission. </li>
  </ul>
<h5>Configuration (Containers - Inbound)</h5>
<p>The <em>Manage PKI Keys (Containers - Inbound) Wizard</em> provides key management  options for inbound certificates that are used if you want a container to  receive HTTPS messages with client authentication to the next hop.  </p>
<p><strong>Location: </strong></p>
  <p>Container Details &gt; Inbound Listener Portlet &gt; Manage PKI Keys (from Actions drop-down menu)</p>
  <p><img src="images/manage_keys_container_inbound_default.jpg" width="611" height="219" /><br>
  Figure. Manage PKI Keys (Containers -Inbound Identities) - Available options using the default Policy Manager keystore</p>
<p><img src="images/manage_keys_container_inbound_external.jpg" width="707" height="222" /><br>
  Figure. Manage PKI Keys (Containers - Inbound Identities) - Available options using the External Keystore feature</p>
<h5>Configuration (Containers - Outbound)</h5>
  <p>The Manage PKI Keys (Containers - Outbound) Wizard provides key management  options for Outbound certificates that are used if you want a container to  receive HTTPS messages with client authentication to the next hop.  </p>
  <h6>Key Configuration Prerequisites</h6>
  <p>As a prerequisite for configuring outbound HTTPS certificates, you must have previously imported Trusted CA Certificates using one of the following options:
  </p>


  <ul class="usingOrderedList">
    <li>In the <em>Configure &gt; Security &gt; Trusted CA Certificates</em> section of the Management Console, you imported Trusted CA Certificates (.CER only) using the <strong>Add Trusted CA Certificate </strong>option.</li>
    <li>On the <em>Configure &gt; Security &gt; Trusted CA Certificates</em> section of the Management Console, you imported Trusted CA Certificates from a keystore using the<strong> Import Trusted CA Certificate from Keystore</strong> option.</li>
  </ul>

  <p>Trusted CA Certificates imported using any of the these options will display on the &quot;Trusted CA Certificates Summary&quot; screen in the Configure &gt; Security &gt; Trusted CA Certificates section of the Management Console.</p>
  <h6>Outbound HTTPS Usage Scenarios</h6>
  <p>Outbound HTTPS containers are used in the following scenarios. Note that Outbound
HTTPS is only necessary if you want HTTPS between Network Director and Policy Manager:</p>
  

  <ul class="usingOrderedList">
    <li>Policy Manager  uses outbound HTTPS certificate if it has to access WSDLs using URLs that require client authentication.</li>
    <li>Policy Manager uses outbound HTTPS certificate if it is discovering services from the SOA Container Agents that require client authentication.</li>
    <li>The Policy Manager, SOA Container, SOA Container Cluster, 5.2 Standalone Management Point, and 5.2 Embedded Management Point Containers could use outbound HTTPS certificate.</li>
    <li>5.2 Standalone Management Point Containers could use an outbound HTTPS certificate      if it has to send the request to next hop over HTTPS protocol that requires client<br>
    authentication. In this scenario, policy configuration provides an option to not      use the container outbound HTTPS certificate for HTTPS connection with next hop and    instead use Service certificate/private key.</li>
  </ul>
<p><strong>Location: </strong></p>
  <p>Container Details &gt; Outbound Configuration Portlet  &gt; Manage PKI Keys (button) </p>
  <p><img src="images/manage_keys_container_outbound_default.jpg" width="610" height="215" /><br>
  Figure. Manage PKI Keys (Containers -Outbound Identities) - Available options using the default Policy Manager keystore</p>
<p><img src="images/manage_keys_container_outbound_external.jpg" width="707" height="222" /><br>
  Figure. Manage PKI Keys (Containers - Outbound Identities) - Available options using the External Keystore feature</p>
<p><a href="#top">back to top</a>
</p>


<a name="user_identities">
<h2>User Identities</h2>
</a>

<ul class="usingOrderedList">
    <li>End users are users of the consumer application.  For example, if a portal application is a consumer application, users of the portal application becomes end users of Policy Manager.</li>
    <li>End user authorization is done in the Container using Authorization Policy.</li>
    <li>End users authorization rules are defined in the Service Authorization Rules tab of the Organization.</li>
    <li>End users do not belong to organizations.</li>
    <li>The same end user can access the services of different organizations and may not even belong to any of the organizations in Policy Manager.</li>
    <li>These users most often  come from other user repositories like LDAP. </li>
    <li>If you want to use local domain users, these users must be  created in the <em>Security &gt; Users</em> tab using the<strong> Add User </strong>function, which means it is a System administrator function.</li>
    <li>Though users are created by System Administrators, every Organization Administrator has to allow the user to access the services of their organization by creating the service authorization rules.</li>
    <li>End Users can be Local Domain users or external domain users (like LDAP).</li>
    <li> PKI Keys of the service are managed from the <em>Security &gt;  Users </em> page using the <em>Manage PKI Keys</em> option the System Administrator and Organization Administrators with Full Control permission. </li>
  </ul>
  <h5>Configuration (Users)</h5>
  <p>The <em>Manage PKI Keys (Users) Wizard</em> provides key management  options that allow you to generate public and private keys to facilitate user  authentication process.  </p>
  <p><strong>Location:</strong></p>
<p>Security &gt; Users &gt; Manage PKI Keys (button)</p>
  <p><img src="images/manage_keys_users_default.jpg" width="605" height="219" /><br>
  Figure. Manage PKI Keys (User Identities) - Available options using the default Policy Manager keystore</p>
<p><img src="images/manage_keys_users_external.jpg" width="607" height="224" /><br>
  Figure. Manage PKI Keys (User  Identities) - Available options using the External Keystore feature</p>


<p><a href="#top">back to top</a>
</p>
<div class = "divider1"></div>