---
layout: page
title: SOAP to REST mediation
description: Learn how to perform mediation by adding a REST facade to a SOAP back-end API, with a specific use case.
product: ag
category: learn
sub-nav-class: Mediation
weight: 06
type: page
nav-title: REST Facade to SOAP Service
---
<h2 id="top">Mediation Use Case: REST Fa&ccedil;ade to SOAP Back-End Service</h2>
<p>Learn how to perform mediation by adding a REST fa&ccedil;ade to a SOAP back-end service, with a specific use case.</p>
<p>In this example, you'll send a REST message to a SOAP back-end service and receive a REST response, using mediation in the Akana API Platform, using a simple number conversion API.</p>

<p>
<a href="mediation_rest_to_soap.htm" class="button secondary">Mediation: SOAP Fa&ccedil;ade to REST Service</a> 
<a href="../processes/getting_started_with_processes.htm" class="button secondary"> Getting Started with Processes</a> 
<a href="../processes/process_reference.htm" class="button secondary">Process Reference</a>
</p>



<div class = "divider1"></div>



<h3 style="color: gray;">Table of Contents</h3>
<ol class="table_of_contents">
	<li><a href="#introduction">Introduction</a></li>
	<li><a href="#uc_soap_to_rest">SOAP to REST mediation use case</a>:
		<ol>
	<li><a href="#uc_soap_to_rest_prereq">Prerequisites</a></li>
	<li><a href="#uc_soap_to_rest_01_create">Create the API</a></li>
	<li><a href="#uc_soap_to_rest_02_mediation">Design the mediation</a></li>
	<li><a href="#uc_soap_to_rest_03_run">Run the test case</a></li>
</ol>
</li>
</ol>
<div class = "divider1"></div>



<h3 id="introduction">Introduction</h3>
<p>In the developer portal, you can set up SOAP to REST mediation by using the Process Editor.</p>
<p>When you're mediating SOAP to REST, the bindings do most of the work. The main thing you have to do is use the Process Editor to get the content of the  message body put together correctly.</p>
<p>The example below uses a simple SOAP service. It walks you through the steps for setting up the API, designing the mediation, and running the test case.</p>
<p><a href="#top">Back to top</a></p>



<h3 id="uc_soap_to_rest">SOAP to REST mediation: Number Conversion Service use case</h3>
<p>This section provides detailed instructions for setting up and running a SOAP to REST mediation use case using a simple number conversion SOAP service. This example includes the steps to expose a SOAP physical service as a REST service in the developer portal.</p>
<p>It includes:</p>
<ol>
	<li><a href="#uc_soap_to_rest_prereq">Prerequisites</a></li>
	<li><a href="#uc_soap_to_rest_01_create">Create the API</a></li>
	<li><a href="#uc_soap_to_rest_02_mediation">Design the mediation</a></li>
	<li><a href="#uc_soap_to_rest_03_run">Run the test case</a></li>
</ol>


<h4 id="uc_soap_to_rest_prereq">Prerequisites</h4>
<p>Before starting the main steps, set up the physical service in Policy Manager:</p>
<ol>
	<li>Log in to Policy Manager and register the SOAP physical service (<strong>Organization</strong> &gt; <strong>Services</strong> &gt; <strong>Create Physical Service</strong> &gt; put in the Service Description Document URL. For <strong>Service Management Options</strong>, choose <strong>Do not manage at this time</strong>).
	  <p> This example uses the Number Conversion SOAP Service: <a href="http://www.dataaccess.com/webservicesserver/numberconversion.wso?WSDL" title="URL for Number Conversion SOAP service" target="_blank">http://www.dataaccess.com/webservicesserver/numberconversion.wso?WSDL</a>.</p></li>
</ol>


<h4 id="uc_soap_to_rest_01_create">Create the API</h4>
<p>The next step is to set up the API in the developer portal. Follow the steps below.</p>
<h5>To set up the API in the developer portal</h5>
<ol>
	<li>Log in to the API Management Portal.</li>
	<li>Click the <strong>Plus</strong> icon to add a new API.</li>
	<li>If you see the Add API page shown below, choose <strong>Add a new API</strong> and click <strong>Add</strong>.
		<p><img src="images/uc_soap_to_rest_02.jpg" alt="Adding a new API" /></p></li>
	<li>Choose <strong>I want to design my API from scratch (REST only)</strong>. Provide an appropriate name to the API option, enable Advanced Options and choose <strong>Orchestration</strong>, and then click <strong>Save</strong>.
		<p><img src="images/uc_soap_to_rest_03.jpg" alt="Choose Orchestration" /></p></li>
	<li>Add all the resources: for each, click <strong>Add Resource</strong>, provide appropriate context path, and click <strong>Save</strong>. The resources you'll need to add for this example are indicated below.
		<p><img src="images/uc_soap_to_rest_04.jpg" alt="Number Conversion WSDL" /></p></li>
	<li>Review to make sure you have it correct. The resources for the Conversion SOAP WSDL should look like the below example:
	<ul>
	<li>Schema element names:
		<p><img src="images/uc_soap_to_rest_05.jpg" alt="API Designer; Add Resource view" /></p></li>
		<li>Detail for the Number to Dollar resource:
		<p><img src="images/uc_soap_to_rest_06.jpg" alt="API Designer; resource detail view" /></p></li>
		<li>Resulting API summary:
		<p><img src="images/uc_soap_to_rest_07.jpg" alt="API Details view" /></p></li>
	</ul>
	</li>
</ol>


<h4 id="uc_soap_to_rest_02_mediation">Design the mediation</h4>
<p>The next step is to use the process editor to design the SOAP to REST mediation. Follow the steps below.</p>
<h5>To set up the SOAP to REST mediation</h5>
<ol>
	<li>Click the <strong>Implementation</strong> tab and select the <strong>Live</strong> or <strong>Sandbox</strong> implementation.
		<p><img src="images/uc_soap_to_rest_08.jpg" alt="Implementations page" /></p>
		</li>
	<li>Scroll down to the <strong>Resources</strong> section and select the <strong>Edit Process</strong> drop-down, as shown below.
	<p><img src="images/uc_soap_to_rest_09.jpg" alt="Accessing the Process Editor" /></p></li>
	<li>In the Process Editor, click on the <strong>Variables and Faults Editor</strong> Activity. Add a <strong>numberRequest</strong> variable with <strong>Type</strong> of <strong>message</strong> and a <strong>number</strong> variable with <strong>Type</strong> of <strong>String</strong>, and then click <strong>Finish</strong>.
	<p><img src="images/uc_soap_to_rest_10.jpg" alt="Variables and Faults Editor" /></p></li>
	<li>Add a Script Activity to get the number. Use the information below to guide you:
		<ul>
			<li>The GetNumber script for the Number Conversion SOAP Service:
	<pre>msg = processContext.getVariable("message");
msg.normalize();
// Request Line
var requestLine = msg.getProperty("http.request.line");
auditLog.debug("requestLine: " + requestLine);
var number = msg.getProperty("http.binding.path.params").get("dNum");
auditLog.debug("Number: " + number);
processContext.setVariable("number",number);</pre></li>
			<li>The GetNumber script in the Script Details Editor:
				<p><img src="images/uc_soap_to_rest_11.jpg" alt="GetNumber script in Script Details Editor" /></p></li>
	</ul>
	</li>
	<li>Add another Script Activity to create the request. Use the information below to guide you:
	<ul>
		<li>The CreateRequest script for the Number Conversion SOAP Service:
	<pre>var numbr = processContext.getVariable("number");
// Number Conversion
var numberRequest = msgFactory.create("text/xml");
var numBody = "&lt;web:NumberToDollars&gt;&lt;web:dNum&gt;" + numbr + "&lt;/web:dNum&gt;&lt;/web:NumberToDollars&gt;";
var numSoap = '&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.dataaccess.com/webservicesserver/"&gt;&lt;soapenv:Header/&gt;&lt;soapenv:Body&gt;' + numBody + "&lt;/soapenv:Body&gt;&lt;/soapenv:Envelope&gt;";
numberRequest.setStringContent(numSoap);
processContext.setVariable("numberRequest", numberRequest);
auditLog.debug(numberRequest.getContentAsString());</pre></li>
		<li>The CreateRequest script in the Script Details Editor:
			<p><img src="images/uc_soap_to_rest_12.jpg" alt="CreateRequest script in Script Details Editor" /></p></li>
	</ul>
	</li>
	<li>Add an Invoke Activity:
		<ul>
			<li>In the <strong>Service QName</strong> field, search for the NumberConversion service that you created.</li>
			<li>In the Service field, select the NumberConversion SOAP Physical Service that is registered from Policy Manager.</li>
			<li>Select the Interface.</li>
			<li>In the Operation field, select <strong>NumbertoWords</strong> and click <strong>Next</strong>.
	      <p><img src="images/uc_soap_to_rest_13.jpg" alt="Invocation Details Editor" /></p></li>
</ul>
 </li>
	<li>In the <strong>Single Input Message Variable</strong> field, select numberRequest, and then click <strong>Finish</strong>.
		<p><img src="images/uc_soap_to_rest_14.jpg" alt="Input/Output Parameters page" /></p></li>
	<li>In the Process Editor, click the <strong>Save</strong> icon on the left and then click <strong>Finish</strong>.
		<p><img src="images/uc_soap_to_rest_15.jpg" alt="Saving in the Process Editor" /></p>
    <p>This sets up the SOAP to REST mediation for the first operation in the service, the Number to Dollar operation.</p>
	</li>
</ol>


<h4 id="uc_soap_to_rest_03_run">Run the test case</h4>
<p>Now, you can test the number to dollar operation in Test Client to see the SOAP to REST mediation.</p>
<ol>
	<li>Go to Test Client.</li>
	<li>Choose the correct operation and endpoint, provide a value for the dNum parameter, and click <strong>Invoke</strong>. You should get a successful response, with an HTTP 200 OK and a response message in application/json format, as shown below.
		<p><img src="images/uc_soap_to_rest_16.jpg" alt="Running the test case in Test Client" /></p></li>
</ol>
<p><a href="#top">Back to top</a></p>



<div class = "divider1"></div>



<h3 id="related_topics">Related Topics</h3>
<div class="relatedlinks">
<ul>
	<li><a href="../processes/getting_started_with_processes.htm">Getting Started with Processes</a></li>
	<li><a href="../processes/process_management.htm">Managing Processes</a></li>
	<li><a href="../processes/process_reference.htm">Process Reference for Policy Manager</a></li>
</ul>
<ul>
	<li><a href="http://docs.akana.com/cm/learnmore/basics_glossary.htm">Glossary of Terms for the Developer Portal</a></li>
</ul>
</div>