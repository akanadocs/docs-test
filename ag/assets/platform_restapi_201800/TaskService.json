{"swagger":"2.0","info":{"title":"Task Service","description":"<p>The TaskService provides access to administration tasks that involve some form of workflow.<br  /></p>","version":"8.0.0"},"host":"0.0.0.0","basePath":"/admin/tasks","schemes":["https","http"],"tags":[{"name":"TaskService"}],"paths":{"/{id}/steps/{step}/execute#executeStep":{"post":{"tags":["TaskService"],"summary":"Execute Step","description":"<p>Execute a step that accepts a JSON array of NameValuePair instances.</p>\n<h4>Request:</h4>\n<p>The following is a sample request.  Note that there may be multiple values for a single parameter.</p>\n<pre><code>POST /admin/tasks/{task}/steps/{step}/execute  HTTP/1.1\nContent-Type: application/json\n\n[\n    {\"name\":\"param1\",\"value\":\"value1\"},\n    {\"name\":\"param1\",\"value\":\"value2\"},\n    {\"name\":\"param2\",\"value\":\"xyz\"}\n]\n</code></pre>\n<h4>Response:</h4>\n<p>The following is an example of a response for a simple step.</p>\n<pre><code>{\n}\n</code></pre>\n<h4>Responses:</h4>\n<ul>\n<li>200 OK If the step executed</li>\n<li>404 Not Found if the specified task or step are not found</li>\n</ul>","operationId":"executeStep","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"path","name":"id","description":"The ID of the task.","type":"string","required":false},{"in":"path","name":"step","description":"The name of the step to execute.","type":"string","required":false},{"in":"body","name":"body","description":"The property values to process.","required":false}],"responses":{"default":{"schema":{"$ref":"#/definitions/executionStatus"}}},"deprecated":false}},"/jobs/{id}":{"delete":{"tags":["TaskService"],"summary":"Cancel a Task Job","description":"<p>Cancel an outstanding configuration execution job.\nThe task service maintains the state of a task execution sequence in a &ldquo;job&rdquo;.  These\njobs hold any values provided to, or set by the steps taken, during execution of a\ntask.  By canceling a job, all state for a task and its steps are cleared from the system.</p>\n<h4>Request:</h4>\n<pre><code>DELETE /admin/tasks/jobs/{id}  HTTP/1.1\n</code></pre>\n<h4>Responses:</h4>\n<ul>\n<li>200 OK</li>\n<li>404 Not Found if job with given ID is not found</li>\n</ul>","operationId":"cancelJob","parameters":[{"in":"path","name":"id","type":"string","required":true}],"responses":{"default":{}},"deprecated":false},"get":{"tags":["TaskService"],"summary":"Get Task Job Status","description":"<p>Get the current state of a job associated with a task.</p>\n<h4>Request:</h4>\n<pre><code>GET /admin/tasks/{job} HTTP/1.1\nAccept: application/json\n</code></pre>\n<h4>Responses :</h4>\n<ul>\n<li>200 OK If successful</li>\n<li>404 Not Found If the specified job ID cannot be found</li>\n</ul>\n<h4>Response:</h4>\n<pre><code>200 OK\nContent-Type: application/json\nTransfer-Encoding: chunked\n\n{\n\n}\n</code></pre>","operationId":"getJobStatus","produces":["application/json"],"parameters":[{"in":"path","name":"id","type":"string","required":true}],"responses":{"default":{"schema":{"$ref":"#/definitions/executionStatus"}}},"deprecated":false}},"/{id}/steps":{"get":{"tags":["TaskService"],"summary":"Get Steps for a task","description":"<p>Get all step definitions associated with a task.</p>\n<h4>Request:</h4>\n<pre><code>GET /admin/tasks/{task}/steps HTTP/1.1\nAccept: application/json\n</code></pre>\n<h4>Responses:</h4>\n<ul>\n<li>200 OK, If successful</li>\n<li>404 Not Found, if the specified task cannot be found</li>\n</ul>","operationId":"getSteps","produces":["application/json"],"parameters":[{"in":"path","name":"id","description":"The ID of the task.","type":"string","required":false}],"responses":{"default":{"schema":{"$ref":"#/definitions/stepSet"}}},"deprecated":false}},"/{id}":{"get":{"tags":["TaskService"],"summary":"Get Task Detail","description":"<p>Get detailed information for a specified task.</p>\n<h4>Request:</h4>\n<pre><code>GET /admin/tasks/{task} HTTP/1.1\" \nAccept: application/json\n</code></pre>\n<h4>Responses:</h4>\n<ul>\n<li>200 OK, If successful</li>\n<li>404 Not Found, If the specified task ID is not found</li>\n</ul>","operationId":"getTask","produces":["application/json"],"parameters":[{"in":"path","name":"id","description":"The ID of the task to fetch.","type":"string","required":false},{"in":"query","name":"brief","type":"boolean"}],"responses":{"default":{"schema":{"$ref":"#/definitions/taskInfo"}}},"deprecated":false}},"/{id}/steps/{step}/execute":{"post":{"tags":["TaskService"],"summary":"Execute Step with a form","description":"<p>Execute a step that accepts form data as part of a task.</p>\n<h4>Request:</h4>\n<pre><code>POST /admin/tasks/{task}/steps/{step}/execute  HTTP/1.1\nContent-Type: application/x-www-form-urlencoded\n\nparam1=value1&amp;param1=value2&amp;param2=xyz\n</code></pre>\n<h4>Response:</h4>\n<p>The following is an example of a response for a simple step.</p>\n<pre><code>{\n}\n</code></pre>\n<h4>Responses:</h4>\n<ul>\n<li>200 OK If the step executed</li>\n<li>404 Not Found if the specified task or step are not found</li>\n</ul>","operationId":"executeStepForm","consumes":["application/x-www-form-urlencoded"],"produces":["application/json"],"parameters":[{"in":"path","name":"id","description":"The ID of the task.","type":"string","required":false},{"in":"path","name":"step","description":"The name of the step to execute.","type":"string","required":false},{"in":"body","name":"body","description":"The property values to process.","required":false}],"responses":{"default":{"schema":{"$ref":"#/definitions/executionStatus"}}},"deprecated":false}},"/{id}/steps/{step}":{"get":{"tags":["TaskService"],"summary":"Get Step Detail","description":"<p>Get detailed information on a task step.</p>\n<h4>Request:</h4>\n<pre><code>GET /admin/tasks/{task}/steps/{step} HTTP/1.1\nAccept: application/json\n</code></pre>\n<h4>Responses:</h4>\n<ul>\n<li>200 OK, If successful</li>\n<li>404 Not Found, If the specified task or step is not found<h4>Response:</h4>\n<pre><code>200 OK\nContent-Type: application/json\nTransfer-Encoding: chunked\n</code></pre>\n</li>\n</ul>\n<p>{</p>\n<pre><code>\"presentationName\": \"Manage Container Identity\",\n\"required\": true,\n\"repeatable\": true,\n\"completed\": false,\n\"failed\": false,\n\"recommended\": false,\n\"automated\": false,\n\"name\": \"com.soa.container.identity\",\n\"links\": [\n    {\n        \"rel\": \"next\",\n        \"href\": \"http://localhost:9900/admin/tasks/com.soa.container.identity/steps/container.identity.select.action\"\n    },\n    {\n        \"rel\": \"self\",\n        \"href\": \"http://localhost:9900/admin/tasks/com.soa.container.identity\"\n    },\n    {\n        \"rel\": \"steps\",\n        \"href\": \"http://localhost:9900/admin/tasks/com.soa.container.identity/steps\"\n    }\n]\n</code></pre>\n<p>}</p>","operationId":"getStep","produces":["application/json"],"parameters":[{"in":"path","name":"id","description":"The ID of the task.","type":"string","required":false},{"in":"path","name":"step","description":"The name of the step.","type":"string","required":false}],"responses":{"default":{"schema":{"$ref":"#/definitions/stepInfo"}}},"deprecated":false}},"/{id}/steps/{step}/execute#executeStepMultipart":{"post":{"tags":["TaskService"],"summary":"Execute Step with an Upload","description":"<p>Execute a step that accepts multipart form data (usually file upload) as part of a task.</p>\n<h4>Request:</h4>\n<pre><code>POST /admin/tasks/{task}/steps/{step}/execute  HTTP/1.1\nContent-Type: multipart/form-data;boundary=xyz\n</code></pre>\n<h4>Response:</h4>\n<p>The following is an example of a response for a simple step.</p>\n<pre><code>{\n}\n</code></pre>\n<h4>Responses:</h4>\n<ul>\n<li>200 OK If the step executed</li>\n<li>404 Not Found if the specified task or step are not found</li>\n</ul>","operationId":"executeStepMultipart","consumes":["multipart/form-data"],"produces":["application/json"],"parameters":[{"in":"path","name":"id","description":"The ID of the task.","type":"string","required":false},{"in":"path","name":"step","description":"The name of the step to execute.","type":"string","required":false},{"in":"body","name":"body","description":"The upload to process.","required":false}],"responses":{"default":{"schema":{"$ref":"#/definitions/executionStatus"}}},"deprecated":false}},"/":{"get":{"tags":["TaskService"],"summary":"Get Tasks","description":"Get all tasks in the system, optionally ordered.","operationId":"getTasks","produces":["application/json"],"parameters":[{"in":"query","name":"ordered","description":"If not present or true, the returned set of tasks will be ordered.","type":"boolean","required":false},{"in":"query","name":"features","description":"Should only tasks aassociated with features be retrieved?","type":"boolean","required":false},{"in":"query","name":"filter","description":"Task filter.  This is a JEXL expression that is applied to each TaskInfo in the result.","type":"string","required":false},{"in":"query","name":"brief","description":"Only include brief information on each task.","type":"boolean","required":false}],"responses":{"default":{"schema":{"$ref":"#/definitions/taskSet"}}},"deprecated":false}}},"definitions":{"taskSet":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":[],"properties":{"links":{"type":"array","minItems":0,"items":{"$ref":"#/definitions/link"}},"tasks":{"type":"array","minItems":0,"items":{"$ref":"#/definitions/taskInfo"}}}},"stepSet":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":[],"properties":{"links":{"type":"array","minItems":0,"items":{"$ref":"#/definitions/link"}},"steps":{"type":"array","minItems":0,"items":{"$ref":"#/definitions/stepInfo"}}}},"propertySet":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":[],"properties":{"name":{"type":"string"},"presentationName":{"type":"string"},"description":{"type":"string"},"children":{"type":"array","minItems":0,"items":{"$ref":"#/definitions/propertySet"}},"properties":{"type":"array","minItems":0,"items":{"$ref":"#/definitions/propertyMetadata"}},"links":{"type":"array","minItems":0,"items":{"$ref":"#/definitions/link"}}}},"executionStatus":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":[],"properties":{"status":{"$ref":"#/definitions/stepStatus"},"progress":{"type":"string"},"start":{"type":"string","format":"date-time"},"end":{"type":"string","format":"date-time"},"links":{"type":"array","minItems":0,"items":{"$ref":"#/definitions/link"}}}},"link":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":[],"properties":{"href":{"type":"string"},"rel":{"type":"string"},"title":{"type":"string"},"type":{"type":"string"}}},"stepInfo":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":[],"properties":{"name":{"type":"string"},"presentationName":{"type":"string"},"description":{"type":"string"},"metadata":{"$ref":"#/definitions/propertySet"},"links":{"type":"array","minItems":0,"items":{"$ref":"#/definitions/link"}}}},"taskInfo":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":["required","repeatable","completed","failed","recommended","automated","ready"],"properties":{"presentationName":{"type":"string"},"description":{"type":"string"},"failureDetails":{"type":"string"},"required":{"type":"boolean"},"repeatable":{"type":"boolean"},"completed":{"type":"boolean"},"failed":{"type":"boolean"},"recommended":{"type":"boolean"},"automated":{"type":"boolean"},"ready":{"type":"boolean"},"requires":{"type":"array","minItems":0,"items":{"type":"string"}},"name":{"type":"string"},"links":{"type":"array","minItems":0,"items":{"$ref":"#/definitions/link"}}}},"propertyMetadata":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":[],"properties":{"allowEmptyValue":{"type":"boolean"},"collectionFormat":{"type":"string"},"defaultValue":{"type":"string"},"description":{"type":"string"},"exclusiveMaximum":{"type":"boolean"},"exclusiveMinimum":{"type":"boolean"},"format":{"type":"string"},"maxItems":{"type":"string"},"maximum":{"type":"string"},"minItems":{"type":"string"},"minimum":{"type":"string"},"name":{"type":"string"},"options":{"type":"array","minItems":0,"items":{"$ref":"#/definitions/option"}},"pattern":{"type":"string"},"presentationName":{"type":"string"},"type":{"type":"string"},"uniqueItems":{"type":"boolean"}}},"stepStatus":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":[],"properties":{"state":{"enum":["UNKNOWN","INCOMPLETE","COMPLETE","SUCCESS","RUNNING","BLOCKED","UNAVAILABLE","INVALID_STATE","ERROR","CANCELLED","RESTARTING"],"type":"string"},"detail":{"type":"string"}}},"option":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":[],"properties":{"description":{"type":"string"},"presentationName":{"type":"string"},"value":{"type":"string"}}}}}