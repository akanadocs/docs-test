{"swagger":"2.0","info":{"description":"<p>The TaskService provides access to administration tasks that involve some form of workflow.<br  /></p>","version":"8.0.0","title":"Task Service"},"host":"0.0.0.0","basePath":"/admin/tasks","tags":[{"name":"TaskService"}],"schemes":["https","http"],"paths":{"/jobs/{id}":{"get":{"tags":["TaskService"],"summary":"Get Task Job Status","description":"<p>Get the current state of a job associated with a task.</p>\n<h4>Request:</h4>\n<pre><code>GET /admin/tasks/{job} HTTP/1.1\nAccept: application/json\n</code></pre>\n<h4>Responses :</h4>\n<ul>\n<li>200 OK If successful</li>\n<li>404 Not Found If the specified job ID cannot be found</li>\n</ul>\n<h4>Response:</h4>\n<pre><code>200 OK\nContent-Type: application/json\nTransfer-Encoding: chunked\n\n{\n\n}\n</code></pre>","operationId":"getJobStatus","produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"default":{"description":" "}}},"delete":{"tags":["TaskService"],"summary":"Cancel a Task Job","description":"<p>Cancel an outstanding configuration execution job.\nThe task service maintains the state of a task execution sequence in a &ldquo;job&rdquo;.  These\njobs hold any values provided to, or set by the steps taken, during execution of a\ntask.  By canceling a job, all state for a task and its steps are cleared from the system.</p>\n<h4>Request:</h4>\n<pre><code>DELETE /admin/tasks/jobs/{id}  HTTP/1.1\n</code></pre>\n<h4>Responses:</h4>\n<ul>\n<li>200 OK</li>\n<li>404 Not Found if job with given ID is not found</li>\n</ul>","operationId":"cancelJob","parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"default":{"description":" "}}}},"/{id}/steps/{step}/execute#executeStepForm":{"post":{"tags":["TaskService"],"summary":"Execute Step with a form","description":"<p>Execute a step that accepts form data as part of a task.</p>\n<h4>Request:</h4>\n<pre><code>POST /admin/tasks/{task}/steps/{step}/execute  HTTP/1.1\nContent-Type: application/x-www-form-urlencoded\n\nparam1=value1&amp;param1=value2&amp;param2=xyz\n</code></pre>\n<h4>Response:</h4>\n<p>The following is an example of a response for a simple step.</p>\n<pre><code>{\n}\n</code></pre>\n<h4>Responses:</h4>\n<ul>\n<li>200 OK If the step executed</li>\n<li>404 Not Found if the specified task or step are not found</li>\n</ul>","operationId":"executeStepForm","consumes":["application/x-www-form-urlencoded"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","description":"The ID of the task.","required":true,"type":"string"},{"name":"step","in":"path","description":"The name of the step to execute.","required":true,"type":"string"},{"in":"body","name":"parameter0","description":"The property values to process.","required":false,"schema":{"type":"object"}}],"responses":{"default":{"description":" "}}}},"/{id}/steps":{"get":{"tags":["TaskService"],"summary":"Get Steps for a task","description":"<p>Get all step definitions associated with a task.</p>\n<h4>Request:</h4>\n<pre><code>GET /admin/tasks/{task}/steps HTTP/1.1\nAccept: application/json\n</code></pre>\n<h4>Responses:</h4>\n<ul>\n<li>200 OK, If successful</li>\n<li>404 Not Found, if the specified task cannot be found</li>\n</ul>","operationId":"getSteps","produces":["application/json"],"parameters":[{"name":"id","in":"path","description":"The ID of the task.","required":true,"type":"string"}],"responses":{"default":{"description":" "}}}},"/{id}":{"get":{"tags":["TaskService"],"summary":"Get Task Detail","description":"<p>Get detailed information for a specified task.</p>\n<h4>Request:</h4>\n<pre><code>GET /admin/tasks/{task} HTTP/1.1\" \nAccept: application/json\n</code></pre>\n<h4>Responses:</h4>\n<ul>\n<li>200 OK, If successful</li>\n<li>404 Not Found, If the specified task ID is not found</li>\n</ul>","operationId":"getTask","produces":["application/json"],"parameters":[{"name":"id","in":"path","description":"The ID of the task to fetch.","required":true,"type":"string"},{"name":"brief","in":"query","required":false,"type":"boolean"}],"responses":{"default":{"description":" "}}}},"/{id}/steps/{step}/execute":{"post":{"tags":["TaskService"],"summary":"Execute Step","description":"<p>Execute a step that accepts a JSON array of NameValuePair instances.</p>\n<h4>Request:</h4>\n<p>The following is a sample request.  Note that there may be multiple values for a single parameter.</p>\n<pre><code>POST /admin/tasks/{task}/steps/{step}/execute  HTTP/1.1\nContent-Type: application/json\n\n[\n    {\"name\":\"param1\",\"value\":\"value1\"},\n    {\"name\":\"param1\",\"value\":\"value2\"},\n    {\"name\":\"param2\",\"value\":\"xyz\"}\n]\n</code></pre>\n<h4>Response:</h4>\n<p>The following is an example of a response for a simple step.</p>\n<pre><code>{\n}\n</code></pre>\n<h4>Responses:</h4>\n<ul>\n<li>200 OK If the step executed</li>\n<li>404 Not Found if the specified task or step are not found</li>\n</ul>","operationId":"executeStep","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","description":"The ID of the task.","required":true,"type":"string"},{"name":"step","in":"path","description":"The name of the step to execute.","required":true,"type":"string"},{"in":"body","name":"parameter0","description":"The property values to process.","required":false,"schema":{"type":"object"}}],"responses":{"default":{"description":" "}}}},"/{id}/steps/{step}":{"get":{"tags":["TaskService"],"summary":"Get Step Detail","description":"<p>Get detailed information on a task step.</p>\n<h4>Request:</h4>\n<pre><code>GET /admin/tasks/{task}/steps/{step} HTTP/1.1\nAccept: application/json\n</code></pre>\n<h4>Responses:</h4>\n<ul>\n<li>200 OK, If successful</li>\n<li>404 Not Found, If the specified task or step is not found<h4>Response:</h4>\n<pre><code>200 OK\nContent-Type: application/json\nTransfer-Encoding: chunked\n</code></pre>\n</li>\n</ul>\n<p>{</p>\n<pre><code>\"presentationName\": \"Manage Container Identity\",\n\"required\": true,\n\"repeatable\": true,\n\"completed\": false,\n\"failed\": false,\n\"recommended\": false,\n\"automated\": false,\n\"name\": \"com.soa.container.identity\",\n\"links\": [\n    {\n        \"rel\": \"next\",\n        \"href\": \"http://localhost:9900/admin/tasks/com.soa.container.identity/steps/container.identity.select.action\"\n    },\n    {\n        \"rel\": \"self\",\n        \"href\": \"http://localhost:9900/admin/tasks/com.soa.container.identity\"\n    },\n    {\n        \"rel\": \"steps\",\n        \"href\": \"http://localhost:9900/admin/tasks/com.soa.container.identity/steps\"\n    }\n]\n</code></pre>\n<p>}</p>","operationId":"getStep","produces":["application/json"],"parameters":[{"name":"id","in":"path","description":"The ID of the task.","required":true,"type":"string"},{"name":"step","in":"path","description":"The name of the step.","required":true,"type":"string"}],"responses":{"default":{"description":" "}}}},"/{id}/steps/{step}/execute#executeStepMultipart":{"post":{"tags":["TaskService"],"summary":"Execute Step with an Upload","description":"<p>Execute a step that accepts multipart form data (usually file upload) as part of a task.</p>\n<h4>Request:</h4>\n<pre><code>POST /admin/tasks/{task}/steps/{step}/execute  HTTP/1.1\nContent-Type: multipart/form-data;boundary=xyz\n</code></pre>\n<h4>Response:</h4>\n<p>The following is an example of a response for a simple step.</p>\n<pre><code>{\n}\n</code></pre>\n<h4>Responses:</h4>\n<ul>\n<li>200 OK If the step executed</li>\n<li>404 Not Found if the specified task or step are not found</li>\n</ul>","operationId":"executeStepMultipart","consumes":["multipart/form-data"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","description":"The ID of the task.","required":true,"type":"string"},{"name":"step","in":"path","description":"The name of the step to execute.","required":true,"type":"string"},{"in":"body","name":"parameter0","description":"The upload to process.","required":false,"schema":{"type":"object"}}],"responses":{"default":{"description":" "}}}},"/":{"get":{"tags":["TaskService"],"summary":"Get Tasks","description":"Get all tasks in the system, optionally ordered.","operationId":"getTasks","produces":["application/json"],"parameters":[{"name":"ordered","in":"query","description":"If not present or true, the returned set of tasks will be ordered.","required":false,"type":"boolean"},{"name":"features","in":"query","description":"Should only tasks aassociated with features be retrieved?","required":false,"type":"boolean"},{"name":"filter","in":"query","description":"Task filter.  This is a JEXL expression that is applied to each TaskInfo in the result.","required":false,"type":"string"},{"name":"brief","in":"query","description":"Only include brief information on each task.","required":false,"type":"boolean"}],"responses":{"default":{"description":" "}}}}}}