<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions targetNamespace="http://soa.com/uri/products/containerservice/wsdl/1.0" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://soa.com/uri/products/containerservice/wsdl/1.0" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:nms3="http://federatedgovernance.org/mc/metadata" xmlns:nms2="http://soa.com/uri/products/containerservice/xsd/1.0" xmlns:nms1="http://soa.com/uri/products/restapi/xsd/1.0" xmlns:shttp="http://soa.com/wsdl/http">
  <wsdl:types>
    <xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:attribute name="base" type="xs:anyURI"/>
<xs:attribute name="lang" type="xs:string"/>
</xs:schema>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://soa.com/uri/products/restapi/xsd/1.0" version="1.0" xmlns:ns1="http://www.w3.org/2005/Atom" xmlns:ns2="http://soa.com/uri/products/containerservice/xsd/1.0" xmlns:tns="http://soa.com/uri/products/restapi/xsd/1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:import namespace="http://www.w3.org/2005/Atom"/>
<xs:import namespace="http://soa.com/uri/products/containerservice/xsd/1.0"/>
<xs:element name="AvailablePKIManagementOptions" type="tns:availablePKIManagementOptions"/>
<xs:element name="CertificateInfo" type="tns:certificateInfo"/>
<xs:element name="Containers" type="tns:containers"/>
<xs:element name="Endpoint" type="tns:endpoint"/>
<xs:element name="Endpoints" type="tns:endpoints"/>
<xs:element name="HostedService" type="tns:hostedService"/>
<xs:element name="HostedServices" type="tns:hostedServices"/>
<xs:element name="NameValuePair" type="tns:nameValuePair"/>
<xs:element name="PKIInfo" type="tns:pkiInfo"/>
<xs:element name="PKISpec" type="tns:pkiSpec"/>
<xs:complexType name="endpoints"><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:Endpoint"/></xs:sequence></xs:complexType>
<xs:complexType name="endpoint"><xs:sequence><xs:element minOccurs="0" name="name" type="xs:string"/><xs:element minOccurs="0" name="description" type="xs:string"/><xs:element minOccurs="0" name="URI" type="xs:string"/><xs:element minOccurs="0" name="Properties"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="Property" type="tns:nameValuePair"/></xs:sequence></xs:complexType></xs:element><xs:element minOccurs="0" name="Links"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="Link" type="ns1:atomLink"/></xs:sequence></xs:complexType></xs:element></xs:sequence></xs:complexType>
<xs:complexType name="nameValuePair"><xs:sequence><xs:element name="name" type="xs:string"/><xs:element minOccurs="0" name="value" type="xs:string"/></xs:sequence></xs:complexType>
<xs:complexType name="availablePKIManagementOptions"><xs:sequence><xs:element name="import" type="xs:boolean"/><xs:element name="export" type="xs:boolean"/><xs:element name="delete" type="xs:boolean"/><xs:element name="assign" type="xs:boolean"/></xs:sequence></xs:complexType>
<xs:complexType name="pkiSpec"><xs:sequence><xs:element minOccurs="0" name="algorithm" type="xs:string"/><xs:element minOccurs="0" name="alias" type="xs:string"/><xs:element minOccurs="0" name="aliasPassword" type="xs:string"/><xs:element minOccurs="0" name="certificateChain" type="xs:string"/><xs:element name="external" type="xs:boolean"/><xs:element minOccurs="0" name="privateKey" type="xs:string"/></xs:sequence></xs:complexType>
<xs:complexType name="hostedServices"><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="Service" type="tns:hostedService"/></xs:sequence></xs:complexType>
<xs:complexType name="hostedService"><xs:sequence><xs:element minOccurs="0" name="name" type="xs:string"/><xs:element minOccurs="0" name="description" type="xs:string"/><xs:element minOccurs="0" name="key" type="xs:string"/><xs:element minOccurs="0" name="qname" type="xs:string"/><xs:element minOccurs="0" name="organization" type="xs:string"/><xs:element minOccurs="0" name="Properties"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="Property" type="tns:nameValuePair"/></xs:sequence></xs:complexType></xs:element><xs:element minOccurs="0" name="Links"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="Link" type="ns1:atomLink"/></xs:sequence></xs:complexType></xs:element></xs:sequence></xs:complexType>
<xs:complexType name="containers"><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" ref="ns2:Container"/></xs:sequence></xs:complexType>
<xs:complexType name="pkiInfo"><xs:sequence><xs:element name="privateKeyExists" type="xs:boolean"/><xs:element minOccurs="0" name="publicKey" type="xs:string"/><xs:element minOccurs="0" name="certificateInfo" type="tns:certificateInfo"/><xs:element minOccurs="0" name="managementOptions" type="tns:availablePKIManagementOptions"/></xs:sequence></xs:complexType>
<xs:complexType name="certificateInfo"><xs:sequence><xs:element minOccurs="0" name="subjectDN" type="xs:string"/><xs:element minOccurs="0" name="issuerDN" type="xs:string"/><xs:element minOccurs="0" name="serialNo" type="xs:string"/><xs:element name="effectiveDate" type="xs:long"/><xs:element name="expirationDate" type="xs:long"/></xs:sequence></xs:complexType>
</xs:schema>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://www.w3.org/2005/Atom" version="1.0" xmlns:tns="http://www.w3.org/2005/Atom" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:import namespace="http://www.w3.org/XML/1998/namespace"/>
<xs:complexType name="atomLink"><xs:complexContent><xs:extension base="tns:atomCommonAttributes"><xs:sequence/><xs:attribute name="length" type="xs:string"/><xs:attribute name="title" type="xs:string"/><xs:attribute name="hreflang" type="xs:string"/><xs:attribute name="rel" type="xs:string"/><xs:attribute name="type" type="xs:string"/><xs:attribute name="href" type="xs:anyURI" use="required"/><xs:anyAttribute namespace="##other" processContents="skip"/></xs:extension></xs:complexContent></xs:complexType>
<xs:complexType name="atomCommonAttributes"><xs:sequence/><xs:attribute ref="xml:base"/><xs:attribute ref="xml:lang"/><xs:anyAttribute namespace="##other" processContents="skip"/></xs:complexType>
</xs:schema>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://soa.com/uri/products/containerservice/xsd/1.0" version="1.0" xmlns:ns1="http://www.w3.org/2005/Atom" xmlns:tns="http://soa.com/uri/products/containerservice/xsd/1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:import namespace="http://www.w3.org/2005/Atom"/>
<xs:element name="AddClusterNode"><xs:complexType><xs:sequence><xs:element name="ContainerKey" type="xs:string"/><xs:element name="ClusterNodeKey" type="xs:string"/></xs:sequence></xs:complexType></xs:element>
<xs:element name="AddClusterNodes"><xs:complexType><xs:sequence><xs:element name="ContainerKey" type="xs:string"/><xs:element maxOccurs="unbounded" minOccurs="0" name="ClusterNodeKey" type="xs:string"/></xs:sequence></xs:complexType></xs:element>
<xs:element name="AddContainer"><xs:complexType><xs:sequence><xs:element minOccurs="0" name="ContainerName" type="xs:string"/><xs:element minOccurs="0" name="OrganizationKey" type="xs:string"/><xs:element minOccurs="0" name="ClusterKey" type="xs:string"/><xs:element minOccurs="0" name="ContainerDescription" type="xs:string"/><xs:element minOccurs="0" name="ContainerLocation" type="xs:string"/><xs:element minOccurs="0" name="MetadataLocation" type="xs:anyURI"/><xs:element minOccurs="0" ref="tns:MetadataCredentials"/><xs:element minOccurs="0" name="Metadata" type="tns:Metadata"/><xs:element minOccurs="0" name="AddressOverrideBehavior" type="xs:string"/><xs:element minOccurs="0" name="RandomPrefixBehavior" type="xs:string"/></xs:sequence></xs:complexType></xs:element>
<xs:element name="AddContainerWithCluster"><xs:complexType><xs:sequence><xs:element minOccurs="0" name="ContainerName" type="xs:string"/><xs:element minOccurs="0" name="ContainerType" type="xs:string"/><xs:element minOccurs="0" name="ContainerTypeName" type="xs:string"/><xs:element minOccurs="0" name="OrganizationKey" type="xs:string"/><xs:element minOccurs="0" name="ClusterKey" type="xs:string"/><xs:element minOccurs="0" name="NewCluster"><xs:complexType><xs:sequence><xs:element minOccurs="0" name="ContainerName" type="xs:string"/><xs:element minOccurs="0" name="ContainerDescription" type="xs:string"/></xs:sequence></xs:complexType></xs:element><xs:element minOccurs="0" name="ContainerDescription" type="xs:string"/><xs:element minOccurs="0" name="ContainerLocation" type="xs:string"/><xs:element minOccurs="0" name="MetadataLocation" type="xs:anyURI"/><xs:element minOccurs="0" ref="tns:MetadataCredentials"/><xs:element minOccurs="0" name="Metadata" type="tns:Metadata"/><xs:element minOccurs="0" name="MetadataContainerKey" type="xs:string"/><xs:element minOccurs="0" name="AddressOverrideBehavior" type="xs:string"/><xs:element minOccurs="0" name="RandomPrefixBehavior" type="xs:string"/></xs:sequence></xs:complexType></xs:element>
<xs:element name="AddOrReplaceClusterNodes"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="ClusterNodeKey" type="xs:string"/><xs:element minOccurs="0" name="doReplace" type="xs:boolean"/></xs:sequence></xs:complexType></xs:element>
<xs:element name="ClusterNodeList"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="ClusterNode"><xs:complexType><xs:sequence><xs:element minOccurs="0" name="ContainerName" type="xs:string"/><xs:element minOccurs="0" name="ContainerType" type="xs:string"/><xs:element minOccurs="0" name="ClusterKey" type="xs:string"/><xs:element minOccurs="0" name="ContainerDescription" type="xs:string"/><xs:element minOccurs="0" name="ContainerLocation" type="xs:string"/><xs:element minOccurs="0" name="ContainerKey" type="xs:string"/><xs:element minOccurs="0" name="LastUpdated" type="xs:dateTime"/><xs:element maxOccurs="unbounded" minOccurs="0" name="Link" type="ns1:atomLink"/></xs:sequence></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element>
<xs:element name="Container" nillable="true" type="xs:anyType"/>
<xs:element name="DeleteClusterNode"><xs:complexType><xs:sequence><xs:element name="ContainerKey" type="xs:string"/><xs:element name="ClusterNodeKey" type="xs:string"/></xs:sequence></xs:complexType></xs:element>
<xs:element name="DeleteContainer"><xs:complexType><xs:sequence><xs:element name="ContainerKey" type="xs:string"/></xs:sequence></xs:complexType></xs:element>
<xs:element name="GetClusterNodes"><xs:complexType><xs:sequence><xs:element name="ContainerKey" type="xs:string"/></xs:sequence></xs:complexType></xs:element>
<xs:element name="GetContainer"><xs:complexType><xs:sequence><xs:element name="ContainerKey" type="xs:string"/></xs:sequence></xs:complexType></xs:element>
<xs:element name="GetMetadata"><xs:complexType><xs:sequence><xs:element name="ContainerKey" type="xs:string"/></xs:sequence></xs:complexType></xs:element>
<xs:element name="MetadataCredentials"><xs:complexType><xs:sequence><xs:element minOccurs="0" name="Username" type="xs:string"/><xs:element minOccurs="0" name="Password" type="xs:string"/></xs:sequence></xs:complexType></xs:element>
<xs:element name="ModifyContainer"><xs:complexType><xs:sequence><xs:element name="ContainerKey" type="xs:string"/><xs:element minOccurs="0" name="ContainerName" type="xs:string"/><xs:element minOccurs="0" name="OrganizationKey" type="xs:string"/><xs:element minOccurs="0" name="ContainerDescription" type="xs:string"/><xs:element minOccurs="0" name="ContainerLocation" type="xs:string"/><xs:element minOccurs="0" name="AdminConsoleUrl" type="xs:string"/><xs:element minOccurs="0" name="AddressOverrideBehavior" type="xs:string"/><xs:element minOccurs="0" name="RandomPrefixBehavior" type="xs:string"/><xs:element minOccurs="0" name="Metadata" type="tns:Metadata"/></xs:sequence></xs:complexType></xs:element>
<xs:element name="ModifyMetadata"><xs:complexType><xs:sequence><xs:element name="ContainerKey" type="xs:string"/><xs:element minOccurs="0" name="MetadataLocation" type="xs:anyURI"/><xs:element minOccurs="0" ref="tns:MetadataCredentials"/><xs:element minOccurs="0" name="Metadata" type="tns:Metadata"/></xs:sequence></xs:complexType></xs:element>
<xs:element name="OperationFault"><xs:complexType><xs:sequence><xs:element name="FaultCode" type="xs:string"/><xs:element minOccurs="0" name="Description" type="xs:string"/></xs:sequence></xs:complexType></xs:element>
<xs:element name="ReplaceClusterNodes"><xs:complexType><xs:sequence><xs:element name="ContainerKey" type="xs:string"/><xs:element maxOccurs="unbounded" minOccurs="0" name="ClusterNodeKey" type="xs:string"/></xs:sequence></xs:complexType></xs:element>
<xs:element name="SimpleCluster"><xs:complexType><xs:sequence><xs:element minOccurs="0" name="ContainerName" type="xs:string"/><xs:element minOccurs="0" name="ContainerDescription" type="xs:string"/></xs:sequence></xs:complexType></xs:element>
<xs:complexType name="Metadata"><xs:sequence><xs:any namespace="##other" processContents="lax"/></xs:sequence></xs:complexType>
</xs:schema>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://federatedgovernance.org/mc/metadata" version="1.0" xmlns:tns="http://federatedgovernance.org/mc/metadata" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:element name="ContainerMetadata" nillable="true" type="tns:ContainerMetadataType"/>
<xs:complexType name="ContainerMetadataType"><xs:sequence><xs:element name="ContainerKey" type="xs:string"/><xs:element minOccurs="0" name="ContainerName" type="xs:string"/><xs:element name="ContainerType" type="xs:anyURI"/><xs:element minOccurs="0" name="ContainerTypeName" type="xs:string"/><xs:element minOccurs="0" name="X509Identity" type="tns:X509CertificateChain"/><xs:element minOccurs="0" name="Capabilities" type="tns:CapabilitiesType"/><xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/></xs:sequence><xs:anyAttribute namespace="##other" processContents="skip"/></xs:complexType>
<xs:complexType name="X509CertificateChain"><xs:sequence><xs:element maxOccurs="unbounded" name="X509Certificate" type="xs:base64Binary"/></xs:sequence></xs:complexType>
<xs:complexType name="CapabilitiesType"><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="Capability" type="tns:CapabilityType"/></xs:sequence></xs:complexType>
<xs:complexType name="CapabilityType"><xs:sequence><xs:element minOccurs="0" name="Name" type="xs:string"/><xs:element minOccurs="0" name="Description" type="xs:string"/><xs:element minOccurs="0" name="CapabilityOptions" type="tns:CapabilityOptionsType"/><xs:element minOccurs="0" name="CapabilityConfigParameters" type="tns:CapabilityConfigParametersType"/><xs:element minOccurs="0" name="BootstrapConfiguration" type="tns:BootstrapConfigurationType"/><xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/></xs:sequence><xs:attribute name="Id" type="xs:anyURI" use="required"/><xs:anyAttribute namespace="##other" processContents="skip"/></xs:complexType>
<xs:complexType name="CapabilityOptionsType"><xs:sequence><xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/></xs:sequence></xs:complexType>
<xs:complexType name="CapabilityConfigParameterType"><xs:sequence><xs:element name="Name" type="xs:string"/><xs:element minOccurs="0" name="Description" type="xs:string"/><xs:element name="Element" type="xs:QName"/><xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/></xs:sequence><xs:attribute name="Id" type="xs:NCName" use="required"/><xs:attribute name="minOccurs" type="xs:int"/><xs:attribute name="maxOccurs" type="xs:string"/><xs:anyAttribute namespace="##other" processContents="skip"/></xs:complexType>
<xs:complexType name="CapabilityConfigParametersType"><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="ConfigParameter" type="tns:CapabilityConfigParameterType"/></xs:sequence></xs:complexType>
<xs:complexType name="BootstrapConfigurationType"><xs:sequence><xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/></xs:sequence></xs:complexType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="modifyContainerMetadataRESTRequestMessage">
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
    <wsdl:part name="parameter0" element="nms3:ContainerMetadata">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteContainerRESTRequestMessage">
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="modifyContainerMultipartResponseMessage">
    <wsdl:part name="modifyContainerMultipartResponse" element="nms2:Container">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addContainerListenerPKIRequestMessage">
    <wsdl:part name="parameter0" element="nms1:PKISpec">
    </wsdl:part>
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
    <wsdl:part name="listener" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContainerPKIRequestMessage">
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="modifyContainerListenerRequestMessage">
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
    <wsdl:part name="listener" type="xs:string">
    </wsdl:part>
    <wsdl:part name="parameter0" element="nms1:Endpoint">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="modifyContainerMetadataMultipartResponseMessage">
    <wsdl:part name="modifyContainerMetadataMultipartResponse" element="nms2:Container">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContainerListenerResponseMessage">
    <wsdl:part name="getContainerListenerResponse" element="nms1:Endpoint">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContainerListenerPKIInfoResponseMessage">
    <wsdl:part name="getContainerListenerPKIInfoResponse" element="nms1:PKIInfo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteContainerRESTResponseMessage">
  </wsdl:message>
  <wsdl:message name="getContainerOutboundPKIResponseMessage">
    <wsdl:part name="getContainerOutboundPKIResponse" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteClusterNodeRESTRequestMessage">
    <wsdl:part name="cluster" type="xs:string">
    </wsdl:part>
    <wsdl:part name="node" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="uploadContainerListenerPKIResponseMessage">
    <wsdl:part name="uploadContainerListenerPKIResponse" element="nms1:PKIInfo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getClusterNodesRESTRequestMessage">
    <wsdl:part name="cluster" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContainerListenerPKIInfoRequestMessage">
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
    <wsdl:part name="listener" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="modifyContainerFormRequestMessage">
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
    <wsdl:part name="ContainerName" type="xs:string">
    </wsdl:part>
    <wsdl:part name="OrganizationKey" type="xs:string">
    </wsdl:part>
    <wsdl:part name="ContainerDescription" type="xs:string">
    </wsdl:part>
    <wsdl:part name="ContainerLocation" type="xs:string">
    </wsdl:part>
    <wsdl:part name="AddressOverrideBehavior" type="xs:string">
    </wsdl:part>
    <wsdl:part name="RandomPrefixBehavior" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContainerOutboundPKIInfoResponseMessage">
    <wsdl:part name="getContainerOutboundPKIInfoResponse" element="nms1:PKIInfo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContainersResponseMessage">
    <wsdl:part name="getContainersResponse" element="nms1:Containers">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addContainerMultipartRequestMessage">
    <wsdl:part name="parameter0" type="tns:BufferedInMultiPart">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="modifyContainerMetadataMultipartRequestMessage">
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
    <wsdl:part name="parameter0" type="tns:BufferedInMultiPart">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeContainerListenerRequestMessage">
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
    <wsdl:part name="listener" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addContainerFormRequestMessage">
    <wsdl:part name="ContainerName" type="xs:string">
    </wsdl:part>
    <wsdl:part name="OrganizationKey" type="xs:string">
    </wsdl:part>
    <wsdl:part name="ClusterKey" type="xs:string">
    </wsdl:part>
    <wsdl:part name="ContainerDescription" type="xs:string">
    </wsdl:part>
    <wsdl:part name="ContainerLocation" type="xs:string">
    </wsdl:part>
    <wsdl:part name="MetadataLocation" type="xs:string">
    </wsdl:part>
    <wsdl:part name="MetadataUsername" type="xs:string">
    </wsdl:part>
    <wsdl:part name="MetadataPassword" type="xs:string">
    </wsdl:part>
    <wsdl:part name="Metadata" type="xs:string">
    </wsdl:part>
    <wsdl:part name="AddressOverrideBehavior" type="xs:string">
    </wsdl:part>
    <wsdl:part name="RandomPrefixBehavior" type="xs:string">
    </wsdl:part>
    <wsdl:part name="CreateCluster" type="xs:boolean">
    </wsdl:part>
    <wsdl:part name="ClusterName" type="xs:string">
    </wsdl:part>
    <wsdl:part name="ClusterDescription" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="modifyContainerCertificateMultipartResponseMessage">
    <wsdl:part element="xs:any">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addContainerFormResponseMessage">
    <wsdl:part name="addContainerFormResponse" element="nms2:Container">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addContainerListenerResponseMessage">
    <wsdl:part name="addContainerListenerResponse" element="nms1:Endpoint">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="modifyContainerRESTRequestMessage">
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
    <wsdl:part name="parameter0" element="nms2:Container">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeContainerListenerResponseMessage">
  </wsdl:message>
  <wsdl:message name="getContainerRESTResponseMessage">
    <wsdl:part name="getContainerRESTResponse" element="nms2:Container">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContainerListenersResponseMessage">
    <wsdl:part name="getContainerListenersResponse" element="nms1:Endpoints">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addContainerRESTRequestMessage">
    <wsdl:part name="parameter0" element="nms2:AddContainerWithCluster">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="modifyContainerCertificateMultipartRequestMessage">
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
    <wsdl:part name="parameter0" type="tns:BufferedInMultiPart">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addOrReplaceClusterNodesRESTResponseMessage">
    <wsdl:part name="addOrReplaceClusterNodesRESTResponse" element="nms2:ClusterNodeList">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContainerListenerRequestMessage">
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
    <wsdl:part name="listener" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContainerOutboundPKIInfoRequestMessage">
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContainerRESTRequestMessage">
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addContainerMultipartResponseMessage">
    <wsdl:part name="addContainerMultipartResponse" element="nms2:Container">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContainerListenersRequestMessage">
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContainerListenerPKIRequestMessage">
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
    <wsdl:part name="listener" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="modifyContainerMetadataFORMResponseMessage">
    <wsdl:part name="modifyContainerMetadataFORMResponse" element="nms2:Container">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="uploadContainerListenerPKIRequestMessage">
    <wsdl:part name="parameter0" type="tns:MultipartMessage">
    </wsdl:part>
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
    <wsdl:part name="listener" type="xs:string">
    </wsdl:part>
    <wsdl:part name="keystorePass" type="xs:string">
    </wsdl:part>
    <wsdl:part name="alias" type="xs:string">
    </wsdl:part>
    <wsdl:part name="aliasPass" type="xs:string">
    </wsdl:part>
    <wsdl:part name="forceTrust" type="xs:boolean">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="modifyContainerFormResponseMessage">
    <wsdl:part name="modifyContainerFormResponse" element="nms2:Container">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContainerPKIInfoRequestMessage">
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContainerOutboundPKIRequestMessage">
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getClusterNodesRESTResponseMessage">
    <wsdl:part name="getClusterNodesRESTResponse" element="nms2:ClusterNodeList">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContainerPKIResponseMessage">
    <wsdl:part name="getContainerPKIResponse" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addClusterNodeFormRequestMessage">
    <wsdl:part name="cluster" type="xs:string">
    </wsdl:part>
    <wsdl:part name="ClusterNodeKey" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContainerMetadataRESTRequestMessage">
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="modifyContainerListenerResponseMessage">
    <wsdl:part name="modifyContainerListenerResponse" element="nms1:Endpoint">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContainersRequestMessage">
    <wsdl:part name="orgKey" type="xs:string">
    </wsdl:part>
    <wsdl:part name="type" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addClusterNodeFormResponseMessage">
    <wsdl:part name="addClusterNodeFormResponse" element="nms2:ClusterNodeList">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContainerServicesRequestMessage">
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="modifyContainerRESTResponseMessage">
    <wsdl:part name="modifyContainerRESTResponse" element="nms2:Container">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addContainerListenerRequestMessage">
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
    <wsdl:part name="parameter0" element="nms1:Endpoint">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="modifyContainerMultipartRequestMessage">
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
    <wsdl:part name="parameter0" type="tns:BufferedInMultiPart">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContainerServicesResponseMessage">
    <wsdl:part name="getContainerServicesResponse" element="nms1:HostedServices">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="modifyContainerMetadataRESTResponseMessage">
    <wsdl:part name="modifyContainerMetadataRESTResponse" element="nms3:ContainerMetadata">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addContainerRESTResponseMessage">
    <wsdl:part name="addContainerRESTResponse" element="nms2:Container">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContainerListenerPKIResponseMessage">
    <wsdl:part name="getContainerListenerPKIResponse" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addContainerListenerPKIResponseMessage">
    <wsdl:part name="addContainerListenerPKIResponse" element="nms1:PKIInfo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContainerPKIInfoResponseMessage">
    <wsdl:part name="getContainerPKIInfoResponse" element="nms1:PKIInfo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteClusterNodeRESTResponseMessage">
    <wsdl:part name="deleteClusterNodeRESTResponse" element="nms2:ClusterNodeList">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="uploadContainerOutboundPKIRequestMessage">
    <wsdl:part name="parameter0" type="tns:MultipartMessage">
    </wsdl:part>
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
    <wsdl:part name="keystorePass" type="xs:string">
    </wsdl:part>
    <wsdl:part name="alias" type="xs:string">
    </wsdl:part>
    <wsdl:part name="aliasPass" type="xs:string">
    </wsdl:part>
    <wsdl:part name="forceTrust" type="xs:boolean">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="modifyContainerMetadataFORMRequestMessage">
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
    <wsdl:part name="MetadataLocation" type="xs:string">
    </wsdl:part>
    <wsdl:part name="MetadataUsername" type="xs:string">
    </wsdl:part>
    <wsdl:part name="MetadataPassword" type="xs:string">
    </wsdl:part>
    <wsdl:part name="Metadata" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="uploadContainerOutboundPKIResponseMessage">
    <wsdl:part name="uploadContainerOutboundPKIResponse" element="nms1:PKIInfo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContainerMetadataRESTResponseMessage">
    <wsdl:part name="getContainerMetadataRESTResponse" element="nms3:ContainerMetadata">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addOrReplaceClusterNodesRESTRequestMessage">
    <wsdl:part name="cluster" type="xs:string">
    </wsdl:part>
    <wsdl:part name="container" type="xs:string">
    </wsdl:part>
    <wsdl:part name="parameter0" element="nms2:AddOrReplaceClusterNodes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="ContainerMgmtRESTPortType">
    <wsdl:operation name="addContainerListenerPKI">
      <wsdl:input message="tns:addContainerListenerPKIRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:addContainerListenerPKIResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="uploadContainerOutboundPKI">
      <wsdl:input message="tns:uploadContainerOutboundPKIRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:uploadContainerOutboundPKIResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContainerOutboundPKI">
      <wsdl:input message="tns:getContainerOutboundPKIRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getContainerOutboundPKIResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContainerOutboundPKIInfo">
      <wsdl:input message="tns:getContainerOutboundPKIInfoRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getContainerOutboundPKIInfoResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContainers">
      <wsdl:input message="tns:getContainersRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getContainersResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addContainerForm">
      <wsdl:input message="tns:addContainerFormRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:addContainerFormResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addContainerMultipart">
      <wsdl:input message="tns:addContainerMultipartRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:addContainerMultipartResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="modifyContainerMetadataMultipart">
      <wsdl:input message="tns:modifyContainerMetadataMultipartRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:modifyContainerMetadataMultipartResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="modifyContainerMetadataREST">
      <wsdl:input message="tns:modifyContainerMetadataRESTRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:modifyContainerMetadataRESTResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContainerMetadataREST">
      <wsdl:input message="tns:getContainerMetadataRESTRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getContainerMetadataRESTResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContainerPKI">
      <wsdl:input message="tns:getContainerPKIRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getContainerPKIResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContainerPKIInfo">
      <wsdl:input message="tns:getContainerPKIInfoRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getContainerPKIInfoResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="modifyContainerCertificateMultipart">
      <wsdl:input message="tns:modifyContainerCertificateMultipartRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:modifyContainerCertificateMultipartResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addClusterNodeForm">
      <wsdl:input message="tns:addClusterNodeFormRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:addClusterNodeFormResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addOrReplaceClusterNodesREST">
      <wsdl:input message="tns:addOrReplaceClusterNodesRESTRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:addOrReplaceClusterNodesRESTResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteClusterNodeREST">
      <wsdl:input message="tns:deleteClusterNodeRESTRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:deleteClusterNodeRESTResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getClusterNodesREST">
      <wsdl:input message="tns:getClusterNodesRESTRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getClusterNodesRESTResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContainerListeners">
      <wsdl:input message="tns:getContainerListenersRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getContainerListenersResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addContainerListener">
      <wsdl:input message="tns:addContainerListenerRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:addContainerListenerResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContainerListener">
      <wsdl:input message="tns:getContainerListenerRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getContainerListenerResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="modifyContainerListener">
      <wsdl:input message="tns:modifyContainerListenerRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:modifyContainerListenerResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeContainerListener">
      <wsdl:input message="tns:removeContainerListenerRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:removeContainerListenerResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContainerServices">
      <wsdl:input message="tns:getContainerServicesRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getContainerServicesResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContainerListenerPKI">
      <wsdl:input message="tns:getContainerListenerPKIRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getContainerListenerPKIResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContainerListenerPKIInfo">
      <wsdl:input message="tns:getContainerListenerPKIInfoRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getContainerListenerPKIInfoResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="uploadContainerListenerPKI">
      <wsdl:input message="tns:uploadContainerListenerPKIRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:uploadContainerListenerPKIResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="modifyContainerForm">
      <wsdl:input message="tns:modifyContainerFormRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:modifyContainerFormResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="modifyContainerMultipart">
      <wsdl:input message="tns:modifyContainerMultipartRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:modifyContainerMultipartResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContainerREST">
      <wsdl:input message="tns:getContainerRESTRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getContainerRESTResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="modifyContainerREST">
      <wsdl:input message="tns:modifyContainerRESTRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:modifyContainerRESTResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addContainerREST">
      <wsdl:input message="tns:addContainerRESTRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:addContainerRESTResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteContainerREST">
      <wsdl:input message="tns:deleteContainerRESTRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:deleteContainerRESTResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="modifyContainerMetadataFORM">
      <wsdl:input message="tns:modifyContainerMetadataFORMRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:modifyContainerMetadataFORMResponseMessage">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ContainerMgmtRESTBinding" type="tns:ContainerMgmtRESTPortType">
    <shttp:binding/>
    <wsdl:operation name="addContainerListenerPKI">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">POST /containers/{key}/listeners/{listener}/pki</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Add PKI keys and certificate for a listener.]]></sdoc:summary></wsdl:documentation>
    <shttp:operation inputSerialization="application/json" location="/containers/{key}/listeners/{listener}/pki" method="POST" outputSerialization="application/json,application/xml"/>
      <wsdl:input>
    <shttp:input name="parameter0" part="parameter0" type="entity"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The PKI data.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">true</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">true</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="listener" part="listener" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The listener name.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="addContainerListenerPKIResponse" part="addContainerListenerPKIResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="uploadContainerOutboundPKI">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">POST /containers/{key}/pki/outbound</sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Uploads a keystore that holds outbound PKI key/cert data for a container. The following is an example request and response.</p><p>Request:<br>POST /rest/uddi:978841b1-7088-11e4-8574-cb4613969888/pki?alias=https1&keystorePass=changeit&aliasPass=changeit HTTP/1.1<br>Content-Type: multipart/form-data; boundary=Jlo6Rm_FfX2_s3WQ5QhfUoY6qqLxTbdyHMSkf0W<br>--Jlo6Rm_FfX2_s3WQ5QhfUoY6qqLxTbdyHMSkf0W<br>Content-Disposition: form-data; name="fileUpload"; filename="test.jks"<br>Content-Type: application/octet-stream<br>Content-Transfer-Encoding: binary<br>&lt;File content omitted&gt;</p><p>Response:<br>HTTP/1.1 201 Created if creation successful]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Uploads outbound PKI keys and certificate for a container.]]></sdoc:summary></wsdl:documentation>
    <shttp:operation inputSerialization="multipart/form-data" location="/containers/{key}/pki/outbound" method="POST"/>
      <wsdl:input>
    <shttp:input name="parameter0" part="parameter0" type="entity"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The uploaded file.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">true</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">true</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="keystorePass" part="keystorePass" type="query"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Keystore password.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="alias" part="alias" type="query"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Alias in the keystore to use.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">true</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="aliasPass" part="aliasPass" type="query"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Alias password. Can be omitted if not needed or the same as the keystore password.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="forceTrust" part="forceTrust" type="query"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Add to trust store if not trusted already. If false and not trusted an error will be returned. Can be omitted. Default is false.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="uploadContainerOutboundPKIResponse" part="uploadContainerOutboundPKIResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContainerOutboundPKI">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /containers/{key}/pki/outbound</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get Container Outbound Certificate]]></sdoc:summary><sdoc:response code="200" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Success]]></sdoc:description></sdoc:response><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Returns the outbound PKI configuration including the encoded certificate chain for a container (if it
exists). May return no content if no certificate is assigned. See example response for certificate chain
encoding.</p>
<h4>Request:</h4>
<pre><code>GET /rest/containers/uddi:978841b1-7088-11e4-8574-cb4613969888/pki/outbound HTTP/1.1
Accept: application/json
</code></pre>
<h4>Response:</h4>
<pre><code>HTTP/1.1 200 OK

{
  "SubjectDN" : "CN=sa1, OU=Akana, O=Akana, ST=CA, C=US",
  "IssuerDN" : "CN=ca, OU=Akana, O=Akana, ST=CA, C=US",
  "SerialNo" : "4942932839929778611",
  "EffectiveDate" : "2017-01-11-08:00",
  "ExpirationDate" : "2018-01-11-08:00",
  "EncodedCertChain" : "-----BEGIN CERTIFICATE-----\n... Primary Certificate bytes ...\n-----END CERTIFICATE-----\n \
-----BEGIN CERTIFICATE-----\n... Root Certificate bytes ...\n-----END CERTIFICATE-----\n"
}
</code></pre>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="/containers/{key}/pki/outbound" method="GET" outputSerialization="text/plain"/>
      <wsdl:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getContainerOutboundPKIResponse" part="getContainerOutboundPKIResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContainerOutboundPKIInfo">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /containers/{key}/pki/outbound/info</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Returns the outbound PKI configuration.]]></sdoc:summary><sdoc:response code="200" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Success]]></sdoc:description></sdoc:response></wsdl:documentation>
    <shttp:operation location="/containers/{key}/pki/outbound/info" method="GET" outputSerialization="application/json"/>
      <wsdl:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getContainerOutboundPKIInfoResponse" part="getContainerOutboundPKIInfoResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContainers">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /containers</sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Fetch all defined containers.]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get Containers]]></sdoc:summary></wsdl:documentation>
    <shttp:operation location="/containers" method="GET" outputSerialization="application/xml,application/json"/>
      <wsdl:input>
    <shttp:input name="orgKey" part="orgKey" type="query"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Organization holding the containers. Optional.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="type" part="type" type="query"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Type of containers. Optional.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getContainersResponse" part="getContainersResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addContainerForm">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">POST /containers</sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Add a container to the system using a set of form parameters.]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Add Container (Form-based)]]></sdoc:summary><sdoc:response code="201" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Created]]></sdoc:description></sdoc:response></wsdl:documentation>
    <shttp:operation inputSerialization="application/x-www-form-urlencoded" location="/containers" method="POST" outputSerialization="application/xml,application/json"/>
      <wsdl:input>
    <shttp:input name="ContainerName" part="ContainerName" type="form"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The new container's name.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="OrganizationKey" part="OrganizationKey" type="form"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The organization that should contain the new container.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="ClusterKey" part="ClusterKey" type="form"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[An optional cluster key if the container should be added to a cluster.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="ContainerDescription" part="ContainerDescription" type="form"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The new container's description. Optional.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="ContainerLocation" part="ContainerLocation" type="form"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The new container's location. Optional.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="MetadataLocation" part="MetadataLocation" type="form"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The location of the container's metadata document.  Either this or the metadata parameter must be provided.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="MetadataUsername" part="MetadataUsername" type="form"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Username to use to access the container's metadata document if authentication required. Used with the metadataLocation parameter.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="MetadataPassword" part="MetadataPassword" type="form"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Password to use to access the container's metadata document if authentication required. Used with the metadataLocation parameter.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="Metadata" part="Metadata" type="form"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The new container's metdata as an XML form-encoded document if a location is not provided.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="AddressOverrideBehavior" part="AddressOverrideBehavior" type="form"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The new container's AddressOverrideBehavior. Optional.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="RandomPrefixBehavior" part="RandomPrefixBehavior" type="form"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The new container's RandomPrefixBehavior. Optional]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="CreateCluster" part="CreateCluster" type="form"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Indicates that the cluster should be created. Optional, default value is false.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="ClusterName" part="ClusterName" type="form"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Name of clsuter to create. Used with the CreateCluster parameter.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="ClusterDescription" part="ClusterDescription" type="form"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Description of clsuter to create. Used with the CreateCluster parameter.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="addContainerFormResponse" part="addContainerFormResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addContainerMultipart">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">POST /containers</sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Add a container to the system using a set of form parameters and metadata file upload as multipart/form-data.]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Add Container (Multipart-form-data)]]></sdoc:summary><sdoc:response code="201" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Created]]></sdoc:description></sdoc:response></wsdl:documentation>
    <shttp:operation inputSerialization="multipart/form-data" location="/containers" method="POST" outputSerialization="application/xml,application/json"/>
      <wsdl:input>
    <shttp:input name="parameter0" part="parameter0" type="entity"/>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="addContainerMultipartResponse" part="addContainerMultipartResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="modifyContainerMetadataMultipart">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">POST /containers/{key}/metadata</sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Modify a container's metadata using multipart-form-data.]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Modify Container Metadata (Multipart-form-data)]]></sdoc:summary><sdoc:response code="200" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Success]]></sdoc:description></sdoc:response><sdoc:response code="404" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Specified container not found (Invalid container key)]]></sdoc:description></sdoc:response></wsdl:documentation>
    <shttp:operation inputSerialization="multipart/form-data" location="/containers/{key}/metadata" method="POST" outputSerialization="application/xml,application/json"/>
      <wsdl:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="parameter0" part="parameter0" type="entity"/>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="modifyContainerMetadataMultipartResponse" part="modifyContainerMetadataMultipartResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="modifyContainerMetadataREST">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">PUT /containers/{key}/metadata</sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Modify a container's metadata.]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Modify Container Metadata (Form-Based)]]></sdoc:summary><sdoc:response code="200" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Success]]></sdoc:description></sdoc:response><sdoc:response code="404" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Specified container not found (Invalid container key)]]></sdoc:description></sdoc:response></wsdl:documentation>
    <shttp:operation inputSerialization="application/xml,application/json" location="/containers/{key}/metadata" method="PUT" outputSerialization="application/xml,application/json"/>
      <wsdl:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="parameter0" part="parameter0" type="entity"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container metadata.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="modifyContainerMetadataRESTResponse" part="modifyContainerMetadataRESTResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContainerMetadataREST">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /containers/{key}/metadata</sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get a container's metadata.]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get Container Metadata]]></sdoc:summary><sdoc:response code="200" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Success]]></sdoc:description></sdoc:response><sdoc:response code="404" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Specified container not found (Invalid container key)]]></sdoc:description></sdoc:response></wsdl:documentation>
    <shttp:operation location="/containers/{key}/metadata" method="GET" outputSerialization="application/xml,application/json"/>
      <wsdl:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getContainerMetadataRESTResponse" part="getContainerMetadataRESTResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContainerPKI">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /containers/{key}/pki/identity</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get Container Certificate]]></sdoc:summary><sdoc:response code="200" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Success]]></sdoc:description></sdoc:response><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Returns the PKI configuration (including the encoded certificate chain) used to identify a container. May
return no content if no certificate is assigned. See example response for certificate chain encoding.</p>
<h4>Request:</h4>
<pre><code>GET /rest/containers/uddi:978841b1-7088-11e4-8574-cb4613969888/pki/identity HTTP/1.1
Accept: application/json
</code></pre>
<h4>Response:</h4>
<pre><code>HTTP/1.1 200 OK

{
  "SubjectDN" : "CN=sa1, OU=Akana, O=Akana, ST=CA, C=US",
  "IssuerDN" : "CN=ca, OU=Akana, O=Akana, ST=CA, C=US",
  "SerialNo" : "4942932839929778611",
  "EffectiveDate" : "2017-01-11-08:00",
  "ExpirationDate" : "2018-01-11-08:00",
  "EncodedCertChain" : "-----BEGIN CERTIFICATE-----\n... Primary Certificate bytes ...\n-----END CERTIFICATE-----\n \
-----BEGIN CERTIFICATE-----\n... Root Certificate bytes ...\n-----END CERTIFICATE-----\n"
}
</code></pre>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="/containers/{key}/pki/identity" method="GET" outputSerialization="text/plain"/>
      <wsdl:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getContainerPKIResponse" part="getContainerPKIResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContainerPKIInfo">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /containers/{key}/pki/identity/info</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Returns the identity PKI configuration.]]></sdoc:summary><sdoc:response code="200" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Success]]></sdoc:description></sdoc:response></wsdl:documentation>
    <shttp:operation location="/containers/{key}/pki/identity/info" method="GET" outputSerialization="application/json"/>
      <wsdl:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getContainerPKIInfoResponse" part="getContainerPKIInfoResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="modifyContainerCertificateMultipart">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">POST /containers/{key}/pki/identity</sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Modify a container's certificate using multipart-form-data.]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Modify Container Certificate (Multipart-form-data)]]></sdoc:summary><sdoc:response code="200" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Success]]></sdoc:description></sdoc:response><sdoc:response code="404" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Specified container not found (Invalid container key)]]></sdoc:description></sdoc:response></wsdl:documentation>
    <shttp:operation inputSerialization="multipart/form-data" location="/containers/{key}/pki/identity" method="POST"/>
      <wsdl:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="parameter0" part="parameter0" type="entity"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The certificate in .CER or .DER file format.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="" part="" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addClusterNodeForm">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">POST /containers/{cluster}/nodes</sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Add a container to a cluster.]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Add a Container to a Cluster (Form-Based)]]></sdoc:summary><sdoc:response code="200" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Success]]></sdoc:description></sdoc:response><sdoc:response code="404" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Specified container or cluster not found (Invalid key)]]></sdoc:description></sdoc:response></wsdl:documentation>
    <shttp:operation inputSerialization="application/x-www-form-urlencoded" location="/containers/{cluster}/nodes" method="POST" outputSerialization="application/xml,application/json"/>
      <wsdl:input>
    <shttp:input name="cluster" part="cluster" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The cluster key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="ClusterNodeKey" part="ClusterNodeKey" type="form"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="addClusterNodeFormResponse" part="addClusterNodeFormResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addOrReplaceClusterNodesREST">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">POST /containers/{cluster}/nodes</sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Add a container to a cluster.]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Add a Container to a Cluster]]></sdoc:summary><sdoc:response code="200" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Success]]></sdoc:description></sdoc:response><sdoc:response code="404" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Specified container or cluster not found (Invalid key)]]></sdoc:description></sdoc:response></wsdl:documentation>
    <shttp:operation inputSerialization="application/xml,application/json" location="/containers/{cluster}/nodes" method="POST" outputSerialization="application/xml,application/json"/>
      <wsdl:input>
    <shttp:input name="cluster" part="cluster" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The cluster key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">true</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="container" part="container" type="query"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key. Deprecated. Please use the POST body instead.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="parameter0" part="parameter0" type="entity"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[List of containers to add along with the instruction to replace all nodes or just add to. Optional. Can also use the container query parameter for backwards compatibility.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="addOrReplaceClusterNodesRESTResponse" part="addOrReplaceClusterNodesRESTResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteClusterNodeREST">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">DELETE /containers/{cluster}/nodes/{node}</sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Remove a container from a cluster.]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Remove a Container from a Cluster]]></sdoc:summary><sdoc:response code="200" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Success]]></sdoc:description></sdoc:response><sdoc:response code="404" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Specified container or cluster not found (Invalid key)]]></sdoc:description></sdoc:response></wsdl:documentation>
    <shttp:operation location="/containers/{cluster}/nodes/{node}" method="DELETE" outputSerialization="application/xml,application/json"/>
      <wsdl:input>
    <shttp:input name="cluster" part="cluster" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The cluster key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="node" part="node" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="deleteClusterNodeRESTResponse" part="deleteClusterNodeRESTResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getClusterNodesREST">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /containers/{cluster}/nodes</sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get a list of containers in a cluster.]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get Cluster Nodes]]></sdoc:summary><sdoc:response code="200" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Success]]></sdoc:description></sdoc:response><sdoc:response code="404" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Specified container or cluster not found (Invalid key)]]></sdoc:description></sdoc:response></wsdl:documentation>
    <shttp:operation location="/containers/{cluster}/nodes" method="GET" outputSerialization="application/xml,application/json"/>
      <wsdl:input>
    <shttp:input name="cluster" part="cluster" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The cluster key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getClusterNodesRESTResponse" part="getClusterNodesRESTResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContainerListeners">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /containers/{key}/listeners</sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get all listeners configured for a container.]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get Container Listeners]]></sdoc:summary><sdoc:response code="200" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Success]]></sdoc:description></sdoc:response><sdoc:response code="404" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Specified container not found (Invalid container key)]]></sdoc:description></sdoc:response></wsdl:documentation>
    <shttp:operation location="/containers/{key}/listeners" method="GET" outputSerialization="application/xml,application/json"/>
      <wsdl:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getContainerListenersResponse" part="getContainerListenersResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addContainerListener">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">POST /containers/{key}/listeners</sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Add a listener to a container.]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Add Container Listener]]></sdoc:summary><sdoc:response code="200" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Success]]></sdoc:description></sdoc:response><sdoc:response code="404" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Specified container not found (Invalid container key)]]></sdoc:description></sdoc:response></wsdl:documentation>
    <shttp:operation inputSerialization="application/xml,application/json" location="/containers/{key}/listeners" method="POST" outputSerialization="application/xml,application/json"/>
      <wsdl:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="parameter0" part="parameter0" type="entity"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The new listener configuration.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="addContainerListenerResponse" part="addContainerListenerResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContainerListener">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /containers/{key}/listeners/{listener}</sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Fetch details for a specific container listener.]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get Listener]]></sdoc:summary><sdoc:response code="200" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Success]]></sdoc:description></sdoc:response><sdoc:response code="404" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Specified container not found (Invalid container key) or invalid listener name]]></sdoc:description></sdoc:response></wsdl:documentation>
    <shttp:operation location="/containers/{key}/listeners/{listener}" method="GET" outputSerialization="application/xml,application/json"/>
      <wsdl:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="listener" part="listener" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The listener name.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getContainerListenerResponse" part="getContainerListenerResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="modifyContainerListener">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">PUT /containers/{key}/listeners/{listener}</sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Modify the configuration of a container listener.]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Modify a Listener]]></sdoc:summary><sdoc:response code="200" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Success]]></sdoc:description></sdoc:response><sdoc:response code="404" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Specified container not found (Invalid container key) or invalid listener name]]></sdoc:description></sdoc:response></wsdl:documentation>
    <shttp:operation inputSerialization="application/xml,application/json" location="/containers/{key}/listeners/{listener}" method="PUT" outputSerialization="application/xml,application/json"/>
      <wsdl:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="listener" part="listener" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The listener name.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="parameter0" part="parameter0" type="entity"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The updated listener configuration.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="modifyContainerListenerResponse" part="modifyContainerListenerResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeContainerListener">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">DELETE /containers/{key}/listeners/{listener}</sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Remove a container listener.]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Remove a Listener]]></sdoc:summary><sdoc:response code="200" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Success]]></sdoc:description></sdoc:response><sdoc:response code="404" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Specified container not found (Invalid container key) or invalid listener name]]></sdoc:description></sdoc:response></wsdl:documentation>
    <shttp:operation location="/containers/{key}/listeners/{listener}" method="DELETE"/>
      <wsdl:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="listener" part="listener" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The listener name.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getContainerServices">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /containers/{key}/services</sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Fethc all services hosted in a specified container.]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get Container Services]]></sdoc:summary><sdoc:response code="200" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Success]]></sdoc:description></sdoc:response><sdoc:response code="404" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Specified container not found (Invalid container key)]]></sdoc:description></sdoc:response></wsdl:documentation>
    <shttp:operation location="/containers/{key}/services" method="GET" outputSerialization="application/xml,application/json"/>
      <wsdl:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getContainerServicesResponse" part="getContainerServicesResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContainerListenerPKI">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /containers/{key}/listeners/{listener}/pki</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Returns the listener certificate (if any).]]></sdoc:summary><sdoc:response code="200" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Success]]></sdoc:description></sdoc:response><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Returns the PKI configuration (including the encoded certificate chain) for a listener. May
return no content if no certificate is assigned or applicable based on type of listener. See
example response for certificate chain encoding.</p>
<h4>Request:</h4>
<pre><code>GET /rest/containers/uddi:978841b1-7088-11e4-8574-cb4613969888/listeners/https1/pki HTTP/1.1
Accept: application/json
</code></pre>
<h4>Response:</h4>
<pre><code>HTTP/1.1 200 OK

{
  "SubjectDN" : "CN=listener1, OU=Akana, O=Akana, ST=CA, C=US",
  "IssuerDN" : "CN=ca, OU=Akana, O=Akana, ST=CA, C=US",
  "SerialNo" : "4942932839929778611",
  "EffectiveDate" : "2017-01-11-08:00",
  "ExpirationDate" : "2018-01-11-08:00",
  "EncodedCertChain" : "-----BEGIN CERTIFICATE-----\n... Primary Certificate bytes ...\n-----END CERTIFICATE-----\n \
-----BEGIN CERTIFICATE-----\n... Root Certificate bytes ...\n-----END CERTIFICATE-----\n"
}
</code></pre>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="/containers/{key}/listeners/{listener}/pki" method="GET" outputSerialization="application/json"/>
      <wsdl:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="listener" part="listener" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The listener name.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getContainerListenerPKIResponse" part="getContainerListenerPKIResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContainerListenerPKIInfo">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /containers/{key}/listeners/{listener}/pki/info</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Returns the listener PKI configuration (if any).]]></sdoc:summary><sdoc:response code="200" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Success]]></sdoc:description></sdoc:response></wsdl:documentation>
    <shttp:operation location="/containers/{key}/listeners/{listener}/pki/info" method="GET" outputSerialization="application/json"/>
      <wsdl:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="listener" part="listener" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The listener name.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getContainerListenerPKIInfoResponse" part="getContainerListenerPKIInfoResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="uploadContainerListenerPKI">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">POST /containers/{key}/listeners/{listener}/pki</sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Uploads a keystore that holds PKI key/cert data for a listener. The following is an example request and response.</p><p>Request:<br>POST /rest/uddi:978841b1-7088-11e4-8574-cb4613969888/listeners/https1?alias=https1&keystorePass=changeit&aliasPass=changeit HTTP/1.1<br>Content-Type: multipart/form-data; boundary=Jlo6Rm_FfX2_s3WQ5QhfUoY6qqLxTbdyHMSkf0W<br>--Jlo6Rm_FfX2_s3WQ5QhfUoY6qqLxTbdyHMSkf0W<br>Content-Disposition: form-data; name="fileUpload"; filename="test.jks"<br>Content-Type: application/octet-stream<br>Content-Transfer-Encoding: binary<br>&lt;File content omitted&gt;</p><p>Response:<br>HTTP/1.1 201 Created if creation successful<br>{<br>"Endpoint" : &lt;Endpoint structure for listener&gt;<br>}]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Uploads PKI keys and certificate for a listener.]]></sdoc:summary></wsdl:documentation>
    <shttp:operation inputSerialization="multipart/form-data" location="/containers/{key}/listeners/{listener}/pki" method="POST"/>
      <wsdl:input>
    <shttp:input name="parameter0" part="parameter0" type="entity"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The uploaded file.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">true</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">true</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="listener" part="listener" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The listener name.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="keystorePass" part="keystorePass" type="query"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Keystore password.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="alias" part="alias" type="query"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Alias in the keystore to use.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">true</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="aliasPass" part="aliasPass" type="query"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Alias password. Can be omitted if not needed or the same as the keystore password.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="forceTrust" part="forceTrust" type="query"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Add to trust store if not trusted already. If false and not trusted an error will be returned. Can be omitted. Default is false.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="uploadContainerListenerPKIResponse" part="uploadContainerListenerPKIResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="modifyContainerForm">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">PUT /containers/{key}</sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Modify an existing container using a set of form parameters.]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Modify Container (Form-based)]]></sdoc:summary><sdoc:response code="200" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Success]]></sdoc:description></sdoc:response><sdoc:response code="404" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Specified container not found (Invalid container key)]]></sdoc:description></sdoc:response></wsdl:documentation>
    <shttp:operation inputSerialization="application/x-www-form-urlencoded" location="/containers/{key}" method="PUT" outputSerialization="application/xml,application/json"/>
      <wsdl:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="ContainerName" part="ContainerName" type="form"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container's new name.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="OrganizationKey" part="OrganizationKey" type="form"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container's new organization.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="ContainerDescription" part="ContainerDescription" type="form"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container's new description.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="ContainerLocation" part="ContainerLocation" type="form"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container's new location.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="AddressOverrideBehavior" part="AddressOverrideBehavior" type="form"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The new container's AddressOverrideBehavior.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="RandomPrefixBehavior" part="RandomPrefixBehavior" type="form"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The new container's RandomPrefixBehavior.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="modifyContainerFormResponse" part="modifyContainerFormResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="modifyContainerMultipart">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">POST /containers/{key}</sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Modifies a container to the system using a set of form parameters and metadata file upload as multipart/form-data.]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Modify Container (Multipart-form-data)]]></sdoc:summary><sdoc:response code="200" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Success]]></sdoc:description></sdoc:response></wsdl:documentation>
    <shttp:operation inputSerialization="multipart/form-data" location="/containers/{key}" method="POST" outputSerialization="application/xml,application/json"/>
      <wsdl:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="parameter0" part="parameter0" type="entity"/>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="modifyContainerMultipartResponse" part="modifyContainerMultipartResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContainerREST">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /containers/{key}</sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Retreive detailed information on a specific container.]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Fetch a Container]]></sdoc:summary><sdoc:response code="200" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Success]]></sdoc:description></sdoc:response><sdoc:response code="404" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Specified container not found (Invalid container key)]]></sdoc:description></sdoc:response></wsdl:documentation>
    <shttp:operation location="/containers/{key}" method="GET" outputSerialization="application/xml,application/json"/>
      <wsdl:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getContainerRESTResponse" part="getContainerRESTResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="modifyContainerREST">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">PUT /containers/{key}</sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Modify a container.]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Modify a Container]]></sdoc:summary><sdoc:response code="200" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Success]]></sdoc:description></sdoc:response><sdoc:response code="404" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Specified container not found (Invalid container key)]]></sdoc:description></sdoc:response></wsdl:documentation>
    <shttp:operation inputSerialization="application/xml,application/json" location="/containers/{key}" method="PUT" outputSerialization="application/xml,application/json"/>
      <wsdl:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="parameter0" part="parameter0" type="entity"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The updated container information.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="modifyContainerRESTResponse" part="modifyContainerRESTResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addContainerREST">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">POST /containers</sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Add a container.]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Add a Container]]></sdoc:summary><sdoc:response code="201" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Created]]></sdoc:description></sdoc:response><sdoc:response code="400" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Invalid container data provided.]]></sdoc:description></sdoc:response></wsdl:documentation>
    <shttp:operation inputSerialization="application/xml,application/json" location="/containers" method="POST" outputSerialization="application/xml,application/json"/>
      <wsdl:input>
    <shttp:input name="parameter0" part="parameter0" type="entity"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The new container information.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="addContainerRESTResponse" part="addContainerRESTResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteContainerREST">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">DELETE /containers/{key}</sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Remove a container from the system.]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Delete a Container]]></sdoc:summary><sdoc:response code="200" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Success]]></sdoc:description></sdoc:response><sdoc:response code="404" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Specified container not found (Invalid container key)]]></sdoc:description></sdoc:response></wsdl:documentation>
    <shttp:operation location="/containers/{key}" method="DELETE"/>
      <wsdl:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="modifyContainerMetadataFORM">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">POST /containers/{key}/metadata</sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Modify a container's metadata using a set of form parameters.]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Modify Container Metadata (Form-Based)]]></sdoc:summary><sdoc:response code="200" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Success]]></sdoc:description></sdoc:response><sdoc:response code="404" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[Specified container not found (Invalid container key)]]></sdoc:description></sdoc:response></wsdl:documentation>
    <shttp:operation inputSerialization="application/x-www-form-urlencoded" location="/containers/{key}/metadata" method="POST" outputSerialization="application/xml,application/json"/>
      <wsdl:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="MetadataLocation" part="MetadataLocation" type="form"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container metadata location.  Either this or the metadata string must be provided.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="MetadataUsername" part="MetadataUsername" type="form"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Username to use to access the container's metadata document if authentication required. Used with the metadataLocation parameter.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="MetadataPassword" part="MetadataPassword" type="form"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Password to use to access the container's metadata document if authentication required. Used with the metadataLocation parameter.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="Metadata" part="Metadata" type="form"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The container metadata as an encoded XML string.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="modifyContainerMetadataFORMResponse" part="modifyContainerMetadataFORMResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ContainerManagerService">
<wsdl:documentation><sdoc:title xmlns:sdoc="http://soa.com/wsdl/doc">Container Management API</sdoc:title><sdoc:version xmlns:sdoc="http://soa.com/wsdl/doc">8.0.0</sdoc:version><sdoc:vendor xmlns:sdoc="http://soa.com/wsdl/doc">SOA Software</sdoc:vendor><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>This API is used to manage PM service containers.  Containers can be registered based on metadata documents.
Containers may also be modifed or removed from the system.  The API also provides read/write access to
container metadata and container listener configuration.  Information on services hosted by a specific
container can be retrieved.  To add or modify services other APIs can be used.</p>]]></sdoc:description></wsdl:documentation>
    <wsdl:port name="ContainerManagerService_rest_port_https" binding="tns:ContainerMgmtRESTBinding">
    <shttp:address location="https://0.0.0.0/rest"/>
    </wsdl:port>
    <wsdl:port name="ContainerManagerService_rest_port_http" binding="tns:ContainerMgmtRESTBinding">
    <shttp:address location="http://0.0.0.0/rest"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
