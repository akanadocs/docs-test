{"swagger":"2.0","info":{"title":"Trusted CA Management Service","description":"<p>This API is used to query and manipulate trusted certificates.<br  /></p>","version":"2019.1.0"},"host":"0.0.0.0","basePath":"/rest/trustedca","schemes":["https","http"],"tags":[{"name":"TrustedCAServiceREST"}],"paths":{"/certificates#uploadTrustedCertificate":{"post":{"tags":["TrustedCAServiceREST"],"summary":"Upload a trusted certificate","description":"<p>Add a trusted certificate to the system.   An alias for the certificate may be provided.  If none\nis specified, a random UUID value is used.  System Administrator access privileges are required.</p>\n<h4>Request:</h4>\n<pre><code>POST /rest/trustedca/certificates HTTP/1.1\nContent-Type: multipart/form-data;type=\"application/octet-stream\";boundary=\"boundary\"\nAccept: application/json\n\n--boundary\n... [binary data]\n--boundary--\n</code></pre>\n<h4>Response:</h4>\n<pre><code>HTTP/1.1 200 OK\n\n{\n  \"alias\": \"1533534158\",\n  \"base64\": \"MIIDJjCCAg6gAwIBAgIICxRP...6FbG+zBnSQOGRsDpGSw\",\n  \"issuer\": \"cn=test1,ou=akana,o=perforce,l=la,st=ca,c=us\",\n  \"subject\": \"cn=test1,ou=akana,o=perforce,l=la,st=ca,c=us\",\n  \"notBefore\": 1576084016000,\n  \"notAfter\": 1733936816000,\n  \"version\": 0,\n  \"serialNumber\": 798350879637234159,\n  \"links\": [\n    {\n      \"rel\": \"self\",\n      \"type\": \"application/json\",\n      \"href\": \"http://localhost:9900/rest/trustedca/certificates/1533534158\"\n    },\n    {\n      \"rel\": \"binary\",\n      \"type\": \"application/octet-stream\",\n      \"href\": \"http://localhost:9900/rest/trustedca/certificates/1533534158\"\n    },\n    {\n      \"rel\": \"delete\",\n      \"href\": \"http://localhost:9900/rest/trustedca/certificates/1533534158\"\n    }\n  ]\n}\n</code></pre>","operationId":"POST /certificates","consumes":["multipart/form-data"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"parameter0","description":"A multipart message containing the certificate as a binary stream.","required":false},{"in":"query","name":"alias","description":"An optional query parameter for the alias to be used.","type":"string","required":false}],"responses":{"200":{"schema":{"$ref":"#/definitions/CertificateChainType"}},"300":{"description":"The request did not include a valid multipart stream","schema":{"$ref":"#/definitions/CertificateChainType"}},"409":{"description":"The supplied alias is already in use","schema":{"$ref":"#/definitions/CertificateChainType"}}},"deprecated":false}},"/certificates/{alias}#deleteTrustedCertificateForm":{"delete":{"tags":["TrustedCAServiceREST"],"summary":"Deprecated.  Delete a certificate usign a form","description":"<p><strong>Deprecated</strong>.  Please use the non-form operations to add a certificate.</p>","operationId":"DELETE /certificates/{alias}","consumes":["application/x-www-form-urlencoded"],"parameters":[{"in":"formData","name":"alias","type":"string"}],"responses":{"default":{}},"deprecated":false}},"/certificates/{alias}":{"get":{"tags":["TrustedCAServiceREST"],"summary":"Get trusted certificate binary","description":"<p>Get a trusted certificate as raw bytes given a specified alias.</p>\n<h4>Request:</h4>\n<pre><code>GET /rest/trustedca/certificates/1533534158 HTTP/1.1\nAccept: application/octet-stream\n</code></pre>\n<h4>Response:</h4>\n<pre><code>HTTP/1.1 200 OK\n\n[binary data]\n</code></pre>","operationId":"GET /certificates/{alias}","produces":["application/json","application/octet-stream"],"parameters":[{"in":"path","name":"alias","description":"The alias identifying the required certificate.","type":"string","required":false}],"responses":{"default":{}},"deprecated":false},"delete":{"tags":["TrustedCAServiceREST"],"summary":"Remove a trusted certificate","description":"<p>Remove a trusted certificate from the system. The certificate to be deleted is identified by its alias. System\nAdministrator access privileges are required.</p>","operationId":"DELETE /certificates/{alias}","parameters":[{"in":"path","name":"alias","description":"The alias identifying the certificate to delete.","type":"string","required":false}],"responses":{"default":{}},"deprecated":false}},"/certificates":{"get":{"tags":["TrustedCAServiceREST"],"summary":"Get trusted certificates","description":"<p>Get a list of all trusted certificates in the system.  Each entry will not include the certificate\ndata, but will include a &ldquo;self&rdquo; link that may be used to retrieve detailed information, including the\ncertificate as a base64 encoded string.  If the client has authority to add a new trusted certificate,\nthe response will include an &ldquo;add&rdquo; link with the URL of the endpoint to POST any new trusted certificates.</p>\n<h4>Request:</h4>\n<pre><code>GET /rest/trustedca/certificates HTTP/1.1\nAccept: application/json\n</code></pre>\n<h4>Response:</h4>\n<pre><code>HTTP/1.1 200 OK\n\n{\n  \"certificates\": [\n    {\n      \"alias\": \"smca\",\n      \"issuer\": \"cn=policymanager,ou=akana,o=perforce,l=la,st=ca,c=us\",\n      \"subject\": \"cn=policymanager,ou=akana,o=perforce,l=la,st=ca,c=us\",\n      \"notBefore\": 1576106819000,\n      \"notAfter\": 1672315200000,\n      \"version\": 0,\n      \"serialNumber\": 294,\n      \"links\": [\n        {\n          \"rel\": \"self\",\n          \"type\": \"application/json\",\n          \"href\": \"http://localhost:9900/rest/trustedca/certificates/smca\"\n        },\n        {\n          \"rel\": \"binary\",\n          \"type\": \"application/octet-stream\",\n          \"href\": \"http://localhost:9900/rest/trustedca/certificates/smca\"\n        },\n        {\n          \"rel\": \"delete\",\n          \"href\": \"http://localhost:9900/rest/trustedca/certificates/smca\"\n        }\n      ]\n    },\n    {\n      \"alias\": \"1533534158\",\n      \"issuer\": \"cn=nd1,ou=akana,o=perforce,l=la,st=ca,c=us\",\n      \"subject\": \"cn=nd1,ou=akana,o=perforce,l=la,st=ca,c=us\",\n      \"notBefore\": 1576084016000,\n      \"notAfter\": 1733936816000,\n      \"version\": 0,\n      \"serialNumber\": 798350879637234159,\n      \"links\": [\n        {\n          \"rel\": \"self\",\n          \"type\": \"application/json\",\n          \"href\": \"http://localhost:9900/rest/trustedca/certificates/1533534158\"\n        },\n        {\n          \"rel\": \"binary\",\n          \"type\": \"application/octet-stream\",\n          \"href\": \"http://localhost:9900/rest/trustedca/certificates/1533534158\"\n        },\n        {\n          \"rel\": \"delete\",\n          \"href\": \"http://localhost:9900/rest/trustedca/certificates/1533534158\"\n        }\n      ]\n    },\n    {\n      \"alias\": \"2181-9f4d-41d4-b8fb-fb3de97b595a\",\n      \"issuer\": \"cn=pm1,ou=akana,o=perforce,l=la,st=ca,c=us\",\n      \"subject\": \"cn=pm1,ou=akana,o=perforce,l=la,st=ca,c=us\",\n      \"notBefore\": 1576083555000,\n      \"notAfter\": 1733936355000,\n      \"version\": 0,\n      \"serialNumber\": 3385896318653270171,\n      \"links\": [\n        {\n          \"rel\": \"self\",\n          \"type\": \"application/json\",\n          \"href\": \"http://localhost:9900/rest/trustedca/certificates/-1357046979\"\n        },\n        {\n          \"rel\": \"binary\",\n          \"type\": \"application/octet-stream\",\n          \"href\": \"http://localhost:9900/rest/trustedca/certificates/-1357046979\"\n        },\n        {\n          \"rel\": \"delete\",\n          \"href\": \"http://localhost:9900/rest/trustedca/certificates/-1357046979\"\n        }\n      ]\n    }\n  ],\n  \"links\": [\n    {\n      \"rel\": \"self\",\n      \"href\": \"http://localhost:9900/rest/trustedca/certificates\"\n    },\n    {\n      \"rel\": \"add\",\n      \"href\": \"http://localhost:9900/rest/trustedca/certificates\"\n    }\n  ]\n}\n</code></pre>","operationId":"GET /certificates","produces":["application/json","application/xml"],"responses":{"default":{"schema":{"$ref":"#/definitions/TrustedCertificatesType"}}},"deprecated":false},"post":{"tags":["TrustedCAServiceREST"],"summary":"Deprecated.  Add a certificate using a form","description":"<p><strong>Deprecated</strong>.  Please use the JSON or multipart operations to add a certificate.</p>","operationId":"POST /certificates","consumes":["application/x-www-form-urlencoded"],"produces":["text/plain"],"parameters":[{"in":"formData","name":"location","type":"string"},{"in":"formData","name":"Cert","description":"Base64 encoded certificate bytes.","type":"string","required":false}],"responses":{"default":{"schema":{"type":"string"}}},"deprecated":false}},"/certificates/keystore":{"post":{"tags":["TrustedCAServiceREST"],"summary":"Deprecated.  Add a certificate using a form","description":"<p><strong>Deprecated</strong>.  Please use the JSON or multipart operations to add a certificate.</p>","operationId":"POST /certificates/keystore","consumes":["application/x-www-form-urlencoded"],"parameters":[{"in":"formData","name":"Location","type":"string"},{"in":"formData","name":"Store","type":"string"},{"in":"formData","name":"Type","type":"string"},{"in":"formData","name":"Password","type":"string"},{"in":"formData","name":"Alias","type":"string"},{"in":"formData","name":"AliasPassword","type":"string"}],"responses":{"default":{}},"deprecated":false}},"/certificates/{alias}#getTrustedCertificate":{"get":{"tags":["TrustedCAServiceREST"],"summary":"Get trusted certificate","description":"<p>Get information for a trusted certificate given a specified alias.</p>\n<h4>Request:</h4>\n<pre><code>GET /rest/trustedca/certificates/1533534158 HTTP/1.1\nAccept: application/json\n</code></pre>\n<h4>Response:</h4>\n<pre><code>HTTP/1.1 200 OK\n\n{\n  \"certificates\": [\n    {\n      \"alias\":\"1533534158\",\n      \"base64\": \"MIIDJjCCAg6gAwIBAgIILv0ewz...OQN98Fgexl3gM0949iavID\",\n      \"issuer\": \"cn=pm1,ou=akana,o=perforce,l=la,st=ca,c=us\",\n      \"subject\": \"cn=pm1,ou=akana,o=perforce,l=la,st=ca,c=us\",\n      \"notBefore\": 1576083555000,\n      \"notAfter\": 1733936355000,\n      \"version\": 0,\n      \"serialNumber\": 3385896318653270171\n    }\n  ],\n  \"links\": [\n    {\n      \"rel\": \"self\",\n      \"href\": \"http://localhost:9900/rest/trstedca/certificates/1533534158\"\n    }\n  ]\n}\n</code></pre>","operationId":"GET /certificates/{alias}","produces":["application/json","application/xml"],"parameters":[{"in":"path","name":"alias","description":"The alias identifying the required certificate.","type":"string","required":false}],"responses":{"default":{"schema":{"$ref":"#/definitions/CertificateChainType"}}},"deprecated":false}},"/certificates#addTrustedCertificate":{"post":{"tags":["TrustedCAServiceREST"],"summary":"Add a trusted certificate","description":"<p>Add a trusted certificate to the system.   An alias for the certificate may be provided.  If none\nis specified, a random UUID value is used.  System Administrator access privileges are required.</p>\n<h4>Request:</h4>\n<pre><code>POST /rest/trustedca/certificates HTTP/1.1\nContent-Type: application/json\nAccept: application/json\n\n{\n  \"alias\": \"alias1\",\n  \"base64\": \"MIIDJjCCAg6gAwIBAgIICxRP...6FbG+zBnSQOGRsDpGSw\"\n}\n</code></pre>\n<h4>Response:</h4>\n<pre><code>HTTP/1.1 200 OK\n\n{\n  \"certificates\": [\n    {\n      \"alias\": \"alias1\",\n      \"base64\": \"MIIDJjCCAg6gAwIBAgIICxRP...6FbG+zBnSQOGRsDpGSw\",\n      \"issuer\": \"cn=test1,ou=akana,o=perforce,l=la,st=ca,c=us\",\n      \"subject\": \"cn=test1,ou=akana,o=perforce,l=la,st=ca,c=us\",\n      \"notBefore\": 1576084016000,\n      \"notAfter\": 1733936816000,\n      \"version\": 0,\n      \"serialNumber\": 798350879637234159\n    }\n  ],\n  \"links\": [\n    {\n      \"rel\": \"self\",\n      \"type\": \"application/json\",\n      \"href\": \"http://localhost:9900/rest/trustedca/certificates/alias1\"\n    },\n    {\n      \"rel\": \"binary\",\n      \"type\": \"application/octet-stream\",\n      \"href\": \"http://localhost:9900/rest/trustedca/certificates/alias1\"\n    },\n    {\n      \"rel\": \"delete\",\n      \"href\": \"http://localhost:9900/rest/trustedca/certificates/alias1\"\n    }\n  ]\n}\n</code></pre>","operationId":"POST /certificates","consumes":["application/json"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"parameter0","schema":{"$ref":"#/definitions/CertificateType"}}],"responses":{"default":{"schema":{"$ref":"#/definitions/CertificateChainType"}}},"deprecated":false}}},"definitions":{"CertificateType":{"$schema":"http://json-schema.org/draft-06/schema#","type":"object","properties":{"alias":{"type":"string"},"base64":{"type":"string"},"issuer":{"type":"string"},"subject":{"type":"string"},"notBefore":{"type":"string","format":"date-time"},"notAfter":{"type":"string","format":"date-time"},"version":{"type":"string"},"serialNumber":{"type":"string","format":"int64"},"subjectAltNames":{"type":"array","minItems":0,"items":{"$ref":"#/definitions/entry"}},"Links":{"type":"array","minItems":1,"items":{"$ref":"#/definitions/atomLink"}}},"required":["version","Links"]},"entry":{"$schema":"http://json-schema.org/draft-06/schema#","type":"object","properties":{"key":{"type":"string"},"value":{"$ref":"#/definitions/stringArray"}}},"CertificateChainType":{"$schema":"http://json-schema.org/draft-06/schema#","type":"object","properties":{"Certificate":{"type":"array","minItems":1,"items":{"$ref":"#/definitions/CertificateType"}},"Links":{"type":"array","minItems":1,"items":{"$ref":"#/definitions/atomLink"}}},"required":["Certificate","Links"]},"TrustedCertificatesType":{"$schema":"http://json-schema.org/draft-06/schema#","type":"object","properties":{"Certificate":{"type":"array","minItems":1,"items":{"$ref":"#/definitions/CertificateType"}},"Links":{"type":"array","minItems":1,"items":{"$ref":"#/definitions/atomLink"}}},"required":["Certificate","Links"]},"atomLink":{"$schema":"http://json-schema.org/draft-06/schema#","type":"object","properties":{"length":{"type":"string"},"title":{"type":"string"},"hreflang":{"type":"string"},"rel":{"type":"string"},"type":{"type":"string"},"href":{"type":"string","format":"uri"},"base":{"type":"string","format":"uri"},"lang":{"type":"string"}},"required":["href"]},"stringArray":{"$schema":"http://json-schema.org/draft-06/schema#","type":"object","properties":{"item":{"type":"array","minItems":0,"items":{"type":"string"}}}}}}