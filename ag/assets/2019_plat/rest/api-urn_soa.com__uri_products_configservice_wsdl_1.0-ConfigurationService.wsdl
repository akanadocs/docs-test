<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions targetNamespace="urn:soa.com:/uri/products/configservice/wsdl/1.0" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="urn:soa.com:/uri/products/configservice/wsdl/1.0" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:nms2="http://soa.com/products/admin/console/common/1.0" xmlns:nms1="http://soa.com/products/admin/console/config/1.0" xmlns:shttp="http://soa.com/wsdl/http">
  <wsdl:types>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://soa.com/products/admin/console/common/1.0" version="1.0" xmlns:tns="http://soa.com/products/admin/console/common/1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:element name="NameValuePair" type="tns:nameValuePair"/>
<xs:element name="link" type="tns:link"/>
<xs:complexType name="link"><xs:sequence><xs:element minOccurs="0" name="href" type="xs:string"/><xs:element minOccurs="0" name="rel" type="xs:string"/><xs:element minOccurs="0" name="title" type="xs:string"/><xs:element minOccurs="0" name="type" type="xs:string"/></xs:sequence></xs:complexType>
<xs:complexType name="nameValuePair"><xs:sequence><xs:element minOccurs="0" name="name" type="xs:string"/><xs:element minOccurs="0" name="value" type="xs:string"/></xs:sequence></xs:complexType>
</xs:schema>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://soa.com/products/admin/console/config/1.0" version="1.0" xmlns:ns1="http://soa.com/products/admin/console/common/1.0" xmlns:tns="http://soa.com/products/admin/console/config/1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:import namespace="http://soa.com/products/admin/console/common/1.0"/>
<xs:element name="configuration" type="tns:configurationInfo"/>
<xs:element name="configurations" type="tns:configurations"/>
<xs:element name="factories" type="tns:factories"/>
<xs:element name="propertyMetadata" type="tns:propertyMetadata"/>
<xs:complexType name="configurations"><xs:sequence><xs:element minOccurs="0" name="links"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="link" type="ns1:link"/></xs:sequence></xs:complexType></xs:element><xs:element minOccurs="0" name="pids"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="pid" type="tns:configurationInfo"/></xs:sequence></xs:complexType></xs:element></xs:sequence></xs:complexType>
<xs:complexType name="configurationInfo"><xs:sequence><xs:element minOccurs="0" name="pid" type="xs:string"/><xs:element minOccurs="0" name="factoryPid" type="xs:string"/><xs:element minOccurs="0" name="bundleLocation" type="xs:string"/><xs:element minOccurs="0" name="links"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="link" type="ns1:link"/></xs:sequence></xs:complexType></xs:element><xs:element minOccurs="0" name="properties"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="property" type="ns1:nameValuePair"/></xs:sequence></xs:complexType></xs:element><xs:element minOccurs="0" name="metadata"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="definition" type="tns:propertyMetadata"/></xs:sequence></xs:complexType></xs:element></xs:sequence></xs:complexType>
<xs:complexType name="propertyMetadata"><xs:sequence><xs:element minOccurs="0" name="defaultValue" type="xs:string"/><xs:element minOccurs="0" name="description" type="xs:string"/><xs:element minOccurs="0" name="id" type="xs:string"/><xs:element minOccurs="0" name="name" type="xs:string"/><xs:element maxOccurs="unbounded" minOccurs="0" name="options" nillable="true" type="xs:string"/><xs:element name="required" type="xs:boolean"/><xs:element minOccurs="0" name="type" type="xs:string"/></xs:sequence></xs:complexType>
<xs:complexType name="factories"><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="factory" type="xs:string"/></xs:sequence></xs:complexType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="getFactoriesResponseMessage">
    <wsdl:part name="getFactoriesResponse" element="nms1:factories">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createPropertyRequestMessage">
    <wsdl:part name="pid" type="xs:string">
    </wsdl:part>
    <wsdl:part name="name" type="xs:string">
    </wsdl:part>
    <wsdl:part name="encrypt" type="xs:boolean">
    </wsdl:part>
    <wsdl:part name="body" element="nms2:NameValuePair">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updatePropertyResponseMessage">
    <wsdl:part name="updatePropertyResponse" element="nms2:NameValuePair">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createConfigurationRequestMessage">
    <wsdl:part name="pid" type="xs:string">
    </wsdl:part>
    <wsdl:part name="location" type="xs:string">
    </wsdl:part>
    <wsdl:part name="body" type="tns:NameValuePair[]">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createConfigurationResponseMessage">
    <wsdl:part name="createConfigurationResponse" element="nms1:configuration">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConfigurationRequestMessage">
    <wsdl:part name="pid" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createFactoryConfigurationRequestMessage">
    <wsdl:part name="pid" type="xs:string">
    </wsdl:part>
    <wsdl:part name="location" type="xs:string">
    </wsdl:part>
    <wsdl:part name="body" type="tns:NameValuePair[]">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConfigurationsResponseMessage">
    <wsdl:part name="getConfigurationsResponse" element="nms1:configurations">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConfigurationResponseMessage">
    <wsdl:part name="getConfigurationResponse" element="nms1:configuration">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updatePropertyRequestMessage">
    <wsdl:part name="pid" type="xs:string">
    </wsdl:part>
    <wsdl:part name="name" type="xs:string">
    </wsdl:part>
    <wsdl:part name="encrypt" type="xs:boolean">
    </wsdl:part>
    <wsdl:part name="body" element="nms2:NameValuePair">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removePropertyRequestMessage">
    <wsdl:part name="pid" type="xs:string">
    </wsdl:part>
    <wsdl:part name="name" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createFactoryConfigurationResponseMessage">
    <wsdl:part name="createFactoryConfigurationResponse" element="nms1:configuration">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeConfigurationResponseMessage">
    <wsdl:part name="removeConfigurationResponse" element="nms1:configuration">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removePropertyResponseMessage">
    <wsdl:part name="removePropertyResponse" element="nms2:NameValuePair">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getFactoriesRequestMessage">
  </wsdl:message>
  <wsdl:message name="getConfigurationsRequestMessage">
    <wsdl:part name="filter" type="xs:string">
    </wsdl:part>
    <wsdl:part name="brief" type="xs:boolean">
    </wsdl:part>
    <wsdl:part name="meta" type="xs:boolean">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPropertyRequestMessage">
    <wsdl:part name="pid" type="xs:string">
    </wsdl:part>
    <wsdl:part name="name" type="xs:string">
    </wsdl:part>
    <wsdl:part name="decrypt" type="xs:boolean">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createPropertyResponseMessage">
    <wsdl:part name="createPropertyResponse" element="nms2:NameValuePair">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeConfigurationRequestMessage">
    <wsdl:part name="pid" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateConfigurationResponseMessage">
    <wsdl:part name="updateConfigurationResponse" element="nms1:configuration">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateConfigurationRequestMessage">
    <wsdl:part name="pid" type="xs:string">
    </wsdl:part>
    <wsdl:part name="body" element="nms1:configuration">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPropertyResponseMessage">
    <wsdl:part name="getPropertyResponse" element="nms2:NameValuePair">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="ConfigurationServicePortType">
    <wsdl:operation name="createConfiguration">
      <wsdl:input message="tns:createConfigurationRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:createConfigurationResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getConfigurations">
      <wsdl:input message="tns:getConfigurationsRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getConfigurationsResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createProperty">
      <wsdl:input message="tns:createPropertyRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:createPropertyResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getConfiguration">
      <wsdl:input message="tns:getConfigurationRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getConfigurationResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateConfiguration">
      <wsdl:input message="tns:updateConfigurationRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:updateConfigurationResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeConfiguration">
      <wsdl:input message="tns:removeConfigurationRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:removeConfigurationResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateProperty">
      <wsdl:input message="tns:updatePropertyRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:updatePropertyResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeProperty">
      <wsdl:input message="tns:removePropertyRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:removePropertyResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getFactories">
      <wsdl:input message="tns:getFactoriesRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getFactoriesResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createFactoryConfiguration">
      <wsdl:input message="tns:createFactoryConfigurationRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:createFactoryConfigurationResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getProperty">
      <wsdl:input message="tns:getPropertyRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getPropertyResponseMessage">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ConfigurationServiceBinding" type="tns:ConfigurationServicePortType">
    <shttp:binding/>
    <wsdl:operation name="createConfiguration">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">POST /{pid}</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Create configuration]]></sdoc:summary><sdoc:response code="201" message="Created" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[The configuration has been created.]]></sdoc:description></sdoc:response><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Add a configuration to the Config Admin. The client specifies the PID for the new configuration as part of
the request URL path.</p>
<h4>Request:</h4>
<pre><code>POST /admin/config/com.akana.test HTTP/1.1
Content-Type: application/json

[
    {"name":"prop1","value":"value1"},
    {"name":"prop2","value":"value2"}
]
</code></pre>
<h4>Responses:</h4>
<ul>
<li>201 Created.  On success, the response will include a Location header that points to the newly created configuration.</li>
<li>409 Conflict. If the PID already exists</li>
</ul>
<h4>Response:</h4>
<pre><code>HTTP/1.1 201 Created
Content-Type:application/json; charset=UTF-8
Location: http://localhost:9900/admin/config/com.akana.test

{
    "pid": "com.akana.test",
    "links": [
        {
            "href": "http://localhost:9900/admin/config/com.akana.test",
            "rel": "self"
        }
    ],
    "properties": [
        {
            "name": "service.pid",
            "value": "com.akana.test"
        },
        {
            "name": "prop2",
            "value": "value2"
        },
        {
            "name": "prop1",
            "value": "value1"
        }
    ]
}
</code></pre>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="/{pid}" method="POST" outputSerialization="application/json,application/xml"/>
      <wsdl:input>
    <shttp:input name="pid" part="pid" type="path"/>
    <shttp:input name="location" part="location" type="query"/>
    <shttp:input name="body" part="body" type="entity"/>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="createConfigurationResponse" part="createConfigurationResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getConfigurations">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET </sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get configurations]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Get all configurations.  An optional filter may be specified to select specific configurations.</p>
<h4>Request:</h4>
<pre><code>GET /admin/config HTTP/1.1
Accept: application/json
</code></pre>
<h4>Responses:</h4>
<ul>
<li>HTTP/1.1 200 OK.   If successful</li>
</ul>
<h4>Response</h4>
<p>The following is an example of a response for a getConfigurations request.  The content has been truncated for brevity.</p>
<pre><code>HTTP/1.1 200 OK
Content-Type:application/json; charset=UTF-8

{
    "links": [
        {
            "href": "http://localhost:9900/admin/config/factories",
            "rel": "factories"
        }
    ],
    "pids": [
        {
            "pid": "com.akana.test",
            "links": [
                {
                    "href": "http://localhost:9900/admin/config/com.akana.test",
                    "rel": "self"
                }
            ]
        },
        {
            "pid": "com.soa.framework.xpath",
            "bundleLocation": "obr://com.soa.platform.framework/8.3.0",
            "links": [
                {
                    "href": "http://localhost:9900/admin/config/com.soa.framework.xpath",
                    "rel": "self"
                }
            ]
        },
...
        {
            "pid": "com.soa.platform.jetty",
            "bundleLocation": "obr://com.soa.platform.jetty/8.3.0",
            "links": [
                {
                    "href": "http://localhost:9900/admin/config/com.soa.platform.jetty",
                    "rel": "self"
                }
            ]
        },
        {
            "pid": "com.soa.cache.generic",
            "bundleLocation": "obr://com.soa.framework/8.3.0",
            "links": [
                {
                    "href": "http://localhost:9900/admin/config/com.soa.cache.generic",
                    "rel": "self"
                }
            ]
        }
    ]
}
</code></pre>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="" method="GET" outputSerialization="application/json,application/xml"/>
      <wsdl:input>
    <shttp:input name="filter" part="filter" type="query"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Only configurations that match this filter will be returned.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="brief" part="brief" type="query"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Controls if a brief or verbose data set should be returned.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="meta" part="meta" type="query"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Controls if metadata should be returned.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getConfigurationsResponse" part="getConfigurationsResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createProperty">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">POST /{pid}/{name}</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Create property]]></sdoc:summary><sdoc:response code="201" message="Created" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[The specified property has been created.]]></sdoc:description></sdoc:response><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Create a property for an existing PID.</p>
<h4>Request:</h4>
<pre><code>POST /admin/config/com.akana.test/prop3 HTTP/1.1
Content-Type: application/json

{"name":"prop3","value":"value3"}
</code></pre>
<h4>Responses:</h4>
<ul>
<li>HTTP/1.1 201 Created.</li>
<li>HTTP/1.1 404 Not Found. If the specified PID is not found</li>
</ul>
<h4>Response</h4>
<pre><code>HTTP/1.1 201 Created
Content-Type:application/json; charset=UTF-8
Location: http://localhost:9900/admin/config/com.akana.test/prop3

{
    "pid": "com.akana.test",
    "links": [
        {
            "href": "http://localhost:9900/admin/config/com.akana.test/prop3",
            "rel": "self"
        }
    ],
    "properties": [
        {
            "name": "service.pid",
            "value": "com.akana.test"
        },  
        {
            "name": "prop3",
            "value": "value3"
        },
        {
            "name": "prop2",
            "value": "value2"
        },
        {
            "name": "prop1",
            "value": "value1"
        }
    ]
}
</code></pre>]]></sdoc:description></wsdl:documentation>
    <shttp:operation inputSerialization="application/json,application/xml" location="/{pid}/{name}" method="POST" outputSerialization="application/json,application/xml"/>
      <wsdl:input>
    <shttp:input name="pid" part="pid" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The configuration PID.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">true</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="name" part="name" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The new property name.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">true</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="encrypt" part="encrypt" type="query"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Should the value be encrypted?]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="body" part="body" type="entity"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The new property.  The name is not used and may be ommitted.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">true</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="createPropertyResponse" part="createPropertyResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getConfiguration">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /{pid}</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get configuration by PID]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Get a specified PID.</p>
<h4>Request:</h4>
<pre><code>GET /admin/config/com.akana.test HTTP/1.1
Accept: application/json
</code></pre>
<h4>Responses :</h4>
<ul>
<li>HTTP/1.1 200 OK. If successful</li>
</ul>
<h4>Response</h4>
<pre><code>HTTP/1.1 200 OK
Content-Type:application/json; charset=UTF-8

{
    "pid": "com.akana.test",
    "links": [
        {
            "href": "http://localhost:9900/admin/config/com.akana.test",
            "rel": "self"
        }
    ],
    "properties": [
        {
            "name": "service.pid",
            "value": "com.akana.test"
        },  
        {
            "name": "prop3",
            "value": "value3"
        },
        {
            "name": "prop2",
            "value": "value2"
        },
        {
            "name": "prop1",
            "value": "value1"
        }
    ]
}
</code></pre>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="/{pid}" method="GET" outputSerialization="application/json,application/xml"/>
      <wsdl:input>
    <shttp:input name="pid" part="pid" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The configuration PID.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">true</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getConfigurationResponse" part="getConfigurationResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateConfiguration">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">PUT /{pid}</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Update configuration]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Update a PID.</p>
<h4>Request:</h4>
<p>The following is a sample request.  Note that only the properties in the request are
relevant, all other fields are ignored.<br  /></p>
<pre><code>PUT /admin/config/com.akana.test HTTP/1.1
Accept: application/json

{
    "pid": "com.akana.test",
    "properties": [
        {
            "name": "prop3",
            "value": "abc"
        },
        {
            "name": "prop2",
            "value": "def"
        },
        {
            "name": "prop1",
            "value": "xyz"
        }
    ]
}
</code></pre>
<h4>Responses:</h4>
<ul>
<li>HTTP/1.1 200 OK. If successful</li>
<li>HTTP/1.1 404 Not Found.  If the PID is not found</li>
</ul>
<h4>Response:</h4>
<pre><code>HTTP/1.1 200 OK
Content-Type:application/json; charset=UTF-8

{
    "pid": "com.akana.test",
    "links": [
        {
            "href": "http://localhost:9900/admin/config/com.akana.test",
            "rel": "self"
        }
    ],
    "properties": [
        {
            "name": "service.pid",
            "value": "com.akana.test"
        },  
        {
            "name": "prop3",
            "value": "abc"
        },
        {
            "name": "prop2",
            "value": "def"
        },
        {
            "name": "prop1",
            "value": "xyz"
        }
    ]
}
</code></pre>]]></sdoc:description></wsdl:documentation>
    <shttp:operation inputSerialization="application/json,application/xml" location="/{pid}" method="PUT" outputSerialization="application/json,application/xml"/>
      <wsdl:input>
    <shttp:input name="pid" part="pid" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The configuration's PID.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">true</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="body" part="body" type="entity"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The updated configuration data.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">true</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="updateConfigurationResponse" part="updateConfigurationResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeConfiguration">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">DELETE /{pid}</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Delete configuration]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Deletes a specified PID.</p>
<h4>Request:</h4>
<pre><code>DELETE /admin/config/com.akana.test HTTP/1.1
</code></pre>
<h4>Responses:</h4>
<ul>
<li>HTTP/1.1 204 No Content.  If the configuration is successfully deleted</li>
<li>HTTP/1.1 404 Not Found. If the PID is not found</li>
</ul>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="/{pid}" method="DELETE" outputSerialization="application/json,application/xml"/>
      <wsdl:input>
    <shttp:input name="pid" part="pid" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The configuration PID to remove.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">true</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="removeConfigurationResponse" part="removeConfigurationResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateProperty">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">PUT /{pid}/{name}</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Update property]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Update the value or name of a property in a PID.</p>
<h4>Request:</h4>
<pre><code>PUT /admin/config/com.akana.test/prop1 HTTP/1.1
Accept: application/json

{
    "name": "new_name",
    "value": "abc1"
}
</code></pre>
<h4>Responses:</h4>
<ul>
<li>HTTP/1.1 200 OK.  If successful</li>
<li>HTTP/1.1 404 Not Found.  If the PID or property name specified in the path is not found</li>
</ul>]]></sdoc:description></wsdl:documentation>
    <shttp:operation inputSerialization="application/json,application/xml" location="/{pid}/{name}" method="PUT" outputSerialization="application/json,application/xml"/>
      <wsdl:input>
    <shttp:input name="pid" part="pid" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The configuration PID.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">true</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="name" part="name" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The property name.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">true</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="encrypt" part="encrypt" type="query"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Should the value be encrypted?]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="body" part="body" type="entity"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The updated property. The name may be different than specified in the path if the name should be modified, otherwise it is ignored and may be ommitted.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">true</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="updatePropertyResponse" part="updatePropertyResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeProperty">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">DELETE /{pid}/{name}</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Remove property]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Deletes the specified property.</p>
<h4>Request:</h4>
<pre><code>DELETE /admin/config/com.akana.test/prop1 HTTP/1.1
</code></pre>
<h4>Responses:</h4>
<ul>
<li>HTTP/1.1 200 OK. If successful</li>
<li>HTTP/1.1 404 Not Found.  If the PID or property is not found</li>
</ul>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="/{pid}/{name}" method="DELETE" outputSerialization="application/json,application/xml"/>
      <wsdl:input>
    <shttp:input name="pid" part="pid" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The configuration PID.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">true</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="name" part="name" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The name of the property to remove.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">true</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="removePropertyResponse" part="removePropertyResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getFactories">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /factories</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get factories]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Get information on all available configuration factories.</p>
<h4>Request:</h4>
<pre><code>GET /admin/config/factories HTTP/1.1
Accept: application/json
</code></pre>
<h4>Responses:</h4>
<ul>
<li>HTTP/1.1 200 OK. If successful</li>
</ul>
<h4>Response:</h4>
<pre><code>HTTP/1.1 200 OK
Content-Type:application/json; charset=UTF-8

{
  "factory": [
    "com.soa.admin.obr",
    "com.soa.provision"
  ]
}
</code></pre>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="/factories" method="GET" outputSerialization="application/json,application/xml"/>
      <wsdl:output>
    <shttp:output name="getFactoriesResponse" part="getFactoriesResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createFactoryConfiguration">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">POST /factories/{pid}</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Create factory configuration]]></sdoc:summary><sdoc:response code="201" message="Created" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[The requested configuration has been created.]]></sdoc:description></sdoc:response><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Add a factory configuration to the Config Admin. The client specifies the factory PID for the new configuration
as part of the request URL path.</p>
<h4>Request:</h4>
<pre><code>POST /admin/config/factories/com.akana.test.factory HTTP/1.1
Content-Type: application/json

[
    {"name":"prop1","value":"value1"},
    {"name":"prop2","value":"value2"}
]
</code></pre>
<h4>Responses:</h4>
<ul>
<li>HTTP/1.1 201 Created.  On success, the response will include a Location header that points to the newly created configuration.</li>
</ul>
<h4>Response:</h4>
<pre><code>HTTP/1.1 201 Created
Content-Type:application/json; charset=UTF-8
Location: http://localhost:9900/admin/config/com.akana.test.factory.a7df3a9e-9249-4451-8ad5-478e3b075657

{
    "pid": "com.akana.test.factory.a7df3a9e-9249-4451-8ad5-478e3b075657",
    "links": [
        {
            "href": "http://localhost:9900/admin/config/com.akana.test.factory.a7df3a9e-9249-4451-8ad5-478e3b075657",
            "rel": "self"
        }
    ],
    "properties": [
        {
            "name": "service.pid",
            "value": "com.akana.test.factory.a7df3a9e-9249-4451-8ad5-478e3b075657"
        },
        {
            "name": "service.factoryPid",
            "value": "com.akana.test.factory"
        },        
        {
            "name": "prop2",
            "value": "value2"
        },
        {
            "name": "prop1",
            "value": "value1"
        }
    ]
}
</code></pre>]]></sdoc:description></wsdl:documentation>
    <shttp:operation inputSerialization="*/*" location="/factories/{pid}" method="POST" outputSerialization="application/json,application/xml"/>
      <wsdl:input>
    <shttp:input name="pid" part="pid" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The factory PID.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">true</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="location" part="location" type="query"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The optional configuration location.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="body" part="body" type="entity"/>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="createFactoryConfigurationResponse" part="createFactoryConfigurationResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getProperty">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /{pid}/{name}</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get property]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Fetch a specific property.</p>
<h4>Request:</h4>
<pre><code>GET /admin/config/com.akana.test/prop1 HTTP/1.1
Accept: application/json
</code></pre>
<h4>Responses:</h4>
<ul>
<li>HTTP/1.1 200 OK.  If successful.</li>
<li>HTTP/1.1 404 Not Found. If the specified PID or property name is not found</li>
</ul>
<h4>Response:</h4>
<pre><code>HTTP/1.1 200 OK
Content-Type:application/json; charset=UTF-8

{
    "name": "prop1",
    "value": "value1"
}
</code></pre>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="/{pid}/{name}" method="GET" outputSerialization="application/json,application/xml"/>
      <wsdl:input>
    <shttp:input name="pid" part="pid" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The configuration PID.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">true</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="name" part="name" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The property name.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">true</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="decrypt" part="decrypt" type="query"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Should the value be decrypted?]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getPropertyResponse" part="getPropertyResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ConfigurationService">
<wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[A REST API that provides access to the Configuration Admin service.]]></sdoc:description><sdoc:title xmlns:sdoc="http://soa.com/wsdl/doc">Configuration Admin API</sdoc:title><sdoc:version xmlns:sdoc="http://soa.com/wsdl/doc">8.0.0</sdoc:version><sdoc:vendor xmlns:sdoc="http://soa.com/wsdl/doc">Akana Software</sdoc:vendor></wsdl:documentation>
    <wsdl:port name="ConfigurationService_rest_port_http" binding="tns:ConfigurationServiceBinding">
    <shttp:address location="http://0.0.0.0/admin/config"/>
    </wsdl:port>
    <wsdl:port name="ConfigurationService_rest_port_https" binding="tns:ConfigurationServiceBinding">
    <shttp:address location="https://0.0.0.0/admin/config"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
