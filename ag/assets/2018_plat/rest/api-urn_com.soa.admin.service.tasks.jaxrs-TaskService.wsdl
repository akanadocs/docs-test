<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions targetNamespace="urn:com.soa.admin.service.tasks.jaxrs" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="urn:com.soa.admin.service.tasks.jaxrs" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:nms1="urn:com.soa.admin.service.tasks" xmlns:shttp="http://soa.com/wsdl/http">
  <wsdl:types>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://soa.com/products/admin/console/common/1.0" version="1.0" xmlns:tns="http://soa.com/products/admin/console/common/1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:element name="link" type="tns:link"/>
<xs:complexType name="link"><xs:sequence><xs:element minOccurs="0" name="href" type="xs:string"/><xs:element minOccurs="0" name="rel" type="xs:string"/><xs:element minOccurs="0" name="title" type="xs:string"/><xs:element minOccurs="0" name="type" type="xs:string"/></xs:sequence></xs:complexType>
</xs:schema>
    <xs:schema elementFormDefault="qualified" targetNamespace="urn:com.soa.admin.service.tasks" version="1.0" xmlns:ns1="http://soa.com/products/admin/console/common/1.0" xmlns:tns="urn:com.soa.admin.service.tasks" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:import namespace="http://soa.com/products/admin/console/common/1.0"/>
<xs:element name="ExecutionStatus" type="tns:executionStatus"/>
<xs:element name="StepInfo" type="tns:stepInfo"/>
<xs:element name="StepSet" type="tns:stepSet"/>
<xs:element name="TaskInfo" type="tns:taskInfo"/>
<xs:element name="TaskSet" type="tns:taskSet"/>
<xs:element name="propertySet" type="tns:propertySet"/>
<xs:element name="stepStatus" type="tns:stepStatus"/>
<xs:complexType name="taskInfo"><xs:sequence><xs:element minOccurs="0" name="presentationName" type="xs:string"/><xs:element minOccurs="0" name="description" type="xs:string"/><xs:element minOccurs="0" name="failureDetails" type="xs:string"/><xs:element name="required" type="xs:boolean"/><xs:element name="repeatable" type="xs:boolean"/><xs:element name="completed" type="xs:boolean"/><xs:element name="failed" type="xs:boolean"/><xs:element name="recommended" type="xs:boolean"/><xs:element name="automated" type="xs:boolean"/><xs:element name="ready" type="xs:boolean"/><xs:element maxOccurs="unbounded" minOccurs="0" name="requires" nillable="true" type="xs:string"/><xs:element minOccurs="0" name="name" type="xs:string"/><xs:element minOccurs="0" name="links"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="link" type="ns1:link"/></xs:sequence></xs:complexType></xs:element></xs:sequence></xs:complexType>
<xs:complexType name="stepInfo"><xs:sequence><xs:element minOccurs="0" name="name" type="xs:string"/><xs:element minOccurs="0" name="presentationName" type="xs:string"/><xs:element minOccurs="0" name="description" type="xs:string"/><xs:element minOccurs="0" name="metadata" type="tns:propertySet"/><xs:element minOccurs="0" name="links"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="link" type="ns1:link"/></xs:sequence></xs:complexType></xs:element></xs:sequence></xs:complexType>
<xs:complexType name="propertySet"><xs:sequence><xs:element minOccurs="0" name="name" type="xs:string"/><xs:element minOccurs="0" name="presentationName" type="xs:string"/><xs:element minOccurs="0" name="description" type="xs:string"/><xs:element maxOccurs="unbounded" minOccurs="0" name="children" nillable="true" type="tns:propertySet"/><xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true" type="tns:propertyMetadata"/><xs:element minOccurs="0" name="links"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="link" type="ns1:link"/></xs:sequence></xs:complexType></xs:element></xs:sequence></xs:complexType>
<xs:complexType name="propertyMetadata"><xs:sequence><xs:element minOccurs="0" name="allowEmptyValue" type="xs:boolean"/><xs:element minOccurs="0" name="collectionFormat" type="xs:string"/><xs:element minOccurs="0" name="defaultValue" type="xs:string"/><xs:element minOccurs="0" name="description" type="xs:string"/><xs:element minOccurs="0" name="exclusiveMaximum" type="xs:boolean"/><xs:element minOccurs="0" name="exclusiveMinimum" type="xs:boolean"/><xs:element minOccurs="0" name="format" type="xs:string"/><xs:element minOccurs="0" name="maxItems" type="xs:int"/><xs:element minOccurs="0" name="maximum" type="xs:string"/><xs:element minOccurs="0" name="minItems" type="xs:int"/><xs:element minOccurs="0" name="minimum" type="xs:string"/><xs:element minOccurs="0" name="name" type="xs:string"/><xs:element maxOccurs="unbounded" minOccurs="0" name="options" nillable="true" type="tns:option"/><xs:element minOccurs="0" name="pattern" type="xs:string"/><xs:element minOccurs="0" name="presentationName" type="xs:string"/><xs:element minOccurs="0" name="type" type="xs:string"/><xs:element minOccurs="0" name="uniqueItems" type="xs:boolean"/></xs:sequence></xs:complexType>
<xs:complexType name="option"><xs:sequence><xs:element minOccurs="0" name="description" type="xs:string"/><xs:element minOccurs="0" name="presentationName" type="xs:string"/><xs:element minOccurs="0" name="value" type="xs:string"/></xs:sequence></xs:complexType>
<xs:complexType name="stepSet"><xs:sequence><xs:element minOccurs="0" name="links"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="link" type="ns1:link"/></xs:sequence></xs:complexType></xs:element><xs:element maxOccurs="unbounded" minOccurs="0" name="steps" nillable="true" type="tns:stepInfo"/></xs:sequence></xs:complexType>
<xs:complexType name="taskSet"><xs:sequence><xs:element minOccurs="0" name="links"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="link" type="ns1:link"/></xs:sequence></xs:complexType></xs:element><xs:element maxOccurs="unbounded" minOccurs="0" name="tasks" nillable="true" type="tns:taskInfo"/></xs:sequence></xs:complexType>
<xs:complexType name="stepStatus"><xs:sequence><xs:element minOccurs="0" name="state" type="tns:state"/><xs:element minOccurs="0" name="detail" type="xs:string"/></xs:sequence></xs:complexType>
<xs:complexType name="executionStatus"><xs:sequence><xs:element minOccurs="0" name="status" type="tns:stepStatus"/><xs:element minOccurs="0" name="progress" type="xs:int"/><xs:element minOccurs="0" name="start" type="xs:dateTime"/><xs:element minOccurs="0" name="end" type="xs:dateTime"/><xs:element minOccurs="0" name="links"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="link" type="ns1:link"/></xs:sequence></xs:complexType></xs:element></xs:sequence></xs:complexType>
<xs:simpleType name="state"><xs:restriction base="xs:string"><xs:enumeration value="UNKNOWN"/><xs:enumeration value="INCOMPLETE"/><xs:enumeration value="COMPLETE"/><xs:enumeration value="SUCCESS"/><xs:enumeration value="RUNNING"/><xs:enumeration value="BLOCKED"/><xs:enumeration value="UNAVAILABLE"/><xs:enumeration value="INVALID_STATE"/><xs:enumeration value="ERROR"/><xs:enumeration value="CANCELLED"/><xs:enumeration value="RESTARTING"/></xs:restriction></xs:simpleType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="getTaskResponseMessage">
    <wsdl:part name="getTaskResponse" element="nms1:TaskInfo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="executeStepMultipartResponseMessage">
    <wsdl:part name="executeStepMultipartResponse" element="nms1:ExecutionStatus">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="executeStepFormRequestMessage">
    <wsdl:part name="id" type="xs:string">
    </wsdl:part>
    <wsdl:part name="step" type="xs:string">
    </wsdl:part>
    <wsdl:part name="body" type="tns:MultivaluedMap">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="executeStepMultipartRequestMessage">
    <wsdl:part name="id" type="xs:string">
    </wsdl:part>
    <wsdl:part name="step" type="xs:string">
    </wsdl:part>
    <wsdl:part name="body" type="tns:MultipartMessage">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelJobResponseMessage">
  </wsdl:message>
  <wsdl:message name="executeStepFormResponseMessage">
    <wsdl:part name="executeStepFormResponse" element="nms1:ExecutionStatus">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStepsResponseMessage">
    <wsdl:part name="getStepsResponse" element="nms1:StepSet">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStepResponseMessage">
    <wsdl:part name="getStepResponse" element="nms1:StepInfo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getJobStatusResponseMessage">
    <wsdl:part name="getJobStatusResponse" element="nms1:ExecutionStatus">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="executeStepRequestMessage">
    <wsdl:part name="id" type="xs:string">
    </wsdl:part>
    <wsdl:part name="step" type="xs:string">
    </wsdl:part>
    <wsdl:part name="body" type="tns:NameValuePair[]">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getJobStatusRequestMessage">
    <wsdl:part name="id" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStepsRequestMessage">
    <wsdl:part name="id" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTasksRequestMessage">
    <wsdl:part name="ordered" type="xs:boolean">
    </wsdl:part>
    <wsdl:part name="features" type="xs:boolean">
    </wsdl:part>
    <wsdl:part name="filter" type="xs:string">
    </wsdl:part>
    <wsdl:part name="brief" type="xs:boolean">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTasksResponseMessage">
    <wsdl:part name="getTasksResponse" element="nms1:TaskSet">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTaskRequestMessage">
    <wsdl:part name="id" type="xs:string">
    </wsdl:part>
    <wsdl:part name="brief" type="xs:boolean">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStepRequestMessage">
    <wsdl:part name="id" type="xs:string">
    </wsdl:part>
    <wsdl:part name="step" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelJobRequestMessage">
    <wsdl:part name="id" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="executeStepResponseMessage">
    <wsdl:part name="executeStepResponse" element="nms1:ExecutionStatus">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="TaskServicePortType">
    <wsdl:operation name="getTask">
      <wsdl:input message="tns:getTaskRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getTaskResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getTasks">
      <wsdl:input message="tns:getTasksRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getTasksResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="executeStep">
      <wsdl:input message="tns:executeStepRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:executeStepResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="executeStepForm">
      <wsdl:input message="tns:executeStepFormRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:executeStepFormResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getJobStatus">
      <wsdl:input message="tns:getJobStatusRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getJobStatusResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSteps">
      <wsdl:input message="tns:getStepsRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getStepsResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="executeStepMultipart">
      <wsdl:input message="tns:executeStepMultipartRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:executeStepMultipartResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="cancelJob">
      <wsdl:input message="tns:cancelJobRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:cancelJobResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStep">
      <wsdl:input message="tns:getStepRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getStepResponseMessage">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="TaskServiceBinding" type="tns:TaskServicePortType">
    <shttp:binding/>
    <wsdl:operation name="getTask">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /{id}</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get Task Detail]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Get detailed information for a specified task.</p>
<h4>Request:</h4>
<pre><code>GET /admin/tasks/{task} HTTP/1.1" 
Accept: application/json
</code></pre>
<h4>Responses:</h4>
<ul>
<li>200 OK, If successful</li>
<li>404 Not Found, If the specified task ID is not found</li>
</ul>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="/{id}" method="GET" outputSerialization="application/json"/>
      <wsdl:input>
    <shttp:input name="id" part="id" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The ID of the task to fetch.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="brief" part="brief" type="query"/>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getTaskResponse" part="getTaskResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getTasks">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET </sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get all tasks in the system, optionally ordered.]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get Tasks]]></sdoc:summary></wsdl:documentation>
    <shttp:operation location="" method="GET" outputSerialization="application/json"/>
      <wsdl:input>
    <shttp:input name="ordered" part="ordered" type="query"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[If not present or true, the returned set of tasks will be ordered.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="features" part="features" type="query"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Should only tasks aassociated with features be retrieved?]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="filter" part="filter" type="query"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Task filter.  This is a JEXL expression that is applied to each TaskInfo in the result.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="brief" part="brief" type="query"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Only include brief information on each task.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getTasksResponse" part="getTasksResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="executeStep">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">POST /{id}/steps/{step}/execute</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Execute Step]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Execute a step that accepts a JSON array of NameValuePair instances.</p>
<h4>Request:</h4>
<p>The following is a sample request.  Note that there may be multiple values for a single parameter.</p>
<pre><code>POST /admin/tasks/{task}/steps/{step}/execute  HTTP/1.1
Content-Type: application/json

[
    {"name":"param1","value":"value1"},
    {"name":"param1","value":"value2"},
    {"name":"param2","value":"xyz"}
]
</code></pre>
<h4>Response:</h4>
<p>The following is an example of a response for a simple step.</p>
<pre><code>{
}
</code></pre>
<h4>Responses:</h4>
<ul>
<li>200 OK If the step executed</li>
<li>404 Not Found if the specified task or step are not found</li>
</ul>]]></sdoc:description></wsdl:documentation>
    <shttp:operation inputSerialization="application/json" location="/{id}/steps/{step}/execute" method="POST" outputSerialization="application/json"/>
      <wsdl:input>
    <shttp:input name="id" part="id" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The ID of the task.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="step" part="step" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The name of the step to execute.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="body" part="body" type="entity"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The property values to process.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="executeStepResponse" part="executeStepResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="executeStepForm">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">POST /{id}/steps/{step}/execute</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Execute Step with a form]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Execute a step that accepts form data as part of a task.</p>
<h4>Request:</h4>
<pre><code>POST /admin/tasks/{task}/steps/{step}/execute  HTTP/1.1
Content-Type: application/x-www-form-urlencoded

param1=value1&amp;param1=value2&amp;param2=xyz
</code></pre>
<h4>Response:</h4>
<p>The following is an example of a response for a simple step.</p>
<pre><code>{
}
</code></pre>
<h4>Responses:</h4>
<ul>
<li>200 OK If the step executed</li>
<li>404 Not Found if the specified task or step are not found</li>
</ul>]]></sdoc:description></wsdl:documentation>
    <shttp:operation inputSerialization="application/x-www-form-urlencoded" location="/{id}/steps/{step}/execute" method="POST" outputSerialization="application/json"/>
      <wsdl:input>
    <shttp:input name="id" part="id" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The ID of the task.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="step" part="step" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The name of the step to execute.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="body" part="body" type="entity"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The property values to process.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="executeStepFormResponse" part="executeStepFormResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getJobStatus">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /jobs/{id}</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get Task Job Status]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Get the current state of a job associated with a task.</p>
<h4>Request:</h4>
<pre><code>GET /admin/tasks/{job} HTTP/1.1
Accept: application/json
</code></pre>
<h4>Responses :</h4>
<ul>
<li>200 OK If successful</li>
<li>404 Not Found If the specified job ID cannot be found</li>
</ul>
<h4>Response:</h4>
<pre><code>200 OK
Content-Type: application/json
Transfer-Encoding: chunked

{

}
</code></pre>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="/jobs/{id}" method="GET" outputSerialization="application/json"/>
      <wsdl:input>
    <shttp:input name="id" part="id" type="path"/>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getJobStatusResponse" part="getJobStatusResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSteps">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /{id}/steps</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get Steps for a task]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Get all step definitions associated with a task.</p>
<h4>Request:</h4>
<pre><code>GET /admin/tasks/{task}/steps HTTP/1.1
Accept: application/json
</code></pre>
<h4>Responses:</h4>
<ul>
<li>200 OK, If successful</li>
<li>404 Not Found, if the specified task cannot be found</li>
</ul>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="/{id}/steps" method="GET" outputSerialization="application/json"/>
      <wsdl:input>
    <shttp:input name="id" part="id" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The ID of the task.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getStepsResponse" part="getStepsResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="executeStepMultipart">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">POST /{id}/steps/{step}/execute</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Execute Step with an Upload]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Execute a step that accepts multipart form data (usually file upload) as part of a task.</p>
<h4>Request:</h4>
<pre><code>POST /admin/tasks/{task}/steps/{step}/execute  HTTP/1.1
Content-Type: multipart/form-data;boundary=xyz
</code></pre>
<h4>Response:</h4>
<p>The following is an example of a response for a simple step.</p>
<pre><code>{
}
</code></pre>
<h4>Responses:</h4>
<ul>
<li>200 OK If the step executed</li>
<li>404 Not Found if the specified task or step are not found</li>
</ul>]]></sdoc:description></wsdl:documentation>
    <shttp:operation inputSerialization="multipart/form-data" location="/{id}/steps/{step}/execute" method="POST" outputSerialization="application/json"/>
      <wsdl:input>
    <shttp:input name="id" part="id" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The ID of the task.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="step" part="step" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The name of the step to execute.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="body" part="body" type="entity"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The upload to process.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="executeStepMultipartResponse" part="executeStepMultipartResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="cancelJob">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">DELETE /jobs/{id}</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Cancel a Task Job]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Cancel an outstanding configuration execution job.
The task service maintains the state of a task execution sequence in a &ldquo;job&rdquo;.  These
jobs hold any values provided to, or set by the steps taken, during execution of a
task.  By canceling a job, all state for a task and its steps are cleared from the system.</p>
<h4>Request:</h4>
<pre><code>DELETE /admin/tasks/jobs/{id}  HTTP/1.1
</code></pre>
<h4>Responses:</h4>
<ul>
<li>200 OK</li>
<li>404 Not Found if job with given ID is not found</li>
</ul>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="/jobs/{id}" method="DELETE"/>
      <wsdl:input>
    <shttp:input name="id" part="id" type="path"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getStep">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /{id}/steps/{step}</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get Step Detail]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Get detailed information on a task step.</p>
<h4>Request:</h4>
<pre><code>GET /admin/tasks/{task}/steps/{step} HTTP/1.1
Accept: application/json
</code></pre>
<h4>Responses:</h4>
<ul>
<li>200 OK, If successful</li>
<li>404 Not Found, If the specified task or step is not found<h4>Response:</h4>
<pre><code>200 OK
Content-Type: application/json
Transfer-Encoding: chunked
</code></pre>
</li>
</ul>
<p>{</p>
<pre><code>"presentationName": "Manage Container Identity",
"required": true,
"repeatable": true,
"completed": false,
"failed": false,
"recommended": false,
"automated": false,
"name": "com.soa.container.identity",
"links": [
    {
        "rel": "next",
        "href": "http://localhost:9900/admin/tasks/com.soa.container.identity/steps/container.identity.select.action"
    },
    {
        "rel": "self",
        "href": "http://localhost:9900/admin/tasks/com.soa.container.identity"
    },
    {
        "rel": "steps",
        "href": "http://localhost:9900/admin/tasks/com.soa.container.identity/steps"
    }
]
</code></pre>
<p>}</p>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="/{id}/steps/{step}" method="GET" outputSerialization="application/json"/>
      <wsdl:input>
    <shttp:input name="id" part="id" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The ID of the task.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="step" part="step" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The name of the step.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getStepResponse" part="getStepResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="TaskService">
<wsdl:documentation><sdoc:title xmlns:sdoc="http://soa.com/wsdl/doc">Task Service</sdoc:title><sdoc:version xmlns:sdoc="http://soa.com/wsdl/doc">8.0.0</sdoc:version><sdoc:vendor xmlns:sdoc="http://soa.com/wsdl/doc">Akana</sdoc:vendor><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>The TaskService provides access to administration tasks that involve some form of workflow.<br  /></p>]]></sdoc:description></wsdl:documentation>
    <wsdl:port name="TaskService_rest_port_https" binding="tns:TaskServiceBinding">
    <shttp:address location="https://0.0.0.0/admin/tasks"/>
    </wsdl:port>
    <wsdl:port name="TaskService_rest_port_http" binding="tns:TaskServiceBinding">
    <shttp:address location="http://0.0.0.0/admin/tasks"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
