{"swagger":"2.0","info":{"description":"The API used to manage PM services.","version":"8.0.0","title":"Service Management API"},"host":"0.0.0.0","basePath":"/rest","tags":[{"name":"ServiceAdmin"}],"schemes":["https","http"],"paths":{"/services/{key}/endpoints":{"get":{"tags":["ServiceAdmin"],"summary":"Get endpoints for a service","operationId":"GET /services/{key}/endpoints","produces":["application/json","application/xml","text/xml"],"parameters":[{"name":"key","in":"path","required":true}],"responses":{"200":{},"404":{"description":"A service with the given key could not be found"}}},"post":{"tags":["ServiceAdmin"],"summary":"Add an endpoint to a service.","description":"<p>Adds an endpoint to a service.\nIf virtual the endpoint spec must identify a container listener and a path, not a URL. If physical only a URL is needed. Addressing\ninformation is specified in the endpoint spec's properties.</p>\n<h4>Request</h4>\n<pre><code>POST /rest/services/{key}/endpoints  HTTP/1.1\n&lt;Endpoint xmlns=\"http://soa.com/uri/products/restapi/xsd/1.0\"&gt;\n    &lt;Description&gt;my port&lt;/Description&gt;\n    &lt;BindingName&gt;{http://tempuri.org/}EchoServiceSoap&lt;/BindingName&gt;\n    &lt;ListenerName&gt;default-http0&lt;/ListenerName&gt;\n    &lt;BindingType&gt;binding.soap11&lt;/BindingType&gt;\n    &lt;ContainerKey&gt;nd3800&lt;/ContainerKey&gt;\n    &lt;Path&gt;/MyPath11/&lt;/Path&gt;\n    &lt;Name&gt;port77&lt;/Name&gt;\n    &lt;ProtocolVariant&gt;weblogic&lt;/ProtocolVariant&gt;\n    &lt;Properties&gt;\n        &lt;Property&gt;\n            &lt;name&gt;&lt;/name&gt;\n            &lt;value&gt;&lt;/value&gt;\n        &lt;/Property&gt;\n    &lt;/Properties&gt;\n&lt;/Endpoint&gt;\n</code></pre>","operationId":"POST /services/{key}/endpoints","consumes":["application/json","application/xml","text/xml"],"produces":["application/json","application/xml","text/xml"],"parameters":[{"name":"key","in":"path","description":"The service key.","required":true},{"in":"body","name":"parameter0","description":"The endpoint specification.","required":true}],"responses":{"200":{"description":"The endpoint was successfully added"},"404":{"description":"A service with the given key could not be found"}}}},"/services/{key}/pki/export":{"get":{"tags":["ServiceAdmin"],"summary":"Returns Certificate of a service","description":"<p>Returns Certificate of a service</p>","operationId":"GET /services/{key}/pki/export","produces":["application/octet-stream"],"parameters":[{"name":"key","in":"path","description":"The service key.","required":true}],"responses":{"200":{"description":"Success"},"404":{"description":"Specified service not found (Invalid key)"}}}},"/services":{"post":{"tags":["ServiceAdmin"],"summary":"Creates a service with an optional reference to a service definition.","description":"<p>Creates a service with given specification and definition document.</p>\n<h4>Request</h4>\n<pre><code>POST /rest/services HTTP/1.1\n\n&lt;ServiceImportSpec xmlns=\"http://soa.com/uri/products/restapi/xsd/1.0\"&gt;\n    &lt;ServiceSpec&gt;\n        &lt;Name&gt;EchoService1&lt;/Name&gt;\n        &lt;Description&gt;This is Echo Service&lt;/Description&gt;\n        &lt;Key&gt;uddi:834fc30e-5ffb-23e4-b3cf-ded8b9chhdgg&lt;/Key&gt;\n        &lt;QName&gt;http://tempuri.org&lt;/QName&gt;\n        &lt;LocalPart&gt;EchoService1&lt;/LocalPart&gt;\n        &lt;Organization&gt;uddi:6c3564d4-fdaf-11e4-82f2-fdaedf0ec346&lt;/Organization&gt;\n    &lt;/ServiceSpec&gt;\n    &lt;DefinitionSpec&gt;\n        &lt;Location&gt;http://a.b.c.d/EchoSan/Echo.asmx?wsdl&lt;/Location&gt;\n        &lt;UserName&gt;u&lt;/UserName&gt;\n        &lt;Password&gt;p&lt;/Password&gt;\n        &lt;Format&gt;wsdl&lt;/Format&gt;\n    &lt;/DefinitionSpec&gt;\n&lt;/ServiceImportSpec&gt;\n</code></pre>","operationId":"POST /services","consumes":["application/json","application/xml","text/xml"],"parameters":[{"in":"body","name":"parameter0","description":"The service spec.","required":true}],"responses":{"201":{"description":"The service was created successfully.  The Location header provides the new service location."},"300":{"description":"The service could not be imported using the provided spec."},"500":{"description":"The service could not be created because of an error."},"409":{"description":"The service could not be created becuase it conflicts with an existing service."}}}},"/services/{key}/definition/{format}/{reference:.+}":{"get":{"tags":["ServiceAdmin"],"summary":"Get a document referenced from a description document.","description":"<p>Retrieves the contents of document referenced from a given wsdl/wadl/raml document</p>\n<h4>Request</h4>\n<pre><code>GET /rest/services/uddi:9ba25256-fe81-11e4-9ad6-a3316407e555/definition/wsdl/{reference} HTTP/1.1\n</code></pre>","operationId":"GET /services/{key}/definition/{format}/{reference:.+}","produces":["*/*"],"parameters":[{"name":"key","in":"path","description":"The service key.","required":true},{"name":"format","in":"path","description":"The desired document format, e.g. \"wsdl\", \"wadl\", \"raml\",\"swagger\"","required":true},{"name":"reference","in":"path","description":"The document reference.","required":true}],"responses":{"200":{},"404":{"description":"A service with the given key, or the referenced document, was not found."}}}},"/services/{key}/pki/info":{"get":{"tags":["ServiceAdmin"],"summary":"Returns Certificate of a service","description":"<p>Fetch the PKI information for a service.</p>","operationId":"GET /services/{key}/pki/info","produces":["application/json","application/xml"],"parameters":[{"name":"key","in":"path","description":"The service key.","required":true}],"responses":{"200":{"description":"Success"},"404":{"description":"Specified service not found (Invalid key)"}}}},"/services/{key}":{"get":{"tags":["ServiceAdmin"],"summary":"Get details for a specific hosted service.","description":"<p>Retrieves the service information based on given key.</p>\n<h4>Request</h4>\n<p>The following is an example request for a standard service provided with PM called Workflow Service</p>\n<pre><code>GET /rest/services/uddi:soa.com:workflow-servicekey HTTP/1.1\n</code></pre>\n<h4>Response</h4>\n<pre><code>{\n    \"name\": \"Workflow Service\",\n    \"description\": \"Workflow Service\",\n    \"key\": \"uddi:soa.com:workflow-servicekey\",\n    \"qname\": \"{http://www.soa.com/uri/products/Workflow/wsdl/1.0}WorkflowService\",\n    \"organization\": \"uddi:soa.com:managementconfigurationbusinesskey\",\n    \"Links\":[\n       {\n         \"rel\": \"wsdl\",\n         \"href\": \"http://localhost:9900/rest/services/uddi:soa.com:workflow-servicekey/wsdl\"\n       },{\n         \"rel\": \"self\",\n         \"href\": \"http://localhost:9900/rest/services/uddi:soa.com:workflow-servicekey\"\n       }\n     ]\n}\n</code></pre>","operationId":"GET /services/{key}","produces":["application/json","application/xml"],"parameters":[{"name":"key","in":"path","description":"The service key","required":true}],"responses":{"200":{},"404":{"description":"A service with the given key was not found."}}},"put":{"tags":["ServiceAdmin"],"summary":"Update a service definition.","description":"<p>Updates a service name/description  with a given key.</p>\n<h4>Request</h4>\n<pre><code>PUT /rest/services/{key} HTTP/1.1\nContent-Type: application/json\n\n{\n    \"Name\":\"Changed Name\",\n    \"Description\":\"Changed Description\"\n}\n</code></pre>","operationId":"PUT /services/{key}","consumes":["application/json","application/xml","text/xml"],"parameters":[{"name":"key","in":"path","description":"The service key.","required":true},{"in":"body","name":"parameter0","description":"The service information to update.","required":true}],"responses":{"201":{"description":"The service was changed successfully."},"500":{"description":"The service could not be changed."},"404":{"description":"A service with the given key could not be found."}}},"delete":{"tags":["ServiceAdmin"],"summary":"Remove a service","description":"<p>Deletes the service associated with given key.</p>\n<h4>Request</h4>\n<pre><code>DELETE /rest/services/{key} HTTP/1.1\n</code></pre>","operationId":"DELETE /services/{key}","parameters":[{"name":"key","in":"path","description":"The service key.","required":true}],"responses":{"200":{"description":"The service was successfully deleted"},"404":{"description":"A service with the given key could not be found"}}}},"/services/import":{"post":{"tags":["ServiceAdmin"],"summary":"Creates a service with an optional reference to a service definition.  Deprecated.","operationId":"POST /services/import","consumes":["application/json","application/xml","text/xml"],"parameters":[{"in":"body","name":"parameter0","description":"The service import information.","required":true}],"responses":{"201":{"description":"The service was created successfully.  The location header will hold the URL of the new service."},"500":{"description":"The service could not be created"}}}},"/services/{key}/pki":{"get":{"tags":["ServiceAdmin"],"summary":"Returns Certificate of a service","description":"<p>Get the PKI options for a service.</p>","operationId":"GET /services/{key}/pki","produces":["application/json","application/xml"],"parameters":[{"name":"key","in":"path","description":"The service key.","required":true}],"responses":{"200":{"description":"Success"},"404":{"description":"Specified service not found (Invalid key)"}}},"post":{"tags":["ServiceAdmin"],"summary":"Uploads PKI keys and certificate for a service","description":"<p>Uploads a keystore that holds PKI key/cert data for a service. Form can contain alias parameter,\nand optionally keystorePass, aliasPass, forceTrust parameters. The parameters can be optional from query\nif they are not in the submitted form.</p>\n<h4>Request</h4>\n<pre><code>POST /rest/services/uddi:978841b1-7088-11e4-8574-cb4613969888/pki HTTP/1.1\nContent-Type: multipart/form-data; boundary=Jlo6Rm_FfX2_s3WQ5QhfUoY6qqLxTbdyHMSkf0W\n--Jlo6Rm_FfX2_s3WQ5QhfUoY6qqLxTbdyHMSkf0W\nContent-Disposition: form-data; name=\\\"fileUpload\\\"; filename=\\\"test.jks\\\"\nContent-Type: application/octet-stream\nContent-Transfer-Encoding: binary\n\n&lt;File content omitted&gt;\n</code></pre>","operationId":"POST /services/{key}/pki","consumes":["multipart/form-data"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"parameter0","description":"The uploaded file.","required":true},{"name":"key","in":"path","description":"The service key.","required":true},{"name":"keystorePass","in":"query","description":"Keystore password.","required":false},{"name":"alias","in":"query","description":"Alias in the keystore to use.","required":false},{"name":"aliasPass","in":"query","description":"Alias password. Can be omitted if not needed or the same as the keystore password.","required":false},{"name":"forceTrust","in":"query","description":"Add to trust store if not trusted already. If false and not trusted an error will be returned. Can be omitted. Default is false.","required":false}],"responses":{"201":{"description":"The PKI information was successfully created"},"404":{"description":"A service with the given keys could not be found"}}},"delete":{"tags":["ServiceAdmin"],"summary":"Deletes PKI Keys of a service","description":"<p>Deletes PKI artifacts of a service</p>","operationId":"DELETE /services/{key}/pki","parameters":[{"name":"key","in":"path","description":"The service key.","required":true}],"responses":{"200":{"description":"Success"},"404":{"description":"Specified service not found (Invalid key)"}}}},"/services/{key}/policies/{type}":{"post":{"tags":["ServiceAdmin"],"summary":"Attaches policies of the given type to a service","description":"<p>Attaches policies of the given type to the given service.</p>\n<h4>Request</h4>\n<pre><code>POST /rest/services/{key}/policies/operational HTTP/1.1\nContent-Type: application/xml\n\n&lt;PolicyKey xmlns=\"http://soa.com/uri/products/restapi/xsd/1.0\"&gt;myPolicyKey&lt;/PolicyKey&gt;\n</code></pre>","operationId":"POST /services/{key}/policies/{type}","consumes":["application/json","application/xml","text/xml"],"parameters":[{"name":"key","in":"path","description":"The service key.","required":true},{"in":"body","name":"parameter0","description":"The policies.","required":true},{"name":"type","in":"path","description":"The type of policies. Supported values are \"operational\", \"qos\", and \"compliance\". If omitted operational policies are assumed.","required":true}],"responses":{"200":{"description":"The policies were successfully attached"},"404":{"description":"A service or policy with the given keys could not be found"}}},"delete":{"tags":["ServiceAdmin"],"summary":"Detaches all policies of the given type from a service","description":"<p>Detaches all the policies of a given type attached to the given service.</p>\n<h4>Request</h4>\n<pre><code>DELETE /rest/services/{key}/policies/operational HTTP/1.1\n</code></pre>","operationId":"DELETE /services/{key}/policies/{type}","parameters":[{"name":"key","in":"path","description":"The service key.","required":true},{"name":"type","in":"path","description":"The type of policies. Supported values are \"operational\", \"qos\", and \"compliance\". If omitted operational policies are assumed.","required":true}],"responses":{"200":{"description":"The policies were successfully detached"},"404":{"description":"A service or policy with the given keys could not be found"}}}},"/services/{key}/definition/upload":{"put":{"tags":["ServiceAdmin"],"summary":"Update Service by uploading a new service definition","description":"<p>Updates a given service with given specification and definition document.</p>\n<h4>Request</h4>\n<pre><code>PUT /rest/services/uddi:978841b1-7088-11e4-8574-cb4613969888/definition/upload HTTP/1.1\nContent-Length: 2940\nContent-Type: multipart/form-data; boundary=YlPkO_6HkMh0gXO6-t9U8e7otDRuJJ2WfjxKkMXu\nHost: vnukula-e6420:8800\nConnection: Keep-Alive\nUser-Agent: Apache-HttpClient/4.0.1 (java 1.5)\nContent-Disposition: form-data; name=\"multipart\"; filename=\"Numberbeforeupdate.wsdl\"\nContent-Type: application/octet-stream\nContent-Transfer-Encoding: binary\n\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;definitions targetNamespace=\"http://www.dataaccess.com/webservicesserver/\" xmlns:tns=\"http://www.dataaccess.com/webservicesserver/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns=\"http://schemas.xmlsoap.org/wsdl/\"&gt;\n    &lt;types&gt;\n      &lt;xs:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.dataaccess.com/webservicesserver/\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:tns=\"http://www.dataaccess.com/webservicesserver/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"&gt;\n        &lt;xs:element name=\"NumberToWords\"&gt;\n          &lt;xs:complexType&gt;\n            &lt;xs:sequence&gt;\n              &lt;xs:element name=\"ubiNum\" type=\"xs:unsignedLong\"/&gt;\n            &lt;/xs:sequence&gt;\n          &lt;/xs:complexType&gt;\n        &lt;/xs:element&gt;\n        &lt;xs:element name=\"NumberToWordsResponse\"&gt;\n          &lt;xs:complexType&gt;\n            &lt;xs:sequence&gt;\n              &lt;xs:element name=\"NumberToWordsResult\" type=\"xs:string\"/&gt;\n            &lt;/xs:sequence&gt;\n          &lt;/xs:complexType&gt;\n        &lt;/xs:element&gt;\n      &lt;/xs:schema&gt;\n    &lt;/types&gt;\n    &lt;message name=\"NumberToWordsSoapResponse\"&gt;\n      &lt;part name=\"parameters\" element=\"tns:NumberToWordsResponse\"&gt;\n      &lt;/part&gt;\n    &lt;/message&gt;\n    &lt;message name=\"NumberToWordsSoapRequest\"&gt;\n      &lt;part name=\"parameters\" element=\"tns:NumberToWords\"&gt;\n      &lt;/part&gt;\n    &lt;/message&gt;\n    &lt;portType name=\"NumberConversionSoapType\"&gt;\n      &lt;operation name=\"NumberToWords\"&gt;\n    &lt;documentation&gt;Returns the word corresponding to the positive number passed as parameter. Limited to quadrillions.&lt;/documentation&gt;\n        &lt;input message=\"tns:NumberToWordsSoapRequest\"&gt;\n      &lt;/input&gt;\n        &lt;output message=\"tns:NumberToWordsSoapResponse\"&gt;\n      &lt;/output&gt;\n      &lt;/operation&gt;\n    &lt;/portType&gt;\n    &lt;binding name=\"NumberConversionSoapBinding\" type=\"tns:NumberConversionSoapType\"&gt;\n      &lt;soap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/http\"/&gt;\n      &lt;operation name=\"NumberToWords\"&gt;\n        &lt;soap:operation soapAction=\"http://number\" style=\"document\"/&gt;\n        &lt;input&gt;\n          &lt;soap:body use=\"literal\"/&gt;\n        &lt;/input&gt;\n        &lt;output&gt;\n          &lt;soap:body use=\"literal\"/&gt;\n        &lt;/output&gt;\n      &lt;/operation&gt;\n        &lt;/binding&gt;\n    &lt;service name=\"NumberConversion\"&gt;\n    &lt;wsdl:documentation xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\"&gt;The Number Conversion Web Service, implemented with Visual DataFlex, provides functions that convert numbers into words or dollar amounts.&lt;/wsdl:documentation&gt;\n      &lt;port name=\"NumberConversionSoap\" binding=\"tns:NumberConversionSoapBinding\"&gt;\n        &lt;soap:address location=\"http://www.dataaccess.com/webservicesserver/numberconversion.wso\"/&gt;\n      &lt;/port&gt;\n    &lt;/service&gt;\n&lt;/definitions&gt;\n--YlPkO_6HkMh0gXO6-t9U8e7otDRuJJ2WfjxKkMXu--\n</code></pre>","operationId":"PUT /services/{key}/definition/upload","consumes":["multipart/form-data"],"parameters":[{"name":"key","in":"path","description":"The service key.","required":true},{"in":"body","name":"parameter0","description":"The uploaded file.","required":true}],"responses":{"201":{"description":"The service was changed successfully"},"500":{"description":"The service could not be changed"},"404":{"description":"A service with the given key could not be found"}}}},"/services/{key}/endpoints/{name}":{"get":{"tags":["ServiceAdmin"],"summary":"Get detailed service endpoint information","operationId":"GET /services/{key}/endpoints/{name}","produces":["application/json","application/xml","text/xml"],"parameters":[{"name":"key","in":"path","description":"The service key.","required":true},{"name":"name","in":"path","description":"The endpoint name.","required":true}],"responses":{"200":{},"404":{"description":"A service with the given key, or endpoint with the specified name, could not be found"}}},"put":{"tags":["ServiceAdmin"],"summary":"Changes a given endpoint of a service","description":"<p>Changes an endpoint to a service.\nIf virtual the endpoint spec must identify a container listener. Addressing information is specified in the endpoint spec's properties.</p>\n<h4>Request</h4>\n<pre><code>PUT /rest/services/{key}/endpoints/{name}  HTTP/1.1\" +\n{\n  \"Endpoint\": {\n    \"-xmlns\":\"http://soa.com/uri/products/restapi/xsd/1.0\",\n    \"Description\":\"my port9\",\n    \"BindingName\":\"{http://tempuri.org/}EchoServiceSoap\",\n    \"ListenerName\":\"default-http0\",\n    \"BindingType\":\"binding.soap11\",\n    \"ContainerKey\":\"nd3800\",\n    \"ContextPath\":\"/MyPath11/\",\n    \"Name\":\"port99\",\n    \"ProtocolVariant\":\"weblogic\",\n    \"Properties\": {\n      \"Property\": {\n      }\n    }\n  }\n}\n</code></pre>","operationId":"PUT /services/{key}/endpoints/{name}","consumes":["application/json","application/xml","text/xml"],"parameters":[{"name":"key","in":"path","description":"The service key.","required":true},{"name":"name","in":"path","description":"The endpoint name.","required":true},{"in":"body","name":"parameter0","description":"The endpoint specification.","required":true}],"responses":{"200":{"description":"The endpoint was successfully changed"},"404":{"description":"A service with the given key, or endpoint with the specified name, could not be found"}}},"delete":{"tags":["ServiceAdmin"],"summary":"Remove an endpoint","description":"<p>Deletes the  given end point associated with the given service.</p>\n<h4>Request</h4>\n<pre><code>DELETE /rest/services/{key}/endpoints/{name} HTTP/1.1\n</code></pre>","operationId":"DELETE /services/{key}/endpoints/{name}","parameters":[{"name":"key","in":"path","description":"The service key.","required":true},{"name":"name","in":"path","description":"The endpoint name.","required":true}],"responses":{"200":{"description":"The endpoint was successfully removed"},"404":{"description":"A service with the given key, or endpoint with the specified name, could not be found"}}}},"/services/{key}/processing":{"get":{"tags":["ServiceAdmin"],"summary":"Returns the debug options of a (virtual) service","description":"Returns the debug options of a service if its virtual.","operationId":"GET /services/{key}/processing","produces":["application/json","application/xml"],"parameters":[{"name":"key","in":"path","description":"The service key.","required":true}],"responses":{"200":{"description":"Success"},"404":{"description":"Specified service not found (Invalid key)"}}},"put":{"tags":["ServiceAdmin"],"summary":"Changes the debug options of a (virtual) service","description":"Changes the debug options of a service if its virtual.","operationId":"PUT /services/{key}/processing","parameters":[{"name":"key","in":"path","description":"The service key.","required":true},{"in":"body","name":"parameter0","description":"Processing options.","required":true}],"responses":{"200":{"description":"Success"},"404":{"description":"Specified service not found (Invalid key)"}}}},"/services/{key}/definition":{"get":{"tags":["ServiceAdmin"],"summary":"Get the available description documents for a specific service.","description":"<p>Retrieves the service information based on given key. The information includes URLs for any available\nservice definitions including, but not limited to, Swagger, WSDL, WADL, RAML.</p>\n<h4>Request</h4>\n<p>The following is an example request and response for standard service provided with PM called Workflow Service.</p>\n<pre><code>GET /rest/services/uddi:soa.com:workflow-servicekey/definition HTTP/1.1\n</code></pre>\n<h4>Response:</h4>\n<pre><code>[\n  {\n    \"rel\": \"wsdl\",\n    \"href\": \"http://localhost:9900/rest/services/uddi:soa.com:workflow-servicekey/definition/wsdl\"\n  },{\n    \"rel\": \"wadl\",\n    \"href\": \"http://localhost:9900/rest/services/uddi:soa.com:workflow-servicekey/definition/wadl\"\n  },{\n    \"rel\": \"raml\",\n    \"href\": \"http://localhost:9900/rest/services/uddi:soa.com:workflow-servicekey/definition/raml\"\n  },{\n    \"rel\": \"swagger\",\n    \"href\": \"http://localhost:9900/rest/services/uddi:soa.com:workflow-servicekey/definition/swagger\"\n  },{\n    \"rel\": \"swagger2\",\n    \"href\": \"http://localhost:9900/rest/services/uddi:soa.com:workflow-servicekey/definition/swagger2\"\n  },{\n    \"rel\": \"swagger-yaml\",\n    \"href\": \"http://localhost:9900/rest/services/uddi:soa.com:workflow-servicekey/definition/swagger-yaml\"\n  }\n]\n</code></pre>","operationId":"GET /services/{key}/definition","produces":["application/json","application/xml"],"parameters":[{"name":"key","in":"path","description":"The service key","required":true}],"responses":{"200":{},"404":{"description":"A service with the given key was not found."}}},"put":{"tags":["ServiceAdmin"],"summary":"Update a service by importing a new definition","description":"<p>Updates the service definition associated with given key.</p>\n<h4>Request</h4>\n<pre><code>PUT /rest/services/{key}/definition HTTP/1.1\nContent-Type: application/json\n\n{\n    \"Location\":\"http://www.holidaywebservice.com/Holidays/US/Dates/USHolidayDates.asmx?WSDL\",\n    \"UserName\":\"u\",\n    \"Password\": \"p\"\n}\n</code></pre>","operationId":"PUT /services/{key}/definition","consumes":["application/json","application/xml","text/xml"],"parameters":[{"name":"key","in":"path","description":"The service key.","required":true},{"in":"body","name":"parameter0","description":"The service import information.","required":true}],"responses":{"201":{"description":"The service was changed successfully"},"500":{"description":"The service could not be changed"},"404":{"description":"A service with the given key could not be found"}}},"delete":{"tags":["ServiceAdmin"],"summary":"Remove all definition documents for a service.","description":"<p>Deletes definition for a service</p>\n<h4>Request</h4>\n<pre><code>DELETE /rest/services/uddi:9ba25256-fe81-11e4-9ad6-a3316407e555 HTTP/1.1\n</code></pre>","operationId":"DELETE /services/{key}/definition","parameters":[{"name":"key","in":"path","description":"The service key.","required":true}],"responses":{"200":{"description":"The service with the given key was successfully deleted."},"404":{"description":"A service with the given key was not found."}}}},"/services/upload":{"post":{"tags":["ServiceAdmin"],"summary":"Upload a  service definition.","description":"<p>Creates a service with given specification and definition document.</p>\n<h4>Request</h4>\n<pre><code>POST /rest/services?name=EchoUploaded&amp;virtual=false&amp;qname=%7Bhttp%3A%2F%2Ftemp.com%7DTempNameSpace&amp;description=Echo+Decsription&amp;key=uddi%3A978841b1-7088-11e4-8574-cb4613969888&amp;org=uddi%3A3ff2aefb-03d3-11e5-9e1a-ed2c43b446f9&amp; HTTP/1.1\nAuthorization: Basic YTpw\nContent-Length: 2938\nContent-Type: multipart/form-data; boundary=Jlo6Rm_FfX2_s3WQ5QhfUoY6qqLxTbdyHMSkf0W\nHost: localhost:8800\nConnection: Keep-Alive\nUser-Agent: Apache-HttpClient/4.0.1 (java 1.5)\n\n--Jlo6Rm_FfX2_s3WQ5QhfUoY6qqLxTbdyHMSkf0W\nContent-Disposition: form-data; name=\"multipart\"; filename=\"Numberbeforeupdate.wsdl\"\nContent-Type: application/octet-stream\nContent-Transfer-Encoding: binary\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;definitions targetNamespace=\"http://www.dataaccess.com/webservicesserver/\" xmlns:tns=\"http://www.dataaccess.com/webservicesserver/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns=\"http://schemas.xmlsoap.org/wsdl/\"&gt;\n  &lt;types&gt;\n    &lt;xs:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.dataaccess.com/webservicesserver/\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:tns=\"http://www.dataaccess.com/webservicesserver/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"&gt;\n      &lt;xs:element name=\"NumberToWords\"&gt;\n        &lt;xs:complexType&gt;\n          &lt;xs:sequence&gt;\n            &lt;xs:element name=\"ubiNum\" type=\"xs:unsignedLong\"/&gt;\n          &lt;/xs:sequence&gt;\n        &lt;/xs:complexType&gt;\n      &lt;/xs:element&gt;\n      &lt;xs:element name=\"NumberToWordsResponse\"&gt;\n        &lt;xs:complexType&gt;\n          &lt;xs:sequence&gt;\n            &lt;xs:element name=\"NumberToWordsResult\" type=\"xs:string\"/&gt;\n          &lt;/xs:sequence&gt;\n        &lt;/xs:complexType&gt;\n      &lt;/xs:element&gt;\n    &lt;/xs:schema&gt;\n  &lt;/types&gt;\n  &lt;message name=\"NumberToWordsSoapResponse\"&gt;\n    &lt;part name=\"parameters\" element=\"tns:NumberToWordsResponse\"&gt;\n    &lt;/part&gt;\n  &lt;/message&gt;\n  &lt;message name=\"NumberToWordsSoapRequest\"&gt;\n    &lt;part name=\"parameters\" element=\"tns:NumberToWords\"&gt;\n    &lt;/part&gt;\n  &lt;/message&gt;\n  &lt;portType name=\"NumberConversionSoapType\"&gt;\n    &lt;operation name=\"NumberToWords\"&gt;\n      &lt;documentation&gt;Returns the word corresponding to the positive number passed as parameter. Limited to quadrillions.&lt;/documentation&gt;\n      &lt;input message=\"tns:NumberToWordsSoapRequest\"&gt;\n      &lt;/input&gt;\n      &lt;output message=\"tns:NumberToWordsSoapResponse\"&gt;\n      &lt;/output&gt;\n    &lt;/operation&gt;\n  &lt;/portType&gt;\n  &lt;binding name=\"NumberConversionSoapBinding\" type=\"tns:NumberConversionSoapType\"&gt;\n    &lt;soap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/http\"/&gt;\n    &lt;operation name=\"NumberToWords\"&gt;\n      &lt;soap:operation soapAction=\"http://number\" style=\"document\"/&gt;\n      &lt;input&gt;\n        &lt;soap:body use=\"literal\"/&gt;\n      &lt;/input&gt;\n      &lt;output&gt;\n        &lt;soap:body use=\"literal\"/&gt;\n      &lt;/output&gt;\n    &lt;/operation&gt;\n      &lt;/binding&gt;\n  &lt;service name=\"NumberConversion\"&gt;\n    &lt;wsdl:documentation xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\"&gt;The Number Conversion Web Service, implemented with Visual DataFlex, provides functions that convert numbers into words or dollar amounts.&lt;/wsdl:documentation&gt;\n    &lt;port name=\"NumberConversionSoap\" binding=\"tns:NumberConversionSoapBinding\"&gt;\n      &lt;soap:address location=\"http://www.dataaccess.com/webservicesserver/numberconversion.wso\"/&gt;\n    &lt;/port&gt;\n  &lt;/service&gt;\n&lt;/definitions&gt;\n--Jlo6Rm_FfX2_s3WQ5QhfUoY6qqLxTbdyHMSkf0W--\n</code></pre>","operationId":"POST /services/upload","consumes":["multipart/form-data"],"parameters":[{"in":"body","name":"parameter0","description":"The uploaded file.","required":true},{"name":"name","in":"query","description":"The service name.","required":true},{"name":"key","in":"query","description":"The service key.","required":true},{"name":"qname","in":"query","description":"The service qname.","required":true},{"name":"description","in":"query","description":"The service description.","required":false},{"name":"org","in":"query","description":"The organization key for the target organization.","required":true},{"name":"virtual","in":"query","description":"Indicates that the service is virtual. It is not by default.","required":false},{"name":"virtualized","in":"query","description":"The key of the service to virtualize (if virtual is true).","required":false}],"responses":{"201":{"description":"The service was created successfully.  The location header will hold the URL of the new service."},"500":{"description":"The service could not be created"}}}},"/services/{key}/pki/assign":{"post":{"tags":["ServiceAdmin"],"summary":"Assigns PKI Keys to a Service","description":"<p>Add PKI information to a service.</p>","operationId":"POST /services/{key}/pki/assign","consumes":["application/xml","application/json"],"produces":["application/json","application/xml"],"parameters":[{"name":"key","in":"path","description":"The service key.","required":true},{"in":"body","name":"parameter0","description":"Alias Info.","required":true}],"responses":{"201":{"description":"Success"},"404":{"description":"Specified service or pki key not found (Invalid key)"}}}},"/services/{key}/definition/{format}":{"get":{"tags":["ServiceAdmin"],"summary":"Get a particular description document for a service.","description":"<p>Retrieves the service definition in given format, e.g. WSDL, WADL and RAML.</p>\n<h4>Request</h4>\n<pre><code>GET /rest/services/uddi:9ba25256-fe81-11e4-9ad6-a3316407e555/definition/wsdl HTTP/1.1\n</code></pre>\n<h4>Response</h4>\n<p>The following is an example of a response for a simple Echo service. Parts of the response\nare omitted for brevity</p>\n<pre><code>&lt;wsdl:definitions targetNamespace=\"http://tempuri.org/\" xmlns:s=\"http://www.w3.org/2001/XMLSchema\" \n    xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:mime=\"http://schemas.xmlsoap.org/wsdl/mime/\" \n    xmlns:tns=\"http://tempuri.org/\" \n    xmlns:http=\"http://schemas.xmlsoap.org/wsdl/http/\" xmlns:tm=\"http://microsoft.com/wsdl/mime/textMatching/\" \n    xmlns:soap12=\"http://schemas.xmlsoap.org/wsdl/soap12/\" \n    xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\"&gt;\n   &lt;wsdl:types&gt;\n   &lt;/wsdl:types&gt;\n   &lt;wsdl:message name=\"EchoSoapOut\"&gt;\n      &lt;wsdl:part name=\"parameters\" element=\"tns:EchoResponse\"&gt;&lt;/wsdl:part&gt;\n   &lt;/wsdl:message&gt;\n   &lt;wsdl:message name=\"EchoSoapIn\"&gt;\n      &lt;wsdl:part name=\"parameters\" element=\"tns:Echo\"&gt;&lt;/wsdl:part&gt;\n   &lt;/wsdl:message&gt;\n   &lt;wsdl:portType name=\"EchoServiceSoap\"&gt;\n      &lt;wsdl:operation name=\"Echo\"&gt;\n         &lt;wsdl:input message=\"tns:EchoSoapIn\"&gt;&lt;/wsdl:input&gt;\n         &lt;wsdl:output message=\"tns:EchoSoapOut\"&gt;&lt;/wsdl:output&gt;\n      &lt;/wsdl:operation&gt;\n   &lt;/wsdl:portType&gt;\n   &lt;wsdl:binding name=\"EchoServiceSoap12\" type=\"tns:EchoServiceSoap\"&gt;\n   &lt;/wsdl:binding&gt;\n   &lt;wsdl:binding name=\"EchoServiceSoap\" type=\"tns:EchoServiceSoap\"&gt;\n   &lt;/wsdl:binding&gt;\n   &lt;wsdl:service name=\"EchoService\"&gt;\n      &lt;wsdl:port name=\"port77\" binding=\"tns:EchoServiceSoap\"&gt;\n         &lt;soap:address location=\"http://VNUKALA-E6420.soa.local:9901/MyPath11/\"/&gt;\n      &lt;/wsdl:port&gt;\n      &lt;wsdl:port name=\"MyPort4\" binding=\"tns:EchoServiceSoap\"&gt;\n         &lt;soap:address location=\"http://VNUKALA-E6420.soa.local:9901/MyPath11/\"/&gt;\n      &lt;/wsdl:port&gt;\n   &lt;/wsdl:service&gt;\n&lt;/wsdl:definitions&gt;\n</code></pre>","operationId":"GET /services/{key}/definition/{format}","produces":["*/*"],"parameters":[{"name":"key","in":"path","description":"The service key","required":true},{"name":"format","in":"path","description":"The desired document format, e.g. \"wsdl\", \"wadl\", \"raml\",\"swagger\"","required":true}],"responses":{"200":{},"404":{"description":"A service with the given key was not found or there was no descriptor available in the specified format."}}}}}}