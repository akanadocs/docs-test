<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions targetNamespace="urn:com.akana.policy.config.api" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="urn:com.akana.policy.config.api" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:nms1="urn:com.akana.policy.configuration.model" xmlns:shttp="http://soa.com/wsdl/http">
  <wsdl:types>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://www.w3.org/2005/Atom" version="1.0" xmlns:tns="http://www.w3.org/2005/Atom" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:import namespace="http://www.w3.org/XML/1998/namespace"/>
<xs:complexType name="atomLink"><xs:complexContent><xs:extension base="tns:atomCommonAttributes"><xs:sequence/><xs:attribute name="length" type="xs:string"/><xs:attribute name="title" type="xs:string"/><xs:attribute name="hreflang" type="xs:string"/><xs:attribute name="rel" type="xs:string"/><xs:attribute name="type" type="xs:string"/><xs:attribute name="href" type="xs:anyURI" use="required"/><xs:anyAttribute namespace="##other" processContents="skip"/></xs:extension></xs:complexContent></xs:complexType>
<xs:complexType name="atomCommonAttributes"><xs:sequence/><xs:attribute ref="xml:base"/><xs:attribute ref="xml:lang"/><xs:anyAttribute namespace="##other" processContents="skip"/></xs:complexType>
</xs:schema>
    <xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:attribute name="base" type="xs:anyURI"/>
<xs:attribute name="lang" type="xs:string"/>
</xs:schema>
    <xs:schema version="1.0" xmlns:ns1="http://www.w3.org/2005/Atom" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:import namespace="http://www.w3.org/2005/Atom"/>
<xs:element name="ActionInfo" type="actionInfo"/>
<xs:element name="ActionSet" type="actionSet"/>
<xs:element name="ExecutionStatus" type="executionStatus"/>
<xs:element name="PolicyConfiguration" type="policyConfiguration"/>
<xs:element name="PolicyConfigurationSet" type="policyConfigurationSet"/>
<xs:element name="PolicyConfigurationStatus" type="policyConfigurationStatus"/>
<xs:complexType name="policyConfiguration"><xs:sequence><xs:element minOccurs="0" name="key" type="xs:string"/><xs:element minOccurs="0" name="version" type="xs:string"/><xs:element minOccurs="0" name="name" type="xs:string"/><xs:element minOccurs="0" name="presentationName" type="xs:string"/><xs:element minOccurs="0" name="description" type="xs:string"/><xs:element minOccurs="0" name="type" type="xs:string"/><xs:element minOccurs="0" name="links"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="link" type="ns1:atomLink"/></xs:sequence></xs:complexType></xs:element><xs:element minOccurs="0" name="assertions"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="assertion" type="actionInfo"/></xs:sequence></xs:complexType></xs:element></xs:sequence></xs:complexType>
<xs:complexType name="actionInfo"><xs:sequence><xs:element minOccurs="0" name="name" type="xs:string"/><xs:element minOccurs="0" name="presentationName" type="xs:string"/><xs:element minOccurs="0" name="description" type="xs:string"/><xs:element minOccurs="0" name="links"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="link" type="ns1:atomLink"/></xs:sequence></xs:complexType></xs:element><xs:element maxOccurs="unbounded" minOccurs="0" name="requires" nillable="true" type="Requirement"/><xs:element minOccurs="0" name="data" type="xs:anyType"/><xs:element minOccurs="0" name="schema" type="xs:anyType"/><xs:element minOccurs="0" name="options" type="xs:anyType"/></xs:sequence></xs:complexType>
<xs:complexType name="Requirement"><xs:sequence><xs:element minOccurs="0" name="name" type="xs:string"/><xs:element minOccurs="0" name="value" type="xs:anyType"/></xs:sequence></xs:complexType>
<xs:complexType name="actionSet"><xs:sequence><xs:element minOccurs="0" name="links"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="link" type="ns1:atomLink"/></xs:sequence></xs:complexType></xs:element><xs:element maxOccurs="unbounded" minOccurs="0" name="actions" nillable="true" type="actionInfo"/></xs:sequence></xs:complexType>
<xs:complexType name="executionStatus"><xs:sequence><xs:element minOccurs="0" name="status" type="policyConfigurationStatus"/><xs:element minOccurs="0" name="progress" type="xs:int"/><xs:element minOccurs="0" name="start" type="xs:dateTime"/><xs:element minOccurs="0" name="end" type="xs:dateTime"/><xs:element minOccurs="0" name="links"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="link" type="ns1:atomLink"/></xs:sequence></xs:complexType></xs:element><xs:element minOccurs="0" name="data" type="xs:anyType"/><xs:element minOccurs="0" name="next" type="actionInfo"/><xs:element maxOccurs="unbounded" minOccurs="0" name="errors" nillable="true" type="fieldError"/><xs:element maxOccurs="unbounded" minOccurs="0" name="history" nillable="true" type="actionInfo"/></xs:sequence></xs:complexType>
<xs:complexType name="policyConfigurationStatus"><xs:sequence><xs:element minOccurs="0" name="state" type="state"/><xs:element minOccurs="0" name="detail" type="xs:string"/></xs:sequence></xs:complexType>
<xs:complexType name="fieldError"><xs:sequence><xs:element minOccurs="0" name="field" type="xs:string"/><xs:element minOccurs="0" name="message" type="xs:string"/><xs:element minOccurs="0" name="type" type="errorType"/></xs:sequence></xs:complexType>
<xs:complexType name="policyConfigurationSet"><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="links" nillable="true" type="ns1:atomLink"/><xs:element maxOccurs="unbounded" minOccurs="0" name="policies" nillable="true" type="policyConfiguration"/></xs:sequence></xs:complexType>
<xs:simpleType name="state"><xs:restriction base="xs:string"><xs:enumeration value="UNKNOWN"/><xs:enumeration value="INCOMPLETE"/><xs:enumeration value="COMPLETE"/><xs:enumeration value="SUCCESS"/><xs:enumeration value="RUNNING"/><xs:enumeration value="BLOCKED"/><xs:enumeration value="UNAVAILABLE"/><xs:enumeration value="INVALID_STATE"/><xs:enumeration value="ERROR"/><xs:enumeration value="CANCELLED"/><xs:enumeration value="RESTARTING"/></xs:restriction></xs:simpleType>
<xs:simpleType name="errorType"><xs:restriction base="xs:string"><xs:enumeration value="MISSING_REQUIRED"/><xs:enumeration value="VALIDATION_ERROR"/></xs:restriction></xs:simpleType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="getAvailablePoliciesRequestMessage">
    <wsdl:part name="BusinessID" type="xs:string">
    </wsdl:part>
    <wsdl:part name="org" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAvailablePoliciesResponseMessage">
    <wsdl:part name="getAvailablePoliciesResponse" element="tns:PolicyConfigurationSet">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActionRequestMessage">
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
    <wsdl:part name="action" type="xs:string">
    </wsdl:part>
    <wsdl:part name="version" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActionsRequestMessage">
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
    <wsdl:part name="version" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPolicyConfigurationResponseMessage">
    <wsdl:part name="getPolicyConfigurationResponse" element="tns:PolicyConfiguration">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActionResponseMessage">
    <wsdl:part name="getActionResponse" element="tns:ActionInfo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPolicyConfigurationRequestMessage">
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
    <wsdl:part name="version" type="xs:string">
    </wsdl:part>
    <wsdl:part name="assertions" type="xs:boolean">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="executeActionResponseMessage">
    <wsdl:part name="executeActionResponse" element="tns:ExecutionStatus">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActionsResponseMessage">
    <wsdl:part name="getActionsResponse" element="tns:ActionSet">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="executeActionRequestMessage">
    <wsdl:part name="key" type="xs:string">
    </wsdl:part>
    <wsdl:part name="action" type="xs:string">
    </wsdl:part>
    <wsdl:part name="parameter0" type="tns:ExecuteAction">
    </wsdl:part>
    <wsdl:part name="version" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="PolicyConfigurationAPIPortType">
    <wsdl:operation name="getPolicyConfiguration">
      <wsdl:input message="tns:getPolicyConfigurationRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getPolicyConfigurationResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAvailablePolicies">
      <wsdl:input message="tns:getAvailablePoliciesRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getAvailablePoliciesResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="executeAction">
      <wsdl:input message="tns:executeActionRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:executeActionResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAction">
      <wsdl:input message="tns:getActionRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getActionResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getActions">
      <wsdl:input message="tns:getActionsRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getActionsResponseMessage">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="PolicyConfigurationAPIBinding" type="tns:PolicyConfigurationAPIPortType">
    <shttp:binding/>
    <wsdl:operation name="getPolicyConfiguration">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /{key}</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Retrieve the Configuration for a Specific Policy]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Get details for a specific policy configuration.</p>
<h4><strong>Response</strong></h4>
<pre><code>{
  "name": "SampleWSSecurityAsymmetricBindingPolicy",
  "key": "urn:uuid:ab2084c1-e3b9-11e8-8956-e0932b35f480",
  "version": "2",
  "links": [
    {
      "rel": "self",
      "href": "http://localhost:9900/api/policies/config/urn:uuid:ab2084c1-e3b9-11e8-8956-e0932b35f480"
    },
    {
      "rel": "actions",
      "href": "http://localhost:9900/api/policies/config/urn:uuid:ab2084c1-e3b9-11e8-8956-e0932b35f480/actions"
    },
    {
      "rel": "next",
      "href": "http://localhost:9900/api/policies/config/urn:uuid:ab2084c1-e3b9-11e8-8956-e0932b35f480/actions/asymmetric.binding.action"
    }
  ],
  "policyType": "policy.security.asym"
}
</code></pre>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="/{key}" method="GET" outputSerialization="application/json,application/xml"/>
      <wsdl:input>
    <shttp:input name="key" part="key" type="path"/>
    <shttp:input name="version" part="version" type="query"/>
    <shttp:input name="assertions" part="assertions" type="query"/>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getPolicyConfigurationResponse" part="getPolicyConfigurationResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAvailablePolicies">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET </sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get Available Policy Configurations]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Fetch a summary of all available policy configurations for a specific organization/tenant.</p>
<h4><strong>Response</strong></h4>
<pre><code>{
  "links": [
    {
      "rel": "self",
      "href": "http://localhost:9900/api/policies/config/"
    }
  ],
  "policies": [
    {
      "name": "SeedServiceBindingPolicy",
      "key": "SeedServiceBindingPolicy",
      "version": "1",
      "links": [
        {
          "rel": "self",
          "href": "http://localhost:9900/api/policies/config/SeedServiceBindingPolicy"
        },
        {
          "rel": "actions",
          "href": "http://localhost:9900/api/policies/config/SeedServiceBindingPolicy/actions"
        },
        {
          "rel": "next",
          "href": "http://localhost:9900/api/policies/config/SeedServiceBindingPolicy/actions/asymmetric.binding.action"
        }
      ],
      "policyType": "policy.security.asym"
    },
    {
      "name": "SampleWSSecurityAsymmetricBindingPolicy",
      "key": "urn:uuid:ab2084c1-e3b9-11e8-8956-e0932b35f480",
      "version": "2",
      "links": [
        {
          "rel": "self",
          "href": "http://localhost:9900/api/policies/config/urn:uuid:ab2084c1-e3b9-11e8-8956-e0932b35f480"
        },
        {
          "rel": "actions",
          "href": "http://localhost:9900/api/policies/config/urn:uuid:ab2084c1-e3b9-11e8-8956-e0932b35f480/actions"
        },
        {
          "rel": "next",
          "href": "http://localhost:9900/api/policies/config/urn:uuid:ab2084c1-e3b9-11e8-8956-e0932b35f480/actions/asymmetric.binding.action"
        }
      ],
      "policyType": "policy.security.asym"
    }
  ]
}
</code></pre>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="" method="GET" outputSerialization="application/json,application/xml"/>
      <wsdl:input>
    <shttp:input name="BusinessID" part="BusinessID" type="query"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The unique ID for a specific business on the platform. If this parameter is included, only policies relating to the specified business are returned.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="org" part="org" type="query"/>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getAvailablePoliciesResponse" part="getAvailablePoliciesResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="executeAction">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">POST /{key}/actions/{action}/execute</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Execute Action]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Execute an action.  This operation is invoked if the content type is application/json.  The content
must conform to the schema provided by the action descriptor.</p>
<h4><strong>Request</strong></h4>
<pre><code>POST /api/policies/config/urn:uuid:ab2084c1-e3b9-11e8-8956-e0932b35f480/actions/asymmetric.binding.action/execute HTTP/1.1 
Content-Type: application/json
Host: localhost:9900

{
   "includeTimestamp": true,
   "encryptSignature": true,
   "securityPolicyVersion": "VERSION_11",
   "headerLayout": "LAX",
   "protectTokens": false,
   "onlySignEntire": true,
   "encryptBeforeSigning": false
}
</code></pre>]]></sdoc:description></wsdl:documentation>
    <shttp:operation inputSerialization="application/json" location="/{key}/actions/{action}/execute" method="POST" outputSerialization="application/json"/>
      <wsdl:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The policy key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="action" part="action" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The name of the step to execute.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="parameter0" part="parameter0" type="entity"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The action to execute, along with any history.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="version" part="version" type="query"/>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="executeActionResponse" part="executeActionResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAction">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /{key}/actions/{action}</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get Action Detail]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Get detailed information for a particular configuration action, and optional version.</p>
<h4><strong>Request</strong></h4>
<pre><code>GET /api/policies/config/{policyKey}/actions/{actionId}?version={version} HTTP/1.1 
Host: localhost:9900
</code></pre>
<h4><strong>Response</strong></h4>
<pre><code>{
   "name": "asymmetric.binding.action",
   "presentationName": "Asymmetric Binding Options",
   "description": "&lt;p&gt;The \"Specify Asymmetric Binding Options\" ... &lt;/p&gt;",
   "schema": {
     "$schema": "http://json-schema.org/draft-06/schema#",
     "type": "object",
     "properties": {
       "encryptBeforeSigning": {
         "title": "Encrypt Before Signing",
         "type": "boolean"
       },
       "encryptSignature": {
         "title": "Encrypt Signature",
         "type": "boolean"
       },
       "headerLayout": {
         "title": "Security Header Layout",
         "enum": [
           "STRICT",
           "LAX",
           "LAX_TIMESTAMP_FIRST",
           "LAX_TIMESTAMP_LAST"
         ]
       },
       "includeTimestamp": {
         "title": "Include Timestamp",
         "type": "boolean"
       },
       "onlySignEntire": {
         "title": "Only Sign Entire Headers and Body",
         "type": "boolean"
       },
       "protectTokens": {
         "title": "Protect Tokens",
         "type": "boolean"
       },
       "securityPolicyVersion": {
         "title": "WS-SecurityPolicy Version",
         "enum": [
           "VERSION_11",
           "VERSION_12"
         ]
       }
     },
     "required": [
       "headerLayout",
       "securityPolicyVersion"
     ]
   },
   "links": [
     {
       "rel": "self",
       "href": "http://localhost:9900/api/policies/config/urn:uuid:ab2084c1-e3b9-11e8-8956-e0932b35f480/actions/asymmetric.binding.action"
     },
     {
       "rel": "execute",
       "href": "http://localhost:9900/api/policies/config/urn:uuid:ab2084c1-e3b9-11e8-8956-e0932b35f480/actions/asymmetric.binding.action/execute"
     },
     {
       "rel": "finish",
       "href": "http://localhost:9900/api/policies/config/urn:uuid:ab2084c1-e3b9-11e8-8956-e0932b35f480/actions/asymmetric.binding.action/execute?action=finish"
     }
   ],
   "data": {
     "includeTimestamp": true,
     "encryptSignature": false,
     "securityPolicyVersion": "VERSION_11",
     "headerLayout": "LAX",
     "protectTokens": false,
     "onlySignEntire": true,
     "encryptBeforeSigning": false
   },
   "options": {
     "fields": {
       "protectTokens": {
         "order": "6"
       },
       "encryptBeforeSigning": {
         "order": "4"
       },
       "headerLayout": {
         "optionLabels": [
           "Strict",
           "Lax",
           "Lax Timestamp First",
           "Lax Timestamp Last"
         ],
         "type": "select",
         "order": "2"
       },
       "onlySignEntire": {
         "order": "7"
       },
       "securityPolicyVersion": {
         "optionLabels": [
           "Version 1.1",
           "Version 1.2"
         ],
         "type": "select",
         "order": "1"
       },
       "includeTimestamp": {
         "order": "3"
       },
       "encryptSignature": {
         "order": "5"
       }
     }
   }
}
</code></pre>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="/{key}/actions/{action}" method="GET" outputSerialization="application/json"/>
      <wsdl:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The policy key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="action" part="action" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The action id.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="version" part="version" type="query"/>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getActionResponse" part="getActionResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getActions">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /{key}/actions</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get Actions for a configuration]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Fetch all of the available actions for a given policy.</p>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="/{key}/actions" method="GET" outputSerialization="application/json"/>
      <wsdl:input>
    <shttp:input name="key" part="key" type="path"><wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[The policy key.]]></sdoc:description><sdoc:required xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:required><sdoc:multiple xmlns:sdoc="http://soa.com/wsdl/doc">false</sdoc:multiple></wsdl:documentation></shttp:input>
    <shttp:input name="version" part="version" type="query"/>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getActionsResponse" part="getActionsResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="PolicyConfigurationAPI">
<wsdl:documentation><sdoc:title xmlns:sdoc="http://soa.com/wsdl/doc">Policy Configuration API</sdoc:title><sdoc:version xmlns:sdoc="http://soa.com/wsdl/doc">2018.1.0</sdoc:version><sdoc:vendor xmlns:sdoc="http://soa.com/wsdl/doc">Akana</sdoc:vendor><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>The Policy Configuration API allows policy configuration to be .</p>]]></sdoc:description></wsdl:documentation>
    <wsdl:port name="PolicyConfigurationAPI_rest_port_http" binding="tns:PolicyConfigurationAPIBinding">
    <shttp:address location="http://0.0.0.0/api/policies/config"/>
    </wsdl:port>
    <wsdl:port name="PolicyConfigurationAPI_rest_port_https" binding="tns:PolicyConfigurationAPIBinding">
    <shttp:address location="https://0.0.0.0/api/policies/config"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
