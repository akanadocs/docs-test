<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions targetNamespace="urn:com.soa.legals.api" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="urn:com.soa.legals.api" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:nms3="urn:org.apache.wink.common.model.rss" xmlns:nms2="http://soa.com/xsd/dnmodel/1.0" xmlns:nms1="http://soa.com/xsd/legals/1.0" xmlns:shttp="http://soa.com/wsdl/http">
  <wsdl:types>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://soa.com/xsd/dnmodel/1.0" version="1.0" xmlns:tns="http://soa.com/xsd/dnmodel/1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:element name="Image"><xs:complexType><xs:all><xs:element name="Url" type="xs:anyURI"/><xs:element name="Title" type="xs:string"/><xs:element name="Link" type="xs:anyURI"/><xs:element minOccurs="0" name="Description" type="xs:string"/></xs:all></xs:complexType></xs:element>
<xs:element name="TargetResource"><xs:complexType><xs:sequence><xs:element minOccurs="0" name="Name" type="xs:string"/><xs:element minOccurs="0" name="ID" type="xs:string"/><xs:element minOccurs="0" name="Type" type="xs:string"/><xs:element minOccurs="0" name="Avatar" type="xs:string"/><xs:element minOccurs="0" ref="tns:Image"/><xs:element minOccurs="0" name="Visibility" type="xs:string"/><xs:element default="false" minOccurs="0" name="IsResourceLevelPermissionSupported" type="xs:boolean"/></xs:sequence></xs:complexType></xs:element>
<xs:element name="TargetResources"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:TargetResource"/></xs:sequence></xs:complexType></xs:element>
</xs:schema>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://soa.com/xsd/legals/1.0" version="1.0" xmlns:ns1="http://soa.com/xsd/user/1.0" xmlns:ns2="http://soa.com/xsd/dnmodel/1.0" xmlns:tns="http://soa.com/xsd/legals/1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:import namespace="http://soa.com/xsd/user/1.0"/>
<xs:import namespace="http://soa.com/xsd/dnmodel/1.0"/>
<xs:element name="AgreementDocument"><xs:complexType><xs:sequence><xs:element minOccurs="0" name="DocumentID" type="xs:string"/><xs:element name="Name" type="xs:string"/><xs:element minOccurs="0" name="Description" type="xs:string"/><xs:element name="AgreementType" type="xs:string"/><xs:element minOccurs="0" name="ResourceID" type="xs:string"/><xs:element minOccurs="0" name="ResourceType" type="xs:string"/><xs:element name="ContentPath" type="xs:string"/><xs:element minOccurs="0" name="MetadataResourceURI" type="xs:string"/><xs:element minOccurs="0" name="MetadataResourceVersion" type="xs:int"/><xs:element name="Active" type="xs:boolean"/><xs:element name="PrintContentPath" type="xs:string"/><xs:element minOccurs="0" name="PrintResourceURI" type="xs:string"/><xs:element minOccurs="0" name="PrintVersion" type="xs:int"/><xs:element name="DocumentState" type="xs:string"/><xs:element name="FileName" type="xs:string"/><xs:element name="Link" type="xs:string"/><xs:element minOccurs="0" ref="ns2:TargetResources"/></xs:sequence></xs:complexType></xs:element>
<xs:element name="AgreementDocuments"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:AgreementDocument"/></xs:sequence></xs:complexType></xs:element>
<xs:element name="UserAgreement"><xs:complexType><xs:sequence><xs:element minOccurs="0" name="AgreementID" type="xs:long"/><xs:element ref="ns1:UserID"/><xs:element name="DocumentID" type="xs:string"/><xs:element minOccurs="0" name="AgreementScopeID" type="xs:string"/><xs:element name="AgreementDate" type="xs:dateTime"/></xs:sequence></xs:complexType></xs:element>
</xs:schema>
    <xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:element name="category" nillable="true" type="rssCategory"/>
<xs:element name="channel" nillable="true" type="rssChannel"/>
<xs:element name="cloud" nillable="true" type="rssCloud"/>
<xs:element name="enclosure" nillable="true" type="rssEnclosure"/>
<xs:element name="guid" nillable="true" type="rssGuid"/>
<xs:element name="image" nillable="true" type="rssImage"/>
<xs:element name="item" nillable="true" type="rssItem"/>
<xs:element name="rss"><xs:complexType><xs:sequence><xs:element name="channel" type="rssChannel"/></xs:sequence><xs:attribute name="version" type="xs:string" use="required"/></xs:complexType></xs:element>
<xs:element name="skipDays" nillable="true" type="rssSkipDays"/>
<xs:element name="skipHours" nillable="true" type="rssSkipHours"/>
<xs:element name="source" nillable="true" type="rssSource"/>
<xs:element name="textInput" nillable="true" type="rssTextInput"/>
<xs:complexType name="rssCloud"><xs:sequence/><xs:attribute name="domain" type="xs:string" use="required"/><xs:attribute name="port" type="xs:int" use="required"/><xs:attribute name="path" type="xs:string" use="required"/><xs:attribute name="registerProcedure" type="xs:string" use="required"/><xs:attribute name="protocol" type="xs:string" use="required"/></xs:complexType>
<xs:complexType name="rssChannel"><xs:all><xs:element name="title" type="xs:string"/><xs:element name="link" type="xs:anyURI"/><xs:element name="description" type="xs:string"/><xs:element minOccurs="0" name="language" type="xs:string"/><xs:element minOccurs="0" name="copyright" type="xs:string"/><xs:element minOccurs="0" name="managingEditor" type="xs:string"/><xs:element minOccurs="0" name="webMaster" type="xs:string"/><xs:element minOccurs="0" name="pubDate" type="xs:string"/><xs:element minOccurs="0" name="lastBuildDate" type="xs:string"/><xs:element maxOccurs="unbounded" minOccurs="0" name="category" nillable="true" type="rssCategory"/><xs:element minOccurs="0" name="generator" type="xs:string"/><xs:element minOccurs="0" name="docs" type="xs:anyURI"/><xs:element minOccurs="0" name="cloud" type="rssCloud"/><xs:element minOccurs="0" name="ttl" type="xs:int"/><xs:element minOccurs="0" name="image" type="rssImage"/><xs:element minOccurs="0" name="rating" type="xs:string"/><xs:element minOccurs="0" name="textInput" type="rssTextInput"/><xs:element minOccurs="0" name="skipHours" type="rssSkipHours"/><xs:element minOccurs="0" name="skipDays" type="rssSkipDays"/><xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/><xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="rssItem"/></xs:all></xs:complexType>
<xs:complexType name="rssCategory"><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="domain" type="xs:string"/></xs:extension></xs:simpleContent></xs:complexType>
<xs:complexType name="rssImage"><xs:all><xs:element name="url" type="xs:string"/><xs:element name="title" type="xs:string"/><xs:element name="link" type="xs:anyURI"/><xs:element default="88" minOccurs="0" name="width" type="xs:int"/><xs:element default="31" minOccurs="0" name="height" type="xs:int"/><xs:element minOccurs="0" name="description" type="xs:string"/></xs:all></xs:complexType>
<xs:complexType name="rssTextInput"><xs:all><xs:element name="title" type="xs:string"/><xs:element name="description" type="xs:string"/><xs:element name="name" type="xs:string"/><xs:element name="link" type="xs:anyURI"/></xs:all></xs:complexType>
<xs:complexType name="rssSkipHours"><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="hour" nillable="true" type="xs:string"/></xs:sequence></xs:complexType>
<xs:complexType name="rssSkipDays"><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="day" nillable="true" type="xs:string"/></xs:sequence></xs:complexType>
<xs:complexType name="rssSource"><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="url" type="xs:string" use="required"/></xs:extension></xs:simpleContent></xs:complexType>
<xs:complexType name="rssEnclosure"><xs:sequence/><xs:attribute name="url" type="xs:string" use="required"/><xs:attribute name="length" type="xs:string" use="required"/><xs:attribute name="type" type="xs:string" use="required"/></xs:complexType>
<xs:complexType name="rssGuid"><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="isPermaLink" type="xs:boolean"/></xs:extension></xs:simpleContent></xs:complexType>
<xs:complexType name="rssItem"><xs:all><xs:element minOccurs="0" name="title" type="xs:string"/><xs:element minOccurs="0" name="link" type="xs:anyURI"/><xs:element minOccurs="0" name="description" type="xs:string"/><xs:element minOccurs="0" name="author" type="xs:string"/><xs:element maxOccurs="unbounded" minOccurs="0" name="category" nillable="true" type="rssCategory"/><xs:element minOccurs="0" name="comments" type="xs:anyURI"/><xs:element minOccurs="0" name="enclosure" type="rssEnclosure"/><xs:element minOccurs="0" name="guid" type="rssGuid"/><xs:element name="pubDate" type="xs:string"/><xs:element minOccurs="0" name="source" type="rssSource"/><xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/></xs:all></xs:complexType>
</xs:schema>
    <xs:schema targetNamespace="http://soa.com/xsd/user/1.0" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:element name="UserID" type="xs:string"/>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="listAgreementDocumentsResponseMessage">
    <wsdl:part name="listAgreementDocumentsResponse" element="nms1:AgreementDocuments">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateAgreementResponseMessage">
    <wsdl:part element="xs:any">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAgreementDocumentsResponseMessage">
    <wsdl:part name="getAgreementDocumentsResponse" element="tns:rss">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAgreementDocumentRequestMessage">
    <wsdl:part name="DocumentID" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createNewAgreementRequestMessage">
    <wsdl:part name="parameter0" element="nms1:AgreementDocument">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="listAgreementDocumentsRequestMessage">
    <wsdl:part name="AgreementType" type="xs:string">
    </wsdl:part>
    <wsdl:part name="ResourceID" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="acceptAgreementResponseMessage">
    <wsdl:part element="xs:any">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createNewAgreementResponseMessage">
    <wsdl:part element="xs:any">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="acceptAgreementRequestMessage">
    <wsdl:part name="parameter0" element="nms1:UserAgreement">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAgreementDocumentResponseMessage">
    <wsdl:part element="xs:any">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAgreementDocumentsRequestMessage">
    <wsdl:part name="AgreementType" type="xs:string">
    </wsdl:part>
    <wsdl:part name="ResourceID" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteAgreementRequestMessage">
    <wsdl:part name="DocumentID" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteAgreementResponseMessage">
    <wsdl:part element="xs:any">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateAgreementRequestMessage">
    <wsdl:part name="DocumentID" type="xs:string">
    </wsdl:part>
    <wsdl:part name="parameter0" element="nms1:AgreementDocument">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="LegalsAPIPortType">
    <wsdl:operation name="listAgreementDocuments">
      <wsdl:input message="tns:listAgreementDocumentsRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:listAgreementDocumentsResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateAgreement">
      <wsdl:input message="tns:updateAgreementRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:updateAgreementResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAgreementDocuments">
      <wsdl:input message="tns:getAgreementDocumentsRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getAgreementDocumentsResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteAgreement">
      <wsdl:input message="tns:deleteAgreementRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:deleteAgreementResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="acceptAgreement">
      <wsdl:input message="tns:acceptAgreementRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:acceptAgreementResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAgreementDocument">
      <wsdl:input message="tns:getAgreementDocumentRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getAgreementDocumentResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createNewAgreement">
      <wsdl:input message="tns:createNewAgreementRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:createNewAgreementResponseMessage">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="LegalsAPIBinding" type="tns:LegalsAPIPortType">
    <shttp:binding/>
    <wsdl:operation name="listAgreementDocuments">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /legals</sdoc:displayName></wsdl:documentation>
    <shttp:operation location="/legals" method="GET" outputSerialization="application/vnd.soa.v71+xml,application/vnd.soa.v72+xml,application/vnd.soa.v80+xml,application/vnd.soa.v71+json,application/vnd.soa.v72+json,application/vnd.soa.v80+json,application/vnd.soa.v81+json,application/vnd.soa.v81+xml"/>
      <wsdl:input>
    <shttp:input name="AgreementType" part="AgreementType" type="query"/>
    <shttp:input name="ResourceID" part="ResourceID" type="query"/>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="listAgreementDocumentsResponse" part="listAgreementDocumentsResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateAgreement">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">PUT /legals/{DocumentID}</sdoc:displayName></wsdl:documentation>
    <shttp:operation inputSerialization="application/json,application/vnd.soa.v71+json,application/vnd.soa.v72+json,application/vnd.soa.v80+json,application/vnd.soa.v71+xml,application/vnd.soa.v72+xml,application/vnd.soa.v80+xml,application/vnd.soa.v81+json,application/vnd.soa.v81+xml" location="/legals/{DocumentID}" method="PUT" outputSerialization="text/plain"/>
      <wsdl:input>
    <shttp:input name="DocumentID" part="DocumentID" type="path"/>
    <shttp:input name="parameter0" part="parameter0" type="entity"/>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="" part="" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAgreementDocuments">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /legals</sdoc:displayName></wsdl:documentation>
    <shttp:operation location="/legals" method="GET" outputSerialization="text/xml,application/json,application/xml,application/rss+xml"/>
      <wsdl:input>
    <shttp:input name="AgreementType" part="AgreementType" type="query"/>
    <shttp:input name="ResourceID" part="ResourceID" type="query"/>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getAgreementDocumentsResponse" part="getAgreementDocumentsResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteAgreement">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">DELETE /legals/{DocumentID}</sdoc:displayName></wsdl:documentation>
    <shttp:operation location="/legals/{DocumentID}" method="DELETE" outputSerialization="text/plain"/>
      <wsdl:input>
    <shttp:input name="DocumentID" part="DocumentID" type="path"/>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="" part="" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="acceptAgreement">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">POST /legals/agreements</sdoc:displayName></wsdl:documentation>
    <shttp:operation inputSerialization="application/json,application/vnd.soa.v71+json,application/vnd.soa.v72+json,application/vnd.soa.v80+json,application/vnd.soa.v81+json,application/vnd.soa.v81+xml" location="/legals/agreements" method="POST" outputSerialization="text/plain"/>
      <wsdl:input>
    <shttp:input name="parameter0" part="parameter0" type="entity"/>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="" part="" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAgreementDocument">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /legals/{DocumentID}</sdoc:displayName></wsdl:documentation>
    <shttp:operation inputSerialization="*/*" location="/legals/{DocumentID}" method="GET" outputSerialization="application/json,application/vnd.soa.v71+json,application/vnd.soa.v72+json,application/vnd.soa.v80+json,application/vnd.soa.v71+xml,application/vnd.soa.v72+xml,application/vnd.soa.v80+xml,application/vnd.soa.v81+json,application/vnd.soa.v81+xml"/>
      <wsdl:input>
    <shttp:input name="DocumentID" part="DocumentID" type="path"/>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="" part="" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createNewAgreement">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">POST /legals</sdoc:displayName></wsdl:documentation>
    <shttp:operation inputSerialization="application/json,application/vnd.soa.v71+json,application/vnd.soa.v72+json,application/vnd.soa.v80+json,application/vnd.soa.v71+xml,application/vnd.soa.v72+xml,application/vnd.soa.v80+xml,application/vnd.soa.v81+json,application/vnd.soa.v81+xml" location="/legals" method="POST" outputSerialization="text/plain"/>
      <wsdl:input>
    <shttp:input name="parameter0" part="parameter0" type="entity"/>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="" part="" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="LegalsAPI">
<wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>The Legals service provides the ability to manage legal agreements in the Akana API Platform. Note that these operations are for managing legal
agreements general to the platform, such as end-user license agreements. Operations relating to legal agreements for access to a specific API are part of the APIs service.</p>]]></sdoc:description></wsdl:documentation>
    <wsdl:port name="LegalsAPI_rest_port_http" binding="tns:LegalsAPIBinding">
    <shttp:address location="http://0.0.0.0/api"/>
    </wsdl:port>
    <wsdl:port name="LegalsAPI_rest_port_https" binding="tns:LegalsAPIBinding">
    <shttp:address location="https://0.0.0.0/api"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
