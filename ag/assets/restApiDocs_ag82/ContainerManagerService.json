{"swagger":"2.0","info":{"title":"Container Management API","description":"This API is used to manage PM service containers.  Containers can be created based on metadata documents.  Containers may also be modifed or removed from the system.  The API also provides read/write access to container metadata and container listener configuration.  Information  on services hosted by a specific container can be retrieved.  To add or modify services other APIs can be used.","version":"8.0.0"},"host":"0.0.0.0","basePath":"/rest","schemes":["https","http"],"tags":[{"name":"ContainerManagerService"}],"paths":{"/containers":{"get":{"tags":["ContainerManagerService"],"summary":"Get Containers","description":"Fetch all defined containers.","operationId":"getContainers","produces":["application/xml","application/json"],"responses":{"default":{"schema":{"$ref":"#/definitions/containers"}}},"deprecated":false},"post":{"tags":["ContainerManagerService"],"summary":"Add Container (Form-based)","description":"Add a container to the system using a set of form parameters.","operationId":"addContainerForm","consumes":["application/x-www-form-urlencoded"],"produces":["application/xml","application/json"],"parameters":[{"in":"formData","name":"RandomPrefixBehavior","description":"The new container's RandomPrefixBehavior.","type":"string","required":false},{"in":"formData","name":"ContainerDescription","description":"The new container's description.","type":"string","required":false},{"in":"formData","name":"ContainerName","description":"The new container's name.","type":"string","required":false},{"in":"formData","name":"MetadataLocation","description":"The location of the container's metadata document.  Either this or the metadata parameter must be provided.","type":"string","required":false},{"in":"formData","name":"AddressOverrideBehavior","description":"The new container's AddressOverrideBehavior.","type":"string","required":false},{"in":"formData","name":"ClusterKey","description":"An optional cluster key if the container should be added to a cluster.","type":"string","required":false},{"in":"formData","name":"Metadata","description":"The new container's metdata as an XML form-encoded document.","type":"string","required":false},{"in":"formData","name":"ContainerLocation","description":"The new container's location.","type":"string","required":false},{"in":"formData","name":"OrganizationKey","description":"The organization that should contain the new container.","type":"string","required":false}],"responses":{"201":{"description":"Created","schema":{"$ref":"#/definitions/Container"}}},"deprecated":false}},"/containers/{key}/listeners/{listener}/pki":{"post":{"tags":["ContainerManagerService"],"summary":"Uploads PKI keys and certificate for a listener.","description":"<p>Uploads a keystore that holds PKI key/cert data for a listener. The following is an example request and response.</p><p>Request:<br>POST /rest/uddi:978841b1-7088-11e4-8574-cb4613969888/listeners/https1?alias=https1&keystorePass=changeit&aliasPass=changeit HTTP/1.1<br>Content-Type: multipart/form-data; boundary=Jlo6Rm_FfX2_s3WQ5QhfUoY6qqLxTbdyHMSkf0W<br>--Jlo6Rm_FfX2_s3WQ5QhfUoY6qqLxTbdyHMSkf0W<br>Content-Disposition: form-data; name=\"fileUpload\"; filename=\"test.jks\"<br>Content-Type: application/octet-stream<br>Content-Transfer-Encoding: binary<br>&lt;File content omitted&gt;</p><p>Response:<br>HTTP/1.1 201 Created if creation successful<br>{<br>\"Endpoint\" : &lt;Endpoint structure for listener&gt;<br>}","operationId":"uploadContainerListenerPKI","consumes":["multipart/form-data"],"parameters":[{"in":"query","name":"forceTrust","description":"Add to trust store if not trusted already. If false and not trusted an error will be returned. Can be omitted. Default is false.","type":"boolean","required":false},{"in":"path","name":"listener","description":"The listener name.","type":"string","required":false},{"in":"query","name":"alias","description":"Alias in the keystore to use.","type":"string","required":true},{"in":"query","name":"aliasPass","description":"Alias password. Can be omitted if not needed or the same as the keystore password.","type":"string","required":false},{"in":"query","name":"keystorePass","description":"Keystore password.","type":"string","required":false},{"in":"path","name":"key","description":"The container key.","type":"string","required":true}],"responses":{"default":{}},"deprecated":false}},"/containers/{key}/metadata":{"get":{"tags":["ContainerManagerService"],"summary":"Get Container Metadata","description":"Get a container's metadata.","operationId":"getContainerMetadataREST","produces":["application/xml","application/json"],"parameters":[{"in":"path","name":"key","description":"The container key.","type":"string","required":false}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/ContainerMetadataType"}},"404":{"description":"Specified container not found (Invalid container key)","schema":{"$ref":"#/definitions/ContainerMetadataType"}}},"deprecated":false},"put":{"tags":["ContainerManagerService"],"summary":"Modify Container Metadata (Form-Based)","description":"Modify a container's metadata.","operationId":"modifyContainerMetadataREST","consumes":["application/xml","application/json"],"produces":["application/xml","application/json"],"parameters":[{"in":"path","name":"key","description":"The container key.","type":"string","required":false}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/ContainerMetadataType"}},"404":{"description":"Specified container not found (Invalid container key)","schema":{"$ref":"#/definitions/ContainerMetadataType"}}},"deprecated":false},"post":{"tags":["ContainerManagerService"],"summary":"Modify Container Metadata (Form-Based)","description":"Modify a container's metadata using a set of form parameters.","operationId":"modifyContainerMetadataFORM","consumes":["application/x-www-form-urlencoded"],"produces":["application/xml","application/json"],"parameters":[{"in":"formData","name":"MetadataLocation","description":"The container metadata location.  Either this or the metadata string must be provided.","type":"string","required":false},{"in":"formData","name":"Metadata","description":"The container metadata as an encoded XML string.","type":"string","required":false},{"in":"path","name":"key","description":"The container key.","type":"string","required":false}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/Container"}},"404":{"description":"Specified container not found (Invalid container key)","schema":{"$ref":"#/definitions/Container"}}},"deprecated":false}},"/containers/{key}/pki/outbound":{"post":{"tags":["ContainerManagerService"],"summary":"Uploads outbound PKI keys and certificate for a container.","description":"<p>Uploads a keystore that holds outbound PKI key/cert data for a container. The following is an example request and response.</p><p>Request:<br>POST /rest/uddi:978841b1-7088-11e4-8574-cb4613969888/pki?alias=https1&keystorePass=changeit&aliasPass=changeit HTTP/1.1<br>Content-Type: multipart/form-data; boundary=Jlo6Rm_FfX2_s3WQ5QhfUoY6qqLxTbdyHMSkf0W<br>--Jlo6Rm_FfX2_s3WQ5QhfUoY6qqLxTbdyHMSkf0W<br>Content-Disposition: form-data; name=\"fileUpload\"; filename=\"test.jks\"<br>Content-Type: application/octet-stream<br>Content-Transfer-Encoding: binary<br>&lt;File content omitted&gt;</p><p>Response:<br>HTTP/1.1 201 Created if creation successful","operationId":"uploadContainerOutboundPKI","consumes":["multipart/form-data"],"parameters":[{"in":"query","name":"forceTrust","description":"Add to trust store if not trusted already. If false and not trusted an error will be returned. Can be omitted. Default is false.","type":"boolean","required":false},{"in":"query","name":"alias","description":"Alias in the keystore to use.","type":"string","required":true},{"in":"query","name":"aliasPass","description":"Alias password. Can be omitted if not needed or the same as the keystore password.","type":"string","required":false},{"in":"query","name":"keystorePass","description":"Keystore password.","type":"string","required":false},{"in":"path","name":"key","description":"The container key.","type":"string","required":true}],"responses":{"default":{}},"deprecated":false}},"/containers#addContainerREST":{"post":{"tags":["ContainerManagerService"],"summary":"Add a Container","description":"Add a container.","operationId":"addContainerREST","consumes":["application/xml","application/json"],"produces":["application/xml","application/json"],"responses":{"201":{"description":"Created","schema":{"$ref":"#/definitions/Container"}},"400":{"description":"Invalid container data provided.","schema":{"$ref":"#/definitions/Container"}}},"deprecated":false}},"/containers/{key}#modifyContainerREST":{"put":{"tags":["ContainerManagerService"],"summary":"Modify a Container","description":"Modify a container.","operationId":"modifyContainerREST","consumes":["application/xml","application/json"],"produces":["application/xml","application/json"],"parameters":[{"in":"path","name":"key","description":"The container key.","type":"string","required":false}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/Container"}},"404":{"description":"Specified container not found (Invalid container key)","schema":{"$ref":"#/definitions/Container"}}},"deprecated":false}},"/containers/{cluster}/nodes#addClusterNodeForm":{"post":{"tags":["ContainerManagerService"],"summary":"Add a Container to a Cluster (Form-Based)","description":"Add a container to a cluster.","operationId":"addClusterNodeForm","consumes":["application/x-www-form-urlencoded"],"produces":["application/xml","application/json"],"parameters":[{"in":"path","name":"cluster","description":"The cluster key.","type":"string","required":false},{"in":"formData","name":"ClusterNodeKey","description":"The container key.","type":"string","required":false}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/ClusterNodeList"}},"404":{"description":"Specified container or cluster not found (Invalid key)","schema":{"$ref":"#/definitions/ClusterNodeList"}}},"deprecated":false}},"/containers/{key}/services":{"get":{"tags":["ContainerManagerService"],"summary":"Get Container Services","description":"Fethc all services hosted in a specified container.","operationId":"getContainerServices","produces":["application/xml","application/json"],"parameters":[{"in":"path","name":"key","description":"The container key.","type":"string","required":false}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/hostedServices"}},"404":{"description":"Specified container not found (Invalid container key)","schema":{"$ref":"#/definitions/hostedServices"}}},"deprecated":false}},"/containers/{key}":{"get":{"tags":["ContainerManagerService"],"summary":"Fetch a Container","description":"Retreive detailed information on a specific container.","operationId":"getContainerREST","produces":["application/xml","application/json"],"parameters":[{"in":"path","name":"key","description":"The container key.","type":"string","required":false}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/Container"}},"404":{"description":"Specified container not found (Invalid container key)","schema":{"$ref":"#/definitions/Container"}}},"deprecated":false},"put":{"tags":["ContainerManagerService"],"summary":"Modify Container (Form-based)","description":"Modify an existing container using a set of form parameters.","operationId":"modifyContainerForm","consumes":["application/x-www-form-urlencoded"],"produces":["application/xml","application/json"],"parameters":[{"in":"formData","name":"RandomPrefixBehavior","description":"The new container's RandomPrefixBehavior.","type":"string","required":false},{"in":"formData","name":"ContainerDescription","description":"The container's new description.","type":"string","required":false},{"in":"formData","name":"ContainerName","description":"The container's new name.","type":"string","required":false},{"in":"formData","name":"AddressOverrideBehavior","description":"The new container's AddressOverrideBehavior.","type":"string","required":false},{"in":"formData","name":"ContainerLocation","description":"The container's new location.","type":"string","required":false},{"in":"path","name":"key","description":"The container key.","type":"string","required":false},{"in":"formData","name":"OrganizationKey","description":"The container's new organization.","type":"string","required":false}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/Container"}},"404":{"description":"Specified container not found (Invalid container key)","schema":{"$ref":"#/definitions/Container"}}},"deprecated":false},"delete":{"tags":["ContainerManagerService"],"summary":"Delete a Container","description":"Remove a container from the system.","operationId":"deleteContainerREST","parameters":[{"in":"path","name":"key","description":"The container key.","type":"string","required":false}],"responses":{"200":{"description":"Success"},"404":{"description":"Specified container not found (Invalid container key)"}},"deprecated":false}},"/containers/{key}/listeners/{listener}":{"get":{"tags":["ContainerManagerService"],"summary":"Get Listener","description":"Fetch details for a specific container listener.","operationId":"getContainerListener","produces":["application/xml","application/json"],"parameters":[{"in":"path","name":"listener","description":"The listener name.","type":"string","required":false},{"in":"path","name":"key","description":"The container key.","type":"string","required":false}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/endpoint"}},"404":{"description":"Specified container not found (Invalid container key) or invalid listener name","schema":{"$ref":"#/definitions/endpoint"}}},"deprecated":false},"put":{"tags":["ContainerManagerService"],"summary":"Modify a Listener","description":"Modify the configuration of a container listener.","operationId":"modifyContainerListener","consumes":["application/xml","application/json"],"produces":["application/xml","application/json"],"parameters":[{"in":"path","name":"listener","description":"The listener name.","type":"string","required":false},{"in":"path","name":"key","description":"The container key.","type":"string","required":false}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/endpoint"}},"404":{"description":"Specified container not found (Invalid container key) or invalid listener name","schema":{"$ref":"#/definitions/endpoint"}}},"deprecated":false},"delete":{"tags":["ContainerManagerService"],"summary":"Remove a Listener","description":"Remove a container listener.","operationId":"removeContainerListener","parameters":[{"in":"path","name":"listener","description":"The listener name.","type":"string","required":false},{"in":"path","name":"key","description":"The container key.","type":"string","required":false}],"responses":{"200":{"description":"Success"},"404":{"description":"Specified container not found (Invalid container key) or invalid listener name"}},"deprecated":false}},"/containers/{cluster}/nodes":{"get":{"tags":["ContainerManagerService"],"summary":"Get Cluster Nodes","description":"Get a list of containers in a cluster.","operationId":"getClusterNodesREST","produces":["application/xml","application/json"],"parameters":[{"in":"path","name":"cluster","description":"The cluster key.","type":"string","required":false}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/ClusterNodeList"}},"404":{"description":"Specified container or cluster not found (Invalid key)","schema":{"$ref":"#/definitions/ClusterNodeList"}}},"deprecated":false},"post":{"tags":["ContainerManagerService"],"summary":"Add a Container to a Cluster","description":"Add a container to a cluster.","operationId":"addClusterNodeREST","consumes":["application/xml","application/json"],"produces":["application/xml","application/json"],"parameters":[{"in":"query","name":"container","description":"The container key.","type":"string","required":false},{"in":"path","name":"cluster","description":"The cluster key.","type":"string","required":false}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/ClusterNodeList"}},"404":{"description":"Specified container or cluster not found (Invalid key)","schema":{"$ref":"#/definitions/ClusterNodeList"}}},"deprecated":false}},"/containers/{cluster}/nodes/{node}":{"delete":{"tags":["ContainerManagerService"],"summary":"Remove a Container from a Cluster","description":"Remove a container from a cluster.","operationId":"deleteClusterNodeREST","produces":["application/xml","application/json"],"parameters":[{"in":"path","name":"cluster","description":"The cluster key.","type":"string","required":false},{"in":"path","name":"node","description":"The container key.","type":"string","required":false}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/ClusterNodeList"}},"404":{"description":"Specified container or cluster not found (Invalid key)","schema":{"$ref":"#/definitions/ClusterNodeList"}}},"deprecated":false}},"/containers/{key}/listeners":{"get":{"tags":["ContainerManagerService"],"summary":"Get Container Listeners","description":"Get all listeners configured for a container.","operationId":"getContainerListeners","produces":["application/xml","application/json"],"parameters":[{"in":"path","name":"key","description":"The container key.","type":"string","required":false}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/endpoints"}},"404":{"description":"Specified container not found (Invalid container key)","schema":{"$ref":"#/definitions/endpoints"}}},"deprecated":false},"post":{"tags":["ContainerManagerService"],"summary":"Add Container Listener","description":"Add a listener to a container.","operationId":"addContainerListener","consumes":["application/xml","application/json"],"produces":["application/xml","application/json"],"parameters":[{"in":"path","name":"key","description":"The container key.","type":"string","required":false}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/endpoint"}},"404":{"description":"Specified container not found (Invalid container key)","schema":{"$ref":"#/definitions/endpoint"}}},"deprecated":false}}},"definitions":{"nameValuePair":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":["name"],"properties":{"name":{"type":"string"},"value":{"type":"string"}}},"CapabilityType":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":["Id"],"properties":{"Id":{"type":"string","format":"uri"},"Name":{"type":"string"},"Description":{"type":"string"},"CapabilityOptions":{"type":"object"},"CapabilityConfigParameters":{"type":"object"},"BootstrapConfiguration":{"type":"object"}}},"endpoints":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":["Endpoint"],"properties":{"Endpoint":{"type":"array","minItems":1,"items":{"$ref":"#/definitions/endpoint"}}}},"CapabilityConfigParametersType":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":[],"properties":{"ConfigParameter":{"type":"array","minItems":0,"items":{"$ref":"#/definitions/CapabilityConfigParameterType"}}}},"BootstrapConfigurationType":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":[],"properties":{}},"Metadata":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":[],"properties":{}},"endpoint":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":[],"properties":{"name":{"type":"string"},"description":{"type":"string"},"URI":{"type":"string"},"Properties":{"type":"array","minItems":0,"items":{"$ref":"#/definitions/nameValuePair"}},"Links":{"type":"array","minItems":0,"items":{"$ref":"#/definitions/atomLink"}}}},"Container":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":[],"properties":{"ContainerName":{"type":"string"},"OrganizationKey":{"type":"string"},"ClusterKey":{"type":"string"},"ContainerDescription":{"type":"string"},"ContainerLocation":{"type":"string"},"AdminConsoleUrl":{"type":"string"},"State":{"type":"string"},"ClusterNodeList":{"type":"array","minItems":0,"items":{"type":"string"}},"MetadataLocation":{"type":"string","format":"uri"},"Metadata":{"type":"object"},"ContainerKey":{"type":"string"},"LastUpdated":{"type":"string","format":"date-time"},"Link":{"type":"array","minItems":0,"items":{"$ref":"#/definitions/atomLink"}},"AddressOverrideBehavior":{"type":"string"},"RandomPrefixBehavior":{"type":"string"}}},"ClusterNodeList":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":[],"properties":{"ContainerKey":{"type":"array","minItems":0,"items":{"type":"string"}}}},"ContainerMetadataType":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":["ContainerKey","ContainerType"],"properties":{"ContainerKey":{"type":"string"},"ContainerName":{"type":"string"},"ContainerType":{"type":"string","format":"uri"},"ContainerTypeName":{"type":"string"},"X509Identity":{"type":"object"},"Capabilities":{"type":"object"}}},"CapabilitiesType":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":[],"properties":{"Capability":{"type":"array","minItems":0,"items":{"$ref":"#/definitions/CapabilityType"}}}},"X509CertificateChain":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":["X509Certificate"],"properties":{"X509Certificate":{"type":"array","minItems":1,"items":{"type":"string","format":"binary"}}}},"hostedService":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":[],"properties":{"name":{"type":"string"},"description":{"type":"string"},"key":{"type":"string"},"qname":{"type":"string"},"organization":{"type":"string"},"Properties":{"type":"array","minItems":0,"items":{"$ref":"#/definitions/nameValuePair"}},"Links":{"type":"array","minItems":0,"items":{"$ref":"#/definitions/atomLink"}}}},"atomLink":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":["href"],"properties":{"length":{"type":"string"},"title":{"type":"string"},"hreflang":{"type":"string"},"rel":{"type":"string"},"type":{"type":"string"},"href":{"type":"string","format":"uri"},"base":{"type":"string","format":"uri"},"lang":{"type":"string"}}},"hostedServices":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":[],"properties":{"Service":{"type":"array","minItems":0,"items":{"$ref":"#/definitions/hostedService"}}}},"containers":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":["Container"],"properties":{"Container":{"type":"array","minItems":1,"items":{"$ref":"#/definitions/Container"}}}},"CapabilityConfigParameterType":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":["Id","Name","Element"],"properties":{"Id":{"type":"string"},"minOccurs":{"type":"string"},"maxOccurs":{"type":"string"},"Name":{"type":"string"},"Description":{"type":"string"},"Element":{"type":"string"}}},"CapabilityOptionsType":{"$schema":"http://json-schema.org/draft-04/schema#","type":"object","required":[],"properties":{}}}}