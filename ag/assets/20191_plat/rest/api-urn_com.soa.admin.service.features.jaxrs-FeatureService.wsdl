<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions targetNamespace="urn:com.soa.admin.service.features.jaxrs" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="urn:com.soa.admin.service.features.jaxrs" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:nms3="http://soa.com/products/admin/console/common/1.0" xmlns:nms2="http://soa.com/products/admin/console/features/1.0" xmlns:nms1="http://soa.com/products/admin/console/obr/1.0" xmlns:shttp="http://soa.com/wsdl/http">
  <wsdl:types>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://soa.com/products/admin/console/obr/1.0" version="1.0" xmlns:ns1="http://soa.com/products/admin/console/common/1.0" xmlns:tns="http://soa.com/products/admin/console/obr/1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:import namespace="http://soa.com/products/admin/console/common/1.0"/>
<xs:element name="InstallStatus" type="tns:installStatus"/>
<xs:element name="report" type="tns:resolutionReport"/>
<xs:element name="requirements" type="tns:resourceRequirements"/>
<xs:element name="resource" type="tns:resourceInfo"/>
<xs:complexType name="installStatus"><xs:sequence><xs:element minOccurs="0" name="id" type="xs:string"/><xs:element name="total" type="xs:int"/><xs:element name="installed" type="xs:int"/><xs:element minOccurs="0" name="status" type="xs:string"/><xs:element minOccurs="0" name="message" type="xs:string"/><xs:element minOccurs="0" ref="tns:report"/><xs:element minOccurs="0" name="links"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="link" type="ns1:link"/></xs:sequence></xs:complexType></xs:element></xs:sequence></xs:complexType>
<xs:complexType name="resolutionReport"><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="unsatisfiedRequirements" nillable="true" type="tns:resourceRequirements"/><xs:element maxOccurs="unbounded" minOccurs="0" name="requiredResources" nillable="true" type="tns:resourceInfo"/><xs:element maxOccurs="unbounded" minOccurs="0" name="optionalResources" nillable="true" type="tns:resourceInfo"/><xs:element maxOccurs="unbounded" minOccurs="0" name="addedResources" nillable="true" type="tns:resourceInfo"/><xs:element minOccurs="0" name="status" type="xs:string"/><xs:element minOccurs="0" name="id" type="xs:string"/><xs:element minOccurs="0" name="links"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="link" type="ns1:link"/></xs:sequence></xs:complexType></xs:element></xs:sequence></xs:complexType>
<xs:complexType name="resourceRequirements"><xs:sequence><xs:element minOccurs="0" name="resource" type="xs:string"/><xs:element maxOccurs="unbounded" minOccurs="0" name="requirements" nillable="true" type="xs:string"/></xs:sequence></xs:complexType>
<xs:complexType name="resourceInfo"><xs:sequence><xs:element minOccurs="0" name="id" type="xs:string"/><xs:element minOccurs="0" name="symbolicName" type="xs:string"/><xs:element minOccurs="0" name="presentationName" type="xs:string"/><xs:element minOccurs="0" name="repositoryUrl" type="xs:string"/><xs:element minOccurs="0" name="bundleUrl" type="xs:string"/><xs:element minOccurs="0" name="description" type="xs:string"/><xs:element minOccurs="0" name="size" type="xs:string"/><xs:element minOccurs="0" name="version" type="xs:string"/><xs:element maxOccurs="unbounded" minOccurs="0" name="provides" nillable="true" type="xs:string"/><xs:element maxOccurs="unbounded" minOccurs="0" name="requires" nillable="true" type="xs:string"/><xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true" type="ns1:nameValuePair"/></xs:sequence></xs:complexType>
</xs:schema>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://soa.com/products/admin/console/features/1.0" version="1.0" xmlns:ns1="http://soa.com/products/admin/console/common/1.0" xmlns:tns="http://soa.com/products/admin/console/features/1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:import namespace="http://soa.com/products/admin/console/common/1.0"/>
<xs:element name="FeatureInfo" type="tns:featureInfo"/>
<xs:element name="FeatureSet" type="tns:featureSet"/>
<xs:complexType name="featureSet"><xs:sequence><xs:element minOccurs="0" name="links"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="link" type="ns1:link"/></xs:sequence></xs:complexType></xs:element><xs:element maxOccurs="unbounded" minOccurs="0" name="features" nillable="true" type="tns:featureInfo"/></xs:sequence></xs:complexType>
<xs:complexType name="featureInfo"><xs:sequence><xs:element minOccurs="0" name="id" type="xs:string"/><xs:element minOccurs="0" name="name" type="xs:string"/><xs:element minOccurs="0" name="description" type="xs:string"/><xs:element minOccurs="0" name="version" type="xs:string"/><xs:element minOccurs="0" name="symbolicName" type="xs:string"/><xs:element minOccurs="0" name="category" type="xs:string"/><xs:element minOccurs="0" name="links"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="link" type="ns1:link"/></xs:sequence></xs:complexType></xs:element></xs:sequence></xs:complexType>
</xs:schema>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://soa.com/products/admin/console/common/1.0" version="1.0" xmlns:tns="http://soa.com/products/admin/console/common/1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:element name="NameValuePair" type="tns:nameValuePair"/>
<xs:element name="link" type="tns:link"/>
<xs:complexType name="link"><xs:sequence><xs:element minOccurs="0" name="href" type="xs:string"/><xs:element minOccurs="0" name="rel" type="xs:string"/><xs:element minOccurs="0" name="title" type="xs:string"/><xs:element minOccurs="0" name="type" type="xs:string"/></xs:sequence></xs:complexType>
<xs:complexType name="nameValuePair"><xs:sequence><xs:element minOccurs="0" name="name" type="xs:string"/><xs:element minOccurs="0" name="value" type="xs:string"/></xs:sequence></xs:complexType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="installResponseMessage">
    <wsdl:part name="installResponse" element="nms1:InstallStatus">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAvailableUpdatesResponseMessage">
    <wsdl:part name="getAvailableUpdatesResponse" element="nms1:report">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAvailableUpdatesRequestMessage">
  </wsdl:message>
  <wsdl:message name="getAvailableFeaturesResponseMessage">
    <wsdl:part name="getAvailableFeaturesResponse" element="nms2:FeatureSet">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeFeatureRequestMessage">
    <wsdl:part name="id" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getFeaturesResponseMessage">
    <wsdl:part name="getFeaturesResponse" element="nms2:FeatureSet">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAvailableFeaturesRequestMessage">
    <wsdl:part name="filter" type="xs:string">
    </wsdl:part>
    <wsdl:part name="category" type="tns:String[]">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getResolutionsRequestMessage">
  </wsdl:message>
  <wsdl:message name="getFeatureRequestMessage">
    <wsdl:part name="id" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getResolutionsResponseMessage">
    <wsdl:part name="getResolutionsResponse" element="nms1:report">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="installRequestMessage">
    <wsdl:part name="body" element="nms1:report">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="resolveRequestMessage">
    <wsdl:part name="body" element="nms2:FeatureSet">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getInstallStatusResponseMessage">
    <wsdl:part name="getInstallStatusResponse" element="nms1:InstallStatus">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAvailableCategoriesRequestMessage">
  </wsdl:message>
  <wsdl:message name="getFeatureResponseMessage">
    <wsdl:part name="getFeatureResponse" element="nms2:FeatureInfo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getResolutionDetailResponseMessage">
    <wsdl:part name="getResolutionDetailResponse" element="nms1:report">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getFeaturesRequestMessage">
  </wsdl:message>
  <wsdl:message name="getInstalledFeaturesRequestMessage">
  </wsdl:message>
  <wsdl:message name="removeFeatureResponseMessage">
  </wsdl:message>
  <wsdl:message name="getResolutionDetailRequestMessage">
    <wsdl:part name="id" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getInstallStatusRequestMessage">
    <wsdl:part name="id" type="xs:string">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="resolveResponseMessage">
    <wsdl:part name="resolveResponse" element="nms1:report">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getInstalledFeaturesResponseMessage">
    <wsdl:part name="getInstalledFeaturesResponse" element="nms2:FeatureSet">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAvailableCategoriesResponseMessage">
    <wsdl:part name="getAvailableCategoriesResponse" element="nms3:NameValuePair">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="FeatureServicePortType">
    <wsdl:operation name="getInstallStatus">
      <wsdl:input message="tns:getInstallStatusRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getInstallStatusResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getFeature">
      <wsdl:input message="tns:getFeatureRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getFeatureResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAvailableUpdates">
      <wsdl:input message="tns:getAvailableUpdatesRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getAvailableUpdatesResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAvailableFeatures">
      <wsdl:input message="tns:getAvailableFeaturesRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getAvailableFeaturesResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="install">
      <wsdl:input message="tns:installRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:installResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getFeatures">
      <wsdl:input message="tns:getFeaturesRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getFeaturesResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getInstalledFeatures">
      <wsdl:input message="tns:getInstalledFeaturesRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getInstalledFeaturesResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAvailableCategories">
      <wsdl:input message="tns:getAvailableCategoriesRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getAvailableCategoriesResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeFeature">
      <wsdl:input message="tns:removeFeatureRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:removeFeatureResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getResolutions">
      <wsdl:input message="tns:getResolutionsRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getResolutionsResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getResolutionDetail">
      <wsdl:input message="tns:getResolutionDetailRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:getResolutionDetailResponseMessage">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="resolve">
      <wsdl:input message="tns:resolveRequestMessage">
    </wsdl:input>
      <wsdl:output message="tns:resolveResponseMessage">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="FeatureServiceBinding" type="tns:FeatureServicePortType">
    <shttp:binding/>
    <wsdl:operation name="getInstallStatus">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /install/{id}</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get Install Status]]></sdoc:summary><sdoc:response code="200" message="Success" xmlns:sdoc="http://soa.com/wsdl/doc"/><sdoc:response code="404" message="Not Found" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[The specified job cannot be found.  If the job has completed, it will eventually be removed from the system.]]></sdoc:description></sdoc:response><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Get the status of an install job.  When an install is started using the install() operation,
a &ldquo;job&rdquo; is created that performs the actual work of resolving and installing the selected
features and their dependencies.  Because this can take some time, the job is executed asynchronously.<br  />
This operation allows the status of a background install job to be retrieved.</p>
<p>The normal sequence of states for an install job are:
UNKNOWN -> RESOLVING -> RESOLVED -> INSTALLING -> COMPLETING -> COMPLETE</p>
<p>These states have the following meaning:</p>
<ul>
<li><strong>UNKNOWN</strong> Indicates that the installation job is queued but has not started.</li>
<li><strong>RESOLVING</strong> Even if the features to be installed have been resolved earlier, the install
job performs a resolve before starting installation.</li>
<li><strong>RESOLVED</strong> When the resolve operation completes successfully.</li>
<li><strong>INSTALLING</strong> Bundles and features are actively being installed to the system.  The returned
status object contains a count of the total number of bundles to be installed, and the number
successfully installed so far.</li>
<li><strong>COMPLETING</strong> All bundles have been installed, and the job is gathering any configuration
tasks.</li>
<li><strong>COMPLETE</strong> The install has completed successfully and all features are now available for
configuration, if necessary.  The returned status contains a final report on the installation.</li>
</ul>
<h4>Sample Request</h4>
<pre><code>GET /admin/features/install/c8e29be1-19c0-4132-a6bb-01b2a3a3efc6 HTTP/1.1
Accept: application/json
</code></pre>
<h4>Sample Response</h4>
<p>The following response shows an installation in progress.</p>
<pre><code>HTTP/1.1 200 OK
Content-Type:application/json; charset=UTF-8

{
  "id" : "c8e29be1-19c0-4132-a6bb-01b2a3a3efc6",
  "total" : 213,
  "installed" : 211,
  "status" : "INSTALLING",
  "links" : [ {
    "href" : "http://localhost:9900/admin/features/install/c8e29be1-19c0-4132-a6bb-01b2a3a3efc6",
    "rel" : "self"
  } ]
}
</code></pre>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="/install/{id}" method="GET" outputSerialization="application/json,application/xml,text/xml"/>
      <wsdl:input>
    <shttp:input name="id" part="id" type="path"/>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getInstallStatusResponse" part="getInstallStatusResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getFeature">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /installed/{id}</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get Feature Detail]]></sdoc:summary><sdoc:response code="200" message="Success" xmlns:sdoc="http://soa.com/wsdl/doc"/><sdoc:response code="404" message="Not Found" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[The feature symbolic name can't be found]]></sdoc:description></sdoc:response><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Fetch detailed information for an installed feature.</p>
<h4>Sample Request</h4>
<pre><code>GET /admin/features/installed/com.soa.admin.console HTTP/1.1
Accept: application/json
</code></pre>
<h4>Sample Response</h4>
<pre><code>HTTP/1.1 200 OK
Content-Type:application/json; charset=UTF-8

{
  "name": "Akana Admin Console",
  "description": "The Admin Console is used to manage...",
  "version": "8.3.0",
  "symbolicName": "com.soa.admin.console",
  "category": "x-soa-feature",
  "links": [
    {
      "href": "http://localhost:9900/admin/features/com.soa.admin.console",
      "rel": "self"
    }
  ]
}
</code></pre>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="/installed/{id}" method="GET" outputSerialization="application/json,application/xml,text/xml"/>
      <wsdl:input>
    <shttp:input name="id" part="id" type="path"/>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getFeatureResponse" part="getFeatureResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAvailableUpdates">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /updates</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get Available Updates]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Fetch information on any updates available for installed features.</p>
<h4>Sample Request</h4>
<pre><code>GET /admin/features/updates HTTP/1.1
Accept: application/json
</code></pre>
<h4>Sample Response</h4>
<p>The response is a resolution report that calls out any new dependencies that need to be installed for the
deployed features set.</p>
<pre><code>HTTP/1.1 200 OK
Content-Type:application/json; charset=UTF-8

{
    "unsatisfiedRequirements": [
        ...
    ],
    "requiredResources": [
        ...
    ],
    "optionalResources": [
        ...
    ],
    "addedResources": [
        ...
    ],
    "status": "RESOLVED",
    "id": "ResolutionReport-1",
    "links": [
        {
            "href": "http://localhost:9900/admin/features/resolve/ResolutionReport-1",
            "rel": "self"
        },
        {
            "href": "http://localhost:9900/admin/features/install",
            "rel": "install"
        }
    ]
}
</code></pre>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="/updates" method="GET" outputSerialization="application/json,application/xml,text/xml"/>
      <wsdl:output>
    <shttp:output name="getAvailableUpdatesResponse" part="getAvailableUpdatesResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAvailableFeatures">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /available</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get Available Features]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Get all features that are available for deployment.</p>
<h4>Sample Request</h4>
<pre><code>GET /admin/features/available HTTP/1.1
Accept: application/json
</code></pre>
<h4>Sample Response</h4>
<p>The following example has been truncated for brevity.  The resolve link provides the location
for client to perform a resolve of a set of selected features.</p>
<pre><code>HTTP/1.1 200 OK
Content-Type:application/json; charset=UTF-8

{
    "links": [
        {
            "href": "http://localhost:9900/admin/features/available?filter=(symbolicname%3D*)",
            "rel": "self"
        },
        {
            "href": "http://localhost:9900/admin/features/resolve",
            "rel": "resolve"
        }
    ],
    "features": [
        {
            "name": "Akana Network Director",
            "description": "This feature enables a Container to host Virtual Services. The Virtual Services are defined in the Akana Management Console. When the Network Director feature is enabled, the Container's metadata is updated to reflect this support. The metadata must be updated in the Akana Management Console so that it is aware that Virtual Services can be hosted on the Container. The feature also enables support for default Bindings and Policies. The default Bindings are SOAP and HTTP (REST and POX). The default Policies are WS-Addressing, WS-Auditing, WS-Security, HTTP Security, Authentication, and Authorization.",
            "version": "8.3.0",
            "symbolicName": "com.soa.feature.network.director",
            "category": "x-soa-feature"
        },
        {
            "name": "Akana Community Manager",
            "description": "This feature includes the complete Community Manager developers portal including the APIs that can be used by applications wanting to integrate with Community Manager. This feature should be configured with the same database that Policy Manager services feature is configured with though Policy Manager services feature and Community Manager need not be deployed in the same container.",
            "version": "8.3.0",
            "symbolicName": "com.soa.atmosphere.feature",
            "category": "x-soa-feature"
        },
        {
            "name": "Akana Kerberos Impersonation",
            "description": "This plug-in enables kerberos constrained delegation, or impersonation. Requires Java 1.8.",
            "version": "8.3.0",
            "symbolicName": "com.soa.feature.kerberos.impersonation",
            "category": "x-soa-plugin"
        },
        {
            "name": "Akana Policy Manager Console",
            "description": "This feature includes a web based user interface for the central Policy Manager governance application. The user interface provides a dashboard and the primary interface for configuration, management and administration of Policy Manager and Service Manager. The console must interact with a Container (may be the same container) configured with the Akana Policy Manager Services to fulfill the core central governance application requirements.",
            "version": "8.3.0",
            "symbolicName": "com.soa.feature.console",
            "category": "x-soa-feature"
        },
        ...
    ]
}
</code></pre>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="/available" method="GET" outputSerialization="application/json,application/xml,text/xml"/>
      <wsdl:input>
    <shttp:input name="filter" part="filter" type="query"/>
    <shttp:input name="category" part="category" type="query"/>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getAvailableFeaturesResponse" part="getAvailableFeaturesResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="install">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">POST /install</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Install Features]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Install a set of features represented by the result of a resolve operation.</p>
<h4>Sample Request</h4>
<pre><code>POST /admin/features/install HTTP/1.1
Content-Type: application/json
Accept: application/json

{
  "unsatisfiedRequirements" : [ ],
  "requiredResources" : [ {
    "id" : "com.soa.platform.j2ee/8.3.0",
    "symbolicName" : "com.soa.platform.j2ee",
    ...
  }, {
    "id" : "com.soa.grid/8.3.0",
    "symbolicName" : "com.soa.grid",
    ...
  }, {
    "id" : "org.bitbucket.b_c.jose4j/0.4.4",
    "symbolicName" : "org.bitbucket.b_c.jose4j",
    ...
  }, {
    "id" : "com.soa.security/8.3.0",
    "symbolicName" : "com.soa.security",
    ...
  }, {
    "id" : "com.google.guava/18.0.0",
    "symbolicName" : "com.google.guava",
    ...
  }, {
    "id" : "com.google.gson/2.5.0",
    "symbolicName" : "com.google.gson",
    ...
  }, {
    "id" : "com.netflix.rxjava.core/0.20.0",
    "symbolicName" : "com.netflix.rxjava.core",
    ...
  }, {
    "id" : "com.soa.persistence/8.3.0",
    "symbolicName" : "com.soa.persistence",
    ...
  }, {
    "id" : "jcifs/0.9.4",
    "symbolicName" : "jcifs",
    ...
  }
  ...
  ],
  "optionalResources" : [ {
    "id" : "org.freemarker.freemarker/2.3.25.stable-incubating",
    "symbolicName" : "org.freemarker.freemarker",
    ...
  }, {
    "id" : "org.apache.velocity/1.7.0",
    "symbolicName" : "org.apache.velocity",
    ...
  } ],
  "addedResources" : [ {
    "id" : "com.soa.feature.console/8.3.0",
    "symbolicName" : "com.soa.feature.console",
    ...
  }, {
    "id" : "com.soa.feature.subsystems/8.3.0",
    "symbolicName" : "com.soa.feature.subsystems",
    ...
  } ]
}
</code></pre>
<h4>Sample Response</h4>
<pre><code>HTTP/1.1 200 OK
Content-Type:application/json; charset=UTF-8

{
  "id" : "c8e29be1-19c0-4132-a6bb-01b2a3a3efc6",
  "total" : 213,
  "installed" : 211,
  "status" : "INSTALLING",
  "links" : [ {
    "href" : "http://localhost:9900/admin/features/install/c8e29be1-19c0-4132-a6bb-01b2a3a3efc6",
    "rel" : "self"
  } ]
}
</code></pre>]]></sdoc:description></wsdl:documentation>
    <shttp:operation inputSerialization="application/json,application/xml,text/xml" location="/install" method="POST" outputSerialization="application/json,application/xml,text/xml"/>
      <wsdl:input>
    <shttp:input name="body" part="body" type="entity"/>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="installResponse" part="installResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getFeatures">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET </sdoc:displayName><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get all installed features.]]></sdoc:description><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get Installed Features]]></sdoc:summary></wsdl:documentation>
    <shttp:operation location="" method="GET" outputSerialization="application/json,application/xml,text/xml"/>
      <wsdl:output>
    <shttp:output name="getFeaturesResponse" part="getFeaturesResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getInstalledFeatures">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /installed</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get Installed Features]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Fetch information on all installed features.</p>
<h4>Sample Request</h4>
<pre><code>GET /admin/features HTTP/1.1
Accept: application/json
</code></pre>
<h4>Sample Response</h4>
<pre><code>HTTP/1.1 200 OK
Content-Type:application/json; charset=UTF-8

{
    "links": [
        {
            "href": "http://localhost:9900/admin/features/available",
            "rel": "available"
        },
        {
            "href": "http://localhost:9900/admin/features/resolve",
            "rel": "resolve"
        },
        {
            "href": "http://localhost:9900/admin/features/install",
            "rel": "install"
        },
        {
            "href": "http://localhost:9900/admin/features",
            "rel": "self"
        }
    ],
    "features": [
        {
            "name": "Akana Admin Console",
            "description": "The Admin Console is used to manage...",
            "version": "8.3.0",
            "symbolicName": "com.soa.admin.console",
            "category": "x-soa-feature",
            "links": [
                {
                    "href": "http://localhost:9900/admin/features/com.soa.admin.console",
                    "rel": "self"
                }
            ]
        }
    ]
}
</code></pre>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="/installed" method="GET" outputSerialization="application/json,application/xml,text/xml"/>
      <wsdl:output>
    <shttp:output name="getInstalledFeaturesResponse" part="getInstalledFeaturesResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAvailableCategories">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /categories</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get Feature Categories]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Get all feature categories.</p>
<h4>Sample Request</h4>
<pre><code>GET /admin/features/categories HTTP/1.1
Accept: application/json
</code></pre>
<h4>Sample Response</h4>
<pre><code>HTTP/1.1 200 OK
Content-Type:application/json; charset=UTF-8

[
  {
    "name": "Plug-in",
    "value": "x-soa-plugin"
  },
  {
    "name": "Feature",
    "value": "x-soa-feature"
  },
  {
    "name": "Tool",
    "value": "x-soa-tool"
  }
]
</code></pre>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="/categories" method="GET" outputSerialization="application/json,application/xml,text/xml"/>
      <wsdl:output>
    <shttp:output name="getAvailableCategoriesResponse" part="getAvailableCategoriesResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeFeature">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">DELETE /installed/{id}</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Remove a Feature]]></sdoc:summary><sdoc:response code="200" message="Success" xmlns:sdoc="http://soa.com/wsdl/doc"/><sdoc:response code="404" message="Not Found" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[The specified feature ID was not found.]]></sdoc:description></sdoc:response><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Remove a specific feature and its dependencies from the system.</p>
<h4>Sample Request</h4>
<pre><code>DELETE /admin/features/installed/{id} HTTP/1.1
</code></pre>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="/installed/{id}" method="DELETE"/>
      <wsdl:input>
    <shttp:input name="id" part="id" type="path"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getResolutions">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /resolve</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get Outstanding Resolutions]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Get information on any current resolutions</p>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="/resolve" method="GET" outputSerialization="application/json,application/xml,text/xml"/>
      <wsdl:output>
    <shttp:output name="getResolutionsResponse" part="getResolutionsResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getResolutionDetail">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">GET /resolve/{id}</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Get Resolution Detail]]></sdoc:summary><sdoc:response code="200" message="Success" xmlns:sdoc="http://soa.com/wsdl/doc"/><sdoc:response code="404" message="Not Found" xmlns:sdoc="http://soa.com/wsdl/doc"><sdoc:description><![CDATA[A resolution job with the specified ID could not be found.]]></sdoc:description></sdoc:response><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>As with the installation process, resolution can take some time. Feature resolution is performed
asynchronously by an internal &ldquo;job&rdquo;.</p>
<p>The normal sequence of states for a resolve job are:
UNKNOWN -> RESOLVING -> RESOLVED</p>
<p>These states have the following meaning:</p>
<ul>
<li><strong>UNKNOWN</strong> Indicates that the job is queued but has not started.</li>
<li><strong>RESOLVING</strong> Features are actively being resolved.</li>
<li><strong>RESOLVED</strong> When the resolve operation completes successfully.</li>
</ul>
<h4>Sample Request</h4>
<pre><code>GET /admin/features/resolve/ResolutionReport-1 HTTP/1.1
Accept: application/json
</code></pre>
<h4>Sample Response</h4>
<p>The sample response below has been truncated for brevity.</p>
<pre><code>HTTP/1.1 200 OK
Content-Type:application/json; charset=UTF-8

{
  "unsatisfiedRequirements" : [ ],
  "requiredResources" : [ {
    "id" : "com.soa.platform.j2ee/8.3.0",
    "symbolicName" : "com.soa.platform.j2ee",
    ...
  }, {
    "id" : "com.soa.grid/8.3.0",
    "symbolicName" : "com.soa.grid",
    ...
  }, {
    "id" : "org.bitbucket.b_c.jose4j/0.4.4",
    "symbolicName" : "org.bitbucket.b_c.jose4j",
    ...
  }, {
    "id" : "com.soa.security/8.3.0",
    "symbolicName" : "com.soa.security",
    ...
  }, {
    "id" : "com.google.guava/18.0.0",
    "symbolicName" : "com.google.guava",
    ...
  }, {
    "id" : "com.google.gson/2.5.0",
    "symbolicName" : "com.google.gson",
    ...
  }, {
    "id" : "com.netflix.rxjava.core/0.20.0",
    "symbolicName" : "com.netflix.rxjava.core",
    ...
  }, {
    "id" : "com.soa.persistence/8.3.0",
    "symbolicName" : "com.soa.persistence",
    ...
  }, {
    "id" : "jcifs/0.9.4",
    "symbolicName" : "jcifs",
    ...
  }
  ...
  ],
  "optionalResources" : [ {
    "id" : "org.freemarker.freemarker/2.3.25.stable-incubating",
    "symbolicName" : "org.freemarker.freemarker",
    ...
  }, {
    "id" : "org.apache.velocity/1.7.0",
    "symbolicName" : "org.apache.velocity",
    ...
  } ],
  "addedResources" : [ {
    "id" : "com.soa.feature.console/8.3.0",
    "symbolicName" : "com.soa.feature.console",
    ...
  }, {
    "id" : "com.soa.feature.subsystems/8.3.0",
    "symbolicName" : "com.soa.feature.subsystems",
    ...
  } ],
  "status" : "RESOLVED",
  "id" : "ResolutionReport-1",
  "links" : [{
    "href" : "http://localhost:9900/admin/features/install",
    "rel" : "install"
  }, {
    "href" : "http://localhost:9900/admin/features/resolve/ResolutionReport-1",
    "rel" : "self"
  }]
}
</code></pre>]]></sdoc:description></wsdl:documentation>
    <shttp:operation location="/resolve/{id}" method="GET" outputSerialization="application/json,application/xml,text/xml"/>
      <wsdl:input>
    <shttp:input name="id" part="id" type="path"/>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="getResolutionDetailResponse" part="getResolutionDetailResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="resolve">
<wsdl:documentation><sdoc:displayName xmlns:sdoc="http://soa.com/wsdl/doc">POST /resolve</sdoc:displayName><sdoc:summary xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[Resolve Features]]></sdoc:summary><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[<p>Resolve a feature set.</p>
<h4>Sample Request</h4>
<pre><code>{
    "features":[
        {"name":"Akana Community Manager","version":"8.3.0","symbolicName":"com.soa.atmosphere.feature"}
    ]
}
</code></pre>
<h4>Sample Response</h4>
<p>The following response is for an ongoing reolve operation.  Once completed, the response
will also contain a resolution report listing all added, optional, and required resources that
should be installed to deploy the selected feature set.</p>
<pre><code>HTTP/1.1 200 OK
Content-Type:application/json; charset=UTF-8

{
  "status" : "RESOLVING",
  "id" : "ResolutionReport-1",
  "links" : [ {
    "href" : "http://localhost:9900/admin/features/resolve/ResolutionReport-1",
    "rel" : "self"
  } ]
}
</code></pre>]]></sdoc:description></wsdl:documentation>
    <shttp:operation inputSerialization="application/json,application/xml,text/xml" location="/resolve" method="POST" outputSerialization="application/json,application/xml,text/xml"/>
      <wsdl:input>
    <shttp:input name="body" part="body" type="entity"/>
      </wsdl:input>
      <wsdl:output>
    <shttp:output name="resolveResponse" part="resolveResponse" type="entity"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="FeatureService">
<wsdl:documentation><sdoc:description xmlns:sdoc="http://soa.com/wsdl/doc"><![CDATA[This API is used to administer the installation,removal, and resolution of features.]]></sdoc:description><sdoc:title xmlns:sdoc="http://soa.com/wsdl/doc">Feature Administration Service</sdoc:title><sdoc:version xmlns:sdoc="http://soa.com/wsdl/doc">8.4.0</sdoc:version><sdoc:vendor xmlns:sdoc="http://soa.com/wsdl/doc">Akana</sdoc:vendor></wsdl:documentation>
    <wsdl:port name="FeatureService_rest_port_https" binding="tns:FeatureServiceBinding">
    <shttp:address location="https://0.0.0.0/admin/features"/>
    </wsdl:port>
    <wsdl:port name="FeatureService_rest_port_http" binding="tns:FeatureServiceBinding">
    <shttp:address location="http://0.0.0.0/admin/features"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
