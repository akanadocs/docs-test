---
layout: page
title: Using the Schema Validation Policy
description: Learn about the Schema Validation Policy Assertion and policy configuration options.
product: ag
category: learn
sub-nav-class: Policies - Operational
weight: 04
type: page
nav-title: Schema Validation
---
<h2 id="top">Using the Schema Validation Policy</h2>
<p>Learn about the Schema Validation Policy Assertion, supported policy subjects, and how to configure a Schema Validation Policy.</p>

<p>
<a href="about_policies_view.htm" class="button secondary">About Policies</a>  
<a href="policy_management.htm" class="button secondary">Managing Policies</a>  
<a href="policies_operational_about.htm" class="button secondary">About Operational Policies</a>
</p>

<h5 class="stamp">Supported Platforms: 7.x, 8.0</h5>

<div class = "divider1"></div>



<h3 style="color: gray;">Table of Contents</h3>
<ol class="table_of_contents">
	<li><a href="#introduction">Introduction</a></li>
	<li><a href="#assertion">Schema Validation Policy Assertion</a></li>
	<li><a href="#scope">Scope</a></li>
	<li><a href="#bindings">Binding Support</a></li>
	<li><a href="#configuration">Configuration</a></li>
	<li><a href="#uc_policy_qos_schema_validation_pm_00">Schema Validation Policy: use case for Policy Manager</a></li>
</ol>
<div class = "divider1"></div>



<h3 id="introduction">Introduction</h3>
<p>A common integration problem in an SOA occurs when consumers send messages to services that don&rsquo;t conform to the service's message schemas. Typically this is caused by the versioning of a service's schema and a consumer sending a message defined in the prior schema version. However, it can also be a consumer's malicious attempt to cause a denial of service by sending invalid messages to a service.</p>
<p>A container can help by validating the messages exchanged between the consumers and services against the service&rsquo;s published schema.</p>
<p>Configuring the container to perform schema validation of messages is performed by defining the schema validation policies. The policies indicate which messages to validate.</p>
<p><a href="#top">back to top</a></p>



<h3 id="assertion">Schema Validation Policy Assertion</h3>
<p>The syntax of the Schema Validation Policy assertion is shown below.</p>

<h5>Syntax</h5>
<p><img src="images/schema_syntax.jpg" width="603" height="45" alt="" /></p>
<dl class="apidoc_dl">
  <dt>gsvp:SchemaValidation</dt>
  <dd>Schema Validation policy assertion element.</dd>
  <dt>gsvp: SchemaValidation /@{any}</dt>
  <dd>Additional attributes CAN be specified but MUST NOT contradict the semantics of the [owner element]; if an attribute is not recognized, it SHOULD be ignored. </dd>
  <dt>gsvp: SchemaValidation /{any}</dt>
  <dd>An extensibility mechanism to allow additional elements to be specified.</dd>
</dl>

<p>An example of a Schema Validation Policy is shown below.</p>
<p><img src="images/schema_example.jpg" width="600" height="43" alt="" /></p>

<h5>Configuration Options</h5>
<p>This policy does not require any configuration. Instead, you attach the policy to
the physical WSDL policy attachment points (described below).</p>
<p><a href="#top">back to top</a></p>



<h3 id="scope">Scope</h3>
<p>The schema validation policy assertion is allowed to have the following Policy Subjects as defined in the <strong>WS-PolicyAttachment</strong> specification:</p>
<ul>
	<li>Service Policy Subject</li>
	<li>Endpoint Policy Subject</li>
	<li>Operation Policy Subject</li>
</ul>
<p>The WS-PolicyAttachment defines a set of WSDL/1.1 policy attachment points for each of the above Policy Subjects. A schema validation policy assertion MAY be attached to the following abstract WSDL policy attachment points:</p>
<ul>
	<li>wsdl:service</li>
	<li>wsdl:port</li>
	<li>wsdl:portType</li>
	<li>wsdl:portType/wsdl:operation</li>
	<li>wsdl:portType/wsdl:operation/wsdl:input</li>
	<li>wsdl:portType/wsdl:operation/wsdl:output</li>
	<li>wsdl:portType/wsdl:operation/wsdl:fault</li>
</ul>
<p>When attached to abstract WSDL policy attachment points, only the normalized message is validated against the schema.</p>
<p>A schema validation policy assertion MAY be attached to the following physical WSDL policy attachment points.</p>
<ul>
	<li>wsdl:binding</li>
	<li>wsdl:binding/wsd:operation</li>
	<li>wsdl:binding/wsd:operation/wsdl:input</li>
	<li>wsdl:binding/wsd:operation/wsdl:output</li>
	<li>wsdl:binding/wsd:operation/wsdl:fault</li></ul>
<p>When attached to physical policy attachment points, the entire bound message is validated against the schema. For example, the entire SOAP envelope, including its headers, is validated against the service's schema and all additional schemas referenced in the policy assertion.</p>
<p>A schema validation policy dictates behavior that is not required in order to exchange messages between consumers and providers. Instead, it dictates behavior that should be transparent to the consumer and provider and should not affect message exchanges at all. Therefore it is <strong>recommended</strong> that caching policies be classified as private by including the <strong>gsvp:Visibility</strong> attribute in the enclosing <strong>wsp:Policy</strong> element with a value of <strong>private</strong>.</p>
<p>The following is an example of a caching policy attached to WSDL components.</p>
<p><img src="images/schema_caching.jpg" width="573" height="318" alt="" /></p>
<p><a href="#top">back to top</a></p>



<h3 id="bindings">Binding Support</h3>
<p>The Schema Validation Policy supports HTTP and POX bindings only.</p>
<p><a href="#top">back to top</a></p>



<h3 id="configuration">Configuration</h3>
<p>Let's take a quick walkthrough of the Schema Validation Policy configuration process to get you started.</p>

<h5>Step 1: Add Policy / Use System Policy</h5>
<p>You can create a Schema Validation policy instance using <strong>Add Policy</strong> in the <em>Policies &gt; Operational Policies</em> section.</p>

<h5>Step 2: Configure </h5>
<p>The Schema Validation Policy itself does not require any configuration. Instead, you attach the policy to the physical WSDL policy attachment points (described above). For more information on the configuration and test cycle, review the use case: <a href="#uc_policy_qos_schema_validation_pm_00">Schema Validation Policy: use case for Policy Manager</a>.</p>

<h5>Step 3: Attach Policy</h5>
 <p>After you've saved your policy, you can attach it:</p>
 <ul>
   <li>To an individual web service to apply it to that service.</li>
   <li>At the Organization level to apply it to all services defined within the organization.</li>
   <li>Directly to any of the supported policy attachments points (listed above).
   <p><img src="images/attach policy_schema_validation.jpg" width="670" height="205" alt="" /></p></li>
 </ul>
<p><a href="#top">Back to top</a></p>



<h3 id="uc_policy_qos_schema_validation_pm_00">Schema Validation Policy: use case for Policy Manager</h3>
<p>This section provides a list of Schema Validation Policy usage scenarios.</p>
<p>It includes:</p>
<ol>
	<li><a href="#uc_policy_qos_schema_validation_01">Scenario 1: Request with Valid Data Type</a></li>
	<li><a href="#uc_policy_qos_schema_validation_02">Scenario 2: Request with Invalid Data Type</a></li>
</ol>

<p><strong>Note</strong>: This policy supports HTTP and POX bindings only.</p>


<h4 id="uc_policy_qos_schema_validation_01">Scenario 1: Request with Valid Data Type</h4>
<ol>
	<li>Create a physical service.</li>
	<li>Virtualize and host it on Network Director (for example, <strong>Vs1</strong>).</li>
	<li>Configure a Schema Validation Policy.
  <p><img src="images/schema_validation_uc_pm_01.jpg" alt="" /></p></li>
	<li>Attach the <strong>Detailed Auditing</strong> and <strong>Schema Validation</strong> policies to the <strong>Vs1</strong> service.</li>
	<li>Send a valid request from a REST client. An example is shown below. The request will be processed successfully.
    <p><img src="images/schema_validation_uc_pm_02.jpg" alt="" /></p></li>
</ol>
<p><strong>Content in Body:</strong></p>
<pre>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;Account xmlns="http://soa.com/jaxrs/account/1.0"&gt;
&lt;ID&gt;1111&lt;/ID&gt; 
&lt;FirstName&gt;Bill&lt;/FirstName&gt;
&lt;LastName&gt;Gates&lt;/LastName&gt;
&lt;/Account&gt;</pre>
<p><strong>SOAP Request:</strong></p>
<p><img src="images/schema_validation_uc_pm_03.jpg" alt="" /></p>
<p><strong>Response Message:</strong></p>
<p><img src="images/schema_validation_uc_pm_04.jpg" alt="" /></p>


<h4 id="uc_policy_qos_schema_validation_02">Scenario 2: Request with Invalid Data Type</h4>
<ol>
	<li>Create a physical service.</li>
	<li>Virtualize and host it on Network Director (Example service name: <strong>VS1</strong>).</li>
	<li>Configure a Schema Validation Policy.
  <p><img src="images/schema_validation_uc_pm_05.jpg" alt="" /></p></li>
	<li>Attach the <strong>Detailed Auditing</strong> and <strong>Schema Validation</strong> policies to the <strong>Vs1</strong> service.</li>
	<li>Send a valid request from a REST client. The request will fail with a valid error message.
    <p><img src="images/schema_validation_uc_pm_06.jpg" alt="" /></p></li>
</ol>
<p><strong>Content in Body:</strong></p>
<pre>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&lt;Account xmlns=&quot;http://soa.com/jaxrs/account/1.0&quot;&gt;
  &lt;ID&gt;Test&lt;/ID&gt; --- Invalid data type
  &lt;FirstName&gt;Bill&lt;/FirstName&gt;
  &lt;LastName&gt;Gates&lt;/LastName&gt;
  &lt;/Account&gt;&lt;/pre&gt;</pre>
<p><strong>SOAP Request:</strong></p>
<p><img src="images/schema_validation_uc_pm_07.jpg" alt="" /></p>
<p><img src="images/schema_validation_uc_pm_08.jpg" alt="" /></p>
<p><strong>Response Message:</strong></p>
<p><img src="images/schema_validation_uc_pm_09.jpg" alt="" /></p>
<p><a href="#top">Back to top</a></p>
