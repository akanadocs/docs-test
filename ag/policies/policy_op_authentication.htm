---
layout: page
title: Using the Authentication Policy
description: Learn how to create and configure an Authentication policy, which dictates the identity and domain/realm to use when authenticating the message sender.
product: ag
category: learn
sub-nav-class: Policies - Operational
weight: 04
type: page
nav-title: Authentication
---
<h1 id="top">Using the Authentication Policy</h1>
<p>Learn how to create and configure an Authentication policy, which dictates the identity and domain/realm to use when authenticating the message sender.</p>
<p>For information about using policies in the context of the Community Manager developer portal, see <a href="../../cm/learnmore/bus_admin_organizations.htm#h_business_policies">Business Policies</a>.</p>
<hr class="divide_hr" />



<h2 style="color: gray;">Table of Contents</h2>
<ol class="table_of_contents">
	<li><a href="#introduction">Introduction</a></li>
	<li><a href="#authentication_policy_create">Creating an Authentication Policy</a></li>
	<li><a href="#authentication_policy_config">Configuring an Authentication Policy</a></li>
	<li><a href="#authentication_policy_options">Authentication Policy Options</a></li>
	<li><a href="#authentication_policy_assertion">Policy Assertion</a></li>
	<li><a href="#authentication_policy_scope">Policy Scope</a></li>
	<li><a href="#policy_activating">Activating a policy</a></li>
	<li><a href="#policy_attach">Attaching a policy</a></li>
	<li><a href="#uc_policy_authentication">Authentication policy use cases</a></li>
</ol>
<hr class="divide_hr" />



<h2 id="introduction">Introduction</h2>
<p>The Authentication policy allows you to protect your services by applying authentication to messages and by making sure that the messages come from trusted domains.
</p>
<p>In order to protect services from unauthorized parties, the initiators of a web service message exchange must be identified. WS-Security specifies mechanisms for representing identities in a message exchange; however, it only addresses how the messages themselves can be tied to an identity.</p>
<p>It's important to also make sure that the sending identity is:</p>
<ul>
	<li>Authentic</li>
	<li>Known to the service</li>
	<li>Authorized to invoke the service</li>
</ul>
<p>For services that require the caller to be known, authentication of the identity associated with request messages must be performed. Identities are tied to trust domains or security realms. A service might support identities in multiple security realms.</p>
<p>Identification of the requirement for authentication and which security realm, or domain, must be used for authentication is configured through an authentication policy.</p>
<p>Specification:</p>
<ul>
	<li><a href="https://www.w3.org/Submission/WS-PolicyAttachment/" title="Link to WS-PolicyAttachment specification" target="_blank">WS-PolicyAttachment specification</a></li>
</ul>
<p><a href="#top">Back to top</a></p>
<p><a href="#top"></a></p>



<h2 id="authentication_policy_create">Creating an Authentication Policy</h2>
<p>The first step in creating a policy is to define the basic policy information.</p>

<h4 id="proc_policy_os_add">To add an operational policy</h4>
<ol>
<li>Go to <strong>Workbench</strong> &gt; <strong>Browse</strong> &gt; <strong>Organization</strong>, and select <strong>Policies</strong> &gt; <strong>Operational Policies</strong>. The <strong>Policies Summary</strong> is displayed.</li>
<li>Click <strong>Add Policy</strong>.</li>
<li>Choose the policy type and click <strong>Next</strong>.</li>
<li>Specify a name (required) and description (optional) and click <strong>Finish</strong>. At the <strong>Completion Summary</strong>, click <strong>Close</strong>. The <strong>Add Policy</strong> Wizard creates a draft policy instance that you can then configure on the <strong>Policy Details</strong> page.</li>
</ol>
<p>For more information, see <a href="policy_management.htm#add_policy">Add Policy</a>.</p>
<p>At this point, you've created the policy, but it doesn't do anything. The next step is to configure the policy details. See <a href="#authentication_policy_config">Configuring an Authentication Policy</a> below.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="authentication_policy_config">Configuring an Authentication Policy</h2>
<p>Once you've created the policy, you can configure the policy details that determine how the policy works. Then you can activate the policy so that it can be used.</p>

<h4 id="proc_policy_authentication_config">To configure an Authentication policy in Policy Manager</h4>
<ol>
	<li>In the Organization Tree, find the level where the policy was defined. Click to select.</li>
	<li>In the center pane, in the <strong>Authentication Policy</strong> section, click <strong>Modify</strong>. The <strong>Modify Authentication Policy</strong> overlay is displayed, as shown below.
		<p><img src="images/authentication.jpg" alt="Modify Authentication Policy" /></p></li>
	<li>Specify values for the subject category and domains that the policy will apply to, and the audit options. For details on field values, see <a href="#authentication_policy_options">Authentication Policy Options</a> below.</li>
	<li>Click <strong>Apply</strong>.</li>
</ol>
<p>Now that the policy is defined, you can activate it and start using it. On the right, under <strong>Actions</strong>, choose <strong>Activate Policy</strong>.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="authentication_policy_options">Authentication Policy Options</h2>
<p>The Authentication policy includes the options listed below.</p>


<dl>


<dt>Subject Category</dt>
<dd>Indicates the identity that will be authenticated. Options: 
	<ul>
		<li><strong>Consumer</strong> (the default): Authenticates the consumer identity sent with a request message.</li>
		<li><strong>End-User</strong>: Audits the end-user identity sent with a request message.</li>
		<li><strong>User Defined</strong>: If you choose User Defined, specify a custom category name; for example, a platform identity.</li>
</ul>
</dd>


<dt>Domains (Realms)</dt>
<dd>Specify one or more realms to which authentication will be applied. Valid realms are displayed on the left. Highlight a realm and then click <strong>&gt;&gt;</strong> to choose to authenticate messages using that realm. You can choose one or more. You can also arrange the realms you've selected in order of priority.</dd>


<dt>Audit options</dt>
<dd>Choose from the available options to determine the audit data that the policy will capture:
<ul>
	<li><strong>Generate Audit Data</strong>: Enables the audit feature. By default, this captures all message data, whether success or failure, for all message exchanges. </li>
	<li><strong>On Error Only</strong>: If you choose to generate audit data, you can specify that audit data is captured only when an error occurs on a message exchange.</li>
</ul>
</dd>


</dl>
<p><a href="#top">Back to top</a></p>



<h2 id="authentication_policy_assertion">Policy Assertion</h2>

<h4 id="syntax">Syntax:</h4>
<p>The syntax of the authentication policy assertion is as follows:</p>
<pre>01) &lt;ganp:Authentication SubjectCategory="xs:anyURI" ...&gt;
02)   &lt;ganp:Realm&gt;xs:anyURI&lt;/ganp:Realm&gt; +
03)   ...
04) &lt;/ganp:Authentication&gt;
</pre>
<dl>

<dt>ganp:Authentication</dt>
<dd>Authentication policy assertion element.</dd>


<dt>ganp:Authentication/@SubjectCategory</dt>
<dd>This required attribute identifies the specific identity associated with the message to authenticate by category. The SubjectCategory is specified as a URI and must correspond to a SubjectCategory specified in the security policy governing the same message.</dd>


<dt>ganp:Authentication/ganp:Realm</dt>
<dd>URI representing the trust realm, or domain, in which the authentication is performed.</dd>


<dt>ganp:Authentication /@{any}</dt>
<dd>Additional attributes MAY be specified but MUST NOT contradict the semantics of the [owner element]; if an attribute is not recognized, it SHOULD be ignored.</dd>


<dt>ganp:Authentication /{any}</dt>
<dd>This is an extensibility mechanism to allow additional elements to be specified.</dd>
</dl>
<h4 id="syntax_eg">Syntax example:</h4>
<p>An example of an authentication policy is illustrated below:</p>
<pre>01) &lt;wsp:Policy Visibility="private" xmlns:wsp="..."&gt;
02)   &lt;ganp:Authentication SubjectCategory="urn:ganp:security:subject-category:consumer"&gt;
03)     &lt;ganp:Realm&gt;example.com&lt;/ganp:Realm&gt;
04)     &lt;ganp:Realm&gt;bankingfederation.org&lt;/ganp:Realm&gt;
05)   &lt;/ganp:Authentication&gt;
06) &lt;/wsp:Policy&gt;
</pre>
<p>On line 02, the <strong>SubjectCategory</strong> attribute indicates that this policy is for authenticating consumers. Lines 03 and 04 identify two realms that the consumer identities could be a part of, example.com and bankingfederation.org. It is assumed that the container has the ability to authenticate users in those realms, either directly or indirectly.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="authentication_policy_scope">Policy Scope</h2>
<p>The authentication policy assertion can have the following Policy Subjects, as defined in the <a href="https://www.w3.org/Submission/WS-PolicyAttachment/" title="Link to WS-PolicyAttachment specification" target="_blank">WS-PolicyAttachment specification</a>:</p>
<ul>
	<li>Service Policy Subject</li>
	<li>Endpoint Policy Subject</li>
	<li>Operation Policy Subject</li>
</ul>
<p>The <a href="https://www.w3.org/Submission/WS-PolicyAttachment/" title="Link to WS-PolicyAttachment specification" target="_blank">WS-PolicyAttachment specification</a> defines a set of WSDL/1.1 policy attachment points for each of the above Policy Subjects. Since an authentication policy assertion has no dependency on any WSDL binding, it SHOULD be attached to the following abstract WSDL policy attachment points:</p>
<ul>
	<li>wsdl:service</li>
	<li>wsdl:port</li>
	<li>wsdl:portType</li>
	<li>wsdl:portType/wsdl:operation</li>
</ul>
<p>An authentication policy assertion MAY be attached to the following physical WSDL policy attachment points:</p>
<ul>
	<li>wsdl:binding</li>
	<li>wsdl:binding/wsd:operation</li>
</ul>
<p>An authentication policy does not dictate any behavior required by a consumer in order to complete message exchanges. Therefore, it is recommended that authentication policies be classified as <strong>private</strong> by including the <strong>ganp:Visibility</strong> attribute in the enclosing the <strong>wsp:Policy</strong> element with a value of "<strong>private</strong>".</p>
<p>The following is an example of an authentication policy attached to WSDL components.</p>
<pre>01) &lt;wsdl:definitions name="StockQuote" targetNamespace="..." xmlns:wsdl="..." xmlns:wsoap12="..." xmlns:wsp="..." xmlns:wsu="..." xmlns:ganp="..." &gt;
02)   &lt;wsp:Policy wsu:Id="Auth1" visibility="private"&gt;
03)     &lt;ganp:Authentication&gt;
04)       &lt;!-- Details omitted for readability --&gt;
05)     &lt;/ganp:Authentication&gt;
06)   &lt;/wsp:Policy&gt;
07)   &lt;wsp:Policy wsu:Id="Auth2" visibility="private"&gt;
08)     &lt;ganp:Authentication&gt;
09)       &lt;!-- Details omitted for readability --&gt;
10)     &lt;/ganp:Authentication&gt;
11)   &lt;/wsp:Policy&gt;
12)   &lt;wsdl:import namespace="..." location="..." /&gt;
13)   &lt;wsdl:portType name="StockQuote"&gt;
14)     &lt;wsdl:operation name="GetQuote" /&gt;
15)       &lt;wsdl:input message="..." /&gt;
16)       &lt;wsdl:output message="..." /&gt;
17)       &lt;wsp:PolicyReference URI="#Auth1" wsdl:required="true" /&gt;
18)     &lt;/wsdl:operation&gt;
19)     &lt;wsdl:operation name="GetSymbol" /&gt;
20)       &lt;wsdl:input message="..." /&gt;
21)       &lt;wsdl:output message="..." /&gt;
22)       &lt;wsp:PolicyReference URI="#Auth2" wsdl:required="true" /&gt;
23)     &lt;/wsdl:operation&gt;
24)   &lt;/wsdl:portType&gt;
25) &lt;/wsdl:definitions&gt;</pre>
<p>Lines 02 – 11 are two authentication policies, <strong>Auth1</strong> and <strong>Auth2</strong>. <strong>Auth1</strong> is associated with the <strong>GetQuote</strong> operation on line 17. <strong>Auth2</strong> is associated with the <strong>GetSymbol</strong> operation on line 22.</p>

<p><a href="#top">Back to top</a></p>



<h2 id="policy_activating">Activating a policy</h2>
<p>When you create and configure a policy, the policy is in <strong>Draft</strong> state. When the policy configuration is complete, activate the policy: click <strong>Activate Policy</strong> and then confirm. See <a href="policy_management.htm#policy_activate">Activate a Policy</a>.</p>
<p>A policy in Draft state is not available for general use. Once you activate the policy, it is in <strong>Active</strong> state and is available for use.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="policy_attach">Attaching a policy</h2>
<p>To use the policy, go to the <strong>Policies</strong> folder in the respective organization and attach the policy to a web service, binding, or binding operation.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="uc_policy_authentication">Authentication policy use cases</h2>
<p>The Authentication policy is configured and uses as part of the following use case:</p>
<ul>
	<li>Implementing 2-Way SSL: see <a href="../howto/howto_implement_2_way_ssl.htm#create_authentication_policy">Create Authentication Policy</a> in <a href="../howto/howto_implement_2_way_ssl.htm">How To Implement 2-Way SSL Using Policy Manager</a> (still valid for later versions)</li>
</ul>
<p><a href="#top">Back to top</a></p>



<hr class="divide_hr" />



<h2 id="related_topics">Related Topics</h2>
<div class="relatedlinks">
<ul>
	<li><a href="about_policies_view.htm">About Policies</a></li>
	<li><a href="policy_management.htm">Managing Policies</a></li>
	<li><a href="policies_operational_about.htm">About Operational Policies</a></li>
</ul>
<ul>
	<li><a href="../../cm/learnmore/basics_glossary.htm">Glossary of Terms for the Community Manager developer portal</a></li>
</ul>
</div>
