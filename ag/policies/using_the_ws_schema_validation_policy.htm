---
layout: page
title: Using the WS-Schema Validation Policy
description: Learn about the WS-Schema Validation Policy Assertion and policy configuration options.
product: ag
category: learn
sub-nav-class: Policies - Operational
weight: 05
type: page
nav-title: WS-Schema Validation Policy - Using
---
<h2 id="top">Using the WS-Schema Validation Policy</h2>
<p>Learn about the WS-Schema Validation Policy Assertion and policy configuration options. </p>
<p><strong>Note</strong>: This policy is only available in Policy Manager version 7.0 or greater.</p>
<p><a href="policy_management.htm" class="button secondary">Managing Policies</a>
<a href="../assets/policy_use_cases/ws_schema_validation_policy_use_cases.pdf" target="_blank" class="button secondary">Use Cases</a></p>

<h5 class="stamp">Supported Platforms: 7.x, 8.0</h5>

<div class = "divider1"></div>



<h3 style="color: gray;">Table of Contents</h3>
<ol class="table_of_contents">
  <li><a href="#introduction">Introduction</a></li>
  <li><a href="#behavior">Schema Validation Behavior</a></li>
  <li><a href="#options">Configuration Options</a></li>
  <li><a href="#configuration">Configuration</a></li>
</ol>
<div class = "divider1"></div>



<a name="introduction"></a><h3>Introduction</h3>
<p>A common integration problem in an SOA occurs when consumers send messages to services that don&rsquo;t conform to the service's message schemas. Typically this is caused by the versioning of a service&rsquo;s schema and a consumer sending a message defined in the prior schema version. However, it can also be a consumer's malicious attempt to cause a denial of service by sending invalid messages to a service.</p>
<p>A Manageability Container can help by validating the messages exchanged between the consumers and services against the service&rsquo;s published schema.</p>
<p>Configuring the container to perform schema validation of messages is performed by defining the schema validation policies. The policies indicate which messages to validate and possibly indicate additional schemas to validate against that might not be defined in the service&rsquo;s WSDL document. Additional schemas are typically required when validating expected headers in a bound (SOAP) message.</p>
<p><a href="#top">back to top</a></p>



<a name="behavior"></a><h3>Schema Validation Behavior</h3>
<ul>
  <li>If schemas are not selected as part of the policy configuration, the policy validates based on the schema or schemas in the WSDL. <em>This is default behavior</em>.</li>
  <li>If schemas are selected in the policy configuration and also exist in the WSDL, the policy validates the selected schemas in the policy configuration and the schema or schemas in the WSDL.</li>
</ul>



<a name="options"></a><h3>Configuration Options</h3>
<p>The policy includes the configuration options listed below.</p>
<table width="515" cellspacing="0px" class="doctable">
  <thead>
  <tr>
    <th width="155">Option</th>
    <th width="324">Description</th>
  </tr>
</thead>
    <tr class="t2row">
      <td>Select Schemas</td>
      <td>Displays a list of schemas that are available in the file system, that can be selected and added to the policy. </td>
    </tr>
  <tr class="t1row">
    <td>Validation Mode</td>
    <td><p>Select Lax or Strict XML validation mode.</p>
<p><strong>Lax</strong>: Validates only the XML elements that have a namespace that matches a namespace of an associated schema. Elements with no namespace, or those that do not have a namespace that matches a schema namespace, are skipped and not validated. Lax validation is less stringent than strict validation, and is the default validation type.</p>
<p><strong>Strict</strong>: Validates all XML elements against the applied schemas. Each XML element must have a namespace that matches a namespace of an associated schema, or validation fails.</p></td>
  </tr>
</table>
<p><a href="#top">back to top</a></p>



<a name="configuration"></a><h3>Configuration</h3>
<p>Let's take a quick walkthrough of the WS-Schema Validation Policy Policy configuration process to get you started.</p>

<h5>Step 1: Add Policy / Use System Policy</h5>
<p>In Policy Manager, to create a WS-Schema Validation Policy instance, go to <strong>Policies</strong> &gt; <strong>Operational Policies</strong> and choose <strong>Add Policy</strong>.</p>

<h5>Step 2: Modify Policy</h5>
<p>When you click <strong>Modify</strong> to make changes to the WS-Schema Validation Policy on the <strong>Policy Details</strong> page, the initial policy looks like this:</p>
<p><img src="images/modify_ws_schema_validation_policy.jpg" width="736" height="453" alt="" /></p>

<h5>Step 3: Configure</h5>
<p>Configuring the WS-Schema Validation Policy is one step in a larger process.</p>

<h5>To configure the WS-Schema Validation Policy:</h5>
<ol>
  <li>Select the schemas you would like to add to the policy in the left column, and use<strong> &gt;</strong>&gt; to copy them to the right column.</li>
  <li>Select the validation mode (Lax or Strict).</li>
  <li>Review the <a href="../assets/policy_use_cases/ws_schema_validation_policy_use_cases.pdf" >usage scenarios</a> for each validation mode for the complete process and follow the applicable steps.</li>
</ol>

<h5>Step 4: Attach Policy</h5>
<p>After you've saved your policy, you can attach it to a web service or you can attach the policy at the Organization level and the policy will be active for all services defined within the organization.</p>
<p><img src="images/attach_ws_schema_validation_policy.jpg" width="513" height="221" alt="" /></p>
<p><a href="#top">Back to top</a></p>

