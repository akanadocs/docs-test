---
layout: page
title: Using the HTTP Malicious Pattern Detection Policy in Policy Manager
description: Learn how to use regular expressions or java markup tags in an HTTP Malicious Pattern Policy to inspect HTTP messages for malicious content.
product: ag
category: learn
sub-nav-class: Policies - Operational 
weight: 04
type: page
nav-title: HTTP Malicious Pattern Detection
---
<h2 id="top">Using the HTTP Malicious Pattern Detection Policy</h2>
<p>Learn how to use regular expressions or Java markup tags in an HTTP Malicious Pattern Detection Policy to inspect messages for malicious content, and reject the messages, returning a fault, if a match is found.</p>

<p>
<a href="about_policies_view.htm" class="button secondary">About Policies</a>  
<a href="policy_management.htm" class="button secondary">Managing Policies</a>  
<a href="policies_operational_about.htm" class="button secondary">About Operational Policies</a>
</p>



<div class = "divider1"></div>



<h3 style="color: gray;">Table of Contents</h3>
<ol class="table_of_contents">
	<li><a href="#introduction">Introduction</a></li>
	<li><a href="#examples">Examples</a></li>
	<li><a href="#configuration">Configuration</a></li>
</ol>
<div class = "divider1"></div>



<h3 id="introduction">Introduction</h3>
<p>The HTTP Malicious Pattern Detection Policy is used to inspect HTTP messages for content that could be considered dangerous to an API or web service, and to reject the message, returning a fault, if any of the defined expressions match the dangerous content. Notes:</p>
<ul>
	<li>This policy uses regular expressions to define the content that could be considered dangerous, that would warrant a message being rejected.</li>
	<li>Typical uses of this policy are for SQL Injection detection or JavaScript detection.</li>
	<li>Two sample policies are provided in the root level Policies folder (HTTPJavascriptInjection and HTTPSQLInjection). You can directly attach these to a service or operation.</li>
</ul>
<p><a href="#top">back to top</a></p>



<h3 id="examples">Examples</h3>
<p>The product includes the following out-of-the-box examples that illustrate usage of the HTTP Malicious Pattern Detection Policy. You can use the sample policies located in the root Policies folder as-is, or you can customize the configuration to suit your needs and then attach them directly to a service or operation.</p>

<h5>SQL Injection RegEx</h5>
<p>A sample <strong>HTTPSQLInjection </strong>policy is included out-of-the-box. It includes three regular expressions that match SQL keywords and symbols, as shown below.</p>
<p><img src="images/httpsqlinjection_sample.jpg" alt="" /></p>

<h5>JavaScript Script Markup Tags</h5>
<p>A sample <strong>HTTPJavascriptInjection</strong> policy is also included out-of-the-box. It includes expressions that match JavaScript script markup tags.</p>
<p><img src="images/httpjavascriptinjection_sample.jpg" alt="" /></p>

<h5>Configuration Options</h5>
<p>The policy includes the following configuration options:</p>
<ul>
	<li><strong>Inspect Headers</strong>: Optionally, HTTP headers can be scanned for patterns. If this options is selected, all headers are scanned. To scan specific headers rather than all, enter the header names in the header table.</li>
	<li><strong>Inspect Path</strong>: Check this box if you want the HTTP path to be scanned.</li>
	<li><strong>Inspect Parameters</strong>: Check this box if you want the HTTP query parameters to be scanned.</li>
	<li><strong>Exclude Markup</strong>: This option applies to content with markup such as XML or JSON. If markup is excluded, only the content of the properties, not the markup itself, will be scanned. For example, a JSON property name will not be scanned, just the property value.</li>
	<li><strong>Patterns</strong>: One or more regular expression patterns to scan for. Any match will cause the message to be rejected.</li>
</ul>
<p><a href="#top">Back to top</a></p>



<h3 id="configuration">Configuration</h3>
<p>Let's take a quick walkthrough of the HTTP Malicious Pattern Detection policy configuration process to get you started. The key steps are:</p>
<ul>
	<li><a href="#config_s01">Step 1: Add Policy / Use Sample Policy</a></li>
	<li><a href="#config_s02">Step 2: Modify Policy</a></li>
	<li><a href="#config_s03">Step 3: Configure</a></li>
	<li><a href="#config_s04">Step 4: Attach Policy</a></li>
</ul>

<h5 id="config_s01">Step 1: Add Policy / Use Sample Policy</h5>
<ul>
	<li>In Policy Manager, to create an HTTP Malicious Pattern Detection policy instance, go to <strong>Policies</strong> &gt; <strong>Operational Policies</strong> and choose <strong>Add Policy</strong>.</li>
	<li>Use one of the HTTP Malicious Pattern Detection sample policies (HTTP Malicious Pattern Detection or HTTPJavascriptInjection). You can attach the policy &quot;as is&quot; or modify it.</li>
</ul>

<h5 id="config_s02">Step 2: Modify Policy</h5>
<p>When you choose to <strong>Modify</strong> the HTTP Malicious Pattern Detection Policy on the <strong>Policy Details</strong> page, the initial policy looks like this:</p>
<p><img src="images/http_mal_pattern_detection_default.jpg" alt="" /></p>

<h5 id="config_s03">Step 3: Configure</h5>
<p>The next step is to configure your policy with a regular expression or JavaScript markup tags. To get the most out of this policy, you will need a good working knowledge of regular expressions. Some online tools:</p>
<ul>
	<li><strong>Regular Expression Tester</strong>: <a href="http://rubular.com/">Rubular.com</a> provides a nice online test tool.</li>
	<li><strong>Regular Expression Builder</strong>: <a href="https://www.debuggex.com/">Debuggex.com</a> provides a more sophisticated (and more complex) tool for building and validating regular expressions.</li>
</ul>

<h5 id="config_s04">Step 4: Attach Policy</h5>
<p>After you've saved your policy, you can attach it:</p>
<ul>
	<li>To an individual web service to apply it to that service</li>
	<li>At the Organization level to apply it to all services defined within the orgnization.</li>
</ul>
<p><img src="images/attach policy_http_malicious.jpg" alt="" /></p>
<p><a href="#top">Back to top</a></p>



<div class = "divider1"></div>



<h3 id="related_topics">Related Topics</h3>
<div class="relatedlinks">
<ul>
	<li><a href="about_policies_view.htm">About Policies</a></li>
	<li><a href="policy_management.htm">Managing Policies</a></li>
	<li><a href="policies_operational_about.htm">About Operational Policies</a></li>
</ul>
<ul>
	<li><a href="../../cm/learnmore/basics_glossary.htm">Glossary of Terms for the Developer Portal</a></li>
</ul>
</div>