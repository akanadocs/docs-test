---
layout: page
title: Using the OAuth Client Policy
description: Learn how to xxx using the OAuth Client Policy.
product: ag
category: learn
sub-nav-class: Policies - Operational
weight: 04
type: page
nav-title: OAuth Client
---
<h2 id="top">Using the OAuth Client Policy</h2>
<p>Learn how to xxx using the OAuth Client Policy.</p>
<p>{<span class="apidoc_red">sends authorization header using that OAuth provider to that service's back end. Usually with a normal oauth security policy it's attached to the VS, so when the consumer sends a request to the API they have to be sure to include it. This adds it to the request for the downstream service. Once it's set up, in TC normally uou have to generate tokens but this does it for you so you don't need to do all that.</span>}</p>

<p>
<a href="about_policies_view.htm" class="button secondary">About Policies</a> 
<a href="policy_management.htm" class="button secondary">Managing Policies</a> 
<a href="policies_operational_about.htm" class="button secondary">About Operational Policies</a></p>
<p>For information about using policies in the context of the developer portal, see <a href="../../cm/learnmore/bus_admin_organizations.htm#h_business_policies">Business Policies</a>.</p>



<div class = "divider1"></div>
<h3 style="color: gray;">Table of Contents</h3>
<ol class="table_of_contents">
	<li><a href="#introduction">Introduction</a></li>
	<li><a href="#oauth_client_create">Creating an OAuth Client Policy</a></li>
	<li><a href="#oauth_client_config">Configuring the OAuth Client Policy</a></li>
	<li><a href="#oauth_client_config_options">OAuth Client Policy Configuration Options</a></li>
	<li><a href="#oauth_client_config_audit_options">Configuring OAuth Client Audit Options</a></li>
	<li><a href="#oauth_client_policy_attach">Attaching the Policy</a></li>
	<li><a href="#uc_policy_op_oauth_client">OAuth Client Policy: use case</a></li>
</ol>
<div class = "divider1"></div>



<h3 id="introduction">Introduction</h3>
<p>The OAuth Client Policy is an operational policy that xxx.</p>
<p>Options include:</p>
<ul>
	<li>xxx</li>
</ul>



<h3 id="oauth_client_create">Creating an OAuth Client Policy</h3>
<p>The first step in creating a policy is to define the basic policy information.</p>

<h5>To add an operational policy</h5>
<ol>
	<li>Go to <strong>Workbench</strong> &gt; <strong>Browse</strong> &gt; <strong>Organization</strong>, and select <strong>Policies</strong> &gt; <strong>Operational Policies</strong>. The <strong>Policies Summary</strong> is displayed.</li>
	<li>Click <strong>Add Policy</strong>.</li>
	<li>Choose the policy type and click <strong>Next</strong>.</li>
	<li>Specify a name (required) and description (optional) and click <strong>Finish</strong>. At the <strong>Completion Summary</strong>, click <strong>Close</strong>. The <strong>Add Policy</strong> Wizard creates a draft policy instance that you can then configure on the <strong>Policy Details</strong> page.</li>
</ol>
<p>For more information, see <a href="policy_management.htm#add_policy">Add Policy</a>.</p>
<p><a href="#top">back to top</a></p>


<h3 id="oauth_client_config">Configuring the OAuth Client Policy</h3>
<p>Once you've created the policy, you can configure the policy details that determine how the policy works. Then you can activate the policy so that it can be used.</p>

<h5>To configure an OAuth Client policy in Policy Manager</h5>
<ol>
	<li>In the Organization Tree, find the level where the policy was defined. Click to select.</li>
	<li>In the center pane, in the <strong>OAuth Client Policy</strong> section, click <strong>Modify</strong>. The <strong>Specify OAuth Client Policy Options</strong> page is displayed, as shown below.
		<p><img src="images/oauth_client_policy_options.jpg" alt="OAuth Client Policy Options" /></p>
	</li>
	<li>Specify values. For details on field values, see <a href="#oauth_client_config_options">OAuth Client Policy Configuration Options</a> below.</li>
	<li>Click <strong>Next</strong> to go to the <strong>Specify OAuth Client Policy Audit Options</strong> page. See <a href="#oauth_client_config_audit_options">Configuring OAuth Client Policy Audit Options</a>.</li>
	<li>When done, click <strong>Finish</strong> to save the policy.</li>
</ol>
<p>Now that the policy is defined, you can activate it and start using it. On the right, under <strong>Actions</strong>, choose <strong>Activate Policy</strong>.</p>
<p><a href="#top">back to top</a></p>



<h3 id="oauth_client_config_options">OAuth Client Policy Configuration Options</h3>
<p>The OAuth Client policy includes the configuration options listed below.</p>
<dl>
<dt>Scope</dt>
<dd>Update the appropriate Scope as provided by the OAuth provider. {<span class="apidoc_red">can you have multiple scopes? Separator?</span>}</dd>


<dt>Grant Type</dt>
<dd>Indicate the OAuth 2.0 grant type that the policy will use. Supported options: <a href="../../cm/learnmore/basics_glossary.htm#gl_oauth_grant_passwordcredentials">Resource Owner</a> (Resource Owner Password Credentials grant type) or <a href="../../cm/learnmore/basics_glossary.htm#gl_oauth_grant_clientcredentials">Client Credentials</a>.</dd>


<dt>OAuth Provider Connection Details</dt>
<dd>Check the box to provide the OAuth Provider connection details {<span class="apidoc_red">clarify. what if you do, what if you don't, when would you, how do you know what to put?</span>}</dd>


<dt>HTTP Verb</dt>
<dd>The HTTP verb for the call to the OAuth Provider. Might be GET or POST, depending on your provider.</dd>


<dt>Provider Location</dt>
<dd>Set the Location for the OAuth Provider {<span class="apidoc_red">where would they get this from?</span>} {URL for the OAuth 2.0 token: service URL /oauth/oauth20/token</dd>


<dt>Provider Content Type</dt>
<dd>The content-type value specified as required in the authorization call to the OAuth Provider.</dd>


<dt>Service QName</dt>
<dd>{<span class="apidoc_red">xxx</span>}</dd>


<dt>Operation QName</dt>
<dd>{<span class="apidoc_red">xxx</span>}</dd>
</dl>
<p><a href="#top">back to top</a></p>



<h3 id="oauth_client_config_audit_options">Configuring OAuth Client Policy Audit Options</h3>
<p>Once you've configured the settings for your OAuth Client policy, the next step is the <strong>Specify Security Audit Options</strong> page, as shown below.</p>
<p><img src="images/oauth_client_specify_audit_options.jpg" alt="Specify OAuth Client Policy Audit Actions" /></p>
<p>Choose from the available options controlling the audit data that's captured:</p>
<dl>
<dt>Generate Audit Data</dt>
<dd>Captures all message data, whether success or failure, for all message exchanges.</dd>
<dt>On Error Only</dt>
<dd>If you choose to generate audit data, you can specify that audit data is captured only when an error occurs on a message exchange.</dd>
</dl>
<p>That completes the OAuth Client Policy configuration. Click <strong>Finish</strong> to close the wizard. You can now assign the policy to a service.</p>
<p><a href="#top">Back to top</a></p>





<h3 id="oauth_client_policy_attach">Attaching the Policy</h3>
<p>To use the OAuth Client policy, go to the <strong>Policies</strong> folder in the Root Organization and attach the policy to a web service, binding, or binding operation.</p>
<p><a href="#top">Back to top</a></p>



<h3 id="uc_policy_op_oauth_client">OAuth Client Policy: use case</h3>
<p>This section provides a usage scenario for using the OAuth Client policy to xxx.</p>
<p>It includes the following high-level steps:</p>
<ol>
	<li><a href="#uc_policy_op_oauth_client_01">Configure New OAuth Client Policy</a></li>
	<li><a href="#uc_policy_op_oauth_client_02">Create user to be used for Client ID and Shared Secret</a></li>
	<li><a href="#uc_policy_op_oauth_client_03">Create user to be used for Resource Owner</a></li>
	<li><a href="#uc_policy_op_oauth_client_04">Configure Service to use OAuth Client Policy</a></li>
	<li><a href="#uc_policy_op_oauth_client_05">Configure outbound identity</a></li>
	<li><a href="#uc_policy_op_oauth_client_06">Cache Configuration</a></li>
	<li><a href="#uc_policy_op_oauth_client_07">Test</a></li>
	<li><a href="#uc_policy_op_oauth_client_08">Validate</a></li>
</ol>


<h4 id="uc_policy_op_oauth_client_01">Configure New OAuth Client Policy</h4>
<p>First, create and configure a new OAuth Client Policy. Follow the steps below.</p>
<h5>To create and configure the OAuth Client policy</h5>
<ol>
	<li>Log in to the Policy Manager workbench.</li>
	<li>Choose the organization that the policy will belong to, and go to the <strong>Policies</strong> &gt; <strong>Operational Policies</strong> folder.</li>
	<li>Click <strong>Add Policy</strong>.</li>
	<li>On the <strong>Select Policy Creation Option</strong> page, from the <strong>Type</strong> drop-down, choose <strong>OAuth Client Policy</strong>&nbsp;and click <strong>Next</strong>.</li>
	<li>Specify a value for <strong>Policy Name</strong> and click <strong>Finish</strong>.</li>
	<li>At the completion summary, click <strong>Close</strong>. The <strong>OAuth Client Policy Details</strong> page is displayed.</li>
	<li>The next step is to configure the policy details. In the center section, click <strong>Modify</strong>.</li>
	<li>On the <strong>Specify OAuth Client Policy Options</strong> page, specify values for the following properties:
		<ul>
			<li>Scope: specify the scope provided by the OAuth Provider.</li>
			<li>Choose the OAuth 2.0 grant type that the policy will support: <a href="../../cm/learnmore/basics_glossary.htm#gl_oauth_grant_passwordcredentials">Resource Owner</a> (Resource Owner Password Credentials grant type) or <a href="../../cm/learnmore/basics_glossary.htm#gl_oauth_grant_clientcredentials">Client Credentials</a>.</li>
			<li>Check the <strong>OAuth Provider Connection Details</strong> box.</li>
			<li>Choose the HTTP verb that the OAuth Provider uses {<span class="apidoc_red">for xxx</span>}: GET or POST.</li>
			<li>Specify the <strong>Location</strong> of the OAuth provider.{<span class="apidoc_red">where do they get this from?</span>}</li>
			<li>Set the required Content-Type that will be set to the OAuth Provider.
			<p><img src="images/oauth_client_policy_uc_01.png" alt="OAuth Client Policy Options" /></p></li>
			<li>Click <strong>Finish</strong>.</li>
		</ul>
	</li>
	<li>Click <strong>Close</strong>.</li>
	<li>Under the Workflow actions, click the <strong>Activate Policy</strong> link.</li>
	<li>Click <strong>OK</strong> to activate the policy.</li>
</ol>
<p></p>
<h4 id="uc_policy_op_oauth_client_02">Create user to be used for Client ID and Shared Secret</h4>
<p>The client id and shared secret is used when invoking the OAuth provider. The gateway will send these to identify itself with the OAuth provider. The first step would be obtaining this information by registering this service in the OAuth provider. See the documentation provided by the OAuth provider for these steps.</p>
<p>If you are using the Akana OAuth Provider, follow these steps:</p>
<ol>
	<li>Log in to the Community Manager Portal.</li>
	<li>Create a new APP by selecting it from the create '+', if this APP belongs to a child organization select that organization first.</li>
	<li>Define the app, and then click <strong>Finish</strong>.</li>
	<li>Retrieve the Client Id and Shared Secret from the created app:
		<ol>
			<li>Note the Client Id</li>
			<li>Click the <strong>Show Keys</strong> link to view the Shared Secret</li>
			<li>Note the Shared Secret
				<p><img src="images/oauth_client_policy_uc_02.png" alt="xxx" /></p></li>
		</ol>
	</li>
	</ol>

<p>The client id and shared secret need to be stored as an outbound identity for the invoked service.</p>
<h5>Follow these steps to create the user:</h5>
<p>{<span class="apidoc_red">these steps not needed per Buck? He got an error</span>}</p>
<ol>
	<li>Log in to the Policy Manager workbench.</li>
	<li>Click the Security tab.</li>
	<li>From the Users sub-tab, on the bottom of the screen, click <strong>Add User</strong>.</li>
	<li>Properly populate the information. The Client Id from the OAuth Provider will be the user id and the Shared Secret will be the password.
	<p><img src="images/oauth_client_policy_uc_03.png" alt="xxx" /></p>
	<li>Click <strong>Finish</strong>.</li>
</ol>


<h4 id="uc_policy_op_oauth_client_03">Create user to be used for Resource Owner</h4>
<p>When using the Resource Owner flow, a user name and password is required to be passed to the OAuth Provider. This user name and password will need to be created as a local user and added to the service as an outbound identity.</p>
<h5>To create the Resource Owner user</h5>
<p>{<span class="apidoc_red">Buck: not understand why need to set this up. Need a login domain... why creating this user when it already exists in the LDAP domain. you have to provide a user to authenticate against, that's how you generate the tokens. The users already exist in the domain so not sure why we need to create a Resource Owner user in the local domain.</span></p>
<p><span class="apidoc_red">When you add the outbound identities to the API, one of the identities is that user. Using the LDAP domain instead, didn't work. Had to create this user for the local domain.</span>}</p>
<ol>
	<li>Log in to the Policy Manager workbench.</li>
	<li>click the <strong>Security</strong> tab.</li>
	<li>From the Users sub tab, on the bottom of the screen, click <strong>Add User</strong>.</li>
	<li>Properly populate the information.
	<p><img src="images/oauth_client_policy_uc_04.png" alt="xxx" /></p></li>
	<li>Click <strong>Finish</strong>.</li>
</ol>


<h4 id="uc_policy_op_oauth_client_04">Configure Service to use OAuth Client Policy</h4>
<p>Assumption is that an API has been properly created in the platform.</p>
<p></p>
<p>The OAuth Client Policy is done on the Outbound side, so this policy needs to be added to the Physical Service (target) object that was created. The users that were created above will also need to be added to this service as Outbound Identities. Follow these steps to properly configure a service to use the OAuth Client Policy.</p>
<h5>To configure the service to use the OAuth Client policy</h5>
<ol>
	<li>Log in to the Policy Manager workbench to configure the Physical Service.</li>
	<li>Navigate to the proper organization structure where this service was created.</li>
	<li>Select the physical service, this is the service with the name of target on it.</li>
	<li>Scroll down to the <strong>Policy Attachments</strong> section and click <strong>Manage</strong>, next to the Operational section.</li>
	<li>From the pop-up screen, navigate to the Policy -> Operational directory under the organization that the OAuth Client Policy was created and select it.
	<p><img src="images/oauth_client_policy_uc_05.png" alt="Manage Operational Policy Attachments page" /></p></li>
	<li>Click <strong>Apply</strong>.</li>
</ol>

<h4 id="uc_policy_op_oauth_client_05">Configure outbound identity</h4>
<p>At this point, the Outbound Identities need to be configured. This can be done from either the Policy Manager Workbench or the Community Manager Portal. These directions will describe the steps using the Community Manager Portal.</p>
<p>If the Resource Owner flow is being used two outbound identities are required, one for the end user and the other for the client identity.</p>

<h5>To configure the end-user identity</h5>
<ol>
	<li>Log in to the Community Manager Portal.</li>
	<li>Navigate to the API that will be used for this configuration.</li>
	<li>On the Left Navigation, select the <strong>Implementations</strong> link.</li>
	<li>Select the Endpoint that will be configured.</li>
	<li>Scroll down to the Identities section and click <strong>Edit</strong>.</li>
	<li>Select <strong>Specify Outbound Identities</strong>, click <strong>Add</strong>.</li>
	<li>On the Source Identity, select <strong>Static User</strong>.</li>
	<li>The domain needs to be set to Local Domain, then populate the Username and password that was created above.</li>
	<li>Under Outbound Identity, select <strong>End User</strong>.
	<p><img src="images/oauth_client_policy_uc_06.png" alt="xxx" /></p></li>
	<li>Click <strong>Finish</strong>.</li>
</ol>

<h5>To configure the client outbound identity</h5>
<ol>
	<li>Using the client identity created above, on the same API where the end user outbound identity was configured select the Implementations link.</li>
	<li>Select the Endpoint that will be configured.</li>
	<li>Scroll down to the Identities section and click <strong>Edit</strong>.</li>
	<li>Select <strong>Specify Outbound Identities</strong> and click <strong>Add</strong>.</li>
	<li>On the Source Identity, select <strong>Status User</strong>.</li>
	<li>Select the Local Domain and the Username and password for the client identity create above.</li>
	<li>In the Outbound Identity enter: <strong>GrantTypeCredentials</strong> in the <strong>User Defined Category</strong> field.</li>
	<li>Click <strong>Finish</strong>.</li>
</ol>


<h4 id="uc_policy_op_oauth_client_06">Cache Configuration</h4>
<p>Tokens can be stored in a local cache to the Network Directory. Tokens are cached based on a</p>
<p>{<span class="apidoc_red">Web results concatenation of the client id and scope</span>}, if using Resource Owner the user id is appended to the cache key. Cache values can be controlled with an /admin category. Follow these steps to properly configure the cache.</p>
<p></p>
<ol>
	<li>Log in to Akana Administration Console for the Network Director container.</li>
	<li>Select the <strong>Configuration</strong> tab.</li>
	<li>In the Configuration Categories tab, select <strong>com.akana.policy.oauth.client</strong>.</li>
	<li>Set values for the following:
		<ul>
			<li>Cache Expiration Time</li>
			<li>Cache Idle Time</li>
			<li>Cache Invalidate Time</li>
		</ul>
	</li>
	</ol>


<h4 id="uc_policy_op_oauth_client_07">Test</h4>
<p>Invoke the API to test. The backend service should be properly invoked with an OAuth Token.</p>


<h4 id="uc_policy_op_oauth_client_08">Validate</h4>
<p>Follow these steps to validate that a proper OAuth Token has been added to the downstream API.</p>
<ol>
	<li>Log in to the Policy Manager Workbench.</li>
	<li>Navigate the that API that was invoked during the testing. This will be the same API that the OAuth Client Policy was added too.</li>
	<li>In the top right tab, select the <strong>Monitoring</strong> tab, followed by the <strong>Logs</strong> tab.</li>
	<li>Select the latest transaction.</li>
	<li>Select the <strong>Recorded Messages</strong> tab.</li>
	<li>Select the Downstream Message and select the Raw Format checkbox.</li>
	<li>On this screen, the Authorization token should be shown. See example below.
<p><img src="images/oauth_client_policy_uc_07.png" alt="xxx" /></p></li>
</ol>
<p><a href="#top">Back to top</a></p>
<p><span class="apidoc_red">To get downstream record... need to enable debug mode on the API implementation and check the box for Generate Audit Data for the operation testing it on.</span>xxx</p>



<div class = "divider1"></div>



<h3 id="related_topics">Related Topics</h3>
<div class="relatedlinks">
<ul>
	<li><a href="about_policies_view.htm">About Policies</a></li>
	<li><a href="policy_management.htm">Managing Policies</a></li>
	<li><a href="policies_operational_about.htm">About Operational Policies</a></li>
</ul>
<ul>
	<li><a href="../../cm/learnmore/basics_glossary.htm">Glossary of Terms for the Developer Portal</a></li>
</ul>
</div>