---
layout: page
title: Using the OAuth Client Policy
description: Learn how to use the OAuth Client policy to allow the API Gateway to act as the client, generating the OAuth 2.0 token and sending it to the downstream API.
product: ag
category: learn
sub-nav-class: Policies - Operational
weight: 04
type: page
nav-title: OAuth Client
---
<h1 id="top">Using the OAuth Client Policy</h1>
<p>Learn how to use the OAuth Client policy to allow the API Gateway to act as the client, generating the OAuth 2.0 token and sending it to the downstream API.</p>
<p>For information about using policies in the context of the developer portal, see <a href="../../cm/learnmore/bus_admin_organizations.htm#h_business_policies">Business Policies</a>.</p>
<h4 class="stamp">Supported Platforms: 2018.0.0 and later</h4>



<hr class="divide_hr" />
<h2 style="color: gray;">Table of Contents</h2>
<ol class="table_of_contents">
	<li><a href="#introduction">Introduction</a></li>
	<li><a href="#oauth_client_create">Creating an OAuth Client Policy</a></li>
	<li><a href="#oauth_client_config">Configuring the OAuth Client Policy</a></li>
	<li><a href="#oauth_client_config_options">OAuth Client Policy Configuration Options</a></li>
	<li><a href="#oauth_client_config_audit_options">Configuring OAuth Client Audit Options</a></li>
	<li><a href="#oauth_client_policy_attach">Attaching the Policy</a></li>
	<li><a href="#uc_policy_op_oauth_client">OAuth Client Policy: use case</a></li>
</ol>
<hr class="divide_hr" />



<h2 id="introduction">Introduction</h2>
<p>The OAuth Client Policy is an operational policy that allows the API Gateway to send an OAuth 2.0 token downstream.</p>
<p>In general terms, the API Gateway is in the middle, between the consumer and the downstream service. The consumer calls the Gateway, and then the Gateway typically calls the downstream service.</p>
<p>The <a href="policy_op_oauth_security.htm">OAuth Security Policy</a> operates on the front side of the transaction, between the consumer and the Gateway; a consumer calling the API via the Gateway passes a valid OAuth token authenticating the caller as an approved consumer. The OAuth Security policy is normally attached to the virtual service; a consumer sending a request to the API includes the OAuth token, and the Gateway adds it to the request for the downstream service.</p>
<p>With the OAuth Client policy, the API Gateway acts as the client, generating the token and sending it to the downstream API.</p>
<p>This policy acts as the consumer of the downstream API. It gets a new OAuth token, nothing to do with the consumer that's calling the Gateway, and passes the token to the downstream service.</p>
<p>As an example, if a client wants to call a Google API, downstream, the client, not the consumer, needs to identify with Google. In this scenario, the Gateway acts as the client.</p>
<p><strong>Note</strong>: This policy is available only for two-legged OAuth grant types: <a href="../../cm/learnmore/basics_glossary.htm#gl_oauth_grant_passwordcredentials">Resource Owner</a> (Resource Owner Password Credentials grant type) or <a href="../../cm/learnmore/basics_glossary.htm#gl_oauth_grant_clientcredentials">Client Credentials</a>.</p>
<p><a href="#top">back to top</a></p>



<h2 id="oauth_client_create">Creating an OAuth Client Policy</h2>
<p>The first step in creating a policy is to define the basic policy information.</p>

<h4>To add an operational policy</h4>
<ol>
	<li>Go to <strong>Workbench</strong> &gt; <strong>Browse</strong> &gt; <strong>Organization</strong>, and select <strong>Policies</strong> &gt; <strong>Operational Policies</strong>. The <strong>Policies Summary</strong> is displayed.</li>
	<li>Click <strong>Add Policy</strong>.</li>
	<li>Choose the policy type and click <strong>Next</strong>.</li>
	<li>Specify a name (required) and description (optional) and click <strong>Finish</strong>. At the <strong>Completion Summary</strong>, click <strong>Close</strong>. The <strong>Add Policy</strong> Wizard creates a draft policy instance that you can then configure on the <strong>Policy Details</strong> page.</li>
</ol>
<p>For more information, see <a href="policy_management.htm#add_policy">Add Policy</a>.</p>
<p><a href="#top">back to top</a></p>


<h2 id="oauth_client_config">Configuring the OAuth Client Policy</h2>
<p>Once you've created the policy, you can configure the policy details that determine how the policy works. Then you can activate the policy so that it can be used.</p>

<h4>To configure an OAuth Client policy in Policy Manager</h4>
<ol>
	<li>In the Organization Tree, find the level where the policy was defined. Click to select.</li>
	<li>In the center pane, in the <strong>OAuth Client Policy</strong> section, click <strong>Modify</strong>. The <strong>Specify OAuth Client Policy Options</strong> page is displayed, as shown below.
		<p><img src="images/oauth_client_policy_options.jpg" alt="OAuth Client Policy Options" /></p>
	</li>
	<li>Specify values. For details on field values, see <a href="#oauth_client_config_options">OAuth Client Policy Configuration Options</a> below.</li>
	<li>Click <strong>Next</strong> to go to the <strong>Specify OAuth Client Policy Audit Options</strong> page. See <a href="#oauth_client_config_audit_options">Configuring OAuth Client Policy Audit Options</a>.</li>
	<li>When done, click <strong>Finish</strong> to save the policy.</li>
</ol>
<p>Now that the policy is defined, you can activate it and start using it. On the right, under <strong>Actions</strong>, choose <strong>Activate Policy</strong>.</p>
<p><a href="#top">back to top</a></p>



<h2 id="oauth_client_config_options">OAuth Client Policy Configuration Options</h2>
<p>The OAuth Client policy includes the configuration options listed below.</p>
<dl>
<dt>Scope</dt>
<dd>Update the appropriate scope as provided by the OAuth provider.</dd>


<dt>Grant Type</dt>
<dd>Indicate the OAuth 2.0 grant type that the policy will use. Two-legged OAuth grant types are supported: <a href="../../cm/learnmore/basics_glossary.htm#gl_oauth_grant_passwordcredentials">Resource Owner</a> (Resource Owner Password Credentials grant type) or <a href="../../cm/learnmore/basics_glossary.htm#gl_oauth_grant_clientcredentials">Client Credentials</a>.</dd>


<dt>OAuth Provider Connection Details</dt>
<dd>Check the box to provide the OAuth Provider connection details.</dd>


<dt>HTTP Verb</dt>
<dd>The HTTP verb for the call to the OAuth Provider. Might be GET or POST, depending on your provider.</dd>


<dt>Provider Location</dt>
<dd>Provide the full token endpoint for the OAuth Provider. This is the valid URL for the OAuth Provider's OAuth 2.0 token service. Examples:
	<ul>
	<li>If you're using the platform's own OAuth provider, the location URL is: {hostname} /oauth/oauth20/token.</li>
	<li>For PingFederate the provider token endpoint is: /as/token.oauth2.</li>
	<li>For Google it is: https://www.googleapis.com/oauth2/v4/token.</li>
</ul>
</dd>
	
	
	<dt>Provider Content Type</dt>
	<dd>The content-type value specified as required in the call to the OAuth Provider.</dd>
	
	
	<dt>Service QName</dt>
	<dd>Accept the default value.</dd>
	
	
	<dt>Operation QName</dt>
	<dd>Accept the default value.</dd>
</dl>
<p><a href="#top">back to top</a></p>



<h2 id="oauth_client_config_audit_options">Configuring OAuth Client Policy Audit Options</h2>
<p>Once you've configured the settings for your OAuth Client policy, the next step is the <strong>Specify Security Audit Options</strong> page, as shown below.</p>
<p><img src="images/oauth_client_specify_audit_options.jpg" alt="Specify OAuth Client Policy Audit Actions" /></p>
<p>Choose from the available options controlling the audit data that's captured:</p>
<dl>
<dt>Generate Audit Data</dt>
<dd>Captures all message data, whether success or failure, for all message exchanges.</dd>
<dt>On Error Only</dt>
<dd>If you choose to generate audit data, you can specify that audit data is captured only when an error occurs on a message exchange.</dd>
</dl>
<p>That completes the policy configuration. Click <strong>Finish</strong> to close the wizard. You can now assign the policy to a service.</p>
<p><a href="#top">Back to top</a></p>





<h2 id="oauth_client_policy_attach">Attaching the Policy</h2>
<p>To use the OAuth Client policy, go to the <strong>Policies</strong> folder in the respective organization and attach the policy to a web service, binding, or binding operation.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="uc_policy_op_oauth_client">OAuth Client Policy: use case</h2>
<p>This section provides a usage scenario for using the OAuth Client policy to generate an OAuth token and send it to the downstream service.</p>
<p>It includes the following high-level steps:</p>
<ol>
	<li><a href="#uc_policy_op_oauth_client_01">Configure New OAuth Client Policy</a></li>
	<li><a href="#uc_policy_op_oauth_client_02">Create user to be used for Client ID and Shared Secret</a></li>
	<li><a href="#uc_policy_op_oauth_client_03">Create user to be used for Resource Owner</a></li>
	<li><a href="#uc_policy_op_oauth_client_04">Configure Service to use OAuth Client Policy</a></li>
	<li><a href="#uc_policy_op_oauth_client_05">Configure outbound identity</a></li>
	<li><a href="#uc_policy_op_oauth_client_06">Cache Configuration</a></li>
	<li><a href="#uc_policy_op_oauth_client_07">Test</a></li>
	<li><a href="#uc_policy_op_oauth_client_08">Validate</a></li>
</ol>


<h3 id="uc_policy_op_oauth_client_01">Configure New OAuth Client Policy</h3>
<p>First, create and configure a new OAuth Client Policy. Follow the steps below.</p>
<h4>To create and configure the OAuth Client policy</h4>
<ol>
	<li>Log in to the Policy Manager workbench.</li>
	<li>Choose the organization that the policy will belong to, and go to the <strong>Policies</strong> &gt; <strong>Operational Policies</strong> folder.</li>
	<li>Click <strong>Add Policy</strong>.</li>
	<li>On the <strong>Select Policy Creation Option</strong> page, from the <strong>Type</strong> drop-down, choose <strong>OAuth Client Policy</strong> and click <strong>Next</strong>.</li>
	<li>Specify a value for <strong>Policy Name</strong> and click <strong>Finish</strong>.</li>
	<li>At the completion summary, click <strong>Close</strong>. The <strong>OAuth Client Policy Details</strong> page is displayed.</li>
	<li>The next step is to configure the policy details. In the center section, click <strong>Modify</strong>.</li>
	<li>On the <strong>Specify OAuth Client Policy Options</strong> page, specify values for the following properties:
		<ul>
			<li>Scope: specify the scope provided by the OAuth Provider.</li>
			<li>Choose the OAuth 2.0 grant type that the policy will support: <a href="../../cm/learnmore/basics_glossary.htm#gl_oauth_grant_passwordcredentials">Resource Owner</a> (Resource Owner Password Credentials grant type) or <a href="../../cm/learnmore/basics_glossary.htm#gl_oauth_grant_clientcredentials">Client Credentials</a>.</li>
			<li>Check the <strong>OAuth Provider Connection Details</strong> box.</li>
			<li>Choose the HTTP verb that the OAuth Provider's token endpoint uses: GET or POST.</li>
			<li>Specify the <strong>Location</strong> of the OAuth provider. For examples, see <a href="#oauth_client_config_options">OAuth Client Policy Configuration Options</a>.</li>
			<li>Set the required Content-Type that will be set to the OAuth Provider.
			<p><img src="images/oauth_client_policy_uc_01.png" alt="OAuth Client Policy Options" /></p></li>
			<li>Click <strong>Finish</strong>.</li>
		</ul>
	</li>
	<li>Click <strong>Close</strong>.</li>
	<li>Under the Workflow actions, click the <strong>Activate Policy</strong> link.</li>
	<li>Click <strong>OK</strong> to activate the policy.</li>
</ol>


<h3 id="uc_policy_op_oauth_client_02">Create user to be used for Client ID and Shared Secret</h3>
<p>The client id and shared secret is used when invoking the OAuth provider. The gateway will send these to identify itself with the OAuth provider. The first step would be obtaining this information by registering this service in the OAuth provider. See the documentation provided by the OAuth provider for these steps.</p>
<p>If you are using the Akana OAuth Provider, follow these steps:</p>
<ol>
	<li>Log in to the Community Manager developer portal.</li>
	<li>Create a new app: From the Plus icon (<strong>+</strong>), select <strong>Add App</strong>. To create an app in the context of a child organization, choose the organization first.</li>
	<li>Define the app, and then click <strong>Finish</strong>.</li>
	<li>		On the <strong>App Details</strong> page, under <strong>Security</strong>, note the App ID. </li>
	<li>Click <strong>Show Keys</strong> to view the Shared Secret. An example is shown below.
			<p><img src="images/oauth_client_policy_uc_02.png" alt="Viewing the Shared Secret" /></p></li>
	<li>Copy the Shared Secret.</li>
</ol>

<p>Store the Client ID and Shared Secret values as an outbound identity for the invoked service. For instructions, see <a href="#proc_config_client_outbound_identity">To configure the client outbound identity</a>.</p>

<h4 id="proc_create_client">To create the Client user</h4>
<p><strong>Note</strong>: If you're using the platform's OAuth Provider, you can skip this step. The platform uses the credentials for the app you created. If you're using an external OAuth Provider, follow the steps below.</p>
<ol>
	<li>Log in to the Policy Manager workbench.</li>
	<li>Click the <strong>Security</strong> tab.</li>
	<li>From the <strong>Users</strong> sub-tab, on the bottom of the screen, click <strong>Add User</strong>.</li>
	<li>Populate the information: username, full name, and password. The Client Id from the OAuth Provider will be the user ID and the Shared Secret will be the password.
		<p><img src="images/oauth_client_policy_uc_03.png" alt="Adding a User" /></p></li>
	<li>Click <strong>Finish</strong>.</li>
</ol>


<h3 id="uc_policy_op_oauth_client_03">Create user to be used for Resource Owner</h3>
<p>When using the Resource Owner flow, a user name and password is required to be passed to the OAuth Provider. Even though the username and password exist in the LDAP domain, you must set the user up as a local user and then add it to the service as an outbound identity. The policy uses these credentials to put in the request when calling the OAuth Provider.</p>

<h4 id="proc_create_ro">To create the Resource Owner user</h4>
<ol>
	<li>Log in to the Policy Manager workbench.</li>
	<li>Click the <strong>Security</strong> tab.</li>
	<li>From the <strong>Users</strong> sub-tab, on the bottom of the screen, click <strong>Add User</strong>.</li>
	<li>Populate the information: username, full name, and password.
		<p><img src="images/oauth_client_policy_uc_04.png" alt="Creating the Resource Owner user" /></p>
	</li>
	<li>Click <strong>Finish</strong>.</li>
</ol>


<h3 id="uc_policy_op_oauth_client_04">Configure Service to use OAuth Client Policy</h3>
<p>Assumption is that an API has been properly created in the platform.</p>
<p>The OAuth Client Policy is done on the Outbound side, so this policy needs to be added to the Physical Service (target) object that was created. The users that were created above will also need to be added to this service as Outbound Identities. Follow these steps to properly configure a service to use the OAuth Client Policy.</p>
<h4>To configure the service to use the OAuth Client policy</h4>
<ol>
	<li>Log in to the Policy Manager workbench to configure the Physical Service.</li>
	<li>Navigate to the proper organization structure where this service was created.</li>
	<li>Select the physical service (the service with the name of target on it).</li>
	<li>Scroll down to the <strong>Policy Attachments</strong> section. In the Operational sub-section, click <strong>Manage</strong>.</li>
	<li>From the pop-up screen, navigate to the Policy -> Operational directory under the organization that the OAuth Client Policy was created and select it.
	<p><img src="images/oauth_client_policy_uc_05.png" alt="Manage Operational Policy Attachments page" /></p></li>
	<li>Click <strong>Apply</strong>.</li>
</ol>

<h3 id="uc_policy_op_oauth_client_05">Configure outbound identity</h3>
<p>At this point, the Outbound Identities need to be configured. This can be done from either the Policy Manager Workbench or the Community Manager developer portal. These directions describe the steps using the Community Manager developer portal.</p>
<p>If the Resource Owner flow is being used, two outbound identities are required, one for the end user and the other for the client identity.</p>
<p><strong>Note</strong>: While you're modifying the implementation, it's a good idea to enable debug mode, on the Implementation Details page, so that you get transaction logging. For instructions, see <a href="../../cm/learnmore/apiadmin_implementations.htm#debug_mode_enable">How do I turn on debug mode for my implementation?</a></p>

<h4>To configure the end-user identity</h4>
<ol>
	<li>Log in to the Community Manager developer portal.</li>
	<li>Navigate to the API that will be used for this configuration.</li>
	<li>On the left navigation, click <strong>Implementations</strong>.</li>
	<li>Choose the endpoint that will be configured.</li>
	<li>Scroll down to the <strong>Identities</strong> section and click <strong>Edit</strong>.</li>
	<li>Select <strong>Specify Outbound Identities</strong> and click <strong>Add</strong>.</li>
	<li>On the Source Identity, select <strong>Static User</strong>.</li>
	<li>Make sure the domain is set to Local Domain, and then populate the resource owner username and password that you created in <a href="#proc_create_ro">To create the Resource Owner user</a> above.</li>
	<li>Under Outbound Identity, select <strong>End User</strong>.
	<p><img src="images/oauth_client_policy_uc_06.png" alt="Configuring the end-user identity" /></p></li>
	<li>Click <strong>Finish</strong>.</li>
</ol>

<h4 id="proc_config_client_outbound_identity">To configure the client outbound identity</h4>
<ol>
	<li>Using the client identity created above, on the same API where the end-user outbound identity was configured, click <strong>Implementations</strong>.</li>
	<li>Choose the endpoint that will be configured.</li>
	<li>Scroll down to the Identities section and click <strong>Edit</strong>.</li>
	<li>Select <strong>Specify Outbound Identities</strong> and click <strong>Add</strong>.</li>
	<li>On the Source Identity, select <strong>Static User</strong>.</li>
	<li>Make sure the domain is set to Local Domain, and then populate the username and password for the client identity that you created in <a href="#proc_create_client">To create the Client user</a> above. If you're using the platform as an OAuth provider, the values are the AppID and Secret.</li>
	<li>In the <strong>User Defined Category</strong> field, enter: <strong>GrantTypeCredentials</strong>, as shown below.
		<p><img src="images/oauth_client_policy_uc_AddOutBoundIdentity.png" alt="Add Outbound Identity" /></p>
	</li>
	<li>Click <strong>Finish</strong>.</li>
</ol>


<h3 id="uc_policy_op_oauth_client_06">Cache Configuration</h3>
<p>Tokens can be stored in a local cache to the Network Director. Tokens are cached based on a concatenation of the client id and scope. If you're using the Resource Owner grant type, the user UD is appended to the cache key. Cache values can be controlled with a configuration category in the Akana Administration Console. To configure the cache, follow the steps below.</p>

<h4>To set cache configuration values</h4>
<ol>
	<li>Log in to Akana Administration Console for the Network Director container.</li>
	<li>Select the <strong>Configuration</strong> tab.</li>
	<li>Under <strong>Configuration Categories</strong>, select <strong>com.akana.policy.oauth.client</strong>.</li>
	<li>Set values for the following:
		<ul>
			<li>Cache Expiration Time</li>
			<li>Cache Idle Time</li>
		</ul>
	</li>
</ol>


<h3 id="uc_policy_op_oauth_client_07">Test</h3>
<p>Invoke the API to test. The backend service should be properly invoked with an OAuth Token.</p>


<h3 id="uc_policy_op_oauth_client_08">Validate</h3>
<p>Follow these steps to validate that a proper OAuth Token has been added to the downstream API.</p>
<ol>
	<li>Log in to the Policy Manager Workbench.</li>
	<li>Navigate the that API that was invoked during the testing. This will be the same API that the OAuth Client Policy was added too.</li>
	<li>In the top right tab, select the <strong>Monitoring</strong> tab, followed by the <strong>Logs</strong> tab.</li>
	<li>Select the latest transaction.</li>
	<li>Select the <strong>Recorded Messages</strong> tab.</li>
	<li>Select the Downstream Message and select the Raw Format checkbox.</li>
	<li>On this screen, the Authorization token should be shown. See example below.
<p><img src="images/oauth_client_policy_uc_07.png" alt="Viewing the downstream message" /></p></li>
</ol>
<p><a href="#top">Back to top</a></p>



<hr class="divide_hr" />



<h2 id="related_topics">Related Topics</h2>
<div class="relatedlinks">
<ul>
	<li><a href="about_policies_view.htm">About Policies</a></li>
	<li><a href="policy_management.htm">Managing Policies</a></li>
	<li><a href="policies_operational_about.htm">About Operational Policies</a></li>
</ul>
<ul>
	<li><a href="../../cm/learnmore/basics_glossary.htm">Glossary of Terms for the Developer Portal</a></li>
</ul>
</div>