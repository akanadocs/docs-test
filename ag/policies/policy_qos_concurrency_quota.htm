---
layout: page
title: Using the Concurrency Quota Policy
description: Learn how to monitor web service concurrency performance by specifying a concurrency limit (quota).
product: ag
category: learn
sub-nav-class: Policies - QoS
weight: 04
type: page
nav-title: Concurrency Quota Policy
---
<h2 id="top">Using the Concurrency Quota Policy</h2>
<p>Learn how to monitor web service concurrency performance by specifying a concurrency limit (quota).</p>

<p>
<a href="about_policies_view.htm" class="button secondary">About Policies</a>  
<a href="policy_management.htm" class="button secondary">Managing Policies</a>  
<a href="qos_policies.htm" class="button secondary">QoS Policies</a></p>


<h5 class="stamp">Supported Platforms: 7.2 and later</h5>

<div class = "divider1"></div>



<h3 style="color: gray;">Table of Contents</h3>
<ol class="table_of_contents">
  <li><a href="#introduction">Introduction</a></li>
  <li><a href="#options">Concurrency Quota Policy Options</a></li>
  <li><a href="#configuration">Configuration</a></li>
  <li><a href="#uc_policy_qos_concurrency_quota_pm">Concurrency Quota Policy: use cases for Policy Manager</a></li>
  <li><a href="#uc_policy_qos_concurrency_quota_cm">Concurrency Quota Policy: use cases for Community Manager</a></li>
</ol>
<div class = "divider1"></div>



<h3 id="introduction">Introduction</h3>
<p>A Concurrency Quota Policy is a Quality of Service (QoS) policy that allows you to monitor the web service concurrency performance by specifying a concurrency limit (quota) that represents the maximum number of connections, and configuring fault and alert notifications.</p>
<p>You can define a fault message by specifying the following values:</p>
<ul>
  <li>Name (Fault Message)</li>
  <li>SOAP fault element that holds errors and status information for a SOAP message (Fault Element Name)</li>
  <li>URL that points to the fault code schema (Fault Namespace URI)</li>
  <li>URL that points to the fault code schema (Fault Namespace URI)</li>
</ul>
<p>You can also define Alert Codes in the <em>Alerts &gt; Alert Codes</em> section and enable and select them in the policy definition.</p>
<p>If the specified concurrency limit is exceeded, Policy Manager returns a fault and sends an alert.</p>



<h3 id="options">Concurrency Quota Policy Options</h3>
<p>The policy includes the configuration options listed below.</p>
<h5>Concurrency Quota Policy Details</h5>
<ul>
  <li><strong>Name</strong>: A read-only field that displays the name of the Concurrency Quota Policy.</li>
  <li><strong>Description</strong>: A read-only field that displays the description of the Concurrency Quota Policy.</li>
</ul>
<h5>Concurrency Quota</h5>
<ul>
  <li><strong>Concurrency Limit</strong>: Allows you to specify a concurrency limit (quota) that represents the maximum number of concurrency connections.</li>
  <li><strong>Fault Message</strong>: Allows you to enter the SOAP fault message (that is, &lt;faultString&gt;).</li>
  <li><strong>Fault Element Name</strong>: Allows you to enter the SOAP fault element that holds errors and status information for a SOAP message.</li>
  <li><strong>Fault Namespace URI</strong>: Allows you to enter the URL that points to the fault code schema.</li>
  <li><strong>Fault Namespace Prefix</strong>: Allows you to enter the fault namespace prefix.</li>
  <li><strong>Time to Clear Alert(s)</strong>: Allows you to enter the time that the throughput needs to be within the limit before a second alert is sent to signify that the consumer is once again within the quota.</li>
  <li><strong>Set Reminder Alert</strong>: A checkbox that enables the Reminder Alert function. This function sends the alert that is selected on the Alert Code drop-down list. The alert is sent at the <strong>Reminder Alert Interval</strong> until the consumer is within the quota.</li>
  <li><strong>Reminder Alert Interval(s)</strong>: Allows you to enter an interval (in seconds) at which Reminder Alerts will be sent until the consumer is within the quota. &nbsp;</li>
  <li><strong>Alert Code</strong>: A drop-down menu that displays a list of custom alert codes that you have defined. If you have &quot;Send Reminder Alert&quot; selected, alerts will be sent based on the alert interval defined using the selected Alert Code. For more information on defining an Alert Code, see <strong>About Alert Codes</strong> in the Policy Manager Online Help.</li>
  <li><strong>Clear Alert Code</strong>: A drop-down menu that displays a list of custom alert codes that you have defined. If you have &quot;Send Reminder Alert&quot; selected, alerts are sent when the alert condition no longer exists.</li>
  <li><strong>Reminder Alert Code</strong>: A drop-down menu that displays a list of custom alert codes that you have defined. If you have &quot;Send Reminder Alert&quot; selected, alerts are sent based on the specified interval when the condition continues to be exceeded.</li>
</ul>
<p><a href="#top">Back to top</a></p>



<h3 id="configuration">Configuration</h3>
<p>Let's take a quick walkthrough of the Concurrency Quota Policy configuration process to get you started.</p>

<h5>Step 1: Add Policy</h5>
<p>In Policy Manager, to create a Concurrency Quota Policy instance, go to <strong>Policies</strong> &gt; <strong>QoS Policies</strong> and choose <strong>Add Policy</strong>.</p>

<h5>Step 2: Modify Policy</h5>
<p>When you click <strong>Modify</strong> to make changes to the Concurrency Quota Policy on the <strong>Policy Details</strong> page, the initial policy looks like this:</p>
<p><img src="images/concurrency_quota1.jpg" width="604" height="395" alt="" /></p>
<p>Configure the policy options based on your requirements and click <strong>Apply</strong>.</p>

<h5>Step 3: Attach Policy</h5>
<p>After you've saved your policy, you can attach it to a web service, operation, or binding.</p>

<h5>Step 4: Test Policy and View Monitoring Data</h5>
<p>After you've attached the Concurrency Quota Policy to a web service, operation, or binding, send a request to your service and go to the <em>Services &gt; Monitoring</em> section to view the results for Logs, Real Time Charts, and Historical Charts. For more information on using the monitoring functions, refer to the Policy Manager Online Help, available via the Help button.</p>
<p><a href="#top">Back to top</a></p>



<h3 id="uc_policy_qos_concurrency_quota_pm">Concurrency Quota Policy: use cases for Policy Manager</h3>
<p>This section provides a list of Policy Manager-specific usage scenarios for the Concurrency Quota Policy.</p>
<p>It includes:</p>
<ol>
  <li><a href="#uc_policy_qos_concurrency_quota_pm_01">Scenario 1: Generate Alert When Concurrent Requests Received</a></li>
  <li><a href="#uc_policy_qos_concurrency_quota_pm_02">Scenario 2: Generate Reminder Alert When Concurrent Requests Received</a></li>
  <li><a href="#uc_policy_qos_concurrency_quota_pm_03">Scenario 3: Generate Alert When Using Contracts</a></li>
  <li><a href="#uc_policy_qos_concurrency_quota_pm_04">Scenario 4: Generate Clear Alert When Concurrency Exceeds Specified Interval</a></li>
</ol>



<h4 id="uc_policy_qos_concurrency_quota_pm_01">Scenario 1: Generate Alert When Concurrent Requests Received</h4>
<p>Generate an alert and send an email to the administrators if a service receives more than 10 concurrent requests.</p>
<ol>
  <li>Create a physical service in the Policy Manager Management Console using <strong>Create Physical Service</strong>.</li>
  <li>Provide service details and click <strong>Finish</strong>.</li>
  <li>Using <strong>Virtualize Service</strong>, virtualize and host the physical service on Network Director (<strong>ND1</strong>), and assign a name (for example, V<strong>s1</strong>).</li>
  <li>Navigate to <strong>Organization</strong> &gt; <strong>Policies</strong> &gt; <strong>QOS Policies</strong> and use <strong>Add Policy</strong> to create a Concurrency Quota Policy.</li>
  <li>Configure the Concurrency Quota Policy with 10 Concurrency Limit and a custom Fault message.
    <p><img src="images/concurrency_quota_uc_pm_01.jpg" alt="" /></p>
  </li>
  <li>Activate the policy, and attach it to the Vs1 service in the <strong>Service Details</strong> &gt; <strong>Policy Attachments</strong> &gt; <strong>QoS</strong> section.</li>
  <li>Send 20 concurrent requests from the application/client to the Vs1 service.</li>
  <li>When the concurrency limit has been exceeded, the Fault Message will be returned to the service consumer and an alert will be logged at the service level.
  <p><img src="images/concurrency_quota_uc_pm_02.jpg" alt="" /></p></li>
  <li>The details in the usage logs show the error being displayed as configured in the policy.
  <p><img src="images/concurrency_quota_uc_pm_03.jpg" alt="" /></p></li>
  <li>In the alert code, an email must be configured that will be sent to the administrator(s) as shown below.</li>
  <li>Timeline
  <p><img src="images/concurrency_quota_uc_pm_04.jpg" alt="" /></p></li>
</ol>


<h4 id="uc_policy_qos_concurrency_quota_pm_02">Scenario 2: Generate Reminder Alert When Concurrent Requests Received</h4>
<p>Generate a remainder alert and run a Management Script if more than 10 concurrent requests per 10 seconds are received repeatedly by a service in the 100 seconds.</p>
<ol>
  <li>Create a physical service in the Policy Manager Management Console using <strong>Create Physical Service</strong>.</li>
  <li>Provide service details and click <strong>Finish</strong>.</li>
  <li>Using <strong>Virtualize Service</strong>, virtualize and host the physical service on Network Director (<strong>ND1</strong>), and assign a name (for example, V<strong>s1</strong>).</li>
  <li>Navigate to <strong>Organization</strong> &gt; <strong>Policies</strong> &gt; <strong>QOS Policies</strong> and use <strong>Add Policy</strong> to create a Concurrency Quota Policy.</li>
  <li>Configure the Concurrency Quota Policy with 10 Concurrency Limit and a custom Fault message. Set Remainder Alert interval to 10 seconds and Clear alert time interval to 100 seconds.
    <p><img src="images/concurrency_quota_uc_pm_05.jpg" alt="" /></p>
  </li>
  <li>Activate the policy, and attach it to the Vs1 service in the <strong>Service Details</strong> &gt; <strong>Policy Attachments</strong> &gt; <strong>QoS</strong> section.</li>
  <li>Send 20 concurrent requests from the application/client to the Vs1 service. Results:
    <ol>
      <li>When the concurrency limit has been exceeded, the Fault Message will be returned to the service consumer and an alert will be logged at the service level.</li>
      <li>The details in the usage logs show the error being displayed as configured in the policy.</li>
    </ol>
  </li>
  <li>Keep sending 20 concurrent requests from the application/client to the Vs1 service. Results:
    <ol>
      <li>During the first 10 seconds no alert is shown.</li>
      <li>If the concurrency hits are seen after 10 seconds, a remainder alert is thrown which is valid for the next 10 seconds.</li>
      <li>After the first interval of 10 seconds, if the concurrency hits are still observed, there is another remainder alert.
        <p><img src="images/concurrency_quota_uc_pm_06.jpg" alt="" /></p></li>
      <li>Within the clear interval, for every 10 seconds, this alert is thrown if validation crosses</li>
      <li>In the Alert code, a script can be configured to run (for example, to store any sort of information related to the alert).</li>
    </ol>
  </li>
  </ol>


<h4 id="uc_policy_qos_concurrency_quota_pm_03">Scenario 3: Generate Alert When Using Contracts</h4>
<p>Generate an alert if an application hits a contract when sending more than 15 concurrent requests to various services using the contract</p>
<ol>
  <li>Create a physical service in the Policy Manager Management Console using <strong>Create Physical Service</strong>.</li>
  <li>Provide service details and click <strong>Finish</strong>.</li>
  <li>Using <strong>Virtualize Service</strong>, virtualize and host the physical service on Network Director (<strong>ND1</strong>), and assign a name (for example, V<strong>s1</strong>).</li>
  <li>Navigate to <strong>Organization</strong> &gt; <strong>Policies</strong> &gt; <strong>QOS Policies</strong> and use <strong>Add Policy</strong> to create a Concurrency Quota Policy.</li>
  <li>Configure the Concurrency Quota Policy with 15 Concurrency Limit and a custom Fault message.</li>
  <li>Activate the policy, and attach the Concurrency Quota Policy to a contract which serves Vs1 and Vs2 services.
    <p><img src="images/concurrency_quota_uc_pm_07.jpg" alt="" /></p></li>
  <li>Send 25 concurrent requests from the application/client to Vs1 and Vs2 services all together
    <ol>
      <li>When the concurrency limit has been exceeded, the Fault Message will be returned to the service consumer and an alert will be logged at contract level.</li>
      <li>The details in the usage logs show the error being displayed as configured in the policy.</li>
    </ol>
  </li>
  </ol>


<h4 id="uc_policy_qos_concurrency_quota_pm_04">Scenario 4: Generate Clear Alert When Concurrency Exceeds Specified Interval</h4>
<p>Generate a clear alert and send an email to the administrator when concurrency is no more exceeded in the 100 seconds interval</p>
<ol>
  <li>Create a physical service in the Policy Manager Management Console using <strong>Create Physical Service</strong>.</li>
  <li>Provide service details and click <strong>Finish</strong>.</li>
  <li>Using <strong>Virtualize Service</strong>, virtualize and host the physical service on Network Director (<strong>ND1</strong>), and assign a name (for example, V<strong>s1</strong>).</li>
  <li>Navigate to <strong>Organization</strong> &gt; <strong>Policies</strong> &gt; <strong>QOS Policies</strong> and use <strong>Add Policy</strong> to create a Concurrency Quota Policy.</li>
  <li>Configure the Concurrency Quota Policy with 10 Concurrency Limit and a custom Fault message.</li>
  <li>Activate the policy, and attach it to the Vs1 service in the <strong>Service Details</strong> &gt; <strong>Policy Attachments</strong> &gt; <strong>QoS</strong> section.</li>
  <li>Send 20 concurrent requests from the application/client to the Vs1 service.
    <ol>
      <li>When the concurrency limit has been exceeded, the Fault Message will be returned to the service consumer and an alert will be logged at the service level.</li>
      <li>The details in the usage logs show the error being displayed as configured in the policy.</li>
      <li>In the next 100 seconds, if the policy is not violated, a clear alert is sent.
        <p><img src="images/concurrency_quota_uc_pm_08.jpg" alt="" /></p></li>
      <li>In the clear alert code, an email must be configured that will be sent to the administrator(s) as shown below:</li>
      </ol>
    </li>
</ol>
<h4>Timeline (Scenarios 2 and 4)</h4>
<p><img src="images/concurrency_quota_uc_pm_09.jpg" alt="" /></p>
<p><a href="#top">Back to top</a></p>





<h3 id="uc_policy_qos_concurrency_quota_cm">Concurrency Quota Policy: use cases for Community Manager</h3>
<p>This section provides a list of Community Manager-specific usage scenarios for the Concurrency Quota Policy.</p>
<p>It includes:</p>
<ol>
  <li><a href="#uc_policy_qos_concurrency_quota_cm_00">Add / Configure Concurrency Quota Policy</a></li>
  <li><a href="#uc_policy_qos_concurrency_quota_cm_01">Scenario 1: How Do I Verify Concurrency Quota Policy at the Service Level?</a></li>
  <li><a href="#uc_policy_qos_concurrency_quota_cm_02">Scenario 2: How Do I Verify Concurrency Quota Policy at the Contract Level?</a></li>
  <li><a href="#uc_policy_qos_concurrency_quota_cm_03">Scenario 3: How Do I Verify Concurrency Quota Policy at License &gt; Term Level?</a></li>
</ol>


<h4 id="uc_policy_qos_concurrency_quota_cm_00">Add / Configure Concurrency Quota Policy</h4>
<p>If you are using a Concurrency Quota Policy with Community Manager, you must first add the policy to the Community Manager Tenant Organization in Policy Manager. Once that's done, it will be available for selection in the developer portal.</p>
<ol>
  <li>Go to the Policy Manager Management Console &gt; Tenant Organization &gt; <strong>Policies</strong> &gt; <strong>QoS Policies</strong> and click <strong>Add Policy</strong>.
<p><img src="images/concurrency_quota_uc_cm_01.jpg" alt="" /></p></li>
  <li>Specify Policy Name, Policy Type (Concurrency Quota Policy), click <strong>Finish</strong>, and then click <strong>Close</strong>.
  <p><img src="images/concurrency_quota_uc_cm_02.jpg" alt="" /></p></li>
  <li>On the <strong>Concurrency Quota Policy Details</strong> screen, click <strong>Modify</strong>.
  <p><img src="images/concurrency_quota_uc_cm_03.jpg" alt="" /></p></li>
  <li>Provide the policy details and click <strong>Finish</strong>.
  <p><img src="images/concurrency_quota_uc_cm_04.jpg" alt="" /></p></li>
  <li>Activate the policy.
    <p><img src="images/concurrency_quota_uc_cm_05.jpg" alt="" /></p>
  <p><img src="images/concurrency_quota_uc_cm_06.jpg" alt="" /></p></li>
</ol>


<h4 id="uc_policy_qos_concurrency_quota_cm_01">Scenario 1: How Do I Verify Concurrency Quota Policy at the Service Level?</h4>
<ol>
  <li>Launch Community Manager.</li>
  <li>Attach the Concurrency Quota Policy to the API implementation.
    <p><img src="images/concurrency_quota_uc_cm_07.jpg" alt="" /></p></li>
  <li>Request API access. Verify that the contract is activated.
  <p><img src="images/concurrency_quota_uc_cm_08.jpg" alt="" /></p></li>
  <li>Go to Test Client and send continuous requests. This policy condition will be met only when hitting concurrent requests (i.e., sending multiple requests in 1 second). This behavior is shown below using SoapUI and Test Client.</li>
  <li>Start one load test to send continuous requests from SoapUI. Also send requests from Test Client one by one. When multiple requests are received, the policy condition is met and you'll see a fault message in the response window.
    <p><img src="images/concurrency_quota_uc_cm_09.jpg" alt="" /></p></li>
  <li>Alerts will be displayed in the Community Manager API> BOARD (as shown below).
  <p><img src="images/concurrency_quota_uc_cm_10.jpg" alt="" /></p></li>
</ol>


<h4 id="uc_policy_qos_concurrency_quota_cm_02">Scenario 2: How Do I Verify Concurrency Quota Policy at the Contract Level?</h4>
<ol>
  <li>Attach the Concurrency Quota Policy at the Contract Level and activate the contract.
  <p><img src="images/concurrency_quota_uc_cm_11.jpg" alt="" /></p></li>
  <li>Now Go to Test Client and send continuous requests. This policy condition will meet only when hitting concurrent requests (i.e., sending multiple requests in 1 second).</li>
  <li>This behavior is shown below using SoapUI and Test Client.</li>
  <li>Start one load test to send continuous requests from SoapUI. Also send requests from Test Client one by one. When multiple requests are received, the policy condition is met and you'll see a fault message in the response window.
  <p><img src="images/concurrency_quota_uc_cm_12.jpg" alt="" /></p></li>
  <li>Alerts will be displayed in the Board for the API.
    <p><img src="images/concurrency_quota_uc_cm_13.jpg" alt="" /></p></li>
  <li>Alerts will also be displayed in the Policy Manager Registry.
  <p><img src="images/concurrency_quota_uc_cm_14.jpg" alt="" /></p></li>
</ol>


<h4 id="uc_policy_qos_concurrency_quota_cm_03">Scenario 3: How Do I Verify Concurrency Quota Policy at License &gt; Term Level?</h4>
<ol>
  <li>Edit License and attach Concurrency Quota Policy.
  <p><img src="images/concurrency_quota_uc_cm_15.jpg" alt="" /></p></li>
  <li>Next, test the Concurrency Quota Policy at the License term level. This assumes that the same scope (as above) is used for Scope mapping, and the same license is selected while requesting API access.</li>
  <li>Go to Test Client and send continuous requests. This policy condition will be met only when hitting concurrent requests (i.e., sending multiple requests in 1 second).</li>
  <li>This behavior is shown below using SoapUI and Test Client.</li>
  <li>Start one load test to send continuous requests from SoapUI. Also send requests from Test Client one by one. When multiple requests are received, the policy condition is met and you'll see a fault message in the response window.
  <p><img src="images/concurrency_quota_uc_cm_16.jpg" alt="" /></p></li>
  <li>Alerts will be displayed in Community Manager, in the Board for the API.
  <p><img src="images/concurrency_quota_uc_cm_17.jpg" alt="" /></p>
  <p><img src="images/concurrency_quota_uc_cm_18.jpg" alt="" /></p>
  <p><img src="images/concurrency_quota_uc_cm_19.jpg" alt="" /></p>
  <p>In the API Monitoring Logs, the following logs will display for concurrency faults.</p>
    <p><img src="images/concurrency_quota_uc_cm_20.jpg" alt="" /></p></li>
</ol>
<p><a href="#top">Back to top</a></p>

