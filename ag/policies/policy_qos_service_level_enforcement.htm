---
layout: page
title: Using the Service Level Enforcement Policy 
description: Learn how to enable and configure the error message and HTTP response code returned to the consumer when a rule defined in the Service Level Policy is violated and the service is blocked as a result.
product: ag
category: learn
sub-nav-class: Policies - QoS
weight: 04
type: page
nav-title: Service Level Enforcement
---
<h1 id="top">Using the Service Level Enforcement Policy</h1>
<p>Learn how to enable and configure the error message and HTTP response code returned to the consumer when a rule defined in the <a href="policy_qos_service_level.htm">Service Level Policy</a> is violated and the service is blocked as a result.</p>
<p><strong>Note</strong>: This policy does not operate in real time. Service level is enforced at the user-defined intervals specified in the <a href="policy_qos_service_level.htm">Service Level Policy</a> configuration, and if the service level enforcement is triggered for a configured interval, it is in effect for the entire interval. The platform checks at each interval, and if service level is no longer exceeded, at the next interval, the service level enforcement is lifted.</p>
<p>For information about using policies in the context of the developer portal, see <a href="../../cm/learnmore/bus_admin_organizations.htm#h_business_policies">Business Policies</a>.</p>
<hr class="divide_hr" />



<h2 style="color: gray;">Table of Contents</h2>
<ol class="table_of_contents">
	<li><a href="#introduction">Introduction</a></li>
	<li><a href="#service_level_enforcement_policy_create">Creating a Service Level Enforcement policy</a></li>
	<li><a href="#service_level_enforcement_policy_config">Configuring a Service Level Enforcement policy</a></li>
	<li><a href="#policy_activating">Activating a policy</a></li>
	<li><a href="#policy_attach">Attaching a policy</a></li>
	<li><a href="#policy_test">Testing the Policy and Viewing Monitoring Data</a></li>
	<li><a href="#uc_policy_qos_service_level_enforcement_pm">Service Level Enforcement Policy: use cases for Policy Manager</a></li>
</ol>
<hr class="divide_hr" />



<h2 id="introduction">Introduction</h2>
<p>The Service Level Enforcement Policy is a Quality of Service (QoS) policy that allows you to define the error message, and the HTTP response code, that are returned to the consumer when an SLA is violated and the service is blocked as a result.</p>
<p>The Service Level Enforcement Policy works in conjunction with a <a href="policy_qos_service_level.htm">Service Level Policy</a>. First, you define a Service Level Policy and specify one or more rules. Then, you define a Service Level Enforcement Policy and specify the error message and HTTP response code (default 403) that are returned if the policy is triggered by a service level violation.</p>
<p>When the Service Level Policy and Service Level Enforcement Policy are attached to the same Organization/Service/Contract, and the Service Level Policy is violated, the Service Level Enforcement Policy blocks the service completely. The messages are rejected, and the predefined error message and HTTP code are returned.</p>
<p>Note that this policy does not operate in real time. It checks service level at user-defined intervals as defined in the Service Level Policy configuration. If service is blocked, it remains blocked until the next user-defined interval. At that point, service is resumed.</p>
<p>Here's how it works:</p>
<ol>
	<li>When the Service Level Enforcement policy is in place, the platform tracks the alerts generated by the Service Level Policy.</li>
	<li>If a Service Level policy rule violation generates an alert, the rule is flagged as having been violated.</li>
	<li>At that point, the Service Level Enforcement policy blocks the service completely, returning the error message and HTTP error code as defined in the policy configuration.</li>
	<li>The Service Level Enforcement policy also keeps track of all the Service Level Policy rule alert codes that are applicable to each API call; that is, when the policy is attached directly to the API's service/operation, or indirectly via a contract.</li>
	<li>A fault is returned for all API calls made while any applicable alert code is in violation status.</li>
	<li>At the next time interval, as defined in the Service Level Policy, the following occurs:
		<ul>
			<li>If the message count is still exceeded, no action is taken; there is no additional alert, but the alert is not cleared&nbsp;and the service is still blocked for the next time interval.</li>
			<li>If a rule is no longer exceeded, the Service Level Policy generates a &quot;<strong>Clearing</strong>&quot; alert  to notify users that the violation is over. As a result, the Service Level Enforcement policy, monitoring the alerts, unblocks the service.</li>
		</ul>
		</li>
</ol>
<p>This policy only applies to the following Service Level rules:</p>
<ul>
	<li>Usage Count</li>
	<li>Total Request Message Size</li>
	<li>Total Response Message Size</li>
</ul>
<p><a href="#top">back to top</a></p>



<h2 id="service_level_enforcement_policy_create">Creating a Service Level Enforcement policy</h2>
<p>The first step in creating a policy is to define the basic policy information.</p>

<h4>To add a Quality of Service (QoS) policy</h4>
<ol>
	<li>Go to <strong>Workbench</strong> &gt; <strong>Browse</strong> &gt; <strong>Organization</strong>, and select <strong>Policies</strong> &gt; <strong>QoS Policies</strong>. The <strong>Policies Summary</strong> is displayed.</li>
	<li>Click <strong>Add Policy</strong>.</li>
	<li>Choose the policy type and click <strong>Next</strong>.</li>
	<li>Specify a name (required) and description (optional) and click <strong>Finish</strong>. At the <strong>Completion Summary</strong>, click <strong>Close</strong>. The <strong>Add Policy</strong> Wizard creates a draft policy instance that you can then configure on the <strong>Policy Details</strong> page.</li>
</ol>
<p>For more information, see <a href="policy_management.htm#add_policy">Add Policy</a>.</p>
<p><a href="#top">back to top</a></p>



<h2 id="service_level_enforcement_policy_config">Configuring a Service Level Enforcement policy</h2>
<p>To configure your Service Level Enforcement policy, follow the steps below.</p>

<h4 id="proc_service_level_policy_config">To configure a Service Level Enforcement policy</h4>
<ol>
	<li>Create the policy as covered above.</li>
	<li>At the <strong>Policies Summary</strong> page, in the <strong>Service Level Enforcement Policy</strong> section, click <strong>Modify</strong>. The <strong>Modify Service Level Enforcement Policy</strong> page appears, as shown below.
		<p><img src="images/service_level_enforcement_modify.png" alt="QoS Service Level Enforcement policy: Modify page" /></p>
		</li>
	<li>Specify values for the following:
		<ul>
			<li><strong>Consumer Fault Message</strong>: The error message returned to the consumer when an SLA is violated.</li>
			<li><strong>HTTP result code</strong>: The HTTP response code returned to the consumer when a message is rejected because the SLA was violated. Default is 403 (&quot;Forbidden: the request was refused by the server&quot;). You can change the code if needed.</li>
		</ul>
		</li>
	
	<li>When done, click <strong>Finish</strong>.</li>
	<li>At the <strong>Completion Summary</strong> page, click <strong>Close</strong>.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="policy_activating">Activating a policy</h2>
<p>When you create and configure a policy, the policy is in <strong>Draft</strong> state. When the policy configuration is complete, activate the policy: click <strong>Activate Policy</strong> and then confirm. See <a href="policy_management.htm#policy_activate">Activate a Policy</a>.</p>
<p>A policy in Draft state is not available for general use. Once you activate the policy, it is in <strong>Active</strong> state and is available for use.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="policy_attach">Attaching a policy</h2>
<p>To use the Service Level Enforcement policy, go to the <strong>Policies</strong> folder in the respective organization and attach the policy to a web service, binding, or binding operation.</p>
<p><strong>Note</strong>: The Service Level Enforcement policy works together with the Service Level Policy.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="policy_test">Testing the Policy and Viewing Monitoring Data</h2>
<p>After you've attached the Service Level Enforcement Policy to a web service, operation, or binding, send a request to your service and go to the <strong>Services</strong> &gt; <strong>Monitoring</strong> section to view the results for Logs, Real Time Charts, and Historical Charts.</p>
<p><a href="#top">Back to top</a></p>



<hr class="divide_hr" />



<h2 id="uc_policy_qos_service_level_enforcement_pm">Service Level Enforcement Policy: use cases for Policy Manager</h2>
<p>This section provides a list of Policy Manager-specific usage scenarios for the Service Level Enforcement Policy.</p>
<p>It includes:</p>
<ol>
	<li><a href="#uc_policy_qos_service_level_enforcement_pm_01">Scenario 1: Block Request to Service</a></li>
	<li><a href="#uc_policy_qos_service_level_enforcement_pm_02">Scenario 2: SLA Clear Alert</a></li>
	<li><a href="#uc_policy_qos_service_level_enforcement_pm_03">Scenario 3: SLA Reset</a></li>
	<li><a href="#uc_policy_qos_service_level_enforcement_pm_04">Timeline</a></li>
</ol>



<h3 id="uc_policy_qos_service_level_enforcement_pm_01">Scenario 1: Block Request to Service</h3>
<p>Block request to service for 15 minutes (the configured interval in this example) after 300 requests SLA has been violated. In this scenario, a fault message is returned to the app. The message that's returned is the one defined in the Service Level Enforcement Policy.</p>
<ol>
	<li>Create a physical service in the Policy Manager Management Console using <strong>Create Physical Service</strong>.</li>
	<li>Provide service details and finish the wizard.</li>
	<li>Using <strong>Virtualize Service</strong>, virtualize and host the physical service on Network Director (<strong>ND1</strong>), and assign a name (for example, <strong>Vs1</strong>).</li>
	<li>Navigate to <strong>Organization</strong> &gt; <strong>Policies</strong> &gt; <strong>QoS Policies</strong> and use <strong>Add Policy</strong> to create a Service Level Enforcement Policy.</li>
	<li>Configure the Service Level Enforcement Policy and define a custom Fault message that reflects the use case scenario purpose.</li>
	<li>Next, use <strong>Add Policy</strong> and create a Service Level Policy.</li>
	<li>Configure this policy as per the use case with a Custom alert for Usage Count &gt; 300 in a 15-minute interval.</li>
	<li>Attach the Service Level Enforcement policy and Service Level policy to the Vs1 service in the <strong>Service Details</strong> &gt; <strong>Policy Attachments</strong> &gt; <strong>QoS</strong> section.
	<p><img src="images/service_level_enforcement_uc_pm_01.jpg" alt="" /></p></li>
	<li>Send more than 300 requests to Vs1 from the application/client.</li>
	<li>The first 300 requests will be successful, and subsequent requests will also be successful during the first 15-minute interval. At that point, the Service Level Policy will generate an alert, and the Service Level Enforcement policy will block the service. Subsequent requests will fail, for the duration of the next 15-minute interval, and the custom Fault message defined in the Service Level Enforcement Policy will be returned.</li>
</ol>


<h3 id="uc_policy_qos_service_level_enforcement_pm_02">Scenario 2: SLA Clear Alert</h3>
<p>SLA generates a clear alert and sends an email to alert the administrator(s) after the App has been denied access for 15 minutes.</p>
<ol>
	<li>Create a physical service in the Policy Manager Management Console using Create Physical Service.</li>
	<li>Provide service details and finish the wizard.</li>
	<li>Using <strong>Virtualize Service</strong>, virtualize and host the physical service on Network Director (ND1), and assign a name (for example, Vs1).</li>
	<li>Navigate to <strong>Organization</strong> &gt; <strong>Policies</strong> &gt; <strong>QoS Policies</strong> and use <strong>Add Policy</strong> to create a Service Level Enforcement Policy.</li>
	<li>Configure the Service Level Enforcement Policy as per the use case with a custom Fault message.</li>
	<li>Navigate to <strong>Organization</strong> &gt; <strong>Policies</strong> &gt; <strong>QoS Policies</strong> and use <strong>Add Policy</strong> to create a Service Level Policy.</li>
	<li>Configure the Service Level Policy as per the use case with a custom alert for Usage Count &gt; 300 in a 15-minute interval.</li>
	<li>Activate the policies in the Service Level Enforcement Policy and Service Level Policy in the Policy Workflow portlet and attach them to the Vs1 service in the <strong>Service Details</strong> &gt; <strong>Policy Attachments</strong> &gt; <strong>QoS</strong> section.</li>
	<li>Send more than 300 requests to Vs1 from the application/client.</li>
	<li>The first 300 requests will be successful, and subsequent requests will also be successful during the first 15-minute interval. At that point, the Service Level Policy will generate an alert, and the Service Level Enforcement policy will block the service. Subsequent requests will fail, for the duration of the next 15-minute interval, and the custom Fault message defined in the Service Level Enforcement Policy will be returned.</li>
	<li>At the next 15-minute checkpoint, if the SLA is not violated again, the Service Level Policy generates a &quot;cleared&quot; alert.</li>
</ol>


<h3 id="uc_policy_qos_service_level_enforcement_pm_03">Scenario 3: SLA Reset</h3>
<p>SLA has been reset and the App can send to the API.</p>
<ol>
	<li>Create a physical service in the <strong>Policy Manager Management Console</strong> using <strong>Create Physical Service</strong>.</li>
	<li>Provide service details and finish the wizard</li>
	<li>Using <strong>Virtualize Service</strong>, virtualize and host the physical service on Network Director (ND1), and assign a name (for example, Vs1),</li>
	<li>Navigate to <strong>Organization</strong> &gt; <strong>Policies</strong> &gt; <strong>QoS Policies</strong> and use <strong>Add Policy</strong> to create a Service Level Enforcement Policy.</li>
	<li>Configure the Service Level Enforcement Policy as per the use case a custom Fault message</li>
	<li>Navigate to <strong>Organization</strong> &gt; <strong>Policies</strong> &gt; <strong>QoS Policies</strong> and use <strong>Add Policy</strong> to create a Service Level Policy.</li>
	<li>Configure the Service Level Policy as per the use case with custom alert for Usage Count &gt; 300 in 15-minute intervals.</li>
	<li>Activate the policies in the Service Level Enforcement Policy and Service Level Policy in the Policy Workflow portlet and attach them to the Vs1 service in the <strong>Service Details</strong> &gt; <strong>Policy Attachments</strong> &gt; <strong>QoS</strong> section.</li>
	<li>Send more than 300 requests to Vs1 from the application/client.</li>
	<li>The first 300 requests will be successful, and subsequent requests will also be successful during the first 15-minute interval. At that point, the Service Level Policy will generate an alert, and the Service Level Enforcement policy will block the service. Subsequent requests will fail, for the duration of the next 15-minute interval, and the custom Fault message defined in the Service Level Enforcement Policy will be returned.</li>
	<li>At the next 15-minute checkpoint, if the SLA is not violated again, the Service Level Policy generates a &quot;cleared&quot; alert.</li>
	<li>At that point, service resumes, and calls to the API should be successful.</li>
</ol>
<h3 id="uc_policy_qos_service_level_enforcement_pm_04">Timeline</h3>
<p><img src="images/service_level_enforcement_uc_pm_02.jpg" alt="" /></p>
<p><a href="#top">Back to top</a></p>



<hr class="divide_hr" />



<h2 id="related_topics">Related Topics</h2>
<div class="relatedlinks">
<ul>
	<li><a href="about_policies_view.htm">About Policies</a></li>
	<li><a href="policy_management.htm">Managing Policies</a></li>
	<li><a href="policies_operational_about.htm">About Operational Policies</a></li>
</ul>
<ul>
	<li><a href="../../cm/learnmore/basics_glossary.htm">Glossary of Terms for the Developer Portal</a></li>
</ul>
</div>