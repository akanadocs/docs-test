---
layout: page
title: Using the Cross Site Scripting Detection Policy in Policy Manager 7.x
description: Learn how configure a tag white list to protect your web service from being exploited by cross site scripting.
product: ag
category: learn
sub-nav-class: Security
weight:	5
sub-nav-class: Operational Policies
type: page
nav-title: Using the Cross Site Scripting Policy
---


<a name="top"></a>
<div class="documentation supportContent">
  <h2 name="top">Using the Cross-Site Scripting Detection Policy</h2>
  <p>Learn how to configure tag white  list to protect your web service from being exploited by cross site scripting attacks. </p>

<a href="policy_management.htm" class="button secondary">Managing Policies</a>
  <p></p>
  <div class = "divider1"></div>
   <h3 style="color: gray;">Table of Contents</h3>

   <ol class="table_of_contents">

 <li><a href="#introduction">Introduction</a></li>


 <li><a href="#white_list_default_policy">White List Default Policy</a></li>

  <li><a href="#configuration">Configuration</a></li>


  </ol>
  <div class = "divider1"></div>

<a name="introduction">
<h3>Introduction</h3></a>

<p>The Cross Site Scripting Detection Policy is an Operational policy that allows you to block potentially malicous HTML tags in the request message body using what is called a <em>white</em> list of tags.
</p>
<ul class="usingOrderedList">
  <li>The white list includes a list of HTML tags that will be accepted if they are found in the request message body. </li>
  <li>You can use the default white list (i.e., Add Default HTML tags), customize this list, or define your own set of tags and attributes that are allowed in the request message body. </li>
  <li>If a white list tag is found, Network Director passes the request message to the downstream service. </li>
  <li>You do not want to add malicious tags to the white list. </li>
  <li>All tags specified in the white list are allowed. All other tags are disallowed. This is referred to as a &quot;black list.&quot;  </li>
</ul>

 <p>Say for example your web service includes an anchor &lt;a&gt; tag. When you attach a default Cross Site Scripting Detection Policy to a REST service and send a request message to the Network Director container that is hosting the service, you will receive an &quot;HTTP 403 Forbidden&quot; error. This is because the &lt;a&gt; tag is not defined in the policy's &quot;white list.&quot;</p>


 <p><a href="#top">Back to top</a></p>


<a name="white_list_default_policy">
<h3>White List (Default Policy)</h3></a>



<p>The default policy state includes a white list with the following tags:</p>
<p><img src="images/cross_site_white_list1.jpg" width="414" height="393" /></p>
<p><img src="images/cross_site_white_list2.jpg" width="414" height="395" /></p>



 <p><a href="#top">Back to top</a></p>



<a name="configuration">
<h3>Configuration</h3></a>



<p>Let's take a quick walkthrough of the Cross Site Scripting Detection  Policy configuration process to get your started.</p>
<h5>Step 1: Add Policy / Use System Policy</h5>
<ul class="usingOrderedList">
  <li>You can create a Cross Site Scripting Detection policy instance using <strong>Add Policy</strong> in the <em>Policies &gt; Operational Policies</em> section.</li>
  <li>You can also take advantage of the pre-defined Cross Site Scripting Detection Policy called <strong>WhiteListedCrossSiteScripting</strong>. This is an  out-of-box System Policy that is preconfigured with the default white list. You can customize the white list configuration to suit your needs and then attach it directly to a service or operation. If you use the default configuration all tags in the white list   all tags will be accepted when Network Director  passes the request message to the downstream service.</li>
</ul>
<h5>Step 2: Modify Policy</h5>
<p>When you <strong>Modify</strong> the Cross Site Scripting Detection policy on the <em>Policy Details</em> page the initial policy will look like this:</p>
<p><img src="images/modify_cross_site_scripting_policy.jpg" width="430" height="489"></p>
<p>If you use the default policy without defining a white list, all tags will be disallowed.  If you define a white list all tags in the white list will be accepted, and all other tags (i.e., black list) will be forbidden when Network Director  passes the request message to the downstream service and an HTTP 404 Forbidden error will be raised.</p>
<h5>Step 3: Configure White List / Custom Tags</h5>
<p>The next step is to define your tag white list. These represent tags that comprise the HTML in your request message body and that you have designated as ones that could be  potentially attacked. White list tags are allowed when Network Director passes the request message to the downstream service.  The following options are available:</p>

<ul class="usingOrderedList">
  <li>Use  <strong>Add Default HTML Tags</strong>  to add a default set of tags (i.e.,  adds the white list to your policy) and customize using the <strong>Remove Selected Row</strong> option.</li>
  <li>Use  <strong>Add Tag</strong>  to add a custom tag and attributes (if applicable).</li>
</ul>
<h5>Step 4: Attach Policy</h5>
<p>After you have saved your policy you can  attach it to a web service  or you can attach the policy at the Organization level and the policy will be active for all services defined within the orgnization. </p>
<p><img src="images/attach policy.jpg" width="485" height="221"></p>


<p><a href="#top">Back to top</a></p>

<div class = "divider1"></div>
