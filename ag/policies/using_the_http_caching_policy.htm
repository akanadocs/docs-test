---
layout: page
title: Using the HTTP Caching Policy in Policy Manager 7.2
description: Learn how to enhance performance of  message processing through  caching responses to previously made service requests using the HTTP Caching Policy.
product: ag
category: learn

weight:	5
sub-nav-class: Operational Policies
type: page
nav-title: Using the HTTP Caching Policy
---
<a name="top"></a>
<div class="documentation supportContent">
<h2 name="top">Using the HTTP Caching Policy in Policy Manager 7.2</h2>
  <p>Learn how to enhance performance of  message processing through  caching responses to previously made service requests using the HTTP Caching Policy.</p>

<a href="policy_management.htm" class="button secondary">Managing Policies</a>
<p></p>
  <div class = "divider1"></div>
   <h3 style="color: gray;">Table of Contents</h3>

   <ol class="table_of_contents">

 <li><a href="#introduction">Introduction</a></li>
 
  <li><a href="#modes">HTTP Caching Policy Modes</a></li>
  
  <li><a href="#manage_cache">How Stale Caches are Managed</a></li>
  
  <li><a href="#options">HTTP Caching Policy Options</a></li>
<li><a href="#cache">Public/Private Caching</a></li>
  
   <li><a href="#configuration">Configuration</a></li>


  </ol>
  <div class = "divider1"></div><p></p>

<a name="introduction">
<h3>Introduction</h3></a>

<p>An SOA Container is involved in the  processing of messages prior to their delivery to a service implementation. The performance of message processing can be enhanced  through the caching of responses to previously made service requests. The cached responses can be returned without paying the overhead of invoking the service implementation. </p>
<p>The  HTTP Caching Policy is an Operational policy that allows you to define    how long a response can be cached for HTTP requests and select a caching mode (HTTP Proxy Mode or HTTP Mediation/Server Mode). </p>
<p><em>Note: This policy is introduced with Policy Manager 7.2. </em></p>

<a name="modes">
<h3>HTTP Caching Policy Modes</h3></a>
<p>The HTTP Caching policy supports the following modes: </p>

<ul class="usingOrderedList">
  <li><strong>HTTP Proxy Mode</strong> - Using this mode, the container  expects the downstream call to be HTTP and return cache control headers. If the downstream call does not meet these requirements, responses are not cached responses when the Authorization header is sent in the request. </li>
  <li><strong>HTTP Mediation / Server Mode</strong> - Using this mode, the  presence or absence of downstream headers are not taken into consideration. The caching decisions are based completely on the client cache-control headers and default behavior is used for the authorization header. This means the authorization header is used in the  cache key and cache the responses  individually per authenticated user. 
</li>
</ul>

<p><a href="#top">Back to top</a></p>

<a name="manage_cache">
<h3>How Stale Caches are Managed</h3></a>
<p>When a message is processed and the headers are read, a determination is made as to whether the cache is stale or not. If a cache is discovered to be stale, response validators are used to send a conditional response to the originating server. If its determined that the cache is not stale, the cached response is used. Otherwise, a full response will be received that will be used instead of the cached response. For more information on the stale cache handling approach used for this policy, see <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html">http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html</a></p>

<p><a href="#top">Back to top</a></p>

<a name="options">
<h3>HTTP Caching Policy Options</h3></a>
<p>The policy includes the following configuration options:</p>
<ul class="usingOrderedList">
  <li><strong>Time To Live</strong> - Allows you to specify the maxium time in seconds a response will be cached. If not specified, the maximum time will dictated by the SOA container settings. </li>
  <li><strong>Staleness Period Seconds</strong> - If a value is entered, any cached entry will live in the cache for the number of seconds in Time To Live, plus number of seconds in Staleness Period.&nbsp; The &quot;stale&quot; portion of the entry will only be used if Cache-Control directives on the request allow for a stale entry to be used, by the use of max-stale directive.
  The default is 0.&nbsp; </li>
  <li><strong>Act as HTTP Proxy</strong> - Uncheck to enable either the HTTP Proxy Mode (checked) or HTTP Mediation / Server Mode.</li>
  <li><strong>Shared Cache</strong> - Uncheck to enable  ability to use a private cache. You must also select a Subject Category (below). </li>
  <li><strong>Subject Category</strong> - Allows you to select a subject category if Shared Cache is unchecked. The subject category is used to find the cache's principal name that is set when the cache is created, and use it as part of the cache key.  </li>
</ul>
<p><a href="#top">Back to top</a></p>

<a name="cache">
<h3>Public/Private Caching</h3></a>

<p>By default, the caching module considers itself to be a shared (public) cache (<strong>Shared Cache</strong> checked), and will not, for example, cache responses to requests with Authorization headers or responses marked with Cache-Control:  private. If, however, the cache is only going to be used by one logical &quot;user&quot; (behaving similarly to a browser cache), then you will want to turn off the shared cache setting (<strong>Shared Cache </strong>unchecked). </p>
<p><a href="#top">Back to top</a></p>

<a name="configuration">
<h3>Configuration</h3></a>
<p>Let's take a quick walkthrough of the HTTP Caching Policy configuration process to get your started.

</p>
<h5>Step 1: Add Policy / Use System Policy</h5>
<p>In Policy Manager, you can create a HTTPS Caching Policy instance using <strong>Add Policy</strong> in the <em>Policies &gt; Operational Policies</em> section. </p>
<h5>Step 2: Modify Policy</h5>
<p>When you <strong>Modify</strong> the HTTP Caching   policy on the <em>Policy Details</em> page the initial policy will look like this:</p>
<p><img src="images/modify_http_caching_policy.jpg" width="456" height="478" /></p>
<p>Configure the policy options based on your requirements and <strong>Apply</strong>. </p>
<p><img src="images/http_cache_policy_summary.jpg" width="498" height="145" /></p>
<h5>Step 3: Attach Policy</h5>
<p>After you have saved your policy you can  attach it to a web service,  operation, or binding that you would like to enhance the message processing of.</p>
<h5>Step 4: Test Policy and View Monitoring Data</h5>
<p>After you attached the HTTPS Caching Policy to a service, operation, or binding, send a request to your service and go to the <em>Services &gt; Monitoring</em> section to view the results for Logs, Real Time Charts, and Historical Charts. Refer to the Policy Manager Online Help (i.e., Help button) for more information on the using the monitoring functions.</p>
<p><a href="#top">Back to top</a></p>

<div class = "divider1"></div>
