---
layout: page
title: Sample Topologies | Lifecycle Coordinator
description: Provides a set of complete sample topologies demonstrating various patterns and configurations.
product: cm
category: learn
sub-nav-class: Lifecycle Coordinator
weight: 07
type: page
nav-title: Sample Topologies
---
<h1 id="top">Lifecycle Coordinator Promotion: Sample Topologies</h1>
<p>This section provides a set of complete sample topologies demonstrating various patterns and configurations.</p>
<hr class="divide_hr" />



<h2 style="color: gray;">Table of Contents</h2>
<ol class="table_of_contents">
	<li><a href="#lc_ex_overview">Overview</a></li>
	<li><a href="#lc_ex_2_local">Simple two-environment topology with local tenants</a></li>
	<li><a href="#lc_ex_2_remote">Simple two-environment topology with remote tenants</a></li>
	<li><a href="#lc_ex_3_local_remote">Three-environment topology with local and remote tenants</a></li>
	<li><a href="#lc_ex_3_fanout">Three-tenant topology with Fanout</a></li>
	<li><a href="#lc_ex_cond_env_config">Conditional topology with environment configuration</a></li>
	<li><a href="#lc_ex_3_join">Three-tenant topology using Join feature</a></li>
	<li><a href="#lc_ex_2_disconnect_prod">Two-environment topology with disconnected production environment</a></li>
</ol>
<hr class="divide_hr" />



<h2 id="lc_ex_overview">Overview</h2>
<p>The examples in this document build on the information in the <a href="promotion_users_guide.htm">Lifecycle Coordinator Promotion Guide</a>, particularly the <a href="promotion_users_guide.htm#topology_api">Topology API</a> section.</p>
<p>It's best to review that document, to get a general understanding of how the promotion feature works, before trying out the API on your tenants.</p>
<p>To create and implement a topology, you'll need to:</p>
<ol>
	<li>Have more than one instance of the Community Manager developer portal.</li>
	<li>Choose the applicable example in this document and customize as needed. For example, for two Smoke tenants or two SaaS tenants, use the <a href="#lc_ex_2_local">Simple two-environment topology with local tenants</a> example.</li>
	<li>Run the API to implement the product lifecycle topology, using the customized JSON as the body of the POST message. For more information, see <a href="promotion_users_guide.htm#topologyapi_02">Using the Topology API</a>.</li>
	<li>Log in to the Community Manager developer portal and go to an API Details page to view the Lifecycle Manager pane to the right. of the page.</li>
</ol>
<p>For additional information on how the Promotion feature appears in the Community Manager developer portal, see:</p>
<ul>
	<li><a href="../learnmore/site_admin_promotion.htm">Promotion Feature</a> (information for Site Admins)</li>
	<li><a href="../learnmore/apiadmin_promotion.htm">Promoting an API to the Next Environment</a> (for API Admins)</li>
	<li><a href="../learnmore/app_promotion.htm">Promoting an App to the Next Environment</a> (for app developers)</li>
</ul>
<p><strong>Note</strong>: In the examples in this document, <a href="../learnmore/basics_glossary.htm#gl_local_tenant">Local</a> means that the tenants reside on the same API Platform instance as Lifecycle Coordinator. <a href="../learnmore/basics_glossary.htm#gl_remote_tenant">Remote</a> tenants would be tenants residing on a different API Platform instance than Lifecycle Coordinator, in which case communication between Lifecycle Coordinator and the tenant is via REST. For example, two tenants in the same Smoke environment would be local to each other.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="lc_ex_2_local">Simple two-environment topology with local tenants</h2>
<p>In this example, <strong>tenant1</strong> has been designated as the authentication tenant, meaning that users logging into the topology library via the Lifecycle Coordinator user interface are authenticated for tenant1.</p>
<p>Line numbers have been added for reference purposes. If you are copying and pasting, remove the line numbers, or use this linked file: <a href="images/promotion_two_environment_local.txt">promotion_two_environment_local.txt</a>.</p>
<pre>01) {
02)   "name":"Topology1",
03)   "properties":[
04)     {
05)       "name":"authentication-tenant-id",
06)       "value":"tenant1"
07)     }
08)   ],
09)   "environments":[
10)     {
11)       "name":"development",
12)       "displayName":"Development",
13)       "tenant":"DevelopmentTenant",
14)       "promotionProfiles":[
15)         {
16)           "name":"Default Production Promotion",
17)           "targetEnvironment":"production"
18)         }
19)       ]
20)     },
21)     {
22)       "name":"production",
23)       "displayName":"Production",
24)       "tenant":"ProductionTenant"
25)     }
26)   ],
27)   "tenants":[
28)     {
29)       "name":"DevelopmentTenant",
30)       "id":"tenant1",
31)       "credentials":{
32)         "email":"administrator1@mycompany.com",
33)         "password":"password"
34)       }
35)     },
36)     {
37)       "name":"ProductionTenant",
38)       "id":"tenant2",
39)       "credentials":{
40)         "email":"administrator2@mycompany.com",
41)         "password":"password"
42)       }
43)     }
44)   ]
45) }</pre>
<p>Essentially this JSON defines two tenants, defines two environments, and defines the hierarchy of which environments are being promoted from and to.</p>
<p>In the above, to customize for your own implementation, update the following values:</p>
<ul>
	<li>Line 2, <strong>name</strong>: The name of the topology. Used internally; must be unique. Simple and intuitive is best.</li>
	<li>Line 11, <strong>name</strong>: An internal description for the first environment in the promotion hierarchy: an internal value. In this example, <strong>development</strong>.</li>
	<li>Line 12, <strong>displayName</strong>: The value for the name of the first tenant, that is displayed in the Community Manager developer portal when a user sees the promotion panel and promotion hierarchy. For an illustration, see <a href="../learnmore/apiadmin_promotion.htm#promotion_install_apioverview">Promotion panel in the Developer Portal UI: API Designer</a>. In this example, <strong>Development</strong>.</li>
	<li>Line 17, <strong>targetEnvironment</strong>: An internal value that defines the environment to which resources will be promoted. In this example, <strong>production</strong>. Note that the same value is used again on line 22 where the target environment is defined.</li>
	<li>Line 22, <strong>name</strong>: An internal description for the second environment in the promotion hierarchy: an internal value. In this example, <strong>production</strong>. Note that in this example the second environment is the target for the first, so this value is the same as the value specified for <strong>targetEnvironment</strong> on Line 17. Resources promoted <strong>from</strong> the first environment are promoted <strong>to</strong> the second.</li>
	<li>Line 23, <strong>displayName</strong>: The value for the name of the second tenant, that is displayed in the Community Manager developer portal when a user sees the promotion panel and promotion hierarchy. For an illustration, see <a href="../learnmore/apiadmin_promotion.htm#promotion_install_apioverview">Promotion panel in the Developer Portal UI: API Designer</a>. In this example, <strong>Production</strong>.</li>
	<li>Line 24, <strong>tenant</strong>: An internal value for the name of the tenant. Value must match the value for <strong>name</strong> in Line 37. In this example: <strong>ProductionTenant</strong>.</li>
	<li>Line 30, tenants section, <strong>id</strong> for first tenant: The TenantID. Generally the part of the URL that is after the protocol and before the hostname.</li>
	<li>Lines 32&#8211;33, <strong>email</strong> and <strong>password</strong>: Login credentials for the first tenant.</li>
	<li>Line 37, <strong>name</strong>: An internal value for the first tenant. Same value as the value for the <strong>tenant</strong> property on line 24.</li>
	<li>Line 38, tenants section, <strong>id</strong> for second tenant: Same as Line 30 above, for the second tenant.</li>
	<li>Lines 40&#8211;41, <strong>email</strong> and <strong>password</strong>: Login credentials for the second tenant.</li>
</ul>
<p><a href="#top">Back to top</a></p>



<h2 id="lc_ex_2_remote">Simple two-environment topology with remote tenants</h2>
<p><strong>Notes:</strong></p>
<ul>
	<li>Since no tenant has been designated as the authentication tenant, the topology will default to using a <a href="../learnmore/basics_glossary.htm#gl_local_tenant">local</a> tenant with the id <strong>lifecycle_coordinator</strong> for authentication via the Lifecycle Coordinator user interface</li>
	<li>The tenant definitions include an <strong>address</strong> property, indicating that they are <a href="../learnmore/basics_glossary.htm#gl_remote_tenant">remote</a>.</li>
</ul>
<pre>{
  "name":"Topology1",
  "environments":[
    {
      "name":"development",
      "displayName":"Development",
      "tenant":"DevelopmentTenant",
      "promotionProfiles":[
        {
          "name":"Default Production Promotion",
          "targetEnvironment":"production",
          "rules":[

          ],
          "properties":[
            {
              "name":"match-policies-by-name",
              "value":"true"
            }
          ]
        }
      ]
    },
    {
      "name":"production",
      "displayName":"Production",
      "tenant":"ProductionTenant"
    }
  ],
  "tenants":[
    {
      "name":"DevelopmentTenant",
      "id":"tenant1",
      "address":"http://tenant1:9940",
      "credentials":{
        "email":"administrator1@mycompany.com",
        "password":"password"
      }
    },
    {
      "name":"ProductionTenant",
      "id":"tenant2",
      "address":"http://tenant2:9940",
      "credentials":{
        "email":"administrator2@mycompany.com",
        "password":"password"
      }
    }
  ]
}</pre>
<p><a href="#top">Back to top</a></p>



<h2 id="lc_ex_3_local_remote">Three-environment topology with local and remote tenants</h2>
<p>Notes:</p>
<ul>
	<li>The tenants <strong>tenant1</strong> and <strong>tenant2</strong> are <a href="../learnmore/basics_glossary.htm#gl_local_tenant">local</a>; the production tenant (<strong>tenant3</strong>) is <a href="../learnmore/basics_glossary.htm#gl_remote_tenant">remote</a>.</li>
	<li>The local tenant <strong>tenant1</strong> has been designated as the authentication tenant.</li>
	<li>The <a href="../learnmore/basics_glossary.htm#gl_promotion_profile">promotion profiles</a> for <strong>development</strong> to <strong>test</strong> promotion and <strong>test</strong> to <strong>production</strong> promotion indicate that policies, scripts and processes should all match on name when an API is promoted with such dependencies.</li>
</ul>
<pre>{
  "name":"Topology1",
  "properties":[
    {
      "name":"authentication-tenant-id",
      "value":"tenant1"
    }
  ],
  "environments":[
    {
      "name":"development",
      "displayName":"Development",
      "tenant":"DevelopmentTenant",
      "promotionProfiles":[
        {
          "name":"Default Test Promotion",
          "targetEnvironment":"test",
          "properties":[
            {
              "name":"match-policies-by-name",
              "value":"true"
            },
            {
              "name":"match-scripts-by-name",
              "value":"true"
            },
            {
              "name":"match-processes-by-name",
              "value":"true"
            }
          ]
        }
      ]
    },
    {
      "name":"test",
      "displayName":"Test",
      "tenant":"TestTenant",
      "promotionProfiles":[
        {
          "name":"Default Production Promotion",
          "targetEnvironment":"production",
          "properties":[
            {
              "name":"match-policies-by-name",
              "value":"true"
            },
            {
              "name":"match-scripts-by-name",
              "value":"true"
            },
            {
              "name":"match-processes-by-name",
              "value":"true"
            }
          ]
        }
      ]
    },
    {
      "name":"production",
      "displayName":"Production",
      "tenant":"ProductionTenant"
    }
  ],
  "tenants":[
    {
      "name":"DevelopmentTenant",
      "id":"tenant1",
      "credentials":{
        "email":"administrator1@mycompany.com",
        "password":"password"
      }
    },
    {
      "name":"TestTenant",
      "id":"tenant2",
      "credentials":{
        "email":"administrator2@mycompany.com",
        "password":"password"
      }
    },
    {
      "name":"ProductionTenant",
      "id":"tenant3",
      "address":"http://tenant3:9940",
      "credentials":{
        "email":"administrator3@mycompany.com",
        "password":"password"
      }
    }
  ]
}</pre>
<p><a href="#top">Back to top</a></p>



<h2 id="lc_ex_3_fanout">Three-tenant topology with Fanout</h2>
<p>Notes:</p>
<ul>
	<li>Since no tenant has been designated as the authentication tenant, the topology will default to using a <a href="../learnmore/basics_glossary.htm#gl_local_tenant">local</a> tenant with the id <strong>lifecycle_coordinator</strong> for authentication via the Lifecycle Coordinator user interface</li>
	<li><strong>Tenant1</strong> is local, while the two production tenants (<strong>tenant2</strong> and <strong>tenant3</strong>) are <a href="../learnmore/basics_glossary.htm#gl_remote_tenant">remote</a>.</li>
	<li>The development environment has two parallel unfiltered promotion-profiles, meaning that assets promoted from the development environment will proceed in parallel to both <strong>production1</strong> and <strong>production2</strong> environments.</li>
</ul>
<pre>{
  "name":"Topology1",
  "environments":[
    {
      "name":"development",
      "displayName":"Development",
      "tenant":"DevelopmentTenant",
      "promotionProfiles":[
        {
          "name":"Production 1 Promotion",
          "targetEnvironment":"production1"
        },
        {
          "name":"Production 2 Promotion",
          "targetEnvironment":"production2"
        }
      ]
    },
    {
      "name":"production1",
      "displayName":"Production1",
      "tenant":"ProductionTenant1"
    },
    {
      "name":"production2",
      "displayName":"Production2",
      "tenant":"ProductionTenant2"
    }
  ],
  "tenants":[
    {
      "name":"DevelopmentTenant",
      "id":"tenant1",
      "credentials":{
        "email":"administrator1@mycompany.com",
        "password":"password"
      }
    },
    {
      "name":"ProductionTenant1",
      "id":"tenant2",
      "address":"http://tenant2:9940",
      "credentials":{
        "email":"administrator2@mycompany.com",
        "password":"password"
      }
    },
    {
      "name":"ProductionTenant2",
      "id":"tenant3",
      "address":"http://tenant3:9950",
      "credentials":{
        "email":"administrator3@mycompany.com",
        "password":"password"
      }
    }
  ]
}</pre>
<p><a href="#top">Back to top</a></p>



<h2 id="lc_ex_cond_env_config">Conditional topology with environment configuration</h2>
<p>Notes:</p>
<ul>
	<li>tenant1 has been designated as the authentication tenant, meaning that users logging into the topology library via the Lifecycle Coordinator user interface are authenticated for tenant1.</li>
	<li>All tenants in the topology are <a href="../learnmore/basics_glossary.htm#gl_local_tenant">local</a>.</li>
	<li>The topology defines two filters based on the <strong>internal</strong> classifier. These filters are used on the two promotion-profiles in the development environment, to route the promotion to one of the two production environments based on the value of the <strong>internal</strong> classifier. </li>
	<li>Deployment Zone mappings are defined on each of the promotion-profiles, to map from the deployment zone used in development to the correct deployment zone in production. These mappings are different for each of the two promotion-profiles.</li>
	<li>The development environment defines a configuration to control the configuration of APIs created in the initial environment:
		<ul>
			<li>The environment configuration defines two distinct apiImplementationProfiles filtered by the <strong>internal</strong> classifier.</li>
			<li>The apiImplementationProfiles deploy the API implementations in distinct deployment zones.</li>
			<li>The DetailedAuditPolicy is applied to <strong>internal</strong> API implementations as well as a number of settings on the API implementation such as <strong>debugModeEnabled</strong>.</li>
			<li>The <strong>path</strong> property on each apiImplementationProfile uses a parameter replacement approach to set a path for the implementations that incorporate the name of the API as well as an internal/external qualifier.</li>
		</ul>
	</li>
	</ul>
<pre>{
  "name":"Topology1",
  "properties":[
    {
      "name":"authentication-tenant-id",
      "value":"tenant1"
    }
  ],
  "filters":[
    {
      "name":"internal",
      "classifier-criteria":[
        {
          "classifier-name":"internal",
          "values":[
            {
              "value":"true"
            }
          ]
        }
      ]
    },
    {
      "name":"external",
      "classifier-criteria":[
        {
          "classifier-name":"internal",
          "values":[
            {
              "value":"false"
            }
          ]
        }
      ]
    }
  ],
  "environments":[
    {
      "name":"development",
      "displayName":"Development",
      "tenant":"DevelopmentTenant",
      "promotionProfiles":[
        {
          "name":"Internal Production Promotion",
          "targetEnvironment":"internal-prod",
          "filterNames":[
            "internal"
          ],
          "deploymentZoneConfigurations":[
            {
              "sourceDeploymentZoneName":"Dev1",
              "targetDeploymentZoneNames":[
                "IntProd"
              ]
            }
          ]
        },
        {
          "name":"External Production Promotion",
          "targetEnvironment":"external-prod",
          "filterNames":[
            "external"
          ],
          "deploymentZoneConfigurations":[
            {
              "sourceDeploymentZoneName":"Dev2",
              "targetDeploymentZoneNames":[
                "ExtProd"
              ]
            }
          ]
        }
      ],
      "configuration":{
        "apiImplementationProfiles":[
          {
            "name":"Internal API Profile",
            "type":"Live",
            "filterNames":[
              "internal"
            ],
            "deploymentZones":[
              "Dev1"
            ],
            "allowAnonymousAccess":"false",
            "approvalRequired":"true",
            "debugModeEnabled":"true",
            "virtualServicePolicies":[
              {
                "policyName":"DetailedAuditing"
              }
            ],
            "virtualHost":"InternalHost.com",
            "path":"/{catalog_asset.name_normalized}/internal"
          },
          {
            "name":"External API Profile",
            "type":"Live",
            "filterNames":[
              "external"
            ],
            "deploymentZones":[
              "Dev2"
            ],
            "virtualHost":"ExternalHost.com",
            "path":"/{catalog_asset.name_normalized}/external"
          }
        ]
      }
    },
    {
      "name":"internal-prod",
      "displayName":"Internal Prod",
      "tenant":"ProductionTenant1"
    },
    {
      "name":"external-prod",
      "displayName":"External Prod",
      "tenant":"ProductionTenant2"
    }
  ],
  "tenants":[
    {
      "name":"DevelopmentTenant",
      "id":"tenant1",
      "credentials":{
        "email":"administrator1@mycompany.com",
        "password":"password"
      }
    },
    {
      "name":"ProductionTenant1",
      "id":"tenant2",
      "credentials":{
        "email":"administrator2@mycompany.com",
        "password":"password"
      }
    },
    {
      "name":"ProductionTenant2",
      "id":"tenant3",
      "credentials":{
        "email":"administrator3@mycompany.com",
        "password":"password"
      }
    }
  ]
}</pre>
<p><a href="#top">Back to top</a></p>



<h2 id="lc_ex_3_join">Three-tenant topology using Join feature</h2>
<p>Notes:</p>
<ul>
	<li>Since no tenant has been designated as the authentication tenant, the topology will default to using a <a href="../learnmore/basics_glossary.htm#gl_local_tenant">local</a> tenant with the id <strong>lifecycle_coordinator</strong> for authentication via the Lifecycle Coordinator user interface</li>
	<li>All tenants are remote.</li>
	<li>The topology defines two filters based on the <strong>internal</strong> classifier. These filters are used on the two promotion-profiles in the development environment to route the promotion either to the test environment in the case of an <strong>external</strong> asset or directly to the production environment in the case of an <strong>internal</strong> asset. Since the test environment also has a promotionProfile defined pointing to the production environment, the two routes can be thought of as <strong>joining</strong> at the production environment.</li>
</ul>
<pre>{
  "name":"Topology1",
  "filters":[
    {
      "name":"internal",
      "classifier-criteria":[
        {
          "classifier-name":"internal",
          "values":[
            {
              "value":"true"
            }
          ]
        }
      ]
    },
    {
      "name":"external",
      "classifier-criteria":[
        {
          "classifier-name":"internal",
          "values":[
            {
              "value":"false"
            }
          ]
        }
      ]
    }
  ],
  "environments":[
    {
      "name":"development",
      "displayName":"Development",
      "tenant":"DevelopmentTenant",
      "promotionProfiles":[
        {
          "name":"Test Promotion",
          "targetEnvironment":"test",
          "filterNames":[
            "external"
          ]
        },
        {
          "name":"Direct Prod Promotion",
          "targetEnvironment":"production",
          "filterNames":[
            "internal"
          ]
        }
      ]
    },
    {
      "name":"test",
      "displayName":"Test",
      "tenant":"TestTenant",
      "promotionProfiles":[
        {
          "name":"Default Production Promotion",
          "targetEnvironment":"production"
        }
      ]
    },
    {
      "name":"production",
      "displayName":"Production",
      "tenant":"ProductionTenant"
    }
  ],
  "tenants":[
    {
      "name":"DevelopmentTenant",
      "id":"tenant1",
      "address":"http://tenant1:9920",
      "credentials":{
        "email":"administrator1@mycompany.com",
        "password":"password"
      }
    },
    {
      "name":"TestTenant",
      "id":"tenant2",
      "address":"http://tenant2:9940",
      "credentials":{
        "email":"administrator2@mycompany.com",
        "password":"password"
      }
    },
    {
      "name":"ProductionTenant",
      "id":"tenant3",
      "address":"http://tenant3:9950",
      "credentials":{
        "email":"administrator3@mycompany.com",
        "password":"password"
      }
    }
  ]
}</pre>
<p><a href="#top">Back to top</a></p>



<h2 id="lc_ex_2_disconnect_prod">Two-environment topology with disconnected production environment</h2>
<p>Notes:</p>
<ul>
	<li>Since no tenant has been designated as the authentication tenant, the topology will default to using a <a href="../learnmore/basics_glossary.htm#gl_local_tenant">local</a> tenant with the id <strong>lifecycle_coordinator</strong> for authentication in the Lifecycle Coordinator user interface.</li>
	<li>DevelopmentTenant is a standard <strong>connected</strong> remote tenant.</li>
	<li>ProductionTenant is marked as <span class="apidoc_code">&quot;connected&quot; : &quot;false&quot;</span> indicating that it is disconnected and Lifecycle Coordinator should not attempt to make calls to it. Note that only the name and id of the disconnected tenant is necessary in the tenant definition.</li>
	<li>Since Lifecycle Coordinator will assume a preserve-keys mode when promoting to the disconnected environment, the production environment is likely a clone of the development environment, so it will be common that the source and target tenants have the same id.</li>
	<li>Note there is no difference in the environment configuration from a standard topology, the designation of a tenant as disconnected affects only the tenant definition.</li>
	<li>The promotion to production specifies that policies should be matched by name.</li>
</ul>
<pre>{
  "name":"Topology1",
  "environments":[
    {
      "name":"development",
      "displayName":"Development",
      "tenant":"DevelopmentTenant",
      "promotionProfiles":[
        {
          "name":"Default Production Promotion",
          "targetEnvironment":"production",
          "properties":[
            {
              "name":"match-policies-by-name",
              "value":"true"
            }
          ]
        }
      ]
    },
    {
      "name":"production",
      "displayName":"Production",
      "tenant":"ProductionTenant"
    }
  ],
  "tenants":[
    {
      "name":"DevelopmentTenant",
      "id":"tenant1",
      "address":"http://tenant1:9920",
      "credentials":{
        "email":"administrator1@mycompany.com",
        "password":"password"
      }
    },
    {
      "name":"ProductionTenant",
      "id":"tenant1",
      "connected":"false"
    }
  ]
}</pre>
<p><a href="#top">Back to top</a></p>