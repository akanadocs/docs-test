---
layout: page
title: Sample Topologies | Lifecycle Coordinator
description: Provides a set of complete sample topologies demonstrating various patterns and configurations.
product: cm
category: learn
sub-nav-class: Lifecycle Coordinator
weight: 21
type: page
nav-title: Sample Topologies
---
<h2 id="top">Lifecycle Coordinator Promotion: Sample Topologies</h2>
<p>This section provides a set of complete sample topologies demonstrating various patterns and configurations.</p>
<p><a href="promotion_users_guide.htm" class="button secondary">Promotion User's Guide</a></p>


<h5 class="stamp">API Platform Version: 2018.0.0 and later</h5>
<div class = "divider1"></div>


<h3 style="color: gray;">Table of Contents</h3>
<ol class="table_of_contents">
	<li><a href="#lc_ex_2_local">Simple two-environment topology with local tenants</a></li>
	<li><a href="#lc_ex_2_remote">Simple two-environment topology with remote tenants</a></li>
	<li><a href="#lc_ex_3_local_remote">Three-environment topology with local and remote tenants</a></li>
	<li><a href="#lc_ex_3_fanout">Three-tenant topology with Fanout</a></li>
	<li><a href="#lc_ex_cond_env_config">Conditional topology with environment configuration</a></li>
	<li><a href="#lc_ex_3_join">Three-tenant topology using Join feature</a></li>
	<li><a href="#lc_ex_2_disconnect_prod">Two-environment topology with disconnected production environment</a></li>
</ol>
<div class = "divider1"></div>



<h3 id="lc_ex_2_local">Simple two-environment topology with local tenants</h3>
<p>Notes:</p>
<ul>
	<li>In this context, <strong>Local</strong> means that the tenants reside on the same API Platform instance as Lifecycle Coordinator. <strong>Remote</strong> tenants would be tenants residing on a different API Platform instance than Lifecycle Coordinator, in which case communication between Lifecycle Coordinator and the tenant is via REST.</li>
	<li>In	this	example, <strong>tenant1</strong> has been designated as the authentication tenant, meaning that users logging into the topology library via the Lifecycle Manager console are authenticated for tenant1.</li>
</ul>
<pre>{
  "name":"Topology1",
  "properties":[
    {
      "name":"authentication-tenant-id",
      "value":"tenant1"
    }
  ],
  "environments":[
    {
      "name":"development",
      "displayName":"Development",
      "tenant":"DevelopmentTenant",
      "promotionProfiles":[
        {
          "name":"Default Production Promotion",
          "targetEnvironment":"production"
        }
      ]
    },
    {
      "name":"production",
      "displayName":"Production",
      "tenant":"ProductionTenant"
    }
  ],
  "tenants":[
    {
      "name":"DevelopmentTenant",
      "id":"tenant1",
      "credentials":{
        "email":"administrator1@mycompany.com",
        "password":"password"
      }
    },
    {
      "name":"ProductionTenant",
      "id":"tenant2",
      "credentials":{
        "email":"administrator2@mycompany.com",
        "password":"password"
      }
    }
  ]
}</pre>
<p><a href="#top">Back to top</a></p>



<h3 id="lc_ex_2_remote">Simple two-environment topology with remote tenants</h3>
<p><strong>Notes:</strong></p>
<ul>
	<li>Since no tenant has been designated as the authentication tenant, the topology will default to using a local tenant with the id <strong>lifecycle_coordinator</strong> for Lifecycle Manager console authentication.</li>
	<li>		The tenant definitions include an <strong>address</strong> property, indicating that they are remote.</li>
</ul>
<pre>{
  "name":"Topology1",
  "environments":[
    {
      "name":"development",
      "displayName":"Development",
      "tenant":"DevelopmentTenant",
      "promotionProfiles":[
        {
          "name":"Default Production Promotion",
          "targetEnvironment":"production",
          "rules":[

          ],
          "properties":[
            {
              "name":"match-policies-by-name",
              "value":"true"
            }
          ]
        }
      ]
    },
    {
      "name":"production",
      "displayName":"Production",
      "tenant":"ProductionTenant"
    }
  ],
  "tenants":[
    {
      "name":"DevelopmentTenant",
      "id":"tenant1",
      "address":"http://tenant1:9940",
      "credentials":{
        "email":"administrator1@mycompany.com",
        "password":"password"
      }
    },
    {
      "name":"ProductionTenant",
      "id":"tenant2",
      "address":"http://tenant2:9940",
      "credentials":{
        "email":"administrator2@mycompany.com",
        "password":"password"
      }
    }
  ]
}</pre>
<p><a href="#top">Back to top</a></p>



<h3 id="lc_ex_3_local_remote">Three-environment topology with local and remote tenants</h3>
<p>Notes:</p>
<ul>
	<li>The tenants <strong>tenant1</strong> and <strong>tenant2</strong> are local; the production tenant (<strong>tenant3</strong>) is remote.</li>
	<li>The local tenant <strong>tenant1</strong> has been designated as the authentication tenant.</li>
	<li>The promotion profiles for <strong>development</strong> to <strong>test</strong> promotion and <strong>test</strong> to <strong>production</strong> promotion indicate that policies, scripts and processes should all match on name when an API is promoted with such dependencies.</li>
</ul>
<pre>{
  "name":"Topology1",
  "properties":[
    {
      "name":"authentication-tenant-id",
      "value":"tenant1"
    }
  ],
  "environments":[
    {
      "name":"development",
      "displayName":"Development",
      "tenant":"DevelopmentTenant",
      "promotionProfiles":[
        {
          "name":"Default Test Promotion",
          "targetEnvironment":"test",
          "properties":[
            {
              "name":"match-policies-by-name",
              "value":"true"
            },
            {
              "name":"match-scripts-by-name",
              "value":"true"
            },
            {
              "name":"match-processes-by-name",
              "value":"true"
            }
          ]
        }
      ]
    },
    {
      "name":"test",
      "displayName":"Test",
      "tenant":"TestTenant",
      "promotionProfiles":[
        {
          "name":"Default Production Promotion",
          "targetEnvironment":"production",
          "properties":[
            {
              "name":"match-policies-by-name",
              "value":"true"
            },
            {
              "name":"match-scripts-by-name",
              "value":"true"
            },
            {
              "name":"match-processes-by-name",
              "value":"true"
            }
          ]
        }
      ]
    },
    {
      "name":"production",
      "displayName":"Production",
      "tenant":"ProductionTenant"
    }
  ],
  "tenants":[
    {
      "name":"DevelopmentTenant",
      "id":"tenant1",
      "credentials":{
        "email":"administrator1@mycompany.com",
        "password":"password"
      }
    },
    {
      "name":"TestTenant",
      "id":"tenant2",
      "credentials":{
        "email":"administrator2@mycompany.com",
        "password":"password"
      }
    },
    {
      "name":"ProductionTenant",
      "id":"tenant3",
      "address":"http://tenant3:9940",
      "credentials":{
        "email":"administrator3@mycompany.com",
        "password":"password"
      }
    }
  ]
}</pre>
<p><a href="#top">Back to top</a></p>



<h3 id="lc_ex_3_fanout">Three-tenant topology with Fanout</h3>
<p>Notes:</p>
<ul>
	<li>Since no tenant has been designated as the authentication tenant, the topology will default to using a local tenant with the id <strong>lifecycle_coordinator</strong> for Lifecycle Manager console authentication.</li>
	<li><strong>Tenant1</strong> is local, while the two production tenants (<strong>tenant2</strong> and <strong>tenant3</strong>) are remote.</li>
	<li>The development environment has two parallel unfiltered promotion-profiles, meaning that assets promoted from the development environment will proceed in parallel to both <strong>production1</strong> and <strong>production2</strong> environments.</li>
</ul>
<pre>{
  "name":"Topology1",
  "environments":[
    {
      "name":"development",
      "displayName":"Development",
      "tenant":"DevelopmentTenant",
      "promotionProfiles":[
        {
          "name":"Production 1 Promotion",
          "targetEnvironment":"production1"
        },
        {
          "name":"Production 2 Promotion",
          "targetEnvironment":"production2"
        }
      ]
    },
    {
      "name":"production1",
      "displayName":"Production1",
      "tenant":"ProductionTenant1"
    },
    {
      "name":"production2",
      "displayName":"Production2",
      "tenant":"ProductionTenant2"
    }
  ],
  "tenants":[
    {
      "name":"DevelopmentTenant",
      "id":"tenant1",
      "credentials":{
        "email":"administrator1@mycompany.com",
        "password":"password"
      }
    },
    {
      "name":"ProductionTenant1",
      "id":"tenant2",
      "address":"http://tenant2:9940",
      "credentials":{
        "email":"administrator2@mycompany.com",
        "password":"password"
      }
    },
    {
      "name":"ProductionTenant2",
      "id":"tenant3",
      "address":"http://tenant3:9950",
      "credentials":{
        "email":"administrator3@mycompany.com",
        "password":"password"
      }
    }
  ]
}</pre>
<p><a href="#top">Back to top</a></p>



<h3 id="lc_ex_cond_env_config">Conditional topology with environment configuration</h3>
<p>Notes:</p>
<ul>
	<li>tenant1 has been designated as the authentication tenant, meaning that users logging into the topology library via the Lifecycle Manager console are authenticated for tenant1.</li>
	<li>All tenants in the topology are local.</li>
	<li>The topology defines two filters based on the <strong>internal</strong> classifier. These filters are used on the two promotion-profiles in the development environment, to route the promotion to one of the two production environments based on the value of the <strong>internal</strong> classifier. </li>
	<li>Deployment Zone mappings are defined on each of the promotion-profiles, to map from the deployment zone used in development to the correct deployment zone in production. These mappings are different for each of the two promotion-profiles.</li>
	<li>The development environment defines a configuration to control the configuration of APIs created in the initial environment:
		<ul>
			<li>The environment configuration defines two distinct apiImplementationProfiles filtered by the <strong>internal</strong> classifier.</li>
			<li>The apiImplementationProfiles deploy the API implementations in distinct deployment zones.</li>
			<li>The DetailedAuditPolicy is applied to <strong>internal</strong> API implementations as well as a number of settings on the API implementation such as <strong>debugModeEnabled</strong>.</li>
			<li>The <strong>path</strong> property on each apiImplementationProfile uses a parameter replacement approach to set a path for the implementations that incorporate the name of the API as well as an internal/external qualifier.</li>
		</ul>
	</li>
	</ul>
<pre>{
  "name":"Topology1",
  "properties":[
    {
      "name":"authentication-tenant-id",
      "value":"tenant1"
    }
  ],
  "filters":[
    {
      "name":"internal",
      "classifier-criteria":[
        {
          "classifierName":"internal",
          "values":[
            {
              "value":"true"
            }
          ]
        }
      ]
    },
    {
      "name":"external",
      "classifier-criteria":[
        {
          "classifierName":"internal",
          "values":[
            {
              "value":"false"
            }
          ]
        }
      ]
    }
  ],
  "environments":[
    {
      "name":"development",
      "displayName":"Development",
      "tenant":"DevelopmentTenant",
      "promotionProfiles":[
        {
          "name":"Internal Production Promotion",
          "targetEnvironment":"internal-prod",
          "filterNames":[
            "internal"
          ],
          "deploymentZoneConfigurations":[
            {
              "sourceDeploymentZoneName":"Dev1",
              "targetDeploymentZoneNames":[
                "IntProd"
              ]
            }
          ]
        },
        {
          "name":"External Production Promotion",
          "targetEnvironment":"external-prod",
          "filterNames":[
            "external"
          ],
          "deploymentZoneConfigurations":[
            {
              "sourceDeploymentZoneName":"Dev2",
              "targetDeploymentZoneNames":[
                "ExtProd"
              ]
            }
          ]
        }
      ],
      "configuration":{
        "apiImplementationProfiles":[
          {
            "name":"Internal API Profile",
            "type":"Live",
            "filterNames":[
              "internal"
            ],
            "deploymentZones":[
              "Dev1"
            ],
            "allowAnonymousAccess":"false",
            "approvalRequired":"true",
            "debugModeEnabled":"true",
            "virtualServicePolicies":[
              {
                "policyName":"DetailedAuditing"
              }
            ],
            "virtualHost":"InternalHost.com",
            "path":"/{catalog_asset.name_normalized}/internal"
          },
          {
            "name":"External API Profile",
            "type":"Live",
            "filterNames":[
              "external"
            ],
            "deploymentZones":[
              "Dev2"
            ],
            "virtualHost":"ExternalHost.com",
            "path":"/{catalog_asset.name_normalized}/external"
          }
        ]
      }
    },
    {
      "name":"internal-prod",
      "displayName":"Internal Prod",
      "tenant":"ProductionTenant1"
    },
    {
      "name":"external-prod",
      "displayName":"External Prod",
      "tenant":"ProductionTenant2"
    }
  ],
  "tenants":[
    {
      "name":"DevelopmentTenant",
      "id":"tenant1",
      "credentials":{
        "email":"administrator1@mycompany.com",
        "password":"password"
      }
    },
    {
      "name":"ProductionTenant1",
      "id":"tenant2",
      "credentials":{
        "email":"administrator2@mycompany.com",
        "password":"password"
      }
    },
    {
      "name":"ProductionTenant2",
      "id":"tenant3",
      "credentials":{
        "email":"administrator3@mycompany.com",
        "password":"password"
      }
    }
  ]
}</pre>
<p><a href="#top">Back to top</a></p>



<h3 id="lc_ex_3_join">Three-tenant topology using Join feature</h3>
<p>Notes:</p>
<ul>
	<li>Since no tenant has been designated as the authentication tenant, the topology will default to using a local tenant with the id <strong>lifecycle_coordinator</strong> for Lifecycle Manager console authentication.</li>
	<li>All tenants are remote.</li>
	<li>The topology defines two filters based on the <strong>internal</strong> classifier. These filters are used on the two promotion-profiles in the development environment to route the promotion either to the test environment in the case of an <strong>external</strong> asset or directly to the production environment in the case of an <strong>internal</strong> asset. Since the test environment also has a promotionProfile defined pointing to the production environment, the two routes can be thought of as <strong>joining</strong> at the production environment.</li>
</ul>
<pre>{
  "name":"Topology1",
  "filters":[
    {
      "name":"internal",
      "classifier-criteria":[
        {
          "classifierName":"internal",
          "values":[
            {
              "value":"true"
            }
          ]
        }
      ]
    },
    {
      "name":"external",
      "classifier-criteria":[
        {
          "classifierName":"internal",
          "values":[
            {
              "value":"false"
            }
          ]
        }
      ]
    }
  ],
  "environments":[
    {
      "name":"development",
      "displayName":"Development",
      "tenant":"DevelopmentTenant",
      "promotionProfiles":[
        {
          "name":"Test Promotion",
          "targetEnvironment":"test",
          "filterNames":[
            "external"
          ]
        },
        {
          "name":"Direct Prod Promotion",
          "targetEnvironment":"production",
          "filterNames":[
            "internal"
          ]
        }
      ]
    },
    {
      "name":"test",
      "displayName":"Test",
      "tenant":"TestTenant",
      "promotionProfiles":[
        {
          "name":"Default Production Promotion",
          "targetEnvironment":"production"
        }
      ]
    },
    {
      "name":"production",
      "displayName":"Production",
      "tenant":"ProductionTenant"
    }
  ],
  "tenants":[
    {
      "name":"DevelopmentTenant",
      "id":"tenant1",
      "address":"http://tenant1:9920",
      "credentials":{
        "email":"administrator1@mycompany.com",
        "password":"password"
      }
    },
    {
      "name":"TestTenant",
      "id":"tenant2",
      "address":"http://tenant2:9940",
      "credentials":{
        "email":"administrator2@mycompany.com",
        "password":"password"
      }
    },
    {
      "name":"ProductionTenant",
      "id":"tenant3",
      "address":"http://tenant3:9950",
      "credentials":{
        "email":"administrator3@mycompany.com",
        "password":"password"
      }
    }
  ]
}</pre>
<p><a href="#top">Back to top</a></p>



<h3 id="lc_ex_2_disconnect_prod">Two-environment topology with disconnected production environment</h3>
<p>Notes:</p>
<ul>
	<li>Since no tenant has been designated as the authentication tenant, the topology will default to using a local tenant with the id <strong>lifecycle_coordinator</strong> for Lifecycle Manager console authentication.</li>
	<li>DevelopmentTenant is a standard <strong>connected</strong> remote tenant.</li>
	<li>ProductionTenant is marked as <span class="apidoc_code">&quot;connected&quot; : &quot;false&quot;</span> indicating that it is disconnected and Lifecycle Coordinator should not attempt to make calls to it. Note that only the name and id of the disconnected tenant is necessary in the tenant definition.</li>
	<li>Since Lifecycle Coordinator will assume a preserve-keys mode when promoting to the disconnected environment, the production environment is likely a clone of the development environment, so it will be common that the source and target tenants have the same id.</li>
	<li>Note there is no difference in the environment configuration from a standard topology, the designation of a tenant as disconnected affects only the tenant definition.</li>
	<li>The promotion to production specifies that policies should be matched by name.</li>
</ul>
<pre>{
  "name":"Topology1",
  "environments":[
    {
      "name":"development",
      "displayName":"Development",
      "tenant":"DevelopmentTenant",
      "promotionProfiles":[
        {
          "name":"Default Production Promotion",
          "targetEnvironment":"production",
          "properties":[
            {
              "name":"match-policies-by-name",
              "value":"true"
            }
          ]
        }
      ]
    },
    {
      "name":"production",
      "displayName":"Production",
      "tenant":"ProductionTenant"
    }
  ],
  "tenants":[
    {
      "name":"DevelopmentTenant",
      "id":"tenant1",
      "address":"http://tenant1:9920",
      "credentials":{
        "email":"administrator1@mycompany.com",
        "password":"password"
      }
    },
    {
      "name":"ProductionTenant",
      "id":"tenant1",
      "connected":"false"
    }
  ]
}</pre>
<p><a href="#top">Back to top</a></p>