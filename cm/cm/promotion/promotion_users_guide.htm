<!DOCTYPE html>
<html lang="en">
	<head>
		            <meta http-equiv="Content-type" content="text/html; charset=utf-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0" />
            <title>Promotion Guide | Lifecycle Coordinator</title>
            <link rel="stylesheet" href="/docs-test/style/bootstrap/bootstrap.min.css" type="text/css" />
            <link rel="stylesheet" href="/docs-test/style/compiled/bootstrap-overrides.css" type="text/css" />
            <link rel="stylesheet" href="/docs-test/style/compiled/theme.css" type="text/css" />
            <link rel="stylesheet" href="/docs-test/style/reset.css" type="text/css">
            <link rel="stylesheet" href="/docs-test/style/base.css" type="text/css">
            <link rel="stylesheet" href="/docs-test/style/style.css" type="text/css">
            <link rel="stylesheet" href="/docs-test/style/document.css" type="text/css">
	          <link rel="stylesheet" href="/docs-test/style/pygments.css" type="text/css">

            <link href='https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,600,700' rel='stylesheet' type='text/css'>
            <link rel="shortcut icon" type="image/png" href="/favicon.ico?v=2">

            <script src="/docs-test/js/soadocs.min.js"></script>
            <script src="https://www.google.com/jsapi"></script>

            <!-- <link rel="stylesheet" href="/docs-test/style/site.min.css" type="text/css" media="screen" /> -->
            <!--[if lt IE 10]><link rel="stylesheet" href="style/ie.css" type="text/css"><![endif]-->
            <!--[if lt IE 9]><link rel="stylesheet" href="style/ie8.css" type="text/css"><![endif]-->

            <script type="text/javascript">

              var _gaq = _gaq || [];
              _gaq.push(['_setAccount', 'UA-333097-1']);
              _gaq.push(['_trackPageview']);

              (function() {
                var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
              })();
            </script>
            <script type="text/javascript">
              adroll_adv_id = "DV6Z3DM2IVAT5P6URKK3RO";
              adroll_pix_id = "WORRISBFGNASNPUS72EOCQ";
              (function () {
              var oldonload = window.onload;
              window.onload = function(){
                 __adroll_loaded=true;
                 var scr = document.createElement("script");
                 var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
                 scr.setAttribute('async', 'true');
                 scr.type = "text/javascript";
                 scr.src = host + "/j/roundtrip.js";
                 ((document.getElementsByTagName('head') || [null])[0] ||
                  document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
                 if(oldonload){oldonload()}};
              }());
            </script>


		<!-- filtered pages for product and category list script -->
<script>
	
	var unsorted_pages_prod_cat = { p: 'cm', c: 'learn', pages: [ 
		{ t: 'API Visibility, Licenses, and Settings | API Admin | Akana API Platform Help', nt: 'API Settings', w: '2616', ty: 'page', u: '/cm/learnmore/api_admin_api_publishing.htm', d: 'Manage API visibility, configure license scope, and manage settings.', nn: '', nc: '', sn: '', sc: 'API Admin'} , { t: 'Content Development Guidelines | API Admin | Akana API Platform Help', nt: 'Content Development Guidelines', w: '2622', ty: 'page', u: '/cm/learnmore/api_admin_content_guidelines.htm', d: 'Guidelines that API providers can use to manage API content such as API documentation and legal agreements.', nn: '', nc: '', sn: '', sc: 'API Documentation'} , { t: 'API Documentation Maintenance | API Admin | Akana API Platform Help', nt: 'API Documentation Maintenance', w: '2624', ty: 'page', u: '/cm/learnmore/api_admin_documentation_maintenance.htm', d: 'Add and maintain authored API documentation and/or generated API documentation.', nn: '', nc: '', sn: '', sc: 'API Documentation'} , { t: 'API Documentation Tagging | API Admin | Akana API Platform Help', nt: 'API Documentation Tagging', w: '2626', ty: 'page', u: '/cm/learnmore/api_admin_documentation_tagging.htm', d: 'Learn how to tag your API documentation to control visibility of documentation files.', nn: '', nc: '', sn: '', sc: 'API Documentation'} , { t: 'Legal Agreement Maintenance | API Admin | Akana API Platform Help', nt: 'Legal Agreement Maintenance', w: '2630', ty: 'page', u: '/cm/learnmore/api_admin_legal_agreement_maintenance.htm', d: 'Add and maintain legal agreements for your API.', nn: '', nc: '', sn: '', sc: 'API Admin'} , { t: 'API Admin Management | API Admin | Akana API Platform Help', nt: 'API Admin Management', w: '2634', ty: 'page', u: '/cm/learnmore/api_admin_management.htm', d: 'Invite others to be API Admins for your API and manage the API Admin group.', nn: '', nc: '', sn: '', sc: 'API Admin'} , { t: 'Managing Contracts | API Admin | Akana API Platform Help', nt: 'Managing Contracts', w: '2628', ty: 'page', u: '/cm/learnmore/api_admin_managing_contracts.htm', d: 'Learn how to set up and manage your API on the platform.', nn: '', nc: '', sn: '', sc: 'API Admin'} , { t: 'OAuth Support | API Admin | Akana API Platform Help', nt: 'OAuth Support', w: '2620', ty: 'page', u: '/cm/learnmore/api_admin_oauth_support.htm', d: 'Configure an API with OAuth.', nn: '', nc: '', sn: '', sc: 'API Admin'} , { t: 'Policy List | API Admin | Akana API Platform Help', nt: 'Policy List', w: '', ty: 'page', u: '/cm/learnmore/api_admin_policy_list.htm', d: 'A list of operational and service-level policies.', nn: '', nc: '', sn: '', sc: 'API Admin'} , { t: 'API Testing | API Admin | Akana API Platform Help', nt: 'API Testing', w: '2614', ty: 'page', u: '/cm/learnmore/api_admin_testing_tc.htm', d: 'Test your API in Test Client.', nn: '', nc: '', sn: '', sc: 'API Testing'} , { t: 'Tutorial (API Provider) | API Admin | Akana API Platform Help', nt: 'Tutorial (API Provider)', w: '2610', ty: 'page', u: '/cm/learnmore/api_admin_tutorial.htm', d: 'Follow an example scenario for adding and setting up an API.', nn: '', nc: '', sn: '', sc: 'API Admin'} , { t: 'Publish Your API | API Admin | Akana API Platform Help', nt: 'API Administration', w: '26', ty: 'page', u: '/cm/learnmore/apiadmin__toc.htm', d: 'API Admin summary page.', nn: '', nc: '', sn: '', sc: 'API Admin'} , { t: 'OAS 3.0 Support | API Admin | Akana API Platform Help', nt: 'OAS 3.0 Support', w: '2615', ty: 'page', u: '/cm/learnmore/apiadmin_a_d_d_oas30.htm', d: 'Information about the platform&#39;s support of Open API Specification 3.0 for API definitions.', nn: '', nc: '', sn: '', sc: 'API Admin'} , { t: 'API Description Language Support | API Admin | Akana API Platform Help', nt: 'API Description Language Support', w: '2616', ty: 'page', u: '/cm/learnmore/apiadmin_a_d_d_support.htm', d: 'Information about the platform&#39;s support of API description languages for API definitions.', nn: '', nc: '', sn: '', sc: 'API Admin'} , { t: 'Add API | API Admin | Akana API Platform Help', nt: 'Add an API', w: '2616', ty: 'page', u: '/cm/learnmore/apiadmin_api_add.htm', d: 'Add, edit, and manage APIs and API versions on the Akana API Platform.', nn: '', nc: '', sn: '', sc: 'API Admin'} , { t: 'Using API Designer | API Admin | Akana API Platform Help', nt: 'Using API Designer', w: '2616', ty: 'page', u: '/cm/learnmore/apiadmin_api_design.htm', d: 'Adding or Modifying an API with API Designer.', nn: '', nc: '', sn: '', sc: 'API Admin'} , { t: 'Working with Physical Services | API Admin | Akana API Platform Help', nt: 'Working with Physical Services', w: '2616', ty: 'page', u: '/cm/learnmore/apiadmin_api_phys_svc.htm', d: 'Add and manage physical services on the Akana API Platform.', nn: '', nc: '', sn: '', sc: 'API Admin'} , { t: 'Managing API Implementations | API Admin | Akana API Platform Help', nt: 'Managing API Implementations', w: '2616', ty: 'page', u: '/cm/learnmore/apiadmin_implementations.htm', d: 'Add or modify one or more implementations for your API. Manage deployment zones, policies, and security for each implementation.', nn: '', nc: '', sn: '', sc: 'API Admin'} , { t: 'API Analytics | API Admin | Akana API Platform Help', nt: 'API Analytics', w: '2636', ty: 'page', u: '/cm/learnmore/apiadmin_monitoring.htm', d: 'Use platform analytics to monitor your API&#39;s performance.', nn: '', nc: '', sn: '', sc: 'API Analytics'} , { t: 'My Dashboard | APIs | Akana API Platform Help', nt: 'My Dashboard feature', w: '16', ty: 'page', u: '/cm/learnmore/apiadmin_mydashboard.htm', d: 'Monitor your top APIs with the My Dashboard feature.', nn: '', nc: '', sn: '', sc: 'Dashboard'} , { t: 'Overview | API Admin | Akana API Platform Help', nt: 'API Admin Overview', w: '2612', ty: 'page', u: '/cm/learnmore/apiadmin_overview.htm', d: 'Overview of API management in the Akana API platform.', nn: '', nc: '', sn: '', sc: 'API Admin'} , { t: 'API Promotion | API Admin | Akana API Platform Help', nt: 'API Promotion', w: '2616', ty: 'page', u: '/cm/learnmore/apiadmin_promotion.htm', d: 'Learn about promoting an API to the next environment.', nn: '', nc: '', sn: '', sc: 'API Admin'} , { t: 'API Custom Workflow | API Admin | Akana API Platform Help', nt: 'API Custom Workflow', w: '2700', ty: 'page', u: '/cm/learnmore/apiadmin_workflow_custom.htm', d: 'Information about changes to the default user interface behavior when custom API Version workflow is implemented.', nn: '', nc: '', sn: '', sc: 'API Admin'} , { t: 'App Development | Access APIs | Akana API Platform Help', nt: 'Access APIs', w: '14', ty: 'page', u: '/cm/learnmore/app_access_apis__toc.htm', d: 'Request API access for your app and manage API access requests.', nn: '', nc: '', sn: '', sc: 'Access APIs'} , { t: 'API Access | Access APIs | App Development | Akana API Platform Help', nt: 'API Access', w: '1410', ty: 'page', u: '/cm/learnmore/app_access_apis_api_access.htm', d: 'Learn how to use the Akana API Platform to access APIs.', nn: '', nc: '', sn: '', sc: 'Access APIs'} , { t: 'API Connections | Access APIs | App Development | Akana API Platform Help', nt: 'API Connections', w: '1412', ty: 'page', u: '/cm/learnmore/app_access_apis_connections.htm', d: 'Connect your app to an API and manage connections (contracts between an app and an API).', nn: '', nc: '', sn: '', sc: 'Access APIs'} , { t: 'API Documentation | Access APIs | App Development | Akana API Platform Help', nt: 'Accessing API Documentation', w: '1414', ty: 'page', u: '/cm/learnmore/app_access_apis_documentation.htm', d: 'Access API documentation.', nn: '', nc: '', sn: '', sc: 'Access APIs'} , { t: 'API Legal Agreements | Access APIs | App Development | Akana API Platform Help', nt: 'API Legal Agreements', w: '1418', ty: 'page', u: '/cm/learnmore/app_access_apis_legal_agreements.htm', d: 'Learn about API legal agreements and how to access them.', nn: '', nc: '', sn: '', sc: 'Access APIs'} , { t: 'API Versioning | Access APIs | App Development | Akana API Platform Help', nt: 'API Versioning', w: '1416', ty: 'page', u: '/cm/learnmore/app_access_apis_versioning.htm', d: 'Learn about API versioning and how to access the right version for you.', nn: '', nc: '', sn: '', sc: 'Access APIs'} , { t: 'App Development | Collaborate | Akana API Platform Help', nt: 'Collaborate', w: '18', ty: 'page', u: '/cm/learnmore/app_collaborate__toc.htm', d: 'Invite developers to your app team, discuss topics related to API development, and report issues.', nn: '', nc: '', sn: '', sc: 'Collaborate'} , { t: 'Collaboration | Collaborate | App Development | Akana API Platform Help', nt: 'Collaboration', w: '1812', ty: 'page', u: '/cm/learnmore/app_collaborate_collaboration.htm', d: 'Discuss APIs and apps, write reviews, and manage development cycle issues.', nn: '', nc: '', sn: '', sc: 'Collaborate'} , { t: 'API Forum | Collaborate | App Development | Akana API Platform Help', nt: 'API Forum', w: '1816', ty: 'page', u: '/cm/learnmore/app_collaborate_forum_api.htm', d: 'Discuss APIs and report development cycle issues.', nn: '', nc: '', sn: '', sc: 'Collaborate'} , { t: 'App Forum | Collaborate | App Development | Akana API Platform Help', nt: 'App Forum', w: '1814', ty: 'page', u: '/cm/learnmore/app_collaborate_forum_app.htm', d: 'Discuss app projects and report development cycle issues.', nn: '', nc: '', sn: '', sc: 'Collaborate'} , { t: 'Post and Ticket Management | Collaborate | App Development | Akana API Platform Help', nt: 'Post and Ticket Management', w: '1820', ty: 'page', u: '/cm/learnmore/app_collaborate_post_ticket_management.htm', d: 'Respond to and manage posts or tickets.', nn: '', nc: '', sn: '', sc: 'Collaborate'} , { t: 'App Team Management | Collaborate | App Development | Akana API Platform Help', nt: 'App Team Management', w: '1810', ty: 'page', u: '/cm/learnmore/app_collaborate_team_management.htm', d: 'Create and manage an app development team.', nn: '', nc: '', sn: '', sc: 'Collaborate'} , { t: 'Create App | App Development | Akana API Platform Help', nt: 'Create App', w: '12', ty: 'page', u: '/cm/learnmore/app_create_app__toc.htm', d: 'Create an app project, apply security, version your app, and manage connections.', nn: '', nc: '', sn: '', sc: 'Create App'} , { t: 'Creating and Managing Apps | App Development | Akana API Platform Help', nt: 'Creating and Managing Apps', w: '1212', ty: 'page', u: '/cm/learnmore/app_create_app_add.htm', d: 'Create, edit, and manage apps and app versions on the Akana API Platform, and manage visibility.', nn: '', nc: '', sn: '', sc: 'Create App'} , { t: 'App OAuth Profile | Create App | App Development | Akana API Platform Help', nt: 'App OAuth Profile', w: '1213', ty: 'page', u: '/cm/learnmore/app_create_app_oauth_profile.htm', d: 'Specify OAuth settings that you want to support/use for your app.', nn: '', nc: '', sn: '', sc: 'Create App'} , { t: 'App Security | Create App | App Development | Akana API Platform Help', nt: 'App Security', w: '1214', ty: 'page', u: '/cm/learnmore/app_create_app_security.htm', d: 'Learn how to configure app credentials.', nn: '', nc: '', sn: '', sc: 'Create App'} , { t: 'Tutorial (App Developer) | Create App | App Development | Akana API Platform Help', nt: 'Tutorial (App Developer)', w: '1210', ty: 'page', u: '/cm/learnmore/app_create_app_tutorial.htm', d: 'Follow an example scenario for app setup. Create a new app, and then configure it to consume APIs.', nn: '', nc: '', sn: '', sc: 'Create App'} , { t: 'View Apps | Create App | App Development | Akana API Platform Help', nt: 'View Apps', w: '1216', ty: 'page', u: '/cm/learnmore/app_create_app_view_apps.htm', d: 'Find and view information about apps.', nn: '', nc: '', sn: '', sc: 'Create App'} , { t: 'Go Live With Your App | App Development | Akana API Platform Help', nt: 'Go Live With Your App', w: '20', ty: 'page', u: '/cm/learnmore/app_go_live.htm', d: 'Request access to an API&#39;s Live implementation, activate your app, and manage API access contracts.', nn: '', nc: '', sn: '', sc: 'Go Live'} , { t: 'App Analytics | App Development | Akana API Platform Help', nt: 'Monitor Your App', w: '22', ty: 'page', u: '/cm/learnmore/app_monitoring.htm', d: 'Use platform analytics to monitor app traffic with APIs that the app is using.', nn: '', nc: '', sn: '', sc: 'App Analytics'} , { t: 'App Promotion App | App Development | Akana API Platform Help', nt: 'App Promotion', w: '2616', ty: 'page', u: '/cm/learnmore/app_promotion.htm', d: 'Learn about promoting an app to the next environment.', nn: '', nc: '', sn: '', sc: 'Create App'} , { t: 'App Security Options and Setup | App Development | Akana API Platform Help', nt: 'App Security', w: '38', ty: 'page', u: '/cm/learnmore/app_security.htm', d: 'Learn about how to set up and manage app security.', nn: '', nc: '', sn: '', sc: 'App Security'} , { t: 'Stay Informed | App Development | Akana API Platform Help', nt: 'Stay Informed', w: '24', ty: 'page', u: '/cm/learnmore/app_stay_informed.htm', d: 'View notifications relating to your app project and choose apps or APIs to follow.', nn: '', nc: '', sn: '', sc: 'Stay Informed'} , { t: 'Test Your App | App Development | Akana API Platform Help', nt: 'Test Your App With APIs', w: '16', ty: 'page', u: '/cm/learnmore/app_testing_tc.htm', d: 'Test your app with APIs.', nn: '', nc: '', sn: '', sc: 'App Testing'} , { t: 'Basics | Akana API Platform Help', nt: 'Basics', w: '10', ty: 'page', u: '/cm/learnmore/basics.htm', d: 'Learn about platform basics such as signup, account management, navigating, and getting support.', nn: '', nc: '', sn: '', sc: 'Basics'} , { t: 'Account Management | Basics | Akana API Platform Help', nt: 'Account Management', w: '1012', ty: 'page', u: '/cm/learnmore/basics_account_management.htm', d: 'Manage your platform user account, configure notifications, and get password support.', nn: '', nc: '', sn: '', sc: 'Basics'} , { t: 'Action Dashboard | Basics | Akana API Platform Help', nt: 'Action Dashboard', w: '1015', ty: 'page', u: '/cm/learnmore/basics_actiondashboard.htm', d: 'Information about the user Action Dashboard.', nn: '', nc: '', sn: '', sc: 'Basics'} , { t: 'Forums | Basics | Akana API Platform Help', nt: 'Forums', w: '1016', ty: 'page', u: '/cm/learnmore/basics_forums.htm', d: 'Learn how to create discussions, tickets, alerts, and reviews.', nn: '', nc: '', sn: '', sc: 'Basics'} , { t: 'Glossary of Terms | Basics | Akana API Platform Help', nt: 'Glossary of Terms', w: '1025', ty: 'page', u: '/cm/learnmore/basics_glossary.htm', d: 'Definitions for terms used on the platform.', nn: '', nc: '', sn: '', sc: 'Basics'} , { t: 'Groups | Basics | Akana API Platform Help', nt: 'Groups', w: '1014', ty: 'page', u: '/cm/learnmore/basics_groups.htm', d: 'Create and manage groups in the developer portal.', nn: '', nc: '', sn: '', sc: 'Basics'} , { t: 'Navigation | Basics | Akana API Platform Help', nt: 'Navigation', w: '1014', ty: 'page', u: '/cm/learnmore/basics_navigation.htm', d: 'Information about navigation elements used in the platform, and App and API component overview.', nn: '', nc: '', sn: '', sc: 'Basics'} , { t: 'Search | Basics | Akana API Platform Help', nt: 'Search', w: '1020', ty: 'page', u: '/cm/learnmore/basics_search.htm', d: 'Learn about the different ways to find information in the developer portal.', nn: '', nc: '', sn: '', sc: 'Basics'} , { t: 'Sign Up | Basics | Akana API Platform Help', nt: 'Sign Up', w: '1010', ty: 'page', u: '/cm/learnmore/basics_signup.htm', d: 'Sign up for a platform account and learn about account privileges.', nn: '', nc: '', sn: '', sc: 'Basics'} , { t: 'Support | Basics | Akana API Platform Help', nt: 'Support', w: '1018', ty: 'page', u: '/cm/learnmore/basics_support.htm', d: 'Platform browser support and support contact information.', nn: '', nc: '', sn: '', sc: 'Basics'} , { t: 'Bonita theme | Business Admin | Akana API Platform Help', nt: 'Bonita theme', w: '7', ty: 'page', u: '/cm/learnmore/basics_theme_bonita.htm', d: 'Summary of Bonita theme.', nn: '', nc: '', sn: '', sc: 'Themes'} , { t: 'Default Theme | Business Admin | Akana API Platform Help', nt: 'Default (deprecated)', w: '5', ty: 'page', u: '/cm/learnmore/basics_theme_default.htm', d: 'Summary of Default theme', nn: '', nc: '', sn: '', sc: 'Themes'} , { t: 'Hermosa Theme | Business Admin | Akana API Platform Help', nt: 'Hermosa', w: '5', ty: 'page', u: '/cm/learnmore/basics_theme_hermosa.htm', d: 'Summary of Hermosa theme', nn: '', nc: '', sn: '', sc: 'Themes'} , { t: 'Hermosa Theme 2019.1.0 | Business Admin | Akana API Platform Help', nt: 'Hermosa 2019.1.0', w: '5', ty: 'page', u: '/cm/learnmore/basics_theme_hermosa_201910.htm', d: 'Summary of Hermosa theme version 2019.1.0 and later', nn: '', nc: '', sn: '', sc: 'Themes'} , { t: 'Simple Developer Theme | Business Admin | Akana API Platform Help', nt: 'Simple Developer', w: '5', ty: 'page', u: '/cm/learnmore/basics_theme_simpledev.htm', d: 'Summary of Simple Dev theme', nn: '', nc: '', sn: '', sc: 'Themes'} , { t: 'Business Administration | Akana API Platform Help', nt: 'Business Administration', w: '4', ty: 'page', u: '/cm/learnmore/bus_admin__toc.htm', d: 'Information for business administrators.', nn: '', nc: '', sn: '', sc: 'Business Administration'} , { t: 'Business Administrators | Business Admin | Akana API Platform Help', nt: 'Business Admins', w: '5', ty: 'page', u: '/cm/learnmore/bus_admin_bus_admin.htm', d: 'Manage business administrators for the platform.', nn: '', nc: '', sn: '', sc: 'Business Administration'} , { t: 'Model Categories | Business Admin | Akana API Platform Help', nt: 'Model Categories', w: '3043', ty: 'page', u: '/cm/learnmore/bus_admin_categories.htm', d: 'Manage categories that allow logical grouping of models in the Model Library.', nn: '', nc: '', sn: '', sc: 'Business Administration'} , { t: 'Domains | Business Admin | Akana API Platform Help', nt: 'Domains', w: '3216', ty: 'page', u: '/cm/learnmore/bus_admin_domains.htm', d: 'Configure authentication domains that will be available for APIs defined in the platform.', nn: '', nc: '', sn: '', sc: 'Business Administration'} , { t: 'External OAuth Provider Domain | Business Admin | Akana API Platform Help', nt: 'External OAuth Provider Domain', w: '3216', ty: 'page', u: '/cm/learnmore/bus_admin_domains_eoap.htm', d: 'Configure a domain referencing an external OAuth provider.', nn: '', nc: '', sn: '', sc: 'Business Administration'} , { t: 'OpenID Connect Support | Business Admin | Akana API Platform Help', nt: 'Open ID Connect Support', w: '3218', ty: 'page', u: '/cm/learnmore/bus_admin_domains_oidc.htm', d: 'Configure a login domain or OpenID Relying Party domain to use the OpenID Connect protocol for authentication.', nn: '', nc: '', sn: '', sc: 'Business Administration'} , { t: 'Managing Deployment Zones | Business Admin | Akana API Platform Help', nt: 'Managing Deployment Zones', w: '3030', ty: 'page', u: '/cm/learnmore/bus_admin_dzs.htm', d: 'Plan and manage deployment zones on the platform.', nn: '', nc: '', sn: '', sc: 'Business Administration'} , { t: 'Export and Import | Business Admin | Akana API Platform Help', nt: 'Export and Import', w: '3038', ty: 'page', u: '/cm/learnmore/bus_admin_export_import.htm', d: 'Export/import business information in the Akana API Platform.', nn: '', nc: '', sn: '', sc: 'Business Administration'} , { t: 'Managing API Gateways | Business Admin | Akana API Platform Help', nt: 'Managing API Gateways', w: '3030', ty: 'page', u: '/cm/learnmore/bus_admin_gateways.htm', d: 'Manage API Gateways on the platform.', nn: '', nc: '', sn: '', sc: 'Business Administration'} , { t: 'Licenses and Scopes | Business Admin | Akana API Platform Help', nt: 'Licenses', w: '3046', ty: 'page', u: '/cm/learnmore/bus_admin_licenses.htm', d: 'Configuration of licenses in the Akana API Platform by the Business Administrator.', nn: '', nc: '', sn: '', sc: 'Business Administration'} , { t: 'Business APIs | Business Admin | Akana API Platform Help', nt: 'Organization APIs', w: '08', ty: 'page', u: '/cm/learnmore/bus_admin_org_apis.htm', d: 'Manage APIs associated with an organization on the API platform.', nn: '', nc: '', sn: '', sc: 'Business Administration'} , { t: 'Business Apps | Business Admin | Akana API Platform Help', nt: 'Organization Apps', w: '09', ty: 'page', u: '/cm/learnmore/bus_admin_org_apps.htm', d: 'Manage apps associated with an organization on the API platform.', nn: '', nc: '', sn: '', sc: 'Business Administration'} , { t: 'Managing the Model Library for a Business Organization | Business Admin | Akana API Platform Help', nt: 'Model Library', w: '11', ty: 'page', u: '/cm/learnmore/bus_admin_org_models.htm', d: 'Manage the library of model objects associated with an organization on the API platform.', nn: '', nc: '', sn: '', sc: 'Business Administration'} , { t: 'Business Policies | Business Admin | Akana API Platform Help', nt: 'Organization Policies', w: '10', ty: 'page', u: '/cm/learnmore/bus_admin_org_policies.htm', d: 'Manage policies associated with an organization on the API platform.', nn: '', nc: '', sn: '', sc: 'Business Administration'} , { t: 'Business Processes | Business Admin | Akana API Platform Help', nt: 'Organization Processes', w: '10', ty: 'page', u: '/cm/learnmore/bus_admin_org_processes.htm', d: 'Manage processes associated with an organization on the API platform.', nn: '', nc: '', sn: '', sc: 'Business Administration'} , { t: 'Security, Roles | Business Admin | Akana API Platform Help', nt: 'Organization Security/Roles', w: '7', ty: 'page', u: '/cm/learnmore/bus_admin_org_roles.htm', d: 'Manage security roles associated with an organization on the API platform.', nn: '', nc: '', sn: '', sc: 'Business Administration'} , { t: 'Monthly Report | Business Admin | Akana API Platform Help', nt: 'Monthly Report', w: '10', ty: 'page', u: '/cm/learnmore/bus_admin_org_root_monthly_report.htm', d: 'View metric information for the entire developer portal, summarized by month.', nn: '', nc: '', sn: '', sc: 'Business Administration'} , { t: 'Business Scripts | Business Admin | Akana API Platform Help', nt: 'Organization Scripts', w: '11', ty: 'page', u: '/cm/learnmore/bus_admin_org_scripts.htm', d: 'Manage scripts associated with an organization on the API platform.', nn: '', nc: '', sn: '', sc: 'Business Administration'} , { t: 'Organizations | Business Admin | Akana API Platform Help', nt: 'Organizations', w: '7', ty: 'page', u: '/cm/learnmore/bus_admin_organizations.htm', d: 'Manage business organizations on the platform.', nn: '', nc: '', sn: '', sc: 'Business Administration'} , { t: 'PingFederate Usage Scenario - End to End | Business Admin | Akana API Platform Help', nt: 'PingFederate Usage Scenario - End to End', w: '3230', ty: 'page', u: '/cm/learnmore/bus_admin_ov_pf_endtoend.htm', d: 'A walkthrough of the setup for the PingFederate feature.', nn: '', nc: '', sn: '', sc: 'Business Administration'} , { t: 'Business Admin Responsibilities | Business Admin | Akana API Platform Help', nt: 'Business Admin Responsibilities', w: '6', ty: 'page', u: '/cm/learnmore/bus_admin_overview.htm', d: 'Overview of the Business Administrator&#39;s capabilities and duties.', nn: '', nc: '', sn: '', sc: 'Business Administration'} , { t: 'Scopes | Business Admin | Akana API Platform Help', nt: 'Scopes', w: '3042', ty: 'page', u: '/cm/learnmore/bus_admin_scopes.htm', d: 'Configure and manage scopes as part of setting up licenses for API access.', nn: '', nc: '', sn: '', sc: 'Business Administration'} , { t: 'Forum Moderation | Business/API Admin | Akana API Platform Help', nt: 'Forum Moderation', w: '3034', ty: 'page', u: '/cm/learnmore/bus_api_admin_forum.htm', d: 'Moderate forum entries, such as discussions, reviews, and comments.', nn: '', nc: '', sn: '', sc: 'Business Administration'} , { t: 'Doc Visibility Overview', nt: 'Doc Visibility Overview', w: '5', ty: 'page', u: '/cm/howto/howto_api_documentation.htm', d: 'A summary of resources available to help you use licenses and doc tagging to control the visibility of documentation files and content elements.', nn: '', nc: '', sn: '', sc: 'API Doc Visibility'} , { t: 'How to Control Document Content Visibility', nt: 'API Documentation Content Visibility', w: '14', ty: 'page', u: '/cm/howto/howto_control_content_visibility.htm', d: 'A how-to guide for using licenses to control the visibility of content elements in documentation files.', nn: '', nc: '', sn: '', sc: 'API Doc Visibility'} , { t: 'How to Control Document File Visibility', nt: 'API Documentation File Visibility', w: '11', ty: 'page', u: '/cm/howto/howto_control_doc_file_visibility.htm', d: 'A how-to guide for using licenses to control the visibility of documentation files in the developer portal.', nn: '', nc: '', sn: '', sc: 'API Doc Visibility'} , { t: 'How to Manage API Visibility with Licenses', nt: 'Managing API Visibility with Licenses', w: '08', ty: 'page', u: '/cm/howto/howto_simple_license_setup.htm', d: 'A how-to guide for creating a simple setup to use licenses to control the visibility of APIs.', nn: '', nc: '', sn: '', sc: 'API Doc Visibility'} , { t: 'Learning about Community Manager', nt: 'Learning', w: '5', ty: '', u: '/cm/learning.html', d: 'The Community Manager Learning Landing Page', nn: 'true', nc: 'true', sn: '', sc: ''} , { t: 'Extensible Metadata for apps and APIs | Lifecycle Repository', nt: 'Extensible Metadata for apps and APIs', w: '5', ty: 'page', u: '/cm/lr/lr_extended_props_app_api.htm', d: 'Learn about defining app and API metadata in Repository Client.', nn: '', nc: '', sn: '', sc: 'Lifecycle Repository'} , { t: 'Extensible Metadata for Users | Lifecycle Repository', nt: 'Extensible Metadata for Users', w: '6', ty: 'page', u: '/cm/lr/lr_extended_props_user.htm', d: 'Learn about adding extensible user metadata to a tenant configuration in a specific use case, using Repository Client.', nn: '', nc: '', sn: '', sc: 'Lifecycle Repository'} , { t: 'Runtime Configuration | Lifecycle Repository', nt: 'Runtime Configuration', w: '7', ty: 'page', u: '/cm/lr/lr_runtime_config.htm', d: 'Learn how to use the Runtime Configurations feature to establish templates so that API implementation properties can be established and selectively applied based on custom property filters.', nn: '', nc: '', sn: '', sc: 'Lifecycle Repository'} , { t: 'Licenses Feature Overview | Business Admin | Akana API Platform Help', nt: 'Licenses Feature Overview', w: '3045', ty: 'page', u: '/cm/learnmore/ov_licenses.htm', d: 'A detailed overview of the Licenses feature.', nn: '', nc: '', sn: '', sc: 'Business Administration'} , { t: 'Sample Topologies | Lifecycle Coordinator', nt: 'Sample Topologies', w: '7', ty: 'page', u: '/cm/promotion/promotion_samples.htm', d: 'Provides a set of complete sample topologies demonstrating various patterns and configurations.', nn: '', nc: '', sn: '', sc: 'Lifecycle Coordinator'} , { t: 'Promotion Guide | Lifecycle Coordinator', nt: 'LC Promotion Guide', w: '5', ty: 'page', u: '/cm/promotion/promotion_users_guide.htm', d: 'Learn how to use the Lifecycle Coordinator feature to manage the promotion lifecycle.', nn: '', nc: '', sn: '', sc: 'Lifecycle Coordinator'} , { t: 'Site Administration | Akana API Platform Help', nt: 'Site Administration', w: '32', ty: 'page', u: '/cm/learnmore/site_admin__toc.htm', d: 'Learn about site administration functions such as managing user accounts, managing custom styles, and configuring domains.', nn: '', nc: '', sn: '', sc: 'Site Administration'} , { t: 'Admin Console Settings | Site Admin | Akana API Platform Help', nt: 'Admin Console Settings', w: '5000', ty: 'page', u: '/cm/learnmore/site_admin_admin_console_settings.htm', d: 'Managing the configuration settings relating to the Akana API Platform, in the Policy Manager Admin Console.', nn: '', nc: '', sn: '', sc: 'Site Administration'} , { t: 'Platform Legal Agreement | Site Admin | Akana API Platform Help', nt: 'Platform Legal Agreement', w: '3224', ty: 'page', u: '/cm/learnmore/site_admin_agreements.htm', d: 'Manage the platform legal agreement.', nn: '', nc: '', sn: '', sc: 'Site Administration'} , { t: 'Challenges | Site Admin | Akana API Platform Help', nt: 'Challenges', w: '3226', ty: 'page', u: '/cm/learnmore/site_admin_challenges.htm', d: 'Configure security challenge questions for use in the developer portal for scenarios such as two-factor authentication or password reset.', nn: '', nc: '', sn: '', sc: 'Site Administration'} , { t: 'Configuration | Site Admin | Akana API Platform Help', nt: 'Configuration', w: '3224', ty: 'page', u: '/cm/learnmore/site_admin_config.htm', d: 'Basic configuration information for the developer portal.', nn: '', nc: '', sn: '', sc: 'Site Administration'} , { t: 'Content Development Guidelines | Site Admin | Akana API Platform Help', nt: 'Content Development Guidelines for Simple Dev Theme', w: '3229', ty: 'page', u: '/cm/learnmore/site_admin_content_guidelines_sd.htm', d: 'Guidelines for Site Admins managing content for Simple Developer theme and content developers writing the content.', nn: '', nc: '', sn: '', sc: 'Site Administration'} , { t: 'Country Codes | Site Admin | Akana API Platform Help', nt: 'Country Codes', w: '3226', ty: 'page', u: '/cm/learnmore/site_admin_country_codes.htm', d: 'Configure country codes for use in telephone number fields in the developer portal.', nn: '', nc: '', sn: '', sc: 'Site Administration'} , { t: 'Customization and Branding | Site Admin | Akana API Platform Help', nt: 'Customization and Branding', w: '3224', ty: 'page', u: '/cm/learnmore/site_admin_customization.htm', d: 'Learn how to manage platform customization styles and templates.', nn: '', nc: '', sn: '', sc: 'Site Administration'} , { t: 'Configuring Elasticsearch | Site Admin | Akana API Platform Help', nt: 'Configuring Elasticsearch', w: '3218', ty: 'page', u: '/cm/learnmore/site_admin_es.htm', d: 'Plan and manage the configuration and deployment of Elasticsearch, the platform&#39;s search/indexing tool.', nn: '', nc: '', sn: '', sc: 'Site Administration'} , { t: 'File Manager | Site Admin | Akana API Platform Help', nt: 'File Manager', w: '3224', ty: 'page', u: '/cm/learnmore/site_admin_file_manager.htm', d: 'Learn how to use File Manager to manage developer portal files such as help content and customized resources.', nn: '', nc: '', sn: '', sc: 'Site Administration'} , { t: 'Administration Guide | Lifecycle Coordinator | Akana API Platform Help', nt: 'LC UI', w: '09', ty: 'page', u: '/cm/learnmore/site_admin_lc.htm', d: 'Learn how to set up, configure, and manage activities relating to the Lifecycle Coordinator feature.', nn: '', nc: '', sn: '', sc: 'Lifecycle Coordinator'} , { t: 'Custom Metadata (LM) | Site Admin | Akana API Platform Help', nt: 'Custom Metadata (LM)', w: '3224', ty: 'page', u: '/cm/learnmore/site_admin_lm.htm', d: 'Manage custom metadata on the developer portal.', nn: '', nc: '', sn: '', sc: 'Site Administration'} , { t: 'Login Domains | Site Admin | Akana API Platform Help', nt: 'Login Domains', w: '3224', ty: 'page', u: '/cm/learnmore/site_admin_logins.htm', d: 'Learn how to configure login domains in the developer portal.', nn: '', nc: '', sn: '', sc: 'Site Administration'} , { t: 'Site Admin Responsibilities | Site Admin | Akana API Platform Help', nt: 'Site Admin Responsibilities', w: '3210', ty: 'page', u: '/cm/learnmore/site_admin_overview.htm', d: 'Overview of the Site Administrator&#39;s capabilities and duties.', nn: '', nc: '', sn: '', sc: 'Site Administration'} , { t: 'Promotion Feature | Site Admin | Akana API Platform Help', nt: 'Promotion Feature', w: '3230', ty: 'page', u: '/cm/learnmore/site_admin_promotion.htm', d: 'Learn about the promotion feature, which allows promoting APIs and apps to the next environment.', nn: '', nc: '', sn: '', sc: 'Site Administration'} , { t: 'Site Resource Settings | Site Admin | Akana API Platform Help', nt: 'Settings', w: '3226', ty: 'page', u: '/cm/learnmore/site_admin_settings.htm', d: 'Configure basic settings for alerts, apps, APIs, connections, comments, discussions, groups, tickets, users, reviews, and business security.', nn: '', nc: '', sn: '', sc: 'Site Administration'} , { t: 'Basic Site Settings | Site Admin | Akana API Platform Help', nt: 'Basic Site Settings', w: '3226', ty: 'page', u: '/cm/learnmore/site_admin_site.htm', d: 'Configure site settings such as site URL, contact email address, and themes.', nn: '', nc: '', sn: '', sc: 'Site Administration'} , { t: 'Site Admin Team Management | Site Admin | Akana API Platform Help', nt: 'Site Admin Team Management', w: '3214', ty: 'page', u: '/cm/learnmore/site_admin_site_admins.htm', d: 'Manage the team of site administrators for the platform.', nn: '', nc: '', sn: '', sc: 'Site Administration'} , { t: 'Test Client | Site Admin | Akana API Platform Help', nt: 'Site Admin Test Client', w: '3214', ty: 'page', u: '/cm/learnmore/site_admin_tc.htm', d: 'Manage settings that affect the features and capabilities of the Test Client tool.', nn: '', nc: '', sn: '', sc: 'Site Administration'} , { t: 'User Accounts | Site Admin | Akana API Platform Help', nt: 'User Accounts', w: '3212', ty: 'page', u: '/cm/learnmore/site_admin_users.htm', d: 'Administer platform user accounts.', nn: '', nc: '', sn: '', sc: 'Site Administration'} , { t: 'Custom Workflows | Site Admin | Akana API Platform Help', nt: 'Custom Workflows', w: '3228', ty: 'page', u: '/cm/learnmore/site_admin_workflows.htm', d: 'Add, change, delete, and assign custom workflows for resources in the business.', nn: '', nc: '', sn: '', sc: 'Site Administration'} , { t: 'Use Case - Controlling API Doc Visibility with Licenses | Akana API Platform Help', nt: 'Use Case - Controlling API Doc Visibility with Licenses', w: '15', ty: 'page', u: '/cm/learnmore/uc_licenses_api_doc_visibility.htm', d: 'Step by step instructions, and illustrations, for setting up an API and using the Licenses feature to add privacy on certain operations so that different users have visibility of different operations, depending on the user&#39;s license.', nn: '', nc: '', sn: '', sc: 'API Doc Visibility'} , { t: 'Use Case - OAuth with Okta | API Admin | Akana API Platform Help', nt: 'Use Case - API testing in Test Client with Okta', w: '2621', ty: 'page', u: '/cm/learnmore/uc_tc_okta.htm', d: 'Step by step instructions, and illustrations, for configuring an Okta account, Okta OAuth Provider domain, and app and API, so that you can test your API in Test Client using Okta as the OAuth Provider.', nn: '', nc: '', sn: '', sc: 'API Admin'} , { t: 'Lifecycle Coordinator Upgrade Notes for 2018.0.0', nt: 'LC Upgrade Notes for 2018.0.0', w: '10', ty: 'page', u: '/cm/promotion/upgrade_lc.htm', d: 'Lifecycle Coordinator upgrade notes for 2018.0.0.', nn: '', nc: '', sn: '', sc: 'Lifecycle Coordinator'} ,  
		]};
</script>
<!-- end filtered pages for product and category list script -->
		<!-- left nav script -->
<script>
	function leftnav()
    {
        var i = 0, snClasses = [];
        var pages = unsorted_pages_prod_cat.pages.filter(function(a) {
            return (a.nn != 'true' && a.nn != 'api' && a.nn != 'oauthapi' && a.sc == '');
        }).sort(function CustomSort(a, b) {
            if ( ! a["w"] ) { a["w"] = 1000 ;}
            if ( ! b["w"] ) { b["w"] = 1000 ;}
            var weighta = a['w'];
            var weightb = b['w'];
            if(weighta != weightb){
                return (weighta - weightb);
            }
            else{
                return (a.nt.localeCompare(b.nt));
            }
        });
        var snpages = unsorted_pages_prod_cat.pages.filter(function(a) {
            return (a.nn != 'true' && a.nn != 'api' && a.nn != 'oauthapi' && a.sc != '');
        }).sort(function CustomSort(a, b) {
            if ( ! a["w"] ) { a["w"] = 1000 ;}
            if ( ! b["w"] ) { b["w"] = 1000 ;}
            var weighta = a['w'];
            var weightb = b['w'];
            if(weighta != weightb){
                return (weighta - weightb);
            }
            else{
                return (a.nt.localeCompare(b.nt));
            }
        });

        // Get the value of the sc query string (if present)
        var scParam = $.url().param('sc') || 'null';

        if (snpages.length == 0) {
            var ObjUl = $('<ul></ul>').hide();
            ObjUl.addClass("soa-ui-dc-container-main-left-nav");

            for (i = 0; i < pages.length; i++)
            {
                var Objli = $('<li></li>');
                var Obja = $('<a></a>');
                var Objp = $('<p></p>');

                Objli.attr("role", "menuitem");

                if ( pages[i].u == '/cm/promotion/promotion_users_guide.htm' ) {
                    Obja.addClass("soa-ui-dc-container-main-left-nav-item-selected soa-ui-dc-container-main-left-nav-item-link");
                } else {
                    Obja.addClass("soa-ui-dc-container-main-left-nav-item-link");
                }

                if ( "/docs-test" ) {
                    Obja.attr("href", "/docs-test".concat(pages[i].u) );
                } else {
                    Obja.attr("href", pages[i].u );
                }
                if ( pages[i].ty == 'pdf' ) {
                    Obja.attr("target", "_blank");
                }
                if (pages[i].nt) {
                    Obja.html(pages[i].nt.replace("&amp;nbsp;", " "));
                } else {
                    Obja.html(pages[i].t.replace("&amp;nbsp;", " "));
                }

                Objli.addClass("soa-ui-dc-container-main-left-nav-item");
                Objli.append(Obja);

                ObjUl.append(Objli);
            }
            $('.soa-ui-dc-container-main-left').append(ObjUl);
        } else {
            for (; i < snpages.length; i++) {
                if (snClasses.indexOf(snpages[i].sc) < 0) {
                    snClasses.push(snpages[i].sc);
                }
            }
            snClasses.sort();

            var ObjUl = $('<ul></ul>').hide();
            ObjUl.addClass("soa-ui-dc-container-main-left-nav");

            // Iterate through the sub-nav-classes
            for (i = 0; i < snClasses.length; i++)
            {
                // Get the subnav for this class
                var classsnpages = snpages.filter(function(a) {
                    return (a.sc == snClasses[i]);
                });

                var ObjInnerUl = $('<ul></ul>');
                ObjInnerUl.addClass("soa-ui-dc-container-main-left-nav soa-ui-dc-container-main-left-nav-inner");
                for (j = 0; j < classsnpages.length; j++)
                {
                    var ObjInnerli = $('<li></li>');
                    var ObjInnera = $('<a></a>');
                    var ObjInnerp = $('<p></p>');

                    ObjInnerli.attr("role", "menuitem");

                    if ( classsnpages[j].u == '/cm/promotion/promotion_users_guide.htm' ) {
                        ObjInnera.addClass("soa-ui-dc-container-main-left-nav-item-selected soa-ui-dc-container-main-left-nav-item-link");
                    } else {
                        ObjInnera.addClass("soa-ui-dc-container-main-left-nav-item-link");
                    }

                    if ( "/docs-test" ) {
                        ObjInnera.attr("href", "/docs-test".concat(classsnpages[j].u) );
                    } else {
                        ObjInnera.attr("href", classsnpages[j].u );
                    }
                    if ( classsnpages[j].ty == 'pdf' ) {
                        ObjInnera.attr("target", "_blank");
                    }
                    if (classsnpages[j].nt) {
                        ObjInnera.html(classsnpages[j].nt.replace("&amp;nbsp;", " "));
                    } else {
                        ObjInnera.html(classsnpages[j].t.replace("&amp;nbsp;", " "));
                    }

                    ObjInnerli.addClass("soa-ui-dc-container-main-left-nav-item");
                    ObjInnerli.append(ObjInnera);
                    ObjInnerUl.append(ObjInnerli);          
                }

                var Objli = $('<li></li>');
                var Obja = $('<a></a>');
                var Objp = $('<p></p>');

                if ( ('Lifecycle Coordinator' == snClasses[i]) || (scParam == snClasses[i]) ) {
                    Objli.addClass("soa-ui-dc-container-main-left-nav-item-selected");
                }

                Obja.addClass("soa-ui-dc-container-main-left-nav-item-link");

                // Construct the URL for the subnav heading entry link
                var subnavLink = "";

                // Start with the product
                if ( "/docs-test" ) {
                    subnavLink = "/docs-test/".concat('cm');
                } else {
                    subnavLink = "/".concat('cm');
                }
                // Add the category
                switch ( 'learn' ) {
                    case "gs":
                        subnavLink += "/getting-started.html";
                        break;
                    case "learn":
                        subnavLink += "/learning.html";
                        break;
                    case "ref":
                        subnavLink += "/reference.html";
                        break;
                }
                // And put the subnav-class as a query param
                subnavLink += "?sc=" + snClasses[i];
                Obja.attr("href", subnavLink);

                Obja.html(snClasses[i]);

                Objli.addClass("soa-ui-dc-container-main-left-nav-item");

                Objli.append(Obja);

                if (classsnpages.length > 0) {
                    Objli.append(ObjInnerUl);
                }

                ObjUl.append(Objli);
            }
            // And now add the miscellaneous (uncategorized) entries
            var ObjInnerUl = $('<ul></ul>');
            ObjInnerUl.addClass("soa-ui-dc-container-main-left-nav soa-ui-dc-container-main-left-nav-inner");
            for (j = 0; j < pages.length; j++)
            {
                var ObjInnerli = $('<li></li>');
                var ObjInnera = $('<a></a>');
                var ObjInnerp = $('<p></p>');

                ObjInnerli.attr("role", "menuitem");

                if ( pages[j].u == '/cm/promotion/promotion_users_guide.htm' ) {
                    ObjInnera.addClass("soa-ui-dc-container-main-left-nav-item-selected soa-ui-dc-container-main-left-nav-item-link");
                } else {
                    ObjInnera.addClass("soa-ui-dc-container-main-left-nav-item-link");
                }

                if ( "/docs-test" ) {
                    ObjInnera.attr("href", "/docs-test".concat(pages[j].u) );
                } else {
                    ObjInnera.attr("href", pages[j].u );
                }
                if ( pages[j].ty == 'pdf' ) {
                    ObjInnera.attr("target", "_blank");
                }
                if (pages[j].nt) {
                    ObjInnera.html(pages[j].nt.replace("&amp;nbsp;", " "));
                } else {
                    ObjInnera.html(pages[j].t.replace("&amp;nbsp;", " "));
                }

                ObjInnerli.addClass("soa-ui-dc-container-main-left-nav-item");
                ObjInnerli.append(ObjInnera);
                ObjInnerUl.append(ObjInnerli);          
            }

            var Objli = $('<li></li>');
            var Obja = $('<a></a>');
            var Objp = $('<p></p>');

            if ( ('Lifecycle Coordinator' == '' && 'page' == 'page') ||
                (scParam == "undefined") ) {
                Objli.addClass("soa-ui-dc-container-main-left-nav-item-selected");
            }

            Obja.addClass("soa-ui-dc-container-main-left-nav-item-link");

            // Construct the URL for the subnav heading entry link
            var subnavLink = "";

            // Start with the product
            if ( "/docs-test" ) {
                subnavLink = "/docs-test/".concat('cm');
            } else {
                subnavLink = "/".concat('cm');
            }
            // Add the category
            switch ( 'learn' ) {
                case "gs":
                    subnavLink += "/getting-started.html";
                    break;
                case "learn":
                    subnavLink += "/learning.html";
                    break;
                case "ref":
                    subnavLink += "/reference.html";
                    break;
            }
            // And put the subnav-class as a query param
            subnavLink += "?sc=" + snClasses[i];
            Obja.attr("href", subnavLink);

            Obja.html("Miscellaneous");

            Objli.addClass("soa-ui-dc-container-main-left-nav-item");

            Objli.append(Obja);

            if (pages.length > 0) {
                Objli.append(ObjInnerUl);
            }

            ObjUl.append(Objli);

            $('.soa-ui-dc-container-main-left').append(ObjUl);
        }
    }
    $(document).ready(function() {
        leftnav();
        $(".soa-ui-dc-container-main-left").find("ul").first().show();
        $(".soa-ui-dc-container-main").removeClass("soa-ui-dc-before-load");
    });
</script>
<!-- End left nav script -->
	</head>
	<body>
		<div class="soa-ui-dc-top-bar-wrapper">
	<div class="top-bar">

					<div class="soa-ui-dc-logo-container">
				<a href="/docs-test/index.html" class="soa-ui-dc-logo">
					<img src="/docs-test/style/images/logo-akana.svg" alt="Akana&trade;, Powering the API Economy" width="182" height="49">
				</a><!-- logo link, replace href -->
			</div>


		<div class="soa-ui-dc-topnav-wrapper">
			<div class="soa-ui-dc-topnav-container">
				<!-- top nav starts here -->
				<ul class="soa-ui-dc-topnav soa-ui-dc-clearthis">
					<li class="soa-ui-dc-topnav-item ">
						<a href="/docs-test/sp/index.html" class="soa-ui-dc-topnav-item-link soa-ui-dc-icon soa-ui-dc-topnav-item-link-soaplatform"><span class="soa-ui-dc-topnav-item-link-firstword">DEPLOYMENT</span> PLATFORM</a><!-- replace href -->
					</li>					
					<li class="soa-ui-dc-topnav-item soa-ui-dc-topnav-item-active">
						<a href="/docs-test/cm/index.html" class="soa-ui-dc-topnav-item-link soa-ui-dc-icon soa-ui-dc-topnav-item-link-communitymanager"><span class="soa-ui-dc-topnav-item-link-firstword">COMMUNITY</span> MANAGER</a><!-- replace href -->
					</li>
					<li class="soa-ui-dc-topnav-item ">
						<a href="/docs-test/ag/index.html" class="soa-ui-dc-topnav-item-link soa-ui-dc-icon soa-ui-dc-topnav-item-link-apigateway"><span class="soa-ui-dc-topnav-item-link-firstword">API</span> GATEWAY</a><!-- replace href -->
					</li>
					<li class="soa-ui-dc-topnav-item ">
						<a href="/docs-test/ev/index.html" class="soa-ui-dc-topnav-item-link soa-ui-dc-icon soa-ui-dc-topnav-item-link-envision"><span style="padding-top: 7px;" class="soa-ui-dc-topnav-item-link-firstword">ENVISION</span></a><!-- replace href -->
					</li>
					<li class="soa-ui-dc-topnav-item ">
						<a href="/docs-test/lm/index.html" class="soa-ui-dc-topnav-item-link soa-ui-dc-icon soa-ui-dc-topnav-item-link-lifecyclemanager"><span class="soa-ui-dc-topnav-item-link-firstword">LIFECYCLE</span> MANAGER</a><!-- replace href -->
					</li>
				</ul>
				<!-- top nav ends here -->
			</div>
			<div class="soa-ui-dc-subnav-container">
				<!-- sub nav starts here -->
				<ul class="soa-ui-dc-subnav soa-ui-dc-clearthis">
					<li class="soa-ui-dc-subnav-item">
						<a href="/docs-test/cm/getting-started.html" class="soa-ui-dc-subnav-item-link soa-ui-dc-icon soa-ui-dc-icon-action-dark">Getting Started</a>
					</li>
					<li class="soa-ui-dc-subnav-item">
						<a href="/docs-test/cm/learning.html" class="soa-ui-dc-subnav-item-link soa-ui-dc-icon soa-ui-dc-icon-action-dark soa-ui-dc-subnav-item-link-active">Learning</a><!-- replace href -->
					</li>
					<li class="soa-ui-dc-subnav-item">
						<a href="/docs-test/cm/reference.html" class="soa-ui-dc-subnav-item-link soa-ui-dc-icon soa-ui-dc-icon-action-dark">Reference</a><!-- replace href -->
					</li>
				</ul>
				<!-- sub nav ends here -->
			</div>
		</div>

		<div class="soa-ui-dc-topsearch-container">
    <div class="soa-ui-dc-topsearch">
        <input type="text" class="soa-ui-dc-topsearch-input" id="my-search">
        <button class="soa-ui-dc-topsearch-button soa-ui-dc-icon-imgtxt soa-ui-dc-icon-magnifying-glass" type="button">
            Search
        </button>
    </div>
    <div id="soa-control-dc-search-results" class="soa-ui-dc-inline-search-div soa-ui-dc-icon" style="display: none;">
        <ul class="soa-ui-dc-buttons">
            <li>
                <button id="soa-control-dc-close-results" type="button" class="soa-ui-dc-icon-imgtxt soa-ui-dc-button soa-ui-dc-button-borderless soa-ui-dc-button-close">
                    Close
                </button>
            </li>
        </ul>
        <h3 class="soa-ui-dc-content-header">Search Results</h3>
        <div id="soa-control-dc-search-results-target"></div>
    </div>
</div>

<script type="text/javascript">

	var initGCS = function () {
		var renderGCSE = function () {
			google.search.cse.element.render(
				{
					div : "soa-control-dc-search-results-target",
					tag : 'searchresults-only',
					gname : 'soa-control-dc-search-results-target'
				});
		};

		var executeGCSE = function (query, element) {
			var gcsElement = google.search.cse.element.getElement('soa-control-dc-search-results-target');
			gcsElement.clearAllResults();
			gcsElement.execute(query);
		};

		$("#my-search").on("keyup", function (event) {
			if(event.keyCode == 13) {
				executeGCSE($(event.target).val(), 'soa-control-dc-search-results-target');
				$("#soa-control-dc-search-results").show();
				$('#soa-control-dc-overlay').addClass('soa-ui-dc-overlay-visible');
			}
		});

		$(".soa-ui-dc-topsearch-button").on('click', function () {
			executeGCSE($("#my-search").val(), 'soa-control-dc-search-results-target');
			$("#soa-control-dc-search-results").show();
			$('#soa-control-dc-overlay').addClass('soa-ui-dc-overlay-visible');
		});

		$("#soa-control-dc-close-results").on('click', function () {
			$("#soa-control-dc-search-results").hide();
			$('#soa-control-dc-overlay').removeClass('soa-ui-dc-overlay-visible');
		});

		$("#soa-control-dc-search-results").click(function (e) {
			e.stopPropagation();
		});

		$("body").click(function (e) {
			if(!$(e.target).hasClass("soa-ui-dc-topsearch-button")) {
				$('#soa-control-dc-search-results').hide();
				$('#soa-control-dc-overlay').removeClass('soa-ui-dc-overlay-visible');
			}
		});

		document.readyState == 'complete' ? renderGCSE() : google.setOnLoadCallback(function () {
			renderGCSE();
		}, true);
	};

	window.__gcse = {
		parsetags : 'explicit',
		callback : initGCS
	};

	(function () {
		var cx = '015728184064503700349:jpzy5nvltkm'; // Akana Account
		// var cx = '008490904345110132257:4iq41vh7or8'; // Demo Akana Account
		var gcse = document.createElement('script');
		gcse.type = 'text/javascript';
		gcse.async = true;
		gcse.src = 'https://cse.google.com/cse.js?cx=' + cx;
		var s = document.getElementsByTagName('script')[0];
		s.parentNode.insertBefore(gcse, s);
	})();

</script>
		
	</div>
</div>
		<div class="soa-ui-dc-container-main soa-ui-dc-clearthis">
			<!-- left nav -->
			<div class="soa-ui-dc-container-main-left nocontent">
				<h3 class="soa-ui-dc-container-main-left-header">
					
					<a href="/docs-test/cm/learning.html" class="soa-ui-dc-container-main-left-header-link">Learning</a>
								
				</h3>

			</div>
<!-- End left nav -->
			<div class="soa-ui-dc-container-main-content"><!-- main content starts here -->
				<div class="documentation supportContent">
					<h1 id="top">Lifecycle Coordinator Promotion Guide </h1>
<p>Provides information about how to use the Lifecycle Coordinator feature to manage promotion of assets, such as apps and APIs, from one environment to another. such as from Development to Testing.</p>
<h4 class="stamp">Valid in Version: 8.4.3 and later</h4>
<hr class="divide_hr" />



<h2 style="color: gray;">Table of Contents</h2>
<ol class="table_of_contents">
	<li><a href="#overview">Overview</a></li>
	<li><a href="#core_components">Core Components and Component Interaction</a></li>
	<li><a href="#topology_model">Topology Model</a>
		<ul>
			<li><a href="#s03_01">Topology</a></li>
			<li><a href="#s03_02">Tenants</a></li>
			<li><a href="#s03_03">Environments</a></li>
			<li><a href="#s03_04">Promotion Profiles</a></li>
			<li><a href="#s03_05">Asset Filters</a></li>
			<li><a href="#s03_06">Rules</a></li>
			<li><a href="#s03_07_00">Asset Model</a></li>
			</ul>
		</li>
	<li><a href="#lc_installation">Lifecycle Coordinator Installation</a></li>
	<li><a href="#topology_config">Topology Configuration</a>
		<ul>
			<li><a href="#s05_01">Tenants</a></li>
			<li><a href="#s05_02">Environments</a></li>
			<li><a href="#s05_03">Promotion Profiles</a></li>
			<li><a href="#s05_04">Rules</a></li>
			<li><a href="#s05_05">Filters</a></li>
			<li><a href="#s05_06">Organization Mapping</a> (8.4.13 and later)</li>
			<li><a href="#s05_approval_proc">Approval Processes</a> (2018.0.0 and later)</li>
			<li><a href="#s05_07">Policy Mapping</a> (8.4.16 and later)</li>
			<li><a href="#resource_mapping">Resource Mappings (Scope Mapping)</a> (2018.0.0 and later)</li>
			<li><a href="#mapping_visibility_api">API Visibility Mapping</a> (2019.1.0 and later)</li>
			<li><a href="#mapping_visibility_app">App Visibility Mapping</a> (2019.1.0 and later)</li>
			<li><a href="#asset_notification">Asset Notifications</a> (8.4.17 and later)</li>
			<li><a href="#properties_element">Properties</a> (8.4.17 and later)</li>
			</ul>
		</li>
	<li><a href="#dz_configurations">Deployment Zone Configurations</a>
		(8.4.12 and later)
		<ul>
			<li><a href="#s06_01">Using Filters with Deployment Zone Configurations</a></li>
			<li><a href="#s06_02">Default Endpoint Propagation</a></li>
			<li><a href="#s06_03">Using Rules with Deployment Zone Configurations</a></li>
			<li><a href="#s06_04">Duplicate Endpoints</a></li>
			</ul>
		</li>
	<li><a href="#s08_03_environment_config">Environment Configuration</a>
		<ul>
			<li><a href="#s08_04_api_impl_profiles">API Implementation Profiles</a></li>
			</ul>
		</li>
	<li><a href="#topology_api">Topology API</a>
		<ul>
			<li><a href="#topologyapi_01">Finding the Topology API Documentation</a></li>
			<li><a href="#topologyapi_02">Using the Topology API</a></li>
			</ul>
		</li>
	<li><a href="#lm_console">Lifecycle Manager Console</a>
		<ul>
			<li><a href="#s07_01">Logging In</a></li>
			<li><a href="#s07_02">Viewing Assets and Iterations</a></li>
			<li><a href="#s07_03">Promotion Requests</a></li>
			</ul>
		</li>
	<li><a href="#env_decoupled_00">Support for Decoupled Environments in a Topology</a>
		<ul>
			<li><a href="#env_decoupled_01">Updating Environment Context information</a></li>
			<li><a href="#env_decoupled_02">Promoting Assets</a></li>
			</ul>
		</li>
	<li><a href="#app_b_client_apps">"Client app" approach to supporting API to API contracts</a> (2018.0.0 and later)
		<ul>
			<li><a href="#app_b_promotion_support">Promotion Support</a></li>
		</ul>
		</li>
	<li><a href="#runtime_config">Defaulting API Settings using Runtime Configurations</a> (8.4.17 and later)</li>
	<li><a href="#s09_orchestrated">Appendix A: Promoting Orchestrated APIs</a>
		<ul>
			<li><a href="#s09_01_referenced_svcs">Referenced Services</a></li>
			</ul>
	</li>
	<li><a href="#app_c_tips">Appendix B: Promotion tips and best practices</a>
		<ul>
			<li><a href="#tip_seq_env">Make changes in earlier environment</a></li>
			<li><a href="#tip_seq_promote">Promotion sequence for app with API contract</a></li>
			</ul>
	</li>
</ol>
<hr class="divide_hr" />



<h2 id="overview">Overview</h2>
<p>Promotion is the process of propagating versions of a software asset, such as an API, through a series of environments that correspond to the stages of the asset's lifecycle. For example, an API might originate in a development environment, be promoted on to a QA test environment, and finally be promoted to the production environment. Each environment has its own data model that is controlled independently. The Lifecycle Coordinator is a separate configurable component that governs the promotion process and the transfer of data between environments.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="core_components">Core Components and Component Interaction</h2>
<p>The core components in the promotion process are as follows:</p>
<ul>
	<li><a href="#promotion_package">Promotion Package</a></li>
	<li><a href="#source_environment">Source Environment</a></li>
	<li><a href="#target_environment">Target Environment</a></li>
	<li><a href="#lifecycle_coordinator">Lifecycle Coordinator</a></li>
</ul>
<h3 id="promotion_package">Promotion Package</h3>
<p>The Promotion Package holds the data that needs to be promoted from the Source Environment to the Target Environment. The package contains two different artifacts:</p>
<ul>
	<li><strong>The environment data</strong>: The portion of the Source Environment's data model that needs to be promoted.</li>
	<li><strong>A manifest</strong>: Contains configuration details that can be manipulated by rules within the Coordinator before importing the package into the target environment.</li>
</ul>


<h3 id="source_environment">Source Environment</h3>
<p>The Source Environment is the data container that holds the original information that needs to be promoted to the Target Environment. The Source Environment can be managed by its own product instance or it can be managed as a single tenant in a multi-tenant product instance.</p>

<h3 id="target_environment">Target Environment</h3>
<p>The Target Environment is the data container that is the destination of the promoted data from the Source Environment. The Target Environment can be managed by its own product instance or it can be managed as a single tenant in a multi-tenant product instance.</p>

<h3 id="lifecycle_coordinator">Lifecycle Coordinator</h3>
<p>The Lifecycle Coordinator is the component that requests an extraction, or export, of a promotion package from a Source Environment and then initiates the population, or import, of the promotion package to a Target Environment.</p>
<p>The Coordinator processes the manifests contained in the Promotion Package and in the Target Environment's promotion response to maintain a model that reflects the relationship between objects in both environments. On subsequent promotions of the same objects from the Source Environment the Coordinator consults its model and generate a new manifest that will be delivered to the Target Environment.</p>
<p>The Lifecycle Coordinator is a separate component from the environments but can be co-deployed on the same instance.</p>

<h3>Component Interaction</h3>
<p><img src="images/promotion_01.jpg" alt="Component interaction" /></p>
<p>When promotion is requested from the Source Environment, the Lifecycle Coordinator exports a Promotion Package from that Environment and imports the package in the Target Environment.</p>
<p>The Lifecycle Coordinator persists its own model of objects and their relationships in all the environments it has performed promotions for. The Coordinator consults its model to see if the objects identified in the Promotion Package's manifest are already present. If the objects are not in the model, the Coordinator adds them. If the objects are in the model the Coordinator extracts the corresponding object IDs of the Target Environment and create a new manifest with the Target Environment's object IDs.</p>
<p>The Lifecycle Coordinator initiates an import of the Promotion Package in the Target Environment using an Import API. The Target Environment uses the manifest to identify the objects in its own data model that are in the Promotion Package; if objects already exist, a Modify action is performed. If the Promotion Package objects are new to the Target Environment an Add action is performed. The object IDs in the manifest are used in the Target Environment, not the object IDs found in the export content, which are still the IDs found in the Source Environment.</p>
<p>Upon completion of the Import API call a response is returned to the Lifecycle Coordinator. A manifest is included in that response that identifies the objects and relationships that were the result of the import in the Target Environment. The Lifecycle Coordinator processes this manifest and updates its own model for subsequent promotion calls.</p>
<p>The Lifecycle Coordinator can be deployed in a container separate from the API Platform(s) it governs promotions over. In this deployment, the interactions between the Lifecycle Coordinator and API Platform(s) are performed using RESTful interfaces. The Coordinator can promote between environments in the same system:</p>
<p><img src="images/promotion_02.jpg" alt="Environments in the same system" /></p>
<p>Or the Coordinator can promote between environments in separate systems.</p>
<p><img src="images/promotion_03.jpg" alt="Environments in different systems" /></p>
<p>The Lifecycle Coordinator can also be deployed in the same container as the API Platform. Whether multiple tenants are associated with Environments or just one tenant the deployment and interaction is the same. All interactions are performed using in-memory interfaces.</p>
<p><a href="#top">Back to top</a></p>




<h2 id="topology_model">Topology Model</h2>

<h3 id="s03_01">Topology</h3>
<p>A Topology defines a sequence of Environments and the specific behavior for promotion between these Environments.</p>
<p><img src="images/promotion_04.jpg" alt="Promotion behavior between environments" /></p>

<h3 id="s03_02">Tenants</h3>
<p>Tenants are defined at the top level of the Topology and represent a Community Manager (CM) tenant that may be local (within the same container) or remote from the Lifecycle Coordinator. Tenants are referenced by Environments via an id assigned to the tenant in its definition. While an Environment must reference a tenant, the same Tenant may be referenced by more than one Environment. Tenants contain information allowing the Lifecycle Coordinator to communicate with the associated CM Tenant, this includes the tenant's address, name and admin credentials.</p>
<p>A Tenant that is local may also indicate that it should be used to as an authentication source for users approving promotion requests with the Lifecycle Coordinator.</p>

<h3 id="s03_03">Environments</h3>
<p>An Environment represents a logical container to which an asset is deployed at a specific stage of its lifecycle. An Environment must specify the Tenant that supports it.</p>
<p>Environments also define the possible transitions to the next Environment in the form of <a href="../learnmore/basics_glossary.htm#gl_promotion_profile">Promotion Profiles</a>. At this time, only a single target Environment can be specified in the promotion chain (Environment fan-out is not currently supported).</p>

<h3 id="s03_04">Promotion Profiles</h3>
<p>Promotion Profiles represent a transition to the next (<strong>target</strong>) Environment. A promotionProfile specifies a target Environment and optionally a set of Rules to be applied to the manifest of the promotion package of the asset prior to promotion into the target Environment. A promotionProfile might also, optionally, specify an Asset Filter. This allows multiple promotionProfiles to be defined within an Environment with mutually exclusive filters, each with a different rule set. When promotion of an asset is requested from a source Environment, and more than one promotionProfile exists, the promotionProfile with an Asset Filter that the asset complies with is used. In the case where only one promotionProfile exists (with no Asset Filter specified), that promotionProfile is automatically selected for the promotion.</p>


<h3 id="s03_05">Asset Filters</h3>
<p>Asset Filters contain a set of criteria for the custom properties of the assets being promoted. For example, an API asset may use a custom property indicating that it is PCI compliant. An Asset Filter can define criteria for that property such that only API assets that are PCI compliant will match the filter. This Asset Filter can then be assigned to a Promotion Profile such that a different set of Rules are applied to PCI-compliant and non-compliant API assets.</p>
<p class="apidoc_note"><strong>Note</strong>: the use of Asset Filters requires custom properties to be enabled for the tenants involved in the promotion.</p>


<h3 id="s03_06">Rules</h3>
<p>A Promotion Profile can optionally contain a set of rules to guide the need for changes in relationships and properties when assets are promoted. A rule consists of a condition and a behavior. The rule is provided a context when evaluated made up of an asset's properties. The condition of the rule is a Boolean expression evaluated against that context. The behavior of the rule is an expression that alters that context. The expression language used by the rule engine is JEXL. A set of syntax examples can be found at <a href="https://commons.apache.org/proper/commons-jexl/reference/syntax.html" title="https://commons.apache.org/proper/commons-jexl/reference/syntax.html" target="_blank">https://commons.apache.org/proper/commons-jexl/reference/syntax.html</a>. Each asset in a promotion package is run through the rule engine. If any asset meets the condition of the rule, the behavior is performed against it. Some examples of rules are below.</p
>
<table cellspacing="0px" class="doctable" style="width: 98%;">
	<thead>
		<tr>
			<th width="33%">Condition</th>
			<th width="33%">Behavior</th>
			<th width="33%">Description</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>vsep.containerKey = "ND1"</td>
			<td>vsep.containerKey = "ND2"</td>
			<td>Changes hosting relationship from ND1 to ND2</td>
		</tr>
		<tr>
			<td>apiversion.implType = "Sandbox"</td>
			<td>vsep.containerKey = "ND2"</td>
			<td>Changes hosting relationship for sandbox implementations</td>
		</tr>
		<tr>
			<td>vsep.containerKey = "ND1" &amp;&amp; vsep.listenerName = "http"</td>
			<td>vsep.containerKey = "ND2";
vsep.listenerName = "https"</td>
			<td>Changes both the container and listener</td>
		</tr>
		<tr>
			<td>psep.url.startsWith("http://oldhost")</td>
			<td>psep.url.replace("http://oldhost", "http://newhost")</td>
			<td>Changes the host of a target endpoint</td>
		</tr>
		<tr>
			<td>apiversion.tags.contains("secret")</td>
			<td>apiversion.tags.add("probation")</td>
			<td>Adds a tag based on the presence of another.</td>
		</tr>
		<tr>
			<td>classifier:internal = "true"</td>
			<td>vsep.containerKey = "ND3"</td>
			<td>Sets container based on the value of a custom classifier</td>
		</tr>
	</tbody>
</table>

<h3 id="s03_07_00">Asset Model</h3>
<p>The Lifecycle Coordinator component is an extension of the Lifecycle Repository core functionality. As such, it uses an internal asset model to represent the topology and the assets promoted through the topology. Within the Lifecycle Coordinator, promotion requests result in the submission of an asset into the target environment, allowing for customized governance to be defined for this process.</p>
<p>In this section:</p>
<ul>
	<li><a href="#s03_07_01">Topology Asset Model</a></li>
	<li><a href="#s03_07_02">Promotable Asset Model</a></li>
	<li><a href="#s03_07_03">OrgGroup Assignment</a></li>
</ul>

<h4 id="s03_07_01">Topology Asset Model</h4>
<p>The topology asset model reflects the conceptual topology model defined earlier in this document with asset types for Environment, Tenant and Promotion Profile. The following diagram shows the asset structure for a Topology with three Environments (each box representing an asset):</p>
<p><img src="images/promotion_05.jpg" alt="Topology asset model, three environments" /></p>
<p>In addition to the relationships shown, Tenant assets contain connection information and credentials as classifiers while Promotion Profile assets hold Rules as a JSON artifact. Asset Filters are managed implicitly and optionally referenced by Promotion Profile assets.</p>


<h4 id="s03_07_02">Promotable Asset Model</h4>
<p>Promotable assets such as APIs are represented by specific asset-types. These asset types reference an Environment asset and contain <strong>Iteration</strong> assets representing each promotion of that asset. Note that there is a difference between <strong>versions</strong> of assets such as APIs and <strong>iterations</strong>: a single version of an API may be promoted multiple times, resulting in multiple iterations of that version. In the following asset diagram, the asset <strong>AnAPI (v1)</strong> has been promoted from development to integration test and then to production environments once, followed by another promotion from development to integration test. This resulted in two iterations in the development and integration test environments with a single iteration at production. Notice that the iteration at production indicates that its source iteration is iteration 1 in integration test, even though there is a newer iteration (iteration 2) in that environment.</p>
<p><img src="images/promotion_06.jpg" alt="Promotable asset model" /></p>
<p>Iterations contain several items:</p>
<ul>
	<li>A timestamp indicating when the promotion took place</li>
	<li>The user that requested the promotion</li>
	<li>The status of the promotion. Values for the status are:
		<ul>
			<li><strong>Promotion Pending</strong>: Promotion has been requested but has not been completed. It may be pending one or more approvals.
			<p><strong>Note</strong>: In the case where an approval process is in place and a promotion request is rejected, the Iteration will remain in a Promotion Pending state. However, the API platform UI will show it as <strong>Promotion Rejected</strong>, allowing promotion to be requested again.</p></li>
			<li><strong>Promoted</strong>: Promotion has completed.</li>
			<li><strong>Promotion Failed</strong>: There was a failure in the promotion process. Promotion can be requested again for assets in this state. The next promotion attempt will replace the failed iteration.</li>
		</ul>
			<p><strong>Note</strong>: The API Platform UI also indicates a <strong>Not Promoted</strong> state. This corresponds to an asset not yet existing in the target environment. Such assets will not be present in Lifecycle Coordinator.</p>
	</li>
	<li>The promotion package that was imported into the target environment is held as an artifact called archive.zip.</li>
	<li>In the case of a promotion failure the iteration includes a short summary of the exception causing the failure.</li>
	<li>A relationship to the source iteration in the source environment</li>
	<li>A relationship to the previous iteration (if one exists) in the target environment</li>
	<li>A relationship to the Promotion Profile selected for promotion of the asset.</li>
</ul>

<h4 id="s03_07_03">OrgGroup Assignment</h4>
<p><strong>API Platform Version: 8.4.13 and later</strong></p>
<p>When promotion is requested for an asset such as an API, the asset is assigned an owning OrgGroup within Lifecycle Coordinator. These OrgGroups correspond to the asset's Organization in the corresponding API Platform environment. This approach allows promotion approvers to be assigned at an organizational level within the Lifecycle Coordinator topology.</p>
<span class="apidoc_note"><strong>Note</strong>: OrgGroups are synchronized with the tenant Organization when a topology is created or updated. If an asset is promoted with an Organization for which there is no corresponding OrgGroup, Lifecycle Coordinator synchronizes the Organizations for the corresponding tenant in an attempt to resolve the missing OrgGroup.</span>
<p><a href="#top">Back to top</a></p>




<h2 id="lc_installation">Lifecycle Coordinator Installation</h2>
<p>For installation information, refer to <a href="../../sp/install_lc/install_promotion.htm">Lifecycle Coordinator Installation</a>.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="topology_config">Topology Configuration</h2>
<p>The Lifecycle Coordinator feature provides a REST API for maintaining topologies. This allows topologies to be defined in JSON structure. The following example shows the definition of a topology consisting of two environments supported by two local tenants. Because these are local tenants, the <strong>address</strong> attribute is not included.</p>
<pre>{
  "name":"Topology1",
  "tenants":[
    {
      "name":"DevelopmentTenant",
      "id":"tenant1",
      "credentials":{
        "email":" administrator1@example.com ",
        "password":"password1"
      }
    },
    {
      "name":"ProductionTenant",
      "id":"tenant2",
      "userAuthenticationSource":true,
      "credentials":{
        "email":"administrator2@example.com",
        "password":"password2"
      }
    }
  ],
  "environments":[
    {
      "name":"development",
      "displayName":"Development",
      "description":"Development environment",
      "tenant":"DevelopmentTenant",
      "promotionProfiles":[
        {
          "name":"Default Production Promotion",
          "description":"Dev to production default profile",
          "targetEnvironment":"production"
        }
      ]
    },
    {
      "name":"production",
      "displayName":"Production",
      "description":"Production environment",
      "tenant":"ProductionTenant"
    }
  ]
}</pre>
<p>For additional sample topologies, see <a href="promotion_samples.htm">Lifecycle Coordinator Promotion: Sample Topologies</a>.</p>



<h3 id="s05_01">Tenants</h3>
<p>This section includes:</p>
<ul>
	<li><a href="#s05_01_tenantdefinitions">Tenant Definitions</a></li>
	<li><a href="#s05_01_tenantnames">Tenant Names</a></li>
	<li><a href="#s05_01_delegatedauth">Delegated Authentication</a></li>
	<li><a href="#s05_01_tenantproperties">Tenant Properties</a> (8.4.18 and later)</li>
	<li><a href="#s05_01_tenant_ldap_domain">Configuring a tenant to support LDAP login</a> (2019.1.5 and later)</li>
</ul>


<h4 id="s05_01_tenantdefinitions">Tenant Definitions</h4>
<p>Tenant definitions in the topology provide the Lifecycle Coordinator the necessary information to communicate with the specified tenant. Tenants can be either local (on the same container as the Lifecycle Coordinator) or remote. When defining a tenant:</p>
<ul>
	<li><strong>Local</strong> tenant: Specify the tenantId in the <strong>id</strong> property, as in the topology example above.</li>
	<li><strong>Remote</strong> tenant: In addition to the tenantId in the <strong>id</strong> property as above, specify the address of the tenant in the <strong>address</strong> field.</li>
</ul>
<p>The example below shows both values:</p>
<pre>{
  "name":"ProductionTenant",
  "id":"tenant2",
  "address":"http://myProductionTenant:9900",
  "credentials":{
    "email":"administrator2@example.com",
    "password":"password2"
  }
}</pre>
<p class="apidoc_note"><strong>Note</strong>: The address value is unique to the tenant. It corresponds to the value specified for the <strong>address</strong> parameter when the tenant was created.</p>


<h4 id="s05_01_tenantnames">Tenant Names</h4>
<p>Tenants require a <strong>name</strong> property which is used to identify the tenant by environments within the topology. This name must be unique within the topology, but need not correspond to the actual tenant name.</p>


<h4 id="s05_01_delegatedauth">Delegated Authentication</h4>
<p>In the promotion profile, you can indicate that authentication for the underlying Lifecycle Repository library is delegated to a specified tenant. This means that users of the specified tenant can log in to the topology library using their email and password for that tenant.</p>
<p>There are two ways you can do this:</p>
<ol>
	<li>By using the <strong>userAuthenticationSource</strong> property.
		<p>You can set the Boolean <strong>userAuthenticationSource</strong> property within a Tenant definition to indicate that the tenant will be used for authentication.</p>
<p>Only one tenant can have the <strong>userAuthenticationSource</strong> property set to <strong>true</strong>, and that tenant must be local to the Lifecycle Coordinator. This delegates user definition and authentication to the specified local tenant (a tenant in the same container that Lifecycle Coordinator is deployed in).</p>
<p>An example is shown below.</p>
<pre>{ 
  &quot;name&quot;:&quot;DevelopmentTenant&quot;,
  &quot;id&quot;:&quot;tenant1&quot;,
  &quot;credentials&quot;:{ 
    &quot;email&quot;:&quot;administrator1@roch.soa.local&quot;,
    &quot;password&quot;:&quot;password1&quot;
  },
  &quot;userAuthenticationSource&quot;:true
},</pre>
</li>
	<li>By setting a tenant ID using the topology-scoped <strong>authentication-tenant-id</strong> property. (2018.0.0 and later)
	<p>In version 2018.0.0, Lifecycle Coordinator relies on the Akana API Platform for user authentication. Since Lifecycle Coordinator is often deployed separately from tenants in the topology, it might be necessary to delegate authentication and user management to a local tenant that is not in the topology.</p>
	<p>A tenant specified with the <strong>authentication-tenant-id</strong> property must be local, but doesn't need to be part of the topology.</p>
	<p>An example is shown below.</p>
	<pre>{
  "name": "Topology1",
  "properties": [
    {"name":"authentication-tenant-id","value":"authtenant"}
  ],
...</pre>
	</li>
</ol>
<p>If neither of these approaches is used to specify the authentication tenant, the authentication tenant ID defaults to <strong>lifecycle_coordinator</strong>.</p>


<h4 id="s05_01_tenantproperties">Tenant Properties (8.4.18 and later)</h4>
<p>Tenant definitions can contain optional properties, as shown in the example below.</p>
<pre>{
  "name":"ProductionTenant",
  "id":"tenant2",
  "address":"http://myProductionTenant:9900",
  "credentials":{
    "email":"administrator2@example.com",
    "password":"password2"
  },
  "properties":[
    {
      "name":"virtual-address",
      "value":"http://myCompany:9950"
    }
  ]
}</pre>
<p>The optional properties available for a tenant are:</p>
<ul>
	<li><strong>virtual-address</strong>: This property can be used when the URL used to access a remote tenant is different from the tenant's address attribute. For example, this property would be used if the tenant is fronted by a load balancer. If the <strong>virtual-address</strong> property is provided, the URL set in the value of this property is used for all communications with the tenant.</li>
</ul>


<h4 id="s05_01_tenant_ldap_domain">Configuring a tenant to support LDAP login (2019.1.5 and later)</h4>
<p>In versions prior to 2019.1.5, Lifecycle Coordinator only supported logging in to a developer portal tenant via the Local Domain.</p>
<p>In the tenant definition, the credentials are defined as <strong>email</strong> and <strong>password</strong> property values, as shown in the example below.</p>
<pre>"credentials":{
  "email":"administrator2@example.com",
  "password":"password2"
}</pre>
<p>In 2019.1.5 and later, you can configure Lifecycle Coordinator to support logging in via LDAP&nbsp;instead of the local domain.</p>
<p>To allow Lifecycle Coordinator to log in to the developer portal via LDAP, include the <strong>ldapDomain</strong> property in the tenant definition, at the same level as the <strong>credentials</strong> property. The value of the <strong>ldapDomain</strong> property must match the domain name configured in Policy Manager.</p>
<p>Example tenant definition using the <strong>ldapDomain</strong> property and <strong>user</strong> and <strong>password</strong> credentials:</p>
<pre>"tenants":[
  {
    "id": "tenant2",
    "name": "ProductionTenant",
    "address": "http://open.acmepaymentscorp.com:9910",
    "local": false,
    "consoleAddress": "http://open.acmepaymentscorp.com:9910/atmosphere",
    "ldapDomain": "acmepaymentscorp",
    "credentials": {
      "user": "my_username",
      "password": "my_secure_password"
    },
    "userAuthenticationSource": false
  }</pre>
<p><a href="#top">Back to top</a></p>



<h3 id="s05_02">Environments</h3>
<p>Environments reference a corresponding tenant and hold one or more promotionProfiles representing transitions to other environments.</p>


<h4>Environment Names</h4>
<p>The <strong>name</strong> property for an environment must be unique within the topology and should not be changed once defined. This is because this name is used as a key for mapping information between environments stored by the Lifecycle Coordinator. Given the invariability of the environment name, a <strong>displayName</strong> property is also supported. The display name is what appears to users in the API Platform UI and may be changed without affecting mapping information.</p>

<h3 id="s05_03">Promotion Profiles</h3>
<p>Promotion Profiles are defined within the <strong>promotionProfiles</strong> property of an Environment. The <strong>targetEnvironment</strong> property of a PromotionProfile must correspond to the <strong>name</strong> of another Environment in the Topology.</p>
<p>A PromotionProfile can optionally specify one or more filters by specifying filter names within the <strong>filterNames</strong> array property.</p>
<p>Rule definitions might optionally be provided using the <strong>rules</strong> array property.</p>
<p class="apidoc_note"><strong>Note</strong>: A PromotionProfile cannot create a cycle between Environments.</p>


<h3 id="s05_04">Rules</h3>
<p>Rules are defined inline within the <strong>rules</strong> array property of a PromotionProfile. Each Rule consists of a <strong>scope</strong> property indicating the property in the archive manifest it applies to, an optional <strong>condition</strong> property indicating the conditions for which the Rule applies and a required <strong>action</strong> property indicating the action to perform on the manifest property.</p>
<p>Examples in this section:</p>
<ul>
	<li><a href="#s05_04_01">Rule example #1</a>: changes the hostname for the physical service endpoint.</li>
	<li><a href="#s05_04_02">Rule example #2</a>: changes the name of the OAuth provider for a promoted API in the target environment.</li>
</ul>
<h4 id="s05_04_01">Rule example #1</h4>
<p>In this example, the rule changes the host name of the physical service endpoint (<strong>psep</strong>) for an API:</p>
<pre>{
  "scope":"psep",
  "condition":"psep.url.indexOf(\"foo.com\") > 0",
  "action":"psep.url = psep.url.replace(\"foo.com\",\"bar.com\")"
}</pre>
<p>Note the use of '\' to escape the double quotes in the condition and action.</p>

<h4 id="s05_04_02">Rule example #2</h4>
<p>The example below changes the name of the OAuth provider for a promoted API in the target environment.</p>
<p><strong>Note</strong>: Only use this rule if the configuration of the source and target OAuth Providers is identical, including scope definition. If the configuration is not identical, using this rule might cause promotion errors.</p>
<pre>{
  "scope" : "vs",
  "condition" : "vs.oauthProvider == 'SourceProvider'",
  "action" : "vs.oauthProvider = 'TargetProvider'"
}</pre>


<h3 id="s05_05">Filters</h3>
<p>The <strong>filters</strong> property of a Topology allows asset filters to be defined for use in PromotionProfile selection. Filters contain criteria which apply to the classifiers associated with an asset.</p>
<p>Filters correspond to the <strong>custom properties</strong> for an API in the API Platform UI.</p>
<p>The following example defines filters used to differentiate between APIs that are PCI compliant and those that are not based on a <strong>pci-compliant</strong> classifier:</p>
<pre>[
  {
    "name":"PCI Compliant",
    "classifier-criteria":[
      {
        "classifier-name":"pci-compliant",
        "values":[
          {
            "value":"true"
          }
        ]
      }
    ]
  },
  {
    "name":"PCI Non-Compliant",
    "classifier-criteria":[
      {
        "classifier-name":"pci-compliant",
        "values":[
          {
            "value":"false"
          }
        ]
      }
    ]
  }
]
</pre>
<p>With these filters defined, different transition paths between source and target Environments can be defined as in the following example <strong>promotionProfiles</strong> property for an Environment:</p>
<pre>{
  "promotionProfiles":[
    {
      "name":"PCI Production Promotion",
      "targetEnvironment":"Production",
      "filterNames":[
        "PCI Compliant"
      ],
      "rules":[
        {
          "scope":"vsep",
          "action":"vsep.containerKey = '{pci-container-key}' "
        }
      ]
    },
    {
      "name":"Non-PCI Production Promotion",
      "targetEnvironment":"Production",
      "filterNames":[
        "PCI Non-Compliant"
      ],
      "rules":[
        {
          "scope":"vsep",
          "action":"vsep.containerKey = '{standard-container-key}' "
        }
      ]
    }
  ]
}</pre>
<p><a href="#top">Back to top</a></p>


<h3 id="s05_approval_proc">Approval Processes</h3>
<p><strong>API Platform Version: 2018.0.0 and later</strong></p>
<p>Simple approval processes involving one or two approver roles can be defined within a PromotionProfile using the <strong>approvalProcesses</strong> property to call out (in order) the approval roles for the promotion to the target environment. For example, the following PromotionProfile definition for transition to the production environment requires approval from a user with the <strong>Architect</strong> role, followed by approval from a user with the <strong>Promotion Manager</strong> role.</p>
<pre>{
  "name": "Default Production Promotion",
  "targetEnvironment": "production",
  "approvalProcesses": [
    {
      "type": "api",
      "approvals": [
        "Architect",
        "Promotion Manager"
      ]
    }
  ]
}</pre>
<p>The specification of roles in the approvals property causes the specified roles to be implicitly created in the topology library, where users can then be assigned to the roles.</p>
<p>This declarative approach to approval definition is intended to address simple approval processes that do not required property-based filtering, require more than two approval roles, or require special pre- or post-processing tasks. To define advanced approval processes such as this, use Configuration Designer.</p>
<p>Note that if any PromotionProfile in the topology definition defines an approvalProcess, Lifecycle Coordinator assumes that it is managing all submission processes and custom roles for the underlying library and overwrites any customization of those processes or manually defined roles. If the PromotionProfile includes advanced process configuration, do not include approvalProcesses in the topology definition.</p>
<p><a href="#top">Back to top</a></p>


<h3 id="s05_06">Organization Mapping</h3>
<p><strong>API Platform Version: 8.4.13 and later</strong></p>
<p>Lifecycle Coordinator attempts to assign APIs in the target environment tenant to an Organization matching the name of the Organization in the source environment tenant. If it doesn't find an Organization of the same name, it assigns the API to the tenant Organization.</p>
<p>Within a promotion profile, you can define a rule to create a mapping of Organizations when promoting to the target environment. To do this, define a rule that modifies the <strong>api.orgName</strong> property.</p>
<p>For example, you could add the following rule to the rules of a PromotionProfile to map APIs from the source Organization <strong>GroupA</strong> to the target Organization <strong>GroupB</strong>.</p>
<pre>{
  "scope":"api",
  "condition":"api.orgName == 'GroupA'",
  "action":"api.orgName = 'GroupB'"
}</pre>



<h3 id="s05_07">Policy Mapping</h3>
<p><strong>API Platform Version: 8.4.16 and later</strong></p>
<p>A Promotion Profile can optionally contain a set of PolicyMappings that you can use to tailor the propagation and validation of policy references when an API is promoted to the target environment. You can use PolicyMappings to:</p>
<ul>
	<li>Map a policy reference in the source environment to a policy in the target environment.</li>
	<li>Remove a policy reference altogether when an API is promoted.</li>
</ul>
<p>A PolicyMapping has one of these two properties:</p>
<ul>
	<li><strong>sourcePolicy</strong>&#8212;Used to identify a specific policy in the source environment by either name or unique id.</li>
	<li><strong>sourcePolicyFilter</strong>&#8212;Used to specify a group of policies by type or subtype.</li>
</ul>
<p>Additionally, a PolicyMapping can specify a <strong>targetPolicy</strong> in the target environment either by name or unique id.	If a PolicyMapping does not specify a <strong>targetPolicy</strong> property, references to policies matching the <strong>sourcePolicy</strong> or <strong>sourcePolicyFilter</strong> property are ignored when an API is propagated to the next environment.</p>
<p>The following PromotionProfile shows an example of a PolicyMapping that maps references to the DetailedAuditPolicy in the source environment to the BasicAuditPolicy in the target environment:</p>
<pre>{
  "name": "Default Production Promotion",
  "description": "Dev to production default profile",
  "targetEnvironment": "production",
  "rules": [],
  "policyMappings": [
    {
      "sourcePolicy": {
        "policyName": "DetailedAuditing"
      },
      "targetPolicy": {
        "policyName": "BasicAuditing"
      }
    }
  ]
}</pre>

<p>In this example, the PolicyMapping uses the unique ids of the source and target policies:</p>
<pre>{
  "sourcePolicy": {
    "policyId": "urn:uuid:852afbc5-101e-11e8-887b-abe2ebb3db33"
  },
  "targetPolicy": {
    "policyId": "urn:uuid:763b7ca5-304f-16e8-457b-c542e456db33"
  }
}</pre>
<p>You can accomplish a  one-to-many mapping of policies using a policy filter:</p>
<pre>{
  "sourcePolicyFilter": {
    "policyType": "Operational Policy",
    "policySubtype" : "policy.auditservice"
  },
  "targetPolicy": {
    "policyName": "BasicAuditing"
    }
}</pre>
<p>A specific policy is disabled on promotion by omitting the targetPolicy property in the PolicyMapping:</p>
<pre>{
  "sourcePolicy": {
    "policyName": " DetailedAuditing "
  }
}</pre>

<h4>Default Mappings</h4>
<p>Policies that are available by default within a tenant, such as DetailedAuditing, BasicAuditing, and CORSAllowAll, are implicitly mapped to the corresponding default policies in the target tenant and do not need an explicit PolicyMapping. You can think of this default mapping as being of the form:</p>
<pre>{
  "sourcePolicy": {
    "policyId": "&lt;source tenant id&gt;-&lt;policy name&gt;"
  },
  "targetPolicy": {
    "policyId": "&lt;target tenant id&gt;-&lt;policy name&gt;"
  }
}
</pre>

<h4 id="s05_07_03">Tenant name change: original-tenant-name property</h4>
<p>Default policy mappings are determined based on the tenant name. If the name of a tenant was changed since its original creation (in the Developer Portal, <strong>Admin</strong> > <strong>Site</strong>), it's important to include the original tenant name in the tenant definition in the topology, using the <strong>original-tenant-name</strong> property. An example is shown below.</p>
<pre>{ 
  "id": "devtenant", 
  "name": "DevelopmentTenant", 
  "address": "http://devacmepaymentscorptenant:9457", 
  "properties": [ 
    { 
      "name": "original-tenant-name", 
      "value": "Tenant1" 
    } 
  ], 
  ... 
}</pre>


<h4>Policy Validation</h4>
<p>When an API is promoted, policy references must do one of the following:</p>
<ul>
	<li>Reference a default policy, such as DetailedAuditing</li>
	<li>Match the unique ID of an existing policy in the target environment</li>
	<li>Match a PolicyMapping defined for the selected PromotionProfile </li>
</ul>
<p>If none of the above criteria are met, a validation error is returned to the promoting user and the promotion is aborted.</p>
<p><a href="#top">Back to top</a></p>


<h3 id="resource_mapping">Resource Mappings (Scope Mapping)</h3>
<p><strong>API Platform Version: 2018.0.0 and later</strong></p>
<p>A PromotionProfile can, optionally, include a set of ResourceMappings that can be used to tailor the propagation and validation of resource references representing the <strong>scopes</strong> assigned to an API and its operations as the API is promoted to the target environment.</p>
<p>A ResourceMapping consists of a <strong>sourceResource</strong> and a <strong>targetResource</strong> property, each specifying either the name or ID of a resource in the respective environment. The following PromotionProfile shows an example of a ResourceMapping that maps a resource (scope) by name.</p>
<pre>{
  "name": "Default Production Promotion",
  "description": "Dev to production default profile",
  "targetEnvironment": "production",
  "resourceMappings": [
    {
      "sourceResource": {"resourceName" : "DevScope1"},
      "targetResource": {"resourceName" : "ProdScope1"}
    }
  ]
}</pre>
<p>Resource mapping can also be done with unique IDs. In the example below, the ResourceMapping uses the unique IDs of the source and target resources.</p>
<pre>{
  " sourceResource ":{
    "resourceId":"aa6d2ae0-299d-47d1-a899-f7e6be1b781a.tenant1"
  },
  " targetResource ":{
    "resourceId":"3456bae0-299d-47d1-7799-f7e6be1b221a.tenant2"
  }
}</pre>

<h4 id="resource_mapping_default">Default Mapping</h4>
<p>By default, Lifecycle Coordinator maps resources (scopes) based on matching names. This means that references from an API to a scope in the source environment will be mapped to a scope of the same name (if it exists) in the target environment regardless of the IDs of the scopes. You can change this default behavior by setting the <strong>match-resources-by-name</strong> property on the PromotionProfile to <strong>false</strong> as shown below.</p>
<pre>{
  "name": "Default Production Promotion",
  "description": "Dev to production default profile",
  "targetEnvironment": "production",
  "properties": [
    {"name": "match-resources-by-name","value": "false"}
  ]
}</pre>

<h4 id="resource_validation">Resource Validation</h4>
<p>By default, if a resource referenced by an API or its operations does not match a resource in the target environment (either by ID, by resource mapping, or by default name matching behavior), promotion of the API will proceed without error with the resource reference removed from the promoted API.</p>
<p>You can change this behavior by setting the <strong>validate-api-resources</strong> property on the PromotionProfile to <strong>true</strong>, as shown in the example below.</p>
<pre>{
  "name": "Default Production Promotion",
  "description": "Dev to production default profile",
  "targetEnvironment": "production",
  "properties": [
    {"name": "validate-api-resources","value": "true"}
  ]
}</pre>
<p>With the <strong>validate-api-resources</strong> property set to <strong>true</strong>, promotion of an API with an unmatched resource reference will be aborted. A validation error is displayed to the user attempting to promote the resource.</p>


<h3 id="mapping_visibility_api">API Visibility Mapping</h3>
<p><strong>API Platform Version: 2019.1.0 and later</strong></p>
<p>A PromotionProfile can include a set of ResourceMappings that can be used to tailor the visibility of an API version when the API is promoted to the target environment.</p>
<p>For example, in the source tenant the API version visibility might be set to Public, but you might want to set it to Private in the target tenant. You could accomplish that with the rule shown below.</p>
<pre>"rules":[
  {
    "scope":"apiVersion",
    "condition":"apiVersion.visibility == 'Public'",
    "action":"apiVersion.visibility = 'Private'"
  }
]</pre>






<h3 id="mapping_visibility_app">App Visibility Mapping</h3>
<p><strong>API Platform Version: 2019.1.0 and later</strong></p>
<p>A PromotionProfile can include a set of ResourceMappings that can be used to tailor the visibility of an app version when the app is promoted to the target environment.</p>
<p>For example, in the source tenant the app version visibility might be set to Registered Users, but you might want to set it to Private in the target tenant. You could accomplish that with the rule shown below.</p>
<pre>"rules":[
  {
    "scope":"appVersion",
    "condition":"appVersion.visibility == 'Registered Users'",
    "action":"appVersion.visibility = 'Private'"
  }
]</pre>


<h3 id="asset_notification">Asset Notifications</h3>
<p><strong>API Platform Version: 8.4.17 and later</strong></p>
<p>A PromotionProfile can optionally specify updates to be made to instances of an API, within environments of a topology, on completion of a successful promotion. These updates are implemented as changes to the values of custom properties on the API within a specified environment.</p>
<p>For example, let's assume a topology consisting of three environments: <strong>Development</strong>, <strong>Test</strong>, and <strong>Production</strong>. The goal is to mark the instances of an API in the Development and Test environments as <strong>in production</strong> once the API is successfully promoted to the Production environment.</p>
<p>Steps:</p>
<ol>
	<li>The Development and Test tenants could be configured to support an <strong>in-production</strong> Boolean custom property.</li>
	<li>Then, the PromotionProfile representing the promotion from Test to Production would specify the property to update, the value to set the property to, and the environments in which the property is to be set.</li>
</ol>
<p>This is shown in the following PromotionProfile declaration:</p>
<pre>{
  "name":"Default Production Promotion",
  "targetEnvironment":"production",
  "assetNotifications":[
    {
      "propertyName":"in-production",
      "propertyValue":"true",
      "environments":[
        "development",
        "test"
      ]
    }
  ]
}</pre>
<p>This feature relies on custom properties having been enable for the notified tenants, and on the specified property existing on the target API.</p>


<h3 id="properties_element">Properties</h3>
<p><strong>API Platform Version: 8.4.17 and later</strong></p>
<p>A PromotionProfile can optionally specify properties to further refine export/import behavior. These are defined in an optional <strong>properties</strong> element, as shown in the examples below.</p>
<p>You can set the following properties on a PromotionProfile:</p>
<ul>
	<li><a href="#props_export_pki">export-pki</a></li>
	<li><a href="#props_match_policies_by_name">match-policies-by-name</a></li>
	<li><a href="#props_preserve_outbound_identities">preserve-outbound-identities</a> (2019.1.0 and later)</li>
	<li><a href="#props_preserve_shared_secret">preserve-shared-secret</a> (2019.1.2 and later)</li>
	<li><a href="#props_disable_consumer_app_check">disable-consumer-app-check</a> (2019.1.2 and later)</li>
</ul>
<p>For examples, see <a href="#props_examples">Properties: examples</a>.</p>

<h4 id="props_export_pki">export-pki</h4>
<p>This option indicates that the PKI keys and certificate for an API will be included in the promotion if they exist. Note that if the target environment for a promotion is on a different container from the source environment, the API's certificate or an ancestor in the chain must be trusted by the target container's certificate authority, or it will be ignored when importing the API.</p>
<p>A value of <strong>true</strong> indicates that PKI keys and certificate should be promoted.</p>
<p>Default: <strong>false</strong>.</p>

<h4 id="props_match_policies_by_name">match-policies-by-name</h4>
<p>Adding this property, with a value of <strong>true</strong>, indicates that custom policies in the source and target environments are to be implicitly mapped by policy name (regardless of their unique keys).</p>
<p>For example, without this property present, an API referencing a policy named <strong>MyCustomAuditingPolicy</strong> in the source environment will fail validation even if there is a policy with the same name in the target environment, unless there is a policy mapping explicitly defined between the policies. With the property set to <strong>true</strong>, the API will pass validation and will be assigned the policy with the same name in the target environment.</p>
<p>Default: <strong>false</strong>.</p>

<h4 id="props_preserve_outbound_identities">preserve-outbound-identities</h4>
<p><strong>API Platform Version: 2019.1.0 and later</strong></p>
<p>Adding this property, with a value of <strong>true</strong>, indicates that the outbound identities of an existing service are not changed as a result of the promotion process.</p>
<p>For example, without this property present, the target API identity mapping is overwritten with the values set in the source API. With the property set to <strong>true</strong>, the identities in the target API are not affected by promoting the API. The original values are preserved in the target API.</p>
<p>Default: <strong>false</strong>.</p>

<h4 id="props_preserve_shared_secret">preserve-shared-secret</h4>
<p><strong>API Platform Version: 2019.1.2 and later</strong></p>
<p>Adding this property, with a value of <strong>true</strong>, indicates that the shared secret of an existing app in the target environment, is not changed as a result of the promotion process.</p>
<p>Without this property present, the app shared secret value in the target environment is overwritten with the app shared secret value from the source environment. With this property set to <strong>true</strong>, the shared secret value in the target app is not affected by promoting the app. The original value is preserved in the target app.</p>
<p>Default: <strong>false</strong>.</p>

<h4 id="props_disable_consumer_app_check">disable-consumer-app-check</h4>
<p><strong>API Platform Version: 2019.1.2 and later</strong></p>
<p>In some scenarios, you might want to set up your platform so that when an API is added, a consumer app is created automatically.</p>
<p>In this scenario, if you are using <a href="../learnmore/basics_glossary.htm#gl_fanout">fanout</a> (promoting to more than one environment), you might choose to promote the consumer app to one environment but not another.</p>
<p>The <strong>disable-consumer-app-check</strong> property allows you to disable the check, so that the API is promoted without the consumer app.</p>
<p>Adding this property, with a value of <strong>true</strong>, indicates that the promotion process will not check for a consumer app and will not fail if the consumer app is not present.</p>
<p>Default: <strong>false</strong>. If this property is not present, or is set to <strong>false</strong>, the existing consumer app promotion behavior is applied.</p>
<p>In the example below, the promotion profile promotes to two different environments. The <strong>disable-consumer-app-check</strong> property is set to <strong>true</strong> for one target environment, and is set to <strong>false</strong> for the other.</p>
<pre>  "environments": [
    {
      "name": "dev1",
      "displayName": "dev1",
      "description": "Development environment",
      "tenant": "dev1",
      "initialEnvironment": true,
      "promotionProfiles": [
        {
          "name": "Default Testing Promotion",
          "description": "Dev to Testing default profile",
          "targetEnvironment": "test1",
          "properties" : [
            {"name":"match-policies-by-name","value":"true"},{"name":"disable-consumer-app-check","value":"true"}
          ]
        },
        {
          "name": "Default Testing Promotion 2",
          "description": "Dev to Testing 2 default profile",
          "targetEnvironment": "test2",
          "properties" : [
            {"name":"match-policies-by-name","value":"true"},{"name":"disable-consumer-app-check","value":"false"}
          ]
        }
    ]},
    {
      "name": "test1",
      "displayName": "test1",
      "description": "Testing environment",
      "tenant": "test1"
    },
    {
      "name": "test2",
      "displayName": "test2",
      "description": "Testing environment 2",
      "tenant": "test2"
    }
  ],
</pre>

<h4 id="props_examples">Properties: examples</h4>
<p>Example #1: sets the <strong>export-pki</strong> value.</p>
<pre>{
  "name":"Default Production Promotion",
  "description":"Dev to production default profile",
  "targetEnvironment":"production",
  "properties":[
    {
      "name":"export-pki",
      "value":"true"
    }
  ]
}</pre>
<p>Example #2: Sets <strong>match-policies-by-name</strong> and <strong>preserve-outbound-identities</strong>.</p>
<pre>{
  "name":"Topology",
  "environments":[
    {
      "name":"dev1",
      "displayName":"dev1",
      "description":"Development environment",
      "tenant":"dev1",
      "initialEnvironment":true,
      "promotionProfiles":[
        {
          "name":"Default Testing Promotion",
          "description":"Dev to Testing default profile",
          "targetEnvironment":"test1",
          "properties":[
            {
              "name":"match-policies-by-name",
              "value":"true"
            },
            {
              "name":"preserve-outbound-identities",
              "value":"true"
            }
          ]
        }
      ]
    },
    {
      "name":"test1",
      "displayName":"test1",
      "description":"Testing environment",
      "tenant":"test1"
    }
  ],
  "tenants":[
    {
      "name":"dev1",
      "userAuthenticationSource":true,
      "id":"dev1",
      "credentials":{
        "email":"administrator@open.akana.com",
        "password":"password"
      }
    },
    {
      "name":"test1",
      "id":"test1",
      "address":"http://open.akana.com:9910",
      "consoleAddress":"http://open.akana.com:9910/atmosphere",
      "credentials":{
        "email":"administrator@open.akana.com",
        "password":"password"
      }
    }
  ]
}</pre>
<p><a href="#top">Back to top</a></p>



<h2 id="dz_configurations">Deployment Zone Configurations</h2>
<p><strong>API Platform Version: 8.4.12 and later</strong></p>
<p>Within a promotion profile, deployment zone configurations can be used to tailor the propagation of an API's endpoints to the target environment. During API promotion, applicable deployment zone configurations are selected based on:</p>
<ul>
	<li>The name of an API endpoint's deployment zone in the source environment.</li>
	<li>Optionally, filters that apply to the metadata of the API.</li>
</ul>
<p>A deployment zone configuration contains a list of deployment zone names in the target environment. When a deployment zone configuration is determined to be applicable for an endpoint of the API being promoted, the endpoint is populated into the specified target environment deployment zones.</p>
<p><strong>Note</strong>: The target deployment zone must have a listener that matches the listener name of the endpoint. If necessary, use rules in the deployment zone configuration to adjust listener names.</p>
<p>The structure of the deployment zone configurations allows endpoints in a source environment to be fanned out to a target environment. For example, a staging environment might only support a single deployment zone while the production environment supports many deployment zones across different geographic regions.</p>
<p>Consider the following example PromotionProfile:</p>
<pre>{
  "name":"Default Production Promotion",
  "targetEnvironment":"production",
  "deploymentZoneConfigurations":[
    {
      "sourceDeploymentZoneName":"StagingDZ",
      "targetDeploymentZoneNames":[
        "ProdWestDZ",
        "ProdEastDZ"
      ]
    }
  ]
}</pre>
<p>In this example, a single deployment zone configuration has been defined to propagate endpoints in in the <strong>StagingDZ1</strong> deployment zone in the source environment to both <strong>ProdWestDZ</strong> and <strong>ProdEastDZ</strong> in the target environment.</p>


<h3 id="s06_01">Using Filters with deployment zone configurations
</h3><p>The filtering capability of deployment zone configurations allows for target deployment zones to be determined based on the metadata of the API. For example, security metadata associated with the API might determine the specific deployment zones that the API is deployed to.</p>
<p>In the following example, the filters named <strong>PII</strong> and <strong>Not PII</strong> are used in selecting the deployment zones an API's endpoints are propagated to in the target environment, based on whether the API is marked as processing personal identity information.</p>
<pre>"deploymentZoneConfigurations": [
  {
    "filterNames": [
      "pii"
    ],
    "sourceDeploymentZoneName": "StagingDZ",
    "targetDeploymentZoneNames": [
      "PIIDZ"
    ]
  },
  {
    "filterNames": [
      "not-pii"
    ],
    "sourceDeploymentZoneName": "StagingDZ",
    "targetDeploymentZoneNames": [
      "NotPIIDZ"
    ]
  }
]</pre>


<p>For the above example, the filters in the topology are defined as shown below.</p>
<pre>"filters": [
  {
    "name": "pii",
    "classifier-criteria": [
      {
        "classifier-name": "pii",
        "values": [
          {
            "value": "true"
          }
        ]
      }
    ]
  },
  {
    "name": "not-pii",
    "classifier-criteria": [
      {
        "classifier-name": "pii",
        "values": [
          {
            "value": "false"
          }
        ]
      }
    ]
  }
]
</pre>


<h3 id="s06_02">Default Endpoint Propagation</h3>
<p>If an endpoint's source deployment zone doesn't match a defined deployment zone configuration, the promotion processing will propagate the endpoint to a deployment zone in the target environment with the same name, if one exists. You can think of this as an implicit deployment zone configuration for every deployment zone in the source environment of the form:</p>
<pre>{
  "sourceDeploymentZoneName":"{source DeploymentZone name}",
  "targetDeploymentZoneNames":[
    "{source DeploymentZone name}"
  ]
}</pre>

<p>You can disable endpoints from a source deployment zone completely by defining a deployment zone configuration that specifies no target deployment zone names. For example:</p>
<pre>{
  "sourceDeploymentZoneName":"TestDZ",
  "targetDeploymentZoneNames":[

  ]
}</pre>



<h3 id="s06_03">Using Rules with deployment zone configurations
</h3><p>A deployment zone configuration can optionally contain RuleDefinitions to be applied to the properties of the endpoints being promoted with this deployment zone configuration.</p>
<p>At this level, you can use rules to alter a listener name, the endpoint's path, or its vanity host. The properties available for modification are:</p>
<dl>
	<dt>listenerName</dt>
	<dd>The name of the endpoint's listener; for example, <strong>http</strong>. It must match a listener associated with the target deployment zone.</dd>

	<dt>path</dt>
	<dd>The endpoint-specific path. If the endpoint in the source environment did not have an endpoint-specific path, this will be set to <strong>NO_VALUE</strong>. A rule can set the path property to another value, or to <strong>NO_VALUE</strong> indicating that the target endpoint will not have a specific path.</dd>

	<dt>vanityHostName</dt>
	<dd>A host name (CNAME) specific to the endpoint. If the endpoint in the source environment did not have a vanity host name, this will be set to <strong>NO_VALUE</strong>. A rule can set the vanityHostName property to another value, or to <strong>NO_VALUE</strong> which indicates that the target endpoint will not have a vanity host name.</dd>

	<dt>DISABLED</dt>
	<dd>This property provides a means of disabling an endpoint via a rule. If you set the value of DISABLED to <strong>true</strong>, the endpoint is not propagated to the target environment.</dd>
</dl>

<p>In the example shown below, a rule is provided with a deployment zone configuration that will disable the propagation of endpoints that do not have a vanity host name in the source environment.</p>
<pre>{
  "sourceDeploymentZoneName":"StagingDZ",
  "targetDeploymentZoneNames":[
    "ProdDZ"
  ],
  "rules":[
    {
      "scope":"vsep",
      "condition":"vsep.vanityHostName == 'NO_VALUE'",
      "action":"vsep.DISABLED = 'true'"
    }
  ]
}</pre>


<h3 id="s06_04">Duplicate Endpoints</h3>
<p>Care should be taken to avoid duplicating endpoints across environments using the same underlying Gateways. This situation can occur if the target deployment zone has the same underlying Gateway as the source deployment zone (leading to the same host name and port) and has no options set for altering the Gateway host name or path. This situation will result in the promotion of the API failing.</p>
<p>There are several ways you can help make sure there are no duplicate endpoints:</p>
<ul>
	<li>Enable random prefixes in the target deployment zone.</li>
	<li>Provide a custom hostname for the Gateway in the target deployment zone that differs from the source deployment zone.</li>
	<li>Use a rule in the deployment zone configuration to alter the vanity host name or path of the endpoints being promoted.</li>
</ul>
<p><a href="#top">Back to top</a></p>



<h2 id="s08_03_environment_config">Environment Configuration</h2>
<p>The <strong>configuration</strong> property of an Environment is used to customize behavior of assets, such as APIs, that are created or updated in the tenant that the environment is associated with. You can use an environment's configuration to define <strong>templating</strong> aspects of API implementations. This is similar to the behavior described in the section <a href="#runtime_config">Defaulting API Settings using Runtime Configurations</a>. This is because the environment configuration automates the creation of Runtime Configuration assets in the tenant library. Further information on the defaulting behavior described here can be found in that section.</p>
<p>The following is a complete example of an <strong>Environment Configuration</strong> definition.</p>
<pre>{
  "name": "development",
  "displayName": "Development",
  "description": "Development environment",
  "tenant": "DevelopmentTenant",
  "configuration": {
    "apiImplementationProfiles": [
      {
        "name": "Internal API Profile",
        "type": "Live",
        "filterNames": [
          "internal"
        ],
        &quot;deploymentZones&quot;:[
          {
            &quot;name&quot;:&quot;DZ9941&quot;
          }
        ],
        "virtualServicePolicies": [
          {
            "policyName": "DetailedAuditing"
          }
        ],
        "virtualHost": "InternalHost.com",
        "path": "/{catalog_asset.name_normalized}",
        "allowAnonymousAccess": "true"
      },
      {
        "name": "External API Profile",
        "type": "Live",
        "filterNames": [
          "external"
        ],
        &quot;deploymentZones&quot;:[
          {
            &quot;name&quot;:&quot;DZ9942&quot;
          }
        ],
        "virtualHost": "ExternalHost.com",
        "path": "/{catalog_asset.name_normalized}/external",
        "allowAnonymousAccess": "false",
        "approvalRequired": "true"
      }
    ]
  }
}</pre>


<h3 id="s08_04_api_impl_profiles">API Implementation Profiles </h3>
<p>A Configuration contains an <strong>apiImplementationProfiles</strong> collection. An <strong>apiImplementationProfile</strong> is used to define the defaults for all API Implementations in the tenant that match the type and filter of the apiImplementationProfile. In the example above, the apiImplementationProfile <strong>Internal API Profile</strong> will apply to the <strong>Live</strong> implementations of APIs whose custom properties match the <strong>internal</strong> filter (defined in the <strong>filters</strong> property of the topology), while the <strong>External API Profile</strong> will apply to <strong>Live</strong> implementations of APIs that match the <strong>external</strong> filter. Note that the two options for the <strong>type</strong> property are <strong>Live</strong> and <strong>Sandbox</strong>.</p>
<p>An <strong>apiImplementationProfile</strong> collection can specify:</p>
<ul>
	<li>The Deployment Zones that an API Implementation is to be deployed to:
		<p>Specify the deployment zone names in the <strong>deploymentZones</strong> property (for additional details, see <a href="#dz_config">Deployment Zone Configuration</a>.</p></li>
	<li>The policies that are to be applied to the Implementation:
		<p>Specify either the <strong>policyName</strong> or <strong>policyId</strong> for each policy to be applied.</p></li>
	<li>The policies that are to be applied to the physical service of a proxy Implementation (not shown in example above):
		<p>Specify either the <strong>policyName</strong> or <strong>policyId</strong> for each policy to be applied within a <strong>physicalServicePolicies</strong> property.</p></li>
	<li>The virtual host for the implementation's endpoints:
		<p>Specify using the <strong>virtualHost</strong> property.</p></li>
	<li>The path for the implementation's endpoints:
		<p>Specify using the <strong>path</strong> property.</p></li>
	<li>Whether the API implementation allows anonymous access:
		<p>Specify in the Boolean <strong>allowAnonymousAccess</strong> property.</p></li>
	<li>Whether access to the API implementation requires approval:
		<p>Specify in the Boolean <strong>requiresApproval</strong> property.</p></li>
	<li>Whether debug mode should be enabled for the API implementation (not shown in example above):
		<p>Specify in the Boolean <strong>debugModeEnabled</strong> property.</p></li>
</ul>
<p><a href="#top">Back to top</a></p>

<h4 id="dz_config">Deployment Zone Configuration</h4>
<p>The <strong>deploymentZones</strong> property of an <strong>apiImplementationProfile</strong> is used to specify which deployment zones and optionally which listeners within a deployment zone should support an API's endpoints. In the simplest case, a deployment zone can be specified with no additional details, as in this example:</p>
<pre>{
  &quot;name&quot; : &quot;DZ9941&quot;
}</pre>
<p>In this example, APIs that are using this apiImplementationProfile will be deployed to all listeners within the designated deployment zone.</p>
<p>The following example goes a step further and specifies a specific listener within the deployment zone that should be used:</p>
<pre>{
  &quot;name&quot;: &quot;DZ9941&quot;,
  "listeners": [
    {
      "name": "default-http0"
    }
  ]
}</pre>
<p>Additionally, listener-specific settings can be defined as in this example:</p>
<pre>{
  "name": "DZWest",
  "listeners": [
    {
      "name": "default-http",
      "public": "false",
      "virtualHost": "listenerscopedhost",
      "path": "listenerscopedpath"
    },
    {
      "name": "default-https",
      "useImplementationKeyforSSL": "true"
    }
  ]
}</pre>
<p>In this case, two listeners were specified within the DZWest deployment zone. Endpoints deployed in the <strong>default-http</strong> listener will:</p>
<ul>
	<li>Be set to private.</li>
	<li>Use a listener-specific host name (which overrides the <strong>virtualHost</strong> property set in the <strong>apiImplementationProfile</strong>).</li>
	<li>Use a listener-specific path (which overrides the <strong>path</strong> property set in the <strong>apiImplementationProfile</strong>).</li>
</ul>
<p>Endpoints deployed in the <strong>default-https</strong> listener are set to use the API Implementation's Key/Certificate for SSL, but will be public by default and will use the <strong>virtualHost</strong> and <strong>path</strong> of the containing <strong>apiImplementationProfile</strong> (if <strong>virtualHost</strong> and <strong>path</strong> are specified).</p>
<p><strong>Note</strong>: If a deployment zone configuration results in a duplicate endpoint being produced, that endpoint will be omitted from the API.</p>

<h4 id="replacement_parms">Replacement Parameters</h4>
<p>A limited number of replacement parameters are available for use in setting the <strong>virtualHost</strong> and <strong>path</strong> properties at the apiImplementationProfile and listener level of an Environment configuration. To use these parameters, specify the parameter name within braces <strong>{&lt;parameter&gt;}</strong> within either the <strong>virtualHost</strong> or <strong>path</strong> properties. For example:</p>
<pre>"path" : "{api.name_normalized}_{api.version_normalized}"</pre>
<p>At runtime, the platform replaces these parameters with information from the API. In the above example, an API with name <strong>CurrencyConverter</strong> and version <strong>1</strong> would result in a path of <strong>currencyconverter_1</strong>.</p>
<p>The following replacement parameters are currently available:</p>
<ul>
	<li><strong>api.name</strong>
<p>The actual name of the API.</p></li>
	<li><strong>api.version</strong>
<p>The actual version of the API.</p></li>
	<li><strong>api.name.normalized</strong>
<p>The api name, normalized for use as an NM token.</p></li>
	<li><strong>api.version.normalized</strong>
<p>The api version, normalized for use as an NM token.</p></li>
	<li><strong>api.physical_url_path.live</strong>
<p>The path of the first physical endpoint for the live implementation of the API. This is only applicable when the API implementation is using the proxy pattern.</p></li>
	<li><strong>api.physical_url_path.sandbox</strong>
<p>The path of the first physical endpoint for the sandbox implementation of the API. This is only applicable when the API implementation is using the proxy pattern.</p></li>
	<li><strong>api.property</strong>
<p>The value of the specified custom API property. For example, if an API has the property <strong>classification</strong> set to <strong>restricted</strong>, the parameter <strong>{api.property.classification}</strong> will resolve to <strong>restricted</strong>.</p></li>
</ul>
<p><strong>Note</strong>: A parameter that cannot be resolved or is not recognized will remain in the unresolved form.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="topology_api">Topology API</h2>
<p>In this section:</p>
<ul>
	<li><a href="#topologyapi_01">Finding the Topology API Documentation</a></li>
	<li><a href="#topologyapi_02">Using the Topology API</a></li>
</ul>


<h3 id="topologyapi_01">Finding the Topology API Documentation</h3>
<p>You can find the Topology API documentation in the following locations:</p>
<ul>
	<li>In your deployment:
		<ul>
			<li>Once the Lifecycle Coordinator feature is deployed, a REST API for maintaining topologies is available from the path <strong>/lc/api/topologies</strong> relative to the container's URL. For example:
			<p><strong>http://myHost:9900/lc/api/topologies</strong></p></li>
			<li>You can find Swagger documentation for this API in the container deployment:
			<p><strong>$INSTALL_DIR/docs/restApiDocs/api-platform/swagger-Topology_API.html</strong></p></li>
		</ul>
	</li>
	<li>On the Akana docs site, in the <a href="../../ag/apidoc_restApiDocs.htm" title="Link to generated REST API doc on Akana docs site">generated REST API documentation</a>. Choose the correct version and then scroll down or search on the page for the Topology API.</li>
</ul>


<h3 id="topologyapi_02">Using the Topology API</h3>
<p>The first step is to create a Topology. This is done by POST-ing the complete Topology JSON document to <strong>...lc/api/topologies</strong>. This can be done programmatically or with a browser plugin such as Firefox RESTClient:</p>
<p><img src="images/promotion_10.jpg" alt="Creating the topology" /></p>
<p>Note the inclusion of the content-type and basicAuth headers.</p>
<p>Updates to the topology can be performed on the topology as a whole, or on specific properties within the document. For example, the Rules for a PromotionProfile can be updated with a PUT of an array of Rules such as:</p>
<pre>[
  {
    "scope":"psep",
    "condition":"psep.url.indexOf(\"foo.com\") > 0",
    "action":"psep.url = psep.url.replace(\"foo.com\",\"bar.com\")"
  }
]</pre>
<p>To:</p>
<pre>http://myHost:9900/lc/api/topologies/{topology-name}/environments/{environment-name}/profiles/{promotionProfile-name}/rules</pre>
<p><a href="#top">Back to top</a></p>



<h2 id="lm_console">Lifecycle Manager Console</h2>
<p>The Lifecycle Manager (<strong>LM</strong>) console is useful for accessing promoted assets and their iterations as well as approving promotion requests. Within Lifecycle Manager, a topology is represented as a <strong>library</strong> and the elements of a Topology along with the entities being promoted are represented as <strong>assets</strong>.</p>
<p>In this section:</p>
<ul>
	<li><a href="#s07_01">Logging In</a></li>
	<li><a href="#s07_02">Viewing Assets and Iterations</a></li>
	<li><a href="#s07_03">Promotion Requests</a></li>
</ul>


<h3 id="s07_01">Logging In</h3>
<p>The first step is to log in to the library that corresponds with the topology. There are two options:</p>
<ul>
	<li>If the admin user password has been set, you can log into the library as the Lifecycle Repository super user at the URL below:
		<pre>{container-base-url}/lm/application/access/suLogin.do</pre></li>
	<li>If the topology was configured to delegate authentication to a local tenant, you can log in at the URL below, using the tenant email and password for a user in the designated local tenant:
	<pre>{container-base-url}/lm/application/access/challenge.do</pre></li>
</ul>


<h3 id="s07_02">Viewing Assets and Iterations</h3>
<p>The left pane of the LM console contains a search box which can be used for finding assets by name:</p>
<p><img src="images/promotion_11.jpg" alt="Finding assets by name" /></p>
<p>The search results include separate LM assets for each environment to which a promotable entity has been promoted or is pending promotion. Clicking on an asset in the search results brings up a details page:</p>
<p><img src="images/promotion_12.jpg" alt="Published asset, Details page" /></p>
<p>In this case, the <strong>Current Iteration</strong> relationship is referencing the third iteration of this API asset. Click on the iteration asset name to view details about the iteration, as shown below.</p>
<p><img src="images/promotion_13.jpg" alt="Iteration details" /></p>
<p>Here you can see the following details for this iteration:</p>
<ul>
	<li>The time the iteration was promoted</li>
	<li>The user who requested the promotion</li>
	<li>The status of the promotion</li>
	<li>The actual archive.zip (after rule processing) that was imported into the target environment</li>
	<li>The response from the Import</li>
	<li>A relationship to the previous iteration for this environment</li>
	<li>A relationship to the source iteration in the previous environment</li>
	<li>A relationship to the PromotionProfile that was used to promote the iteration</li>
</ul>
<p>Additionally, in the case of a promotion failure (generally due to an invalid rule) error details are stored in the Artifacts section of the iteration asset:</p>
<p><img src="images/promotion_14.jpg" alt="Error details" /></p>


<h3 id="s07_03">Promotion Requests</h3>
<p>The configuration of the topology library can optionally be customized to require approvals for a promotion request. For assistance with customization, contact Akana Professional Services.</p>
<p>In this scenario, a user with the required authorization role has a pending request notification message in the left pane after logging into the LM console:</p>
<p><img src="images/promotion_15.jpg" alt="Pending requests" /></p>
<p>Clicking on the details for that request allows the user to approve the request:</p>
<p><img src="images/promotion_16.jpg" alt="Approving a pending request" /></p>
<p>Clicking <strong>approve</strong> allows the promotion to succeed or proceed to the next role approval.</p>
<h4>Rejecting Requests</h4>
<p>A user may choose to reject the request by clicking on <strong>rejection properties</strong> and then clicking <strong>reject</strong>. In this case, the Iteration asset remains in a <strong>Promotion Pending</strong> state, however, the API Platform UI shows the state of the promotion as <strong>Promotion Rejected</strong> and allows the promotion to be requested again.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="env_decoupled_00">Support for Decoupled Environments in a Topology</h2>
<p>In a standard topology, Lifecycle Coordinator communicates directly with the environments in the topology to:</p>
<ul>
	<li>Periodically retrieve context information for the environment (read).</li>
	<li>Import a promoted asset to the environment (write).</li>
</ul>
<p>However, in some situations, an environment (generally a production environment) might be physically isolated from Lifecycle Coordinator and other internal systems for security purposes.</p>
<p>Lifecycle Coordinator supports this scenario by allowing tenants to be designated as not connected. This is done using the <strong>connected</strong> property, as in this example tenant definition:</p>
<pre>{
  "name": "ProductionTenant",
  "id": "prod",
  "connected" : "false"
}</pre>
<p>In the case where a tenant is marked as not connected, only the tenant's name and id must be specified. Credentials and address are omitted, since Lifecycle Coordinator does not communicate with that tenant.</p>
<p>When a tenant is marked as not connected, Lifecycle Coordinator assumes that it is on a remote system and that the <strong>preserve-keys</strong> mode is applicable.</p>
<p>Normally, a tenant that is not connected is the final environment in the promotion path.</p>
<p>Because Lifecycle Coordinator cannot communicate directly with a tenant that is not connected, some external system or user must facilitate the exchange of data between Lifecycle Coordinator and the decoupled tenant. The two scenarios are:</p>
<ul>
	<li><a href="#env_decoupled_01">Updating Environment Context information</a></li>
	<li><a href="#env_decoupled_02">Promoting Assets</a></li>
</ul>


<h3 id="env_decoupled_01">Updating Environment Context information</h3>
<p>Lifecycle Coordinator needs to have some understanding of the target environment supported by a decoupled tenant so that it can validate for the existence of dependencies when an asset is promoted to that environment. To accomplish this, the promotion context information must be fetched from the decoupled tenant with a GET call to the <strong>getEnvironmentPromotionContext</strong> operation of the TenantAdministrationAPI on the isolated system.</p>
<pre>{host:port}/api/tenants/{tenant id}/{environment name}/promotion/context?includeServiceInfo=true&amp;includeAPIInfo=true</pre>
<p>Content-type is application/json.</p>
<p>For example:</p>
<pre>GET http://tenant3:9940/api/tenants/tenant3/production/promotion/context?includeServiceInfo=true&amp;includeAPIInfo=true</pre>
<p>The resulting JSON document can then be passed as the request body to the TopologyAPI <span class="apidoc_code"><strong>updateEnvironmentContext</strong></span> method on the Lifecycle Coordinator system using a PUT call to:</p>
<pre>{host:port}/lc/api/topologies/Topology1/environments/{environment name}/context</pre>
<p>For example:</p>
<pre>PUT http://localhost:9920/lc/api/topologies/Topology1/environments/production/context</pre>
<p>This process should be repeated when any relevant context information in the decoupled environment changes. For example, a new policy or organization is added in the decoupled tenant.</p>


<h3 id="env_decoupled_02">Promoting Assets</h3>
<p>Since Lifecycle Coordinator cannot directly call the import API on the decoupled tenant, you'll need to take some extra steps to promote to that environment.</p>

<h4>To promote assets for a decoupled tenant</h4>
<ol>
	<li>Request promotion of the API to the decoupled environment in the normal way, using the API Platform user interface or via the TopologyAPI promote operation (see <a href="#topologyapi_01" target="_blank">Finding the Topology API Documentation</a>).
	<p>When the promotion is complete, the status of the asset for the decoupled environment shows as <strong>promoted</strong>. In this case, the <strong>promoted</strong> status indicates that all processing of the archive has been completed and the archive is ready for importing into the target environment.</p></li>
	<li>Use the <strong>getPackage</strong> method in the TopologyAPI to retrieve the processed import package from Lifecycle Coordinator:
		<pre>GET {host:port}/lc/api/topologies/{topology-name}/environments/{environment-name}/assets/{asset-id}/package</pre>
		<p>In this operation, {asset-id} is either an API version ID or App version ID. For example:</p>
		<pre>GET http://localhost:9920/lc/api/topologies/Topology1/environments/production/assets/ffc4ba19-c5cb-4e9d-ae39-78ab6e0efc84.tenant1/package</pre>
		<p>This returns the archive as a ZIP file.</p></li>
	<li>On the isolated system, upload the archive ZIP file to the decoupled tenant in one of these ways:
		<ul>
			<li>Via the import wizard in the API Platform UI: see <a href="../learnmore/bus_admin_export_import.htm#import_org_app_api">How do I import site, app, or API information from an export file?</a></li>
			<li>By using the importPackage operation on the TenantAdministrationAPI: see <a href="../api/tenantadmin/m_tenantadmin_importPackage.htm"><span class="apidoc_code">POST /api/tenants/{TenantFedMemberID}/packages</span></a>.</li>
		</ul>
	</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="app_b_client_apps">&quot;Client app&quot; approach to supporting API to API contracts</h2>
<p><strong>API Platform Version: 2018.0.0 and later</strong></p>
<p>The API Platform allows contracts to be established between apps and APIs, but does not support direct API to API access. In most cases this is not needed. However, API to API access is supported in the underlying infrastructure, and if it's needed you can support it by using a pattern where an API is represented with a <strong>client App</strong>.</p>
<p>Let's say you're migrating from the underlying infrastructure (Policy Manager) to Community Manager, and your implementation includes API to API contracts. You can use a configuration in Lifecycle Repository to designate whether an API is Consumer or not. If it is, Lifecycle Repository automatically creates an app with the API. This app is tied to the API and replaces the &quot;API to API contracts&quot; concept in Policy Manager. When the API is promoted, the Client App is automatically promoted with it.</p>
<p>With this approach, each API has an accompanying client app that is used to establish access to other APIs for the represented API. Contracts between a client app and another API are logically contracts between the source and target APIs.</p>
<p>You can configure the API Platform Repository plug-in to support the client app pattern by adding the <strong>Create Client App</strong> task to the post-processing phase of the API submission process. This task will cause a client app to be created as each API is created. The client app will be named as <strong>{api name}_app</strong> and a <strong>client-app</strong> property will be set on the represented API pointing to the client app. The generated client app will, in turn, have a <strong>represented-api</strong> property to point back to the API.</p>
<p>For additional information about configuring a submission process, <a href="../learnmore/basics_support.htm#support_contact">contact Akana Technical Support</a>.</p>
<p>Note that the <strong>Create Client App</strong> task can be configured to run based on the setting of a custom property on the API, such as <strong>isConsumer</strong>, allowing the creator of the API to determine whether a client app is needed.</p>


<h3 id="app_b_promotion_support">Promotion Support</h3>
<p>When an API with an accompanying client app is promoted using Lifecycle Coordinator, the client app will also be promoted to the target environment as well as any contracts it has to other APIs. These contracts will be validated prior to API promotion in the same manner as the dependencies for a standard app are validated prior to app promotion.</p>
<p><strong>Note</strong>: If you want to promote an app that has been given access to an API  (contract has been created), this is not the approach to use. For information about the steps to take in this scenario, see <a href="#tip_seq_promote">Promotion sequence for app with API contract</a>.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="runtime_config">Defaulting API Settings using Runtime Configurations (8.4.17 and later)</h2>
<p>The Runtime Configuration section which was previously in the Promotion Guide is now in a separate document with other content relating to custom properties.</p>
<p>Runtime Configuration is not part of Lifecycle Coordinator, but can be used to augment the capabilities of Lifecycle Coordinator to further tailor the configuration of APIs within each environment of a topology.</p>
<p>For details, see <a href="../lr/lr_runtime_config.htm">Defaulting API Settings using Runtime Configurations</a> (Lifecycle Repository documentation).</p>
<p><a href="#top">Back to top</a></p>



<h2 id="s09_orchestrated">Appendix A: Promoting Orchestrated APIs</h2>
<p><strong>API Platform Version: 2018.0.0 and later</strong></p>
<p>Unlike a standard proxy-pattern API, APIs implemented as orchestrations could have dependencies on scripts, processes, or services not contained within the API itself. When promotion is requested for an orchestrated API, all such external dependencies are checked to make sure they exist in the target environment. If there are unmet dependencies, the promotion is aborted and a notification specifying the unmet dependencies is provided to the user.</p>
<p>In the case of external scripts and processes, the promotion process attempts to match the referenced script or process in the target environment based on the key of the object.</p>
<p>Mapping of processes and scripts between environments can be specified within a Promotion Profile using the <strong>processMappings</strong> and <strong>scriptMappings</strong> properties respectively. The <strong>processMappings</strong> and <strong>scriptMappings</strong> properties allow you to correlate source and target scripts/processes either by ID or by name.</p>
<p>This section includes the following examples of defining process and script mappings:</p>
<ul>
	<li><a href="#s09_01">By using IDs</a></li>
	<li><a href="#s09_02">By using names</a></li>
	<li><a href="#s09_02">By using</a><a href="#s09_03"> the <strong>match-processes-by-name</strong> and <strong>match-scripts-by-name</strong> properties on the Promotion Profile</a></li>
</ul>

<h4 id="s09_01">
Defining process and script mappings by using IDs</h4>
<p>In the example Promotion Profile below, processes and script mappings are defined using IDs.</p>
<pre>{
  "name": "Default Production Promotion",
  "targetEnvironment": "production",
  "scriptMappings":[
    {
      "sourceScript" : {"scriptId" : "script:7f4fbb16-8389-11e8-af80-80b01a868d88"},
      "targetScript" : {"scriptId" : "script:fb51d840-8399-11e8-af80-80b01a868d88"}
    }
  ],
  "processMappings":[
    {
      "sourceProcess" : {"processId" : "bpel:8c862595-8389-11e8-af80-80b01a868d88"},
      "targetProcess" : {"processId" : "bpel:b2ad95b6-839b-11e8-af80-80b01a868d88"}
    }
  ]
}</pre>

<h4 id="s09_02">Defining process and script mappings by using names</h4>
<p>In the example below, processes and script mappings are defined by name.</p>
<pre>{
  "name": "Default Production Promotion",
  "targetEnvironment": "production",
  "scriptMappings":[
    {
      "sourceScript" : {"scriptName" : "Dev Script A"},
      "targetScript" : {"scriptName" : "Prod Script A"}
    }
  ],
  "processMappings":[
    {
      "sourceProcess" : {"processName" : "Dev Process A"},
      "targetProcess" : {"processName" : "Prod Process A"}
    }
  ]
}
</pre>

<h4 id="s09_03">Defining process and script mappings by using the match-processes-by-name and match-scripts-by-name properties on the Promotion Profile</h4>
<p>Optionally, the properties <strong>match-processes-by-name</strong> and <strong>match-scripts-by-name</strong> can be set on the Promotion Profile, to allow the promotion logic to map referenced scripts or processes based on the name rather than the key of the object. For example, the example below shows a Promotion Profile allowing matching of both processes and scripts by name.</p>
<pre>{
  "name": "Default Production Promotion",
  "description": "Dev to production default profile",
  "targetEnvironment": "production",
  "properties" : [
    {"name":"match-scripts-by-name","value":"true"},
    {"name":"match-processes-by-name","value":"true"}
  ]
}
</pre>

<h3 id="s09_01_referenced_svcs">Referenced Services</h3>
<p>An orchestration of an API operation might use invocation actions to call out to other services. Such invocations specify the target service, operation, and endpoint to use in the invocation. The target service of an invocation must exist in the target environment prior to promoting the orchestrated API. There are two scenarios:</p>
<ul>
	<li><strong>Remote tenants, where keys are preserved across environments</strong>: A service with a matching key must already exist in the target environment.</li>
	<li><strong>Local tenants, where keys are mapped across environments</strong>: The API containing the target service must have been previously promoted using Lifecycle Coordinator.</li>
</ul>
<p>The most common case of service invocation is a call to a physical service. Often, the URL of a physical service is modified for use in the target environment using rules in the Promotion Profile. In this case, the URL of the endpoint of the invocation should be similarly modified. The following example shows the rules that would be defined in a Promotion Profile for changing the host name of physical service URLs along with the invocation references (using the <strong>serviceRef</strong> scope).</p>
<pre>"rules": [
  {
    "scope":"psep",
    "condition":"psep.url.indexOf(\"foo.com\") > 0",
    "action":"psep.url = psep.url.replace(\"foo.com\",\"bar.com\")"
  },
  {
    "scope":"serviceRef",
    "condition":"serviceRef.url.indexOf(\"foo.com\") > 0",
    "action":"serviceRef.url = serviceRef.url.replace(\"foo.com\",\"bar.com\")"
  }
]</pre>
<p><a href="#top">Back to top</a></p>



<h2 id="app_c_tips">Appendix B: Promotion tips and best practices</h2>
<p>This section includes:</p>
<ul>
	<li><a href="#tip_seq_env">Make changes in earlier environment</a></li>
	<li><a href="#tip_seq_promote">Promotion sequence for app with API contract</a></li>
</ul>

<h4 id="tip_seq_env">Make changes in earlier environment</h4>
<p>When making changes to an asset in the hierarchy, always make changes in the Dev environment (or whichever environment is first in the promotion chain).</p>
<p>If you make changes in a later environment, they will be lost on a subsequent iteration.</p>


<h4 id="tip_seq_promote">Promotion sequence for app with API contract</h4>
<p>If you want to promote an app that has been given access to an API (contract has been created), follow this sequence:</p>
<ol>
	<li>First, promote the API to the target environment.</li>
	<li>Then, promote the app. At that point, the contract is promoted with the app.</li>
</ol>
<p><a href="#top">Back to top</a></p>
				</div>
				<!-- main content ends here -->
			</div>
			</div>			
</div>			
			<!-- starts footer -->

			<footer id="footer">
			  <div class="container">
			    <div class="row" id="div0">
			      <div class="col-sm-3 top48">
			        <div class="wrapper" id="div1">
			          <ul id="ul0">
			            <li><strong>Solutions</strong></li>
			            <li><a href="https://www.akana.com/solutions/api-management">API Management</a></li>
			            <li><a href="https://www.akana.com/solutions/microservices">Microservices</a></li>
			            <li><a href="https://www.akana.com/solutions/api-security">API Security</a></li>
			            <li><a href="https://www.akana.com/solutions/integrations">Mediation and Integration</a></li>
			            <li><a href="https://www.akana.com/solutions/digital-transformation">Digital Transformation</a></li>
			            <li><a href="https://www.akana.com/solutions/api-governance">Governance</a></li>
			            <li><a href="https://www.akana.com/solutions/financial-services">Financial Services</a></li>
			            <li><a href="https://www.akana.com/solutions/cloud-native">Cloud Native Deployment</a></li>
			          </ul>
			        </div>
			      </div>
			      <div class="col-sm-3 top48">
			        <div class="wrapper" id="div2">
			          <ul id="ul1">
			            <li><strong>Products</strong></li>
			            <li><a href="https://www.akana.com/products/api-platform">Platform Overview</a></li>
			            <li><a href="https://www.akana.com/products/api-platform/api-gateway">API Gateway</a></li>
			            <li><a href="https://www.akana.com/products/api-platform/developer-portal">API Developer Portal</a></li>
			            <li><a href="https://www.akana.com/products/api-platform/lifecycle-management">Lifecycle Manager</a></li>
			            <li><a href="https://www.akana.com/products/api-platform/api-analytics">API Analytics</a></li>
			            <li><a href="https://www.akana.com/products/sola-mainframe">SOLA Mainframe APIs</a></li>
			          </ul>
			        </div>
			      </div>
			      <div class="col-sm-3 top48">
			        <div class="wrapper" id="div3">
			          <ul id="ul2">
			            <li><strong>Resources</strong></li>
			            <li><a href="https://www.akana.com/blog">Blog</a></li>
			            <li><a href="http://docs.akana.com" rel="external">Documentation</a></li>
			            <li><strong>Support</strong></li>
			            <li><a href="https://www.akana.com/support">Customer Support</a></li>
			            <li><strong>Partners</strong></li>
			            <li><a href="https://www.akana.com/partners">Partners</a></li>        
			          </ul>
			        </div>
			      </div>
			      <div class="col-sm-3 top48">
			        <div class="wrapper" id="div5">
			          <ul id="ul4">
			            <li><strong>Company</strong></li>
			            <li><a href="https://www.akana.com/about">About Us</a></li>
			            <li><a href="https://www.akana.com/press">News</a></li>
			            <li><a href="https://www.perforce.com/careers">Careers</a></li>
			            <li><a href="https://www.akana.com/contact-us">Contact Us</a></li>
			          </ul>
			        </div>
			      </div>
			    </div>
			  </div>

			  <div class="row credits" id="div6">
			    <div class="col-md-12">
			      <div class="row social">
			        <div class="col-md-12"><a href="https://twitter.com/akanaapi" class="twitter"> <span class="socialicons ico2"></span> </a>  <a href="https://www.linkedin.com/company/akana/" class="pinterest"> <span class="socialicons ico5"></span> </a>  <a href="https://www.youtube.com/channel/UC4QdcCn-FDCqN7gao7wp24g" class="behance"> <span class="socialicons ico7"></span> </a> </div>
			      </div>
			      <div class="row copyright" id="div7">
			       
			        <div class="col-md-12">&copy; 2020 Perforce Software, Inc. All Rights Reserved.</div>
			      </div>
			    </div>
			  </div>
			</footer>
			<!-- Scripts -->

			<script>								


			/* do we need this script below? */
			$(".balls").click(function(e) {
			    $("html, body").bind("scroll mousedown DOMMouseScroll mousewheel keyup", function(){
			       $('html, body').stop();
			   });
			    var elem;
			    e.preventDefault();
			    var id = $(this).attr("id");
			    if(id == "scrollBtn1") {
			        elem = "#box-top";
			 }else if(id == "scrollBtn2"){
			     elem = "#box-middle";
			 }else if(id == "scrollBtn3"){
			     elem = "#box-bottom";
			     
			 }
			 $('html, body').animate({
			        scrollTop: $(elem).offset().top - 96
			    }, 1500);
			    return false;
			});


			</script>
			<!--
			<script type="text/javascript"> 
			var debugMode=true;
			var bt_config_project_id = 114;
			var bt_config_default_location = "Home Page";
			var bt_config_btn_placement = "topLeft";
			var bt_config_btn_style = "trans";
			</script>
			<script type="text/javascript" src="http://bugtracker.ripemedia.com/widget/js/embed.js"></script> -->
			<!-- RipeTracker Button END -->
			<div id="soa-control-dc-overlay" class="soa-ui-dc-overlay"></div>
			<script type="text/javascript">
				$(function() {
					$(".soa-ui-dc-container-main-left-nav-item-link").click(function(e){
						if ( ! $(this).closest(".soa-ui-dc-container-main-left-nav-inner").length ) {
							$(".soa-ui-dc-container-main-left-nav-item").removeClass('soa-ui-dc-container-main-left-nav-item-selected');
							$(this).parent().addClass('soa-ui-dc-container-main-left-nav-item-selected');
							// $(this).addClass('soa-ui-dc-container-main-left-nav-item-selected');
						}
					});
				});
			</script>

		</div>
	</body>
</html>
