---
layout: page
title: Customization Use Case
description: Community Manager Customization Use Case -- Separating the Developer Portal and Admin Portal Themes.
product: cm
category: ref
sub-nav-class: Customization
weight: 11
type: page
nav-title: Customization Example - Separate Themes
---
<h1 id="top">Community Manager Customization Use Case: Separating the Developer Portal and Admin Portal Themes</h1>
<p>Use case describing the steps required to create <strong>developer</strong> theme and <strong>admin</strong> theme, both extending from Hermosa theme. The <strong>developer</strong> theme has customization and the <strong>admin</strong> theme does not have customization.</p>
<hr class="divide_hr" />



<h2 style="color: gray;">Table of Contents</h2>
<ol class="table_of_contents">
	<li><a href="#overview">Overview</a></li>
	<li><a href="#backup_prep">Backup and Preparation</a></li>
	<li><a href="#changethemes">Change the Themes</a></li>
	<li><a href="#custom_updates">Customization Updates</a></li>
	<li><a href="#email_templates">Email Templates</a></li>
</ol>
<hr class="divide_hr" />



<h2 id="overview">Overview</h2>
<p>The following instructions describe the steps to take in a sample use case where&nbsp;there are two themes:	</p>
<ul>
<li>	One for Site Administrators, using Hermosa theme. Customization is optional.</li>
<li>One for all other users (mainly app developers), using Hermosa theme, with customization.</li>
</ul>
<p><a href="#top">Back to top</a></p>



<h2 id="backup_prep">Backup and Preparation</h2>
<p>It's important to be prepared so that if anything goes wrong you can revert to the previous state, or fix as needed.</p>


<h3 id="backup">Preparation:</h3>
<ol>
	<li>It's important that the Admin Portal is accessible at all times. In case there is any error or issue with creating new themes, this is the back door so that you can fix as needed. One easy way to do this is to add a Hermosa theme and assign a virtual host which will not be used in the new themes. The virtual host must be unique per theme. If you already have a Hermosa theme, make sure Site Admin access is available.</li>
	<li>The new <strong>developer</strong> and <strong>admin</strong> themes must have unique virtual host names. Make sure you have you have them ready.<strong> </strong></li>
</ol>


<h3 id="preparation">Backup:</h3>
<p> To back up the existing files, follow the steps below.</p>
<ol>
	<li>Log in to the Admin Portal.</li>
	<li>Go to <strong>Admin</strong> &gt; <strong>Config</strong> &gt; <strong>Resources</strong>.</li>
	<li>In the <strong>Resources</strong> section, click <strong>File Manager</strong>. Download the customization files to a safe location.	</li>
	<li>In <strong>Admin</strong> &gt; <strong>Site</strong>:
<ul>
			<li><strong>Versions prior to 2019.1.11 only</strong>: Make sure you added out-of-the-box Hermosa theme as one of the themes, required to support extending from Hermosa theme. In 2019.1.11 and later, this is not required.</li>
			<li>If the Virtual Host/Vanity Hostnames which we will be using for new <strong>admin</strong> theme and <strong>developer</strong> theme are already in use for any other themes, make sure you delete them from those themes. The virtual host must be unique per theme.</li>
			<li>Delete all the directories in /theme/ directory. There might be /default and /hermosa directories in the theme&nbsp;directory.</li>
			<li>For the Default Theme that's used for the Admin Portal, change the name in the <strong>Virtual Host/Vanity Hostnames column</strong>.</li>
		</ul>
		</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="changethemes">Change the Themes</h2>
<p>When changing themes, do one theme at a time. Make sure you always have access to the theme which has Site Admin access. In this use case, it is the Default theme (Preparation step 1).</p>
<ol>
	<li>Log in to the Admin Portal.</li>
	<li>Go to the <strong>Admin</strong> > <strong>Site</strong> page.</li>
	<li>Add a new custom theme for developers:
		<ul>
			<li>Enter a Custom Theme Name: <strong>developer</strong> (all lower case is the naming convention).</li>
			<li>Select the Theme Name: hermosa.</li>
			<li>Enter all the virtual host details for the <strong>developer</strong> theme.</li>
			<li>Enter the Console Address for the <strong>developer</strong> theme.</li>
			<li>Enter a Site Title and Description.</li>
			<li>Access the <strong>developer</strong> theme and make sure everything is working.</li>
			</ul>
		<p>An example of the configuration for the Developer Portal is shown below:</p>
		<p><img src="uc_separate_themes/custom_eg_create_theme_developer.png"alt="adding the Developer theme"/></p>
	</ul></li>
	<li>Add a theme for the Admin Portal:
	<ul>
	<ul>
		<li>Enter a Custom Theme Name: <strong>admin</strong> (all lower case is the naming convention).</li>
		<li>Select the Theme Name: hermosa.</li>
		<li>Enter all the virtual host details for the <strong>admin</strong> theme.</li>
		<li>Enter the Console Address for the <strong>admin</strong> theme.</li>
		<li>Enter a Site Title and Description.</li>
		<li>Access the <strong>admin</strong> theme and make sure everything is working.</li>
	</ul>
	<p>An example of the configuration for the Admin Portal is shown below:</p>
	<p><img src="uc_separate_themes/custom_eg_create_theme_admin.png"alt="adding the Admin theme"/></p></ul></li>
	<li>For the <strong>developer</strong> theme customizations:
		<ul>
			<li>Go to <strong>Admin</strong> &gt; <strong>Config</strong> &gt; <strong>Resources</strong>.</li>
			<li>In the <strong>Resources</strong> section, click <strong>File Manager</strong>. Navigate to the <strong>theme</strong> directory.</li>
			<li>Create a <strong>theme/developer</strong> folder structure, and then upload the customization files you require for the <strong>developer</strong> theme.
				<p><strong>Note</strong>: Don’t upload the entire ZIP file that you downloaded in <a href="#backup_prep">Backup and Preparation</a> above. The ZIP file might contain <strong>theme/hermosa</strong> and <strong>theme/default</strong> directories, and if you upload these you will customize the out-of-the-box Hermosa theme and out-of-the-box Default theme.</p></li>
			<li>Rebuild styles for the <strong>developer</strong> theme, only if you have custom.less in your customization files.</li>
			</ul>
	<p>After creating the additional themes, the Site Themes should look similar to the example below that corresponds to your version.</p>
	<p><strong>Versions prior to 2019.11:</strong></p>
	<p><img src="uc_separate_themes/custom_eg_themes_list_up_to_2019_1_11.png"alt="themes list for versions prior to 2019.1.11"/></p>
<p><strong>Version 2019.1.11 and later:</strong></p>
	<p><img src="uc_separate_themes/custom_eg_themes_list_2019_1_11_and_later.png"alt="themes list"/></p>
	</li>
	<li>If needed, customize the <strong>admin</strong> theme also. See <a href="#customize_theme_admin">Optional: customizing the admin theme</a> below.</li>
</ol>
	<h4 id="customize_theme_admin">Optional: customizing the admin theme</h4>
<ol>
	
		<li>Go to <strong>Admin</strong> &gt; <strong>Config</strong> &gt; <strong>Resources</strong>.</li>
			<li>In the <strong>Resources</strong> section, click <strong>File Manager</strong>. Navigate to the <strong>theme</strong> directory.</li>
			<li>Create a <strong>theme/admin</strong> folder structure, and then upload the customization files you require for the <strong>admin</strong> theme.
				<p><strong>Note</strong>: Don’t upload the entire ZIP file that you downloaded in <a href="#backup_prep">Backup and Preparation</a> above. The ZIP file might contain <strong>theme/hermosa</strong> and <strong>theme/default</strong> directories, and if you upload these you will customize the out-of-the-box Hermosa theme and out-of-the-box Default theme.</p>
			</li>
			<li>Rebuild styles for the <strong>developer</strong> theme, only if you have custom.less in your customization files.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="custom_updates">Customization Updates</h2>
<p>If there is any new customization to be uploaded to the portal, add the updates to the folders for the <strong>developer</strong> and <strong>admin</strong> themes only. Then, rebuild styles only for the theme that has been customized. For example, if you add new files to the developer folder, rebuild styles only for the developer theme, as shown below.</p>
<p><img src="uc_separate_themes/custom_eg_rebuild_styles.png"alt="rebuilding the styles for a theme"/></p>
<p>In this use case, since the Admin Portal is using the Akana Hermosa theme, customization is not required.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="email_templates">Customize Email Templates (versions earlier than 2019.1.11)</h2>
<p><strong>Note</strong>: In version 2019.1.11 and later, customizing the email templates is not needed.</p>
<!--<p>{<span class="apidoc_red">ATMO-31953</span>}</p>-->
<p>In this use case, since both the <strong>developer</strong> and the <strong>admin</strong> themes are based on the Hermosa theme, not Default theme, you will also need to add the email template variables to the THEME_IMPL_PROPERTIES table. Each of the templates that exist must be inserted for a THEMEIMPL set to hermosa.</p>
<p>An example query is shown below. Run this query to insert all the values for the hermosa theme.</p>
<pre>insert into THEME_IMPL_PROPERTIES (THEMEIMPL,PROPERTY_NAME,PROPERTY_VALUE) VALUES ('hermosa','home.login.registration.path','home/login/{registration.code}');</pre>
<p>An example of the variables to update, in the database, is shown below.</p>
<p><img src="uc_separate_themes/custom_eg_update_email_templates.png" alt="adding the email template variables"/></p>
<p><a href="#top">Back to top</a></p>