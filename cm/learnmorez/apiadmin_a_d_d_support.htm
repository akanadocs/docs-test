---
layout: page
title: API Description Document Support | API Admin | Akana API Platform Help
description: Information about the platform's support of API description languages for API documentation.
product: cm
category: learn
sub-nav-class: API Admin
weight: 2616
type: page
nav-title: API Description Document Support
---
<h2 id="top">API Description Document Support</h2>

<p>Information about the platform's support of API description languages for API documentation.</p>
<h5 class="stamp">API Platform Version: 8.1</h5>

<div class = "divider1"></div>

<h3 style="color: gray;">Table of Contents</h3>



<h5 style="color: gray;"><a href="#h_a_d_d_swagger">Swagger support:</a></h5>



<ol class="table_of_contents">
  <li><a href="#supported_versions_swagger">What Swagger versions does the platform support?</a></li>
  <li><a href="#featues_swagger">What Swagger support does the platform offer?</a></li>
  <li><a href="#swagger_extensions">Does the platform use any Swagger extensions?</a></li>
  <li><a href="#support_of_external_json_schemas">Does the platform support referencing of JSON schemas that are external to the API document definition?</a></li>
  <li><a href="#overloaded_operations_support_apidoc">Does the platform support overloaded operations in API documentation?</a></li>
  <li><a href="#swagger_support_limitations">Are there any capabilities of the Swagger specification that the platform doesn't support?</a></li>
</ol>



<h5 style="color: gray;"><a href="#h_a_d_d_raml">RAML support:</a></h5>



<ol class="table_of_contents">
  <li><a href="#supported_versions_raml">What RAML versions does the platform support?</a></li>
  <li><a href="#supported_features_raml">What features of the RAML specification does the platform support?</a></li>
  <li><a href="#support_of_sample_values_for_raml">Does the platform support including sample values for generated RAML documentation?</a></li>
  <li><a href="#supported_features_raml_200">Does the platform support the capabilities of the RAML 200 Tutorial?</a></li>
</ol>



<div class = "divider1"></div>




<div class = "divider1"></div>
<h3><a name="h_a_d_d_swagger"></a>Swagger Support:</h3>




<a name="supported_versions_swagger"></a><h3>What Swagger versions does the platform support?</h3>
<p>The Akana Platform supports Swagger 1.2 and 2.0 along with Swagger-YAML.</p>
<p>The Akana API Platform user interface supports import of Swagger 2.0 and Swagger-YAML when adding a new API. However, it does not support upload of a Swagger 1.2 API description.</p>
<p>The underlying infrastructure supports creating an API by importing an API description document in either Swagger version, 1.2 or 2.0. You can use the Policy Manager console to load the Swagger 1.2 as a new service; then, you can use  the Akana Platform user interface to add a new API and select the <strong>Publish an existing service as an API</strong> option.</p>
<p><a href="#top">Back to top</a></p>



<a name="featues_swagger"></a><h3>What Swagger support does the platform offer?</h3>
<p>The platform allows defining an API by uploading a Swagger description document. It also supports updating an existing API by uploading a Swagger description document.</p>
<p>Aspects of the API definition, such as parameters, request and response model objects, responses including HTTP codes and messages, and descriptive content are all supported.</p>
<p>The API documentation is generated dynamically for users.</p>
<p><a href="#top">Back to top</a></p>



<a name="swagger_extensions"></a><h3>Does the platform use any Swagger extensions?</h3>
<p>Yes, the Akana API platform uses certain Swagger extensions to extend capabilities within the platform. These extensions are used internally and are not re-constituted when exporting an API description document.</p>
<p>In the underlying infrastructure, extensions are stored and reconstituted for the top-level Swagger object, operations, parameters, responses, and schema, regardless of whether the extension is external or internal.</p>
<p><a href="#top">Back to top</a></p>



<a name="overloaded_operations_support_apidoc"></a><h3>Does the platform support overloaded operations in API documentation?</h3>
<p>The platform supports adding <a href="basics_glossary.htm#gl_overloaded_operation">overloaded operations</a> (multiple operations using the same path, with different design elements such as media types), and displays overloaded operations correctly in the user interface, including API pages, generated API documentation, and Test Client.</p>
<p>The Swagger 2.0 standard specification does not support overloaded operations; because of this, if you try to download a Swagger document (<strong>API</strong> &gt; <strong>Details</strong> &gt; <strong>Implementations</strong> (bottom of page) for an API that includes overloaded operations, the platform generates an error. This is also true for Swagger 1.2 and RAML. Overloaded operations are not an issue with WADL.</p>
<p><a href="#top">Back to top</a></p>


<a name="support_of_external_json_schemas"></a><h3>Does the platform support referencing of JSON schemas that are external to the API document definition?</h3>
<p>No; all JSON schemas must be defined as part of the API description  document, without the need for any additional external information. Referenced external schemas are not currently supported.</p>
<p>The platform supports referencing of JSON schemas in these scenarios:</p>
<ul>
  <li>Schemas referenced in the same RAML file</li>
  <li>Inline schemas</li>
</ul>
<p><a href="#top">Back to top</a></p>



<a name="swagger_support_limitations"></a>
<h3>Are there any capabilities of the Swagger specification that the platform doesn't support?</h3>
<p>The platform currently has no support or limited support for these capabilities of the Swagger 2.0 specification:</p>
<ul>
  <li><strong>Global Parameters</strong>
    <p>The API Platform does not support the use of global parameters in Swagger 2.0, and neither does the underlying infrastructure.</p></li>
  <li><strong>Includes</strong>
    <p>In the API platform, includes are ignored, including references to schema documents.</p>
    <p>In the underlying infrastructure, upload is supported only for a single file. However, you can include referenced documents along with the root document by including multiple files in a single ZIP file (uploaded locally, or retrieved from an external URL).</p>
  </li>
  <li><strong>Examples</strong>
    <p>The Swagger 2.0 specification supports including sample values in Swagger documentation; however, the Akana API Platform doesn't currently support this feature.</p>
  <p>The underlying infrastructure supports including examples in Swagger for parameters, but not for operations. In the API platform, examples are ignored, and are not displayed in the API Designer or in generated documentation.</p></li>
</ul>
<p><a href="#top">Back to top</a></p>




<div class = "divider1"></div>
<h3><a name="h_a_d_d_raml"></a>RAML Support:</h3>




<a name="supported_versions_raml"></a><h3>What RAML versions does the platform support?</h3>
<p>The Akana API platform supports RAML version 0.8.</p>
<p><a href="#top">Back to top</a></p>



<a name="supported_features_raml"></a><h3>What features of the RAML specification does the platform support?</h3>
<p>The Akana platform supports the core features of the RAML specification, as referenced in the RAML 100 Tutorial (<a href="http://raml.org/developers/raml-100-tutorial" title="RAML tutorial" target="_blank">http://raml.org/developers/raml-100-tutorial</a>), except examples.</p>
<p>It supports:</p>
<ul>
  <li>Root</li>
  <li>Resources</li>
  <li>Methods</li>
  <li>URI parameters</li>
  <li>Query parameters</li>
  <li>Responses</li>
</ul>
<p>The platform doesn't yet support including examples in the generated documentation. Examples for query parameters, request body, or response body are not represented in the Akana API Designer and are omitted when exporting to Swagger, WSDL, or WADL</p>
<p><a href="#top">Back to top</a></p>



<a name="support_of_sample_values_for_raml"></a><h3>Does the platform support including sample values for generated RAML documentation?</h3>
<p>The RAML 0.8 specification support including a sample request in RAML documentation; however, the Akana API Platform currently does not support this feature.</p>
<p>The underlying infrastructure supports including examples for parameters in RAML, but not for operations.</p>
<p><a href="#top">Back to top</a></p>



<a name="supported_features_raml_200"></a><h3>Does the platform support the capabilities of the RAML 200 Tutorial?</h3>
<p>The RAML 200 tutorial (<a href="http://raml.org/developers/raml-200-tutorial" target="_blank">http://raml.org/developers/raml-200-tutorial</a>) demonstrates more complex capabilities of RAML, including:</p>
<ul>
  <li>Body parameters</li>
  <li>Form parameters</li>
</ul>
<p><strong>Includes</strong>:  If you're uploading a single RAML file that has includes, either from a URL or from the local filesystem, the platform generates an error on import. However, you can include referenced documents along with the root document by including multiple files in a single ZIP file (uploaded locally, or retrieved from an external URL). </p>
<p>Some of the capabilities covered by the RAML 200 tutorial are not yet supported by the Akana API platform, including:</p>
<ul>
  <li><strong>Traits</strong>: If you import a RAML file with Traits, the platform generates an error when trying to view the API in the API Designer.</li>
  <li><strong>RAML Specification Parameters</strong>: If you import a RAML file with Specification Parameters, no errors are generated but the Specification Parameters are ignored.</li>
  <li><strong>Resource Types</strong>: If you import a RAML file with Resource Types, the platform gives an error when trying to view the API in the API Designer.</li>
  <li><strong>External Schemas</strong>: the platfor supports schemas referenced in the same RAML file and inline schemas, but does not support schemas referenced in an external file. The import fails.</li>
</ul>
<p><a href="#top">Back to top</a></p>



<div class = "divider1"></div>



<h3 id="relatedtopics">Related Topics</h3>
<table width="700" border="0" cellspacing="0" cellpadding="2" class="doctable">
  <tr>
    <td width="300"><ul>
  <li><a href="apiadmin_.htm">API Administration Summary Page</a></li>
  <li><a href="apiadmin_getting_started.htm">Getting Started for API Developers</a></li>
  <li><a href="basics_glossary.htm">Glossary of Terms</a></li>
    </ul>
</td>
    <td width="400"><ul>
  <li><a href="apiadmin_overview.htm">API Administration: Overview</a></li>
<!--  <li><a href="apiadmin_api_add.htm">Adding an API</a></li>-->
  <li><a href="apiadmin_api_design.htm">Add or Modify an API Using API Designer</a></li>
  <li><a href="apiadmin_implementations.htm">Manage API Implementations</a></li>
  <li><a href="api_admin_testing_tc.htm">API Testing with Test Client</a></li>
    </ul>
</td>
  </tr>
</table>
<hr />
