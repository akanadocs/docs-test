---
layout: page
title: Test Your App | App Development | Community Manager Help
description: Test your app.
product: cm
category: learn
subcategory: Test
weight: 13
type: page
nav-title: Test Your App
---
<h2 id="top">Test Your App</h2>
<p>Test your app with one or more APIs.</p>

<div class = "divider1"></div>

<h3 style="color: gray;">Table of Contents</h3>
<ol class="table_of_contents">
  <li><a href="#what_app_testing_tools_does_the_platform_provide">What app testing tools does the platform provide?</a></li>
  <li><a href="#how_do_i_test_my_app_in_the_sandbox">How do I test my app in the sandbox?</a></li>
  <li><a href="#what_are_some_sample_rest_clients_i_can_use_to_test_my_api">What are some sample REST clients I can use to test an API I want to use?</a></li>
  <li><a href="#what_is_the_developer_console">What is the Developer Console (Dev Console)?</a></li>
  <li><a href="#how_do_i_test_my_app_in_the_dev_console">How do I test my app in Dev Console?</a></li>
  <li><a href="#how_do_i_get_dev_console_to_stop_caching">How can I make sure I always see the latest results in Dev Console?</a></li>
  <li><a href="#how_do_i_test_authorization_of_my_app_with_oauth_using_the_dev_console">How do I test authorization of my app with OAuth using Dev Console?</a></li>
</ol>
<div class = "divider1"></div>



<a name="what_app_testing_tools_does_the_platform_provide"></a><h3>What app testing tools does the platform provide?</h3>
<p>The platform provides the following app testing tools:</p>
<ul>
  <li>Dev Console</li>
  <li>Performance monitoring</li>
</ul>
<p><strong>Dev Console</strong></p>
<p>The Developer Console (Dev Console) is a web-based REST client that allows you to test different APIs in the context of an application. It is accessible on the <em>Apps &gt; Dev Console</em> page of all apps you add to the platform.</p>
<p><strong>Performance Monitoring</strong></p>
<p>The <em>My Apps &gt; Monitor</em> section includes reporting tools for monitoring the performance of your app. Based on real-time data reported through the monitoring tools, you can troubleshoot potential problems with your app.</p>
<ul>
  <li>The <em>Charts</em> reporting tool allows you to monitor and view service response time, adherence to defined contract terms (such as, Quality of Service policies), and transaction faults.</li>
  <li>The <em>Usage Logs</em> reporting tool allows you to query and view information about request and response message data for API, App, and Contract activity.</li>
  </ul>
<p>For more information on performance monitoring, see <a href="app_monitoring.htm#how_do_i_monitor_app_performance">How do I monitor app performance?</a></p>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_test_my_app_in_the_sandbox"></a><h3>How do I test my app in the sandbox?</h3>
<p>When you submit an API access request for an API's sandbox environment, and your request is approved, you can test your app using the sandbox endpoint.</p>
<p>In many cases, though not all, access to the Sandbox endpoint is granted automatically, so you don't have to wait for approval. If you're not sure whether the contract is approved yet, go to your App Details page and, on the left, click APIs. You'll see the status of your contract, most likely either Pending or Approved.</p>
<p>Once you have access to the sandbox endpoint, you can test your app with the API. For example, you might want to:</p>
<ul>
  <li>Test the behavior of your app with API calls to verify that the app is behaving as expected.</li>
  <li>Test with simulated transactions and data.</li>
  <li>Check that the flow of information to the app is predictable (i.e., the expected information in the expected format).</li>
  <li>Check that the app is processing the API results correctly.</li>
  <li>Test error handling and usability.</li>
</ul>
<p>By using a testing environment, you can experiment with different scenarios and make adjustments as needed to make sure that your app works as expected with the API.</p>
<p><a href="#top">Back to top</a></p>



<a name="what_are_some_sample_rest_clients_i_can_use_to_test_my_api"></a>
<h3>What are some sample REST clients I can use to test an API I want to use?</h3>
<p>Examples of test clients you can use to send REST requests include: <a href="http://code.google.com/p/rest-client/" target="_blank">Google rest-client</a>, <a href="https://addons.mozilla.org/en-US/firefox/addon/restclient/" target="_blank">RESTClient Firefox Add-on</a>, and <a href="http://www.soapui.org/" target="_blank">soapUI</a>.</p>
<p><a href="#top">Back to top</a></p>



<a name="what_is_the_developer_console"></a><h3>What is the Developer Console (Dev Console)?</h3>
<p>The Developer Console (Dev Console) is a web-based REST client that allows you to test different APIs in the context of an application. You can use it to try out any API that your app has a contract with. It is accessible on the <em>Apps &gt; Dev Console</em> page of all apps you add to the platform.</p>
<p>Most or all APIs on the platform have an &quot;API Consumer Application Security Policy&quot; assigned. This policy is used to identify (authenticate) the app that is attempting to access the API, to make sure the app is authorized. This policy type supports multiple mechanisms for the app to present its identity, including plain text App Id, signed header with x.509 or a shared secret, or OAuth (1.0a or 2.0). This is the default policy assigned to all APIs. Specific APIs might have other security policies assigned. The policies assigned to the API you're using will affect the settings and options you'll see in Dev Console / Test Client.</p>
<p>When your application is connected to an API (through the <strong>API Access Request </strong>process), the application security credentials you've assigned to your app (via <em>App Details &gt; Security Credentials</em>) work in conjunction with the API security policies. The request message that is sent to the API must obey the security policies assigned to the API or the request will be rejected.</p>
<p><strong>Note</strong>: If your app's contract with an API includes one or more licenses, the Dev Console will only display the operations that the app has permission to access based on the license governing the contract.</p>
<p>You can use Dev Console / Test Client to:</p>
<ol>
  <li>Determine what is needed to send a request to an API.</li>
  <li>Verify if you can successfully send a request to an API.</li>
  <li>If your API calls are failing in the sandbox or production environment, test to see if you get different results in Dev Console. <br />
   <br />
For example, if your app sends a request message to the API and it is rejected, it might be because the security credentials in your app do not match those configured in the API policy. Let's say  your app is configured with an SHA1 - Shared Secret, but the API Policy is configured with SHA with RSA - PKI. In this case, the credential mismatch would cause the request to fail. You could test with different credentials using Dev Console.</li>
  <li>Test different operations in your app.</li>
</ol>
<p>Before using Dev Console, you must:</p>
<ol>
  <li>Identity an API you would like to test with your app. This API can be one that is already available in the platform, or can be one that you've added using the <strong>Add a New API </strong>function via the <em>Plus Menu</em>.</li>
  <li>Add an app to the platform. This can be done using the <strong>Add a New App</strong> function via the <em>Plus Menu</em>. Make sure that you've assigned the desired security credentials in the <em>App Details &gt; Security Credentials</em> section.</li>
  <li>Submit an API Access Request (via the <strong>Access</strong> link on the <em>API Details</em> page) for the API you want to try out. The API Access Request must be approved by the API Admin before you can begin testing the API with the Dev Console. In many cases, a contract in the Sandbox environment might be automatically approved, but production access requests generally require manual approval. The approval process might be different for different APIs.</li>
</ol>
<p>The Dev Console includes an API drop-down that displays a list of the APIs that your app is currently connected to. When you select an API from the drop-down, the platform analyzes the API configuration and the security policies assigned to the API and populates the fields with the appropriate information. After the Dev Console is populated, you configure each test case and then click <strong>Run It</strong>.</p>
<p>The following illustration shows the Dev Console with the Bing VirtualEarth API loaded. Continue to <a href="#how_do_i_test_my_app_in_the_dev_console">How do I test my app in the Dev Console?</a> for an example walkthrough that illustrates how to test your app with the Dev Console.</p>
<p><img src="images/devconsole_example.jpg" width="629" height="448" alt="" /></p>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_test_my_app_in_the_dev_console"></a><h3>How do I test my app in Dev Console?</h3>
<p>To test your app in Dev Console / Dev Client, you'll need to complete the steps below.</p>
<h5>To test an app in Dev Console / Test Client:</h5>
<ol>
  <li>Set up an app in the developer platform. For instructions, see <a href="app_create_app_creation.htm#how_do_i_create_a_new_app">How
    do I create a new app?</a></li>
  <li>Set up a contract between your app and the API you want to test. For instructions, see <a href="app_access_apis_api_access.htm#how_do_i_get_api_access_for_my_app">How do I get API access for my app?</a></li>
  <li>Go to Dev Console / Test Client and choose the API/environment you want to test.</li>
  <li>Choose the operation you want to try out.</li>
  <li>Specify additional values needed for the specific operation, such as headers and parameters. Dev Console will offer you the choices that are valid for the specific API and operation that you've chosen.</li>
  <li>Check the URL to make sure it looks right.</li>
  <li>Set up additional security values as needed. The requirements will vary depending on the security mechanisms supported by the API and used by your app. If the API uses OAuth you'll need to authenticate and get a token.</li>
  <li>Click <strong>Run It</strong> (Dev Console) or <strong>Run</strong> (Test Client).</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_get_dev_console_to_stop_caching"></a>
<h3>How can I make sure I always see the latest results in Dev Console?</h3>
<p>If the API you're using sets the cache-control response header, the response message is cached. When you send multiple requests, the first response is cached for the time specified as the value in the API's cache-control response header, and you may see the same response for all subsequent requests until the cache expires. This could mean that when you send a subsequent request, the response you see is from the cache, not from the server. If this happens, there will only be one transaction log, even if you click the <strong>Run</strong> button multiple times, until the cache expires or is cleared. </p>
<p>To make sure you are always seeing the latest information, clear your browser cache before sending subsequent requests.</p>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_test_authorization_of_my_app_with_oauth_using_the_dev_console"></a><h3>How do I test authorization of my app with OAuth using Dev Console?</h3>
<p>The following procedure provides a simple example of how to use the Dev Console to test authorizing your app with OAuth and then sending a request.</p>
<h5>Pre-conditions</h5>
<ol>
  <li>Your app must be connected to the API. See <a href="app_access_apis_api_access.htm#how_do_i_get_api_access_for_my_app">How do I get API access for my app?</a></li>
  <li>The API must support OAuth.</li>
  <li>The app security credentials must be a type of credentials that the API supports.</li>
  </ol>
<p><strong>Note</strong>: For app security, OAuth supports shared secret or PKI options. If you want to use the PKI option instead of shared secret as credentials, Dev Console needs your app's private key. To provide the private key, you can upload the keystore, which is a file format that supports both private key and certificate. Dev Console supports the <a href="basics_glossary.htm#gl_pkcs12">PKCS12</a> keystore format. If you are uploading a keystore, make sure it matches this format.</p>
<h5>Procedure</h5>
<ol>
  <li>Go to the App Details page.</li>
  <li>On the left menu, choose Dev Console (in Simple Developer theme, choose Test Client).</li>
  <li>Select the API. Based on the API details, the following occurs:
    <ul>
      <li>The details of the API (Endpoint, Operation, Method, Accept header, Content-Type header, Path, and URL) are displayed</li>
      <li>The <strong>Security</strong> button is enabled so that you can set up the app security.</li>
    </ul>
  </li>
  <li>Choose an operation you want to invoke, and specify additional values such as headers and parameters. For more information on these fields, see <a href="#field_values_test_client">Test Client: Configuration Values</a>.</li>
  <li>Set up the security settings. Depending on the specific scenario, you might need to set up one or more of the following:  </li>
  <ul>
    <li><strong>Credentials</strong>: App ID and Shared Secret, or upload a keystore file that includes your app's private key and certificate (<a href="basics_glossary.htm#gl_pkcs12">PKCS12</a> keystore). If you upload a keystore file you'll also need to provide the password for the file.</li>
    <li><strong>For AtmosphereApplicationSecurityPolicy</strong>: Authentication method, Token Algorithm and Token Location. This sets values for generating the security token to be sent to the API endpoint, and determines how it is sent.</li>
    <li><strong>For OAuth Security Policy</strong>: OAuth Version, Grant Type, and Authentication Method. Then click Get Token to generate the token.</li>
  </ul>
  <li>To send a test request to the API, click <strong>Run It</strong>. The results are shown in the Dev Console window, and the transaction is recorded in the transaction log for the app and for the API (viewable via App &gt; Monitor).</li>
</ol>
<a name="field_values_test_client"></a><h4>Test Client: Configuration Values</h4>
<p>The table below shows the configuration values in the Test Client main window.</p>
<table cellspacing="0px" class="doctable" style="width: 98%;">
<thead>
  <tr>
    <th width="40%">Field...</th>
    <th width="60%">Values...</th>
  </tr>
</thead>
<tbody>
  <tr class="t2row">
    <td>API</td>
    <td><p>Choose an API you want to test against. If the API you want isn't on the list, your app doesn't yet have an approved contract with the API. To check the status of app/API contracts, go to App &gt; APIs.</p></td>
  </tr>
  <tr class="t1row">
    <td>Operation</td>
    <td><p>Choose an operation you want to test against. If your app's contract with the API is governed by a license, you'll only see the operations you have permission to use.</p></td>
  </tr>
 <tr class="t2row">
    <td>Method</td>
    <td><p>The HTTP method that applies to the operation you selected is displayed.</p></td>
  </tr>
  <tr class="t1row">
    <td>Endpoint</td>
    <td><p>	

The list of endpoints you have access to, for the API you selected. If there are no URLs or a URL is missing, you have probably not been granted access to this endpoint yet. Check your API access requests to see if there is a pending request.</p></td>
  </tr>
 <tr class="t2row">
    <td>Path</td>
    <td><p>	

The path includes all the query and path parameters in parentheses (for example {}). Each parameter can be filled out to make up the path dynamically.</p></td>
  </tr>
  <tr class="t1row">
    <td>Headers: Content-Type</td>
    <td><p>	

The Content-Type header sent in the request. This lets the API know the format of the information you are sending. To specify a custom media type, or a media type that isn't listed, select Other.</p>
      <p>If the operation is a GET, Content-Type is not applicable and is grayed out.</p></td>
  </tr>
  <tr class="t2row">
    <td>Headers: Accept</td>
    <td>The Accept header is used by the App to tell the API what content types it will accept. To specify a custom media type, or a media type that isn't listed, select Other.</td>
  </tr>
  <tr class="t1row">
    <td>Headers: Add Header</td>
    <td>Use this field to add one or more custom headers. Just click <strong>Add</strong> and specify the header name and value.</td>
  </tr>
  <tr class="t2row">
    <td>Parameters:</td>
    <td><p>The list of parameters that will be sent to the API. There are three types: <strong>path</strong>, <strong>query</strong>, and <strong>form</strong>:</p>
      <ul class="apidoctable_ul">
        <li>Path parameters are determined by the path for the operation; you can't add or remove them.</li>
        <li>Query parameters may be described in the path, but you can also add your own.</li>
        <li>Form parameters can only be added when the method is POST/PUT and the Content-Type is application/x-www-form-urlencoded.</li>
      </ul>      </td>
  </tr>
  <tr class="t1row">
    <td>URL</td>
    <td>	

The URL that the test message will be sent to. The URL that's displayed is generated based on the information entered in earlier fields.</td>
  </tr>
  <tr class="t2row">
    <td>Credentials</td>
    <td>Click to set up your app's credentials. Values required vary according to the API setup. For details, see below.</td>
  </tr>
  <tr class="t1row">
    <td>Security Settings</td>
    <td>Click to set up your app's security settings. Values required vary according to the API setup. For details, see below.</td>
  </tr>
  <tr class="t2row">
    <td>Request/Response</td>
    <td><p>When you click Run, the request and response are displayed. Use this information to test and debug as needed.</p>
      <p>You can also click the tabs to see the request and response in different formats: Raw, Pretty, and Headers.</p></td>
  </tr>
</tbody>
</table>

<p>The table below shows the configuration values in the Test Client <strong>Credentials</strong> window (in Dev Console this is in <strong>Security</strong>).</p>
<table cellspacing="0px" class="doctable" style="width: 98%;">
  <thead>
    <tr>
      <th width="40%">Field...</th>
      <th width="60%">Values...</th>
    </tr>
  </thead>
  <tbody>
    <tr class="t2row">
      <td>App ID</td>
      <td>The unique ID that identifies your app to the API, that will be used for the request. If it is blank, you will need to go to the API provider directly and read their instructions for getting an App ID.</td>
    </tr>
    <tr class="t1row">
      <td>Shared Secret</td>
      <td>The unique shared secret value that validates your app with the API, that will be used for the request. If it is blank, you'll need to enter your app's shared secret value. If you don't have a shared secret on the platform, go to the API provider directly and get a Shared Secret value for your app.</td>
    </tr>
    <tr class="t2row">
      <td>Upload Keystore</td>
      <td>Check this box to upload a keystore file.</td>
    </tr>
    <tr class="t1row">
      <td>File to Upload</td>
      <td>Browse to the location of the <a href="basics_glossary.htm#gl_pkcs12">PKCS12</a> keystore file that contains the private key and certificate of the App.</td>
    </tr>
    <tr class="t2row">
      <td>Password</td>
      <td>The password for the keystore file, assigned when the keystore file was created.</td>
    </tr>
  </tbody>
</table>
<p>The table below shows the configuration values in the Security Settings window if the <strong>OAuth policy</strong> is applied to the API.</p>
<table cellspacing="0px" class="doctable" style="width: 98%;">
  <thead>
    <tr>
      <th width="40%">Field...</th>
      <th width="60%">Values...</th>
    </tr>
    <tr class="t2row">
      <td>OAuth Version</td>
      <td>Choose from OAuth versions supported by the API.</td>
    </tr>
    <tr class="t1row">
      <td>Grant Type</td>
      <td>OAuth 2.0 defines four grant types (security scenarios, or use cases). Choose from the list of grant types supported by the API. For more information, refer to the spec: http://oauth.net/2/.</td>
    </tr>
    <tr class="t2row">
      <td>Authentication Method</td>
      <td>Choose from authentication methods supported by the API.</td>
    </tr>
    <tr class="t1row">
      <td>Get Token button</td>
      <td>Click to get an access token from the API&rsquo;s identity provider, so your app can access the API. Test Client will add the access token to each request. You might need to log in to the identity provider.</td>
    </tr>
    <tr class="t2row">
      <td>Renew Token button</td>
      <td>If the token has expired, click to get a renew token from the API&rsquo;s identity provider, so your app can access the API. You might need to log in to the identity provider.</td>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>
<p>The table below shows the configuration values in the Security Settings window if the <strong>AtmosphereApplicationSecurityPolicy</strong> policy is applied to the API.</p>
<table cellspacing="0px" class="doctable" style="width: 98%;">
  <thead>
    <tr>
      <th width="40%">Field...</th>
      <th width="60%">Values...</th>
    </tr>
  </thead>
  <tbody>
    <tr class="t2row">
      <td>Token Algorithm</td>
      <td>The algorithm to be used for generating the security token to be sent to the API endpoint.</td>
    </tr>
    <tr class="t1row">
      <td>Token Location</td>
      <td>Indicates how the token is added to the message: <strong>Header</strong>, <strong>QueryString</strong>, <strong>Form</strong>, or <strong>Cookie</strong>. The Form parameter is only applicable for POST or PUT.</td>
    </tr>
  </tbody>
</table>
<p>The table below shows the configuration values in the Security Settings window if the <strong>SameOriginPolicy</strong> policy is applied to the API.</p>
<table cellspacing="0px" class="doctable" style="width: 98%;">
  <thead>
    <tr>
      <th width="40%">Field...</th>
      <th width="60%">Values...</th>
    </tr>
  </thead>
  <tbody>
    <tr class="t2row">
      <td><p>SameOriginPolicy:</p>
        <p>API Supports CORS</p></td>
      <td>If the endpoint URL is on a host that is not the user interface host, same-origin policy will prevent the browser from accepting the response unless the API can send the <a href="basics_glossary.htm#gl_cors">CORS</a> headers. Check this box if the API supports CORS. If it doesn't, clear the box and the request will be proxied.</td>
    </tr>
    <tr class="t1row">
      <td>Authorization Endpoint Extension Parameters</td>
      <td>If your OAuth provider requires any additional parameters to be sent to the authorization endpoint, beyond the OAuth specification, enter the parameter names here. Dev Console will show these parameters to collect the values from developers.</td>
    </tr>
  </tbody>
</table>
<p><a href="#top">Back to top</a></p>



</div>
