---
layout: page
title: API Version Workflow | Customizing Workflows in the API Platform
description: Information about initial actions, reserved actions, functions, conditions, and variable resolvers for the API Version workflow.
product: cm
category: ref
sub-nav-class: Workflows
weight: 04
type: page
nav-title: API Version Workflow
---
<h1 id="top">API Version Workflow</h1>
<p>This section provides information about functions, conditions, and variables for the API version workflow, as well as initial actions and reserved actions.</p>
<p><strong>Note</strong>: API version workflow is optional. If no custom workflow is in place, the API version behavior is the default behavior described in the online help for the developer portal. See <a href="../learnmore/apiadmin_.htm">API Administration</a>.</p>
<!--<p>{<span class="apidoc_red">C:\SVN\akana\trunk\products\api-portal\com.soa.atmosphere.impl\src\com\soa\api\workflow\impl</span>}</p>-->
<hr class="divide_hr" />



<h2 style="color: gray;">Table of Contents</h2>
<ol class="table_of_contents">
	<li><a href="#apiv_wf_ov">API Version Workflow: Overview</a></li>
	<li><a href="#apiv_ia_00">API Version Workflow: Initial Actions</a></li>
	<li><a href="#apiv_ra_00">API Version Workflow: Reserved Actions</a></li>
	<li><a href="#apiv_f_00">API Version Workflow: Functions</a></li>
	<li><a href="#apiv_c_00">API Version Workflow: Conditions</a></li>
	<li><a href="#apiv_vr_00">API Version Workflow: Variable Resolvers</a></li>
	<li><a href="#apiv_workflow_template">API Version Workflow: Custom Workflow Template</a></li>
	<li><a href="#apiv_eg_01">API Version Workflow: Customization Example</a></li>
</ol>
<hr class="divide_hr" />



<h2 id="apiv_wf_ov">API Version Workflow: Overview</h2>
<p>By default, there is no API version workflow in the platform. In most cases, once an API version is active, it's best not to make changes to it.</p>
<p>However, in some cases, you might want to allow users with certain roles to be able to make specific modifications to an API version. For these scenarios, you can:</p>
<ol>
	<li>Use the custom workflow template provided with this document as a starting point. See <a href="#apiv_workflow_template">API Version Workflow: Custom Workflow Template</a>.</li>
	<li>Modify the template using the additional workflow actions, functions, conditions, and variable resolvers given in this document.</li>
</ol>
<p><a href="#top">Back to top</a></p>




<h2 id="apiv_ia_00">API Version Workflow: Initial Actions</h2>
<p>The following initial actions are valid for Akana API Platform workflows relating to APIs/API versions:</p>
<ul>
	<li><a href="#apiv_ia_01">@Create</a></li>
</ul>


<h3 id="apiv_ia_01">@Create</h3>
<p>Starts the workflow, for a new API version.</p>
<p>For more information, see <a href="01_overview_cm_wf.htm#s01_11_ia">Workflow Initial Actions</a>.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="apiv_ra_00">API Version Workflow: Reserved Actions</h2>
<p>If a custom API version workflow is in place, you can add one or more of the reserved actions given below. Note that for a reserved action to be valid, it must be appropriate for the state a workflow is in. For example, by default when an API version is in Active state it can be deleted but cannot be modified; if an API version is in Rejected state it can be submitted for approval.</p>
<p>The following reserved actions are valid for API version workflows:</p>
<ul>
	<li><a href="#apiv_ra_01">@Delete</a></li>
	<li><a href="#apiv_ra_02">@Modify</a></li>
	<li><a href="#apiv_ra_10">apiversion.action.submit.approval</a></li>
	<li><a href="#apiv_ra_11">apiversion.action.approve</a></li>
	<li><a href="#apiv_ra_12">apiversion.action.reject</a></li>
	<li><a href="#apiv_ra_13">apiversion.action.resubmit</a></li>
	<li><a href="#apiv_ra_additional">Additional reserved actions for modifying an API version that's already activated</a>:
		<ul>
			<li><a href="#apiv_ra_03">@ModifyPolicies</a> (Valid in version: 2019.1.0 and later)</li>
			<li><a href="#apiv_ra_04">@ModifyDeployments</a> (Valid in version: 2019.1.0 and later)</li>
			<li><a href="#apiv_ra_05">@ModifyDebugOptions</a> (Valid in version: 2019.1.0 and later)</li>
			<li><a href="#apiv_ra_06">@ModifyOutboundIdentities</a> (Valid in version: 2019.1.0 and later)</li>
			<li><a href="#apiv_ra_07">@ModifyExtensionProperties</a> (Valid in version: 2019.1.0 and later)</li>
			<li><a href="#apiv_ra_08">@DeleteAPIImplementation</a> (Valid in version: 2019.1.0 and later)</li>
			<li><a href="#apiv_ra_09">@ModifyLegals</a> (Valid in version: 2019.1.0 and later)</li>
			<li><a href="#apiv_ra_14">@AddDeploymentZones</a> (Valid in version: 2019.1.7 and later)</li>
			<li><a href="#apiv_ra_15">@ModifyAutoConnectSettings</a> (Valid in version: 2019.1.7 and later)</li>
			<li><a href="#apiv_ra_16">@ModifyImplementationInfo</a> (Valid in version: 2019.1.7 and later)</li>
			<li><a href="#apiv_ra_17">@AddApiImplementation</a> (Valid in version: 2019.1.7 and later)</li>
			<li><a href="#apiv_ra_18">@ModifyPolicies</a> (Valid in version: 2019.1.7 and later)</li>
			<li><a href="#apiv_ra_19">@ModifyDeployments</a> (Valid in version: 2019.1.7 and later)</li>
			<li><a href="#apiv_ra_20">@ModifyDebugOptions</a> (Valid in version: 2019.1.7 and later)</li>
			<li><a href="#apiv_ra_21">@ModifyOutboundIdentities</a> (Valid in version: 2019.1.7 and later)</li>
			<li><a href="#apiv_ra_22">@ModifyExtensionProperties</a> (Valid in version: 2019.1.7 and later)</li>
			<li><a href="#apiv_ra_23">@DeleteAPIImplementation</a> (Valid in version: 2019.1.7 and later)</li>
			<li><a href="#apiv_ra_24">@ModifyLegals</a> (Valid in version: 2019.1.7 and later)</li>
		</ul>
	</li>
	</ul>


<h3 id="apiv_ra_01">@Delete</h3>
<p>Indicates that the API version can be deleted at this point in the workflow, using the user interface or the platform API.</p>


<h3 id="apiv_ra_02">@Modify</h3>
<p>Used to determine whether an API version can be modified or should be read-only. If @Modify is not a valid action, the user interface disables the buttons/links leading to modifying anything about the API version.</p>
<p>The <strong>@Modify</strong> action is available by default when the API version is in one of the following workflow states:</p>
<ul>
	<li>Draft</li>
	<li>Rejected</li>
	<li>Pending Approval</li>
</ul>
<p><strong>Note</strong>: @Modify controls permission to modify the entire API version. A user with this permission is authorized to perform all edit activities for the API version, such as adding or changing operations in the API design or modifying other API information such as deployment zones, policy assignments, and endpoints. If @Modify is not present in the workflow, the platform checks for additional workflow actions that give more granular permission to perform a specific action, such as <a href="#apiv_ra_03">@ModifyPolicies</a> or <a href="#apiv_ra_04">@ModifyDeployments</a>.</p>


<h3 id="apiv_ra_10">apiversion.action.submit.approval</h3>
<p>Used to submit a new or revised API version for approval.</p>
<p>The Business Admin for the organization can submit an API version for approval.</p>
<p>The <strong>apiversion.action.submit.approval</strong> action is available by default when the API version is in one of the following workflow states:</p>
<ul>
	<li>Draft</li>
</ul>
<p>For an example of a workflow section that includes this action, see <a href="#apiv_f_05">updateApiVersionStatus</a>.</p>


<h3 id="apiv_ra_11">apiversion.action.approve</h3>
<p>Used to approve a new or revised API version that was submitted for approval.</p>
<p>The <strong>apiversion.action.approve</strong> action is available by default when the API version is in this workflow state:</p>
<ul>
	<li><strong>Pending Approval</strong></li>
</ul>
<p>The Business Admin for the organization, or the API Approver, can approve or reject an API version.</p>
<p>The example below shows a section of the template workflow showing steps and actions when an API version is pending approval. Valid actions are Approve (<strong>apiversion.action.approve</strong>) or Reject (<strong>apiversion.action.reject</strong>).  When the action is <strong>apiversion.action.approve</strong> (line 3), the applicable conditions are applied as shown below.</p>
<pre>&lt;step id="300" name="Pending Approval!"&gt;
  &lt;actions&gt;
    &lt;action id="301" name="apiversion.action.approve"&gt;
      &lt;restrict-to&gt;
        &lt;conditions type="OR"&gt;
          &lt;condition type="authorizeByAtmosphereRole"&gt;
            &lt;arg name="role"&gt;&amp;AtmoRoleBusinessAdmin;&lt;/arg&gt;
          &lt;/condition&gt;
          &lt;condition type="authorizeByAtmosphereRole"&gt;
            &lt;arg name="role"&gt;&amp;AtmoRoleAPIApprover;&lt;/arg&gt;
          &lt;/condition&gt; 
        &lt;/conditions&gt;
      &lt;/restrict-to&gt;
      &lt;results&gt;
        &lt;unconditional-result old-status="Pending Approval" status="Active" step="400"/&gt;
      &lt;/results&gt;
      &lt;post-functions&gt;
        &lt;function type="updateApiVersionStatus"&gt;
          &lt;arg name="status"&gt;&amp;StateActive;&lt;/arg&gt;
        &lt;/function&gt;
      &lt;/post-functions&gt;
    &lt;/action&gt;
    &lt;action id="302" name="apiversion.action.reject"&gt;
      &lt;restrict-to&gt;
        &lt;conditions type="OR"&gt;
          &lt;condition type="authorizeByAtmosphereRole"&gt;
            &lt;arg name="role"&gt;&amp;AtmoRoleBusinessAdmin;&lt;/arg&gt;
          &lt;/condition&gt;
          &lt;condition type="authorizeByAtmosphereRole"&gt;
            &lt;arg name="role"&gt;&amp;AtmoRoleAPIApprover;&lt;/arg&gt;
          &lt;/condition&gt; 
        &lt;/conditions&gt;
      &lt;/restrict-to&gt;
      &lt;results&gt;
        &lt;unconditional-result old-status="Pending Approval" status="Rejected" step="350" owner="${caller}"/&gt;
      &lt;/results&gt;
      &lt;post-functions&gt;
        &lt;function type="updateApiVersionStatus"&gt;
          &lt;arg name="status"&gt;&amp;StateRejected;&lt;/arg&gt;
        &lt;/function&gt;
      &lt;/post-functions&gt;
    &lt;/action&gt;
  &lt;/actions&gt;
&lt;/step&gt;</pre>


<h3 id="apiv_ra_12">apiversion.action.reject</h3>
<p>Used to reject a new or revised API version that was submitted for approval.</p>
<p>The Business Admin for the organization, or the API Approver, can approve or reject an API version.</p>
<p>The <strong>apiversion.action.reject</strong> action is available by default when the API version is in this workflow state:</p>
<ul>
	<li><strong>Pending Approval</strong></li>
</ul>
<p>For an example of a workflow section that includes this action, see <a href="#apiv_ra_11">apiversion.action.approve</a> above.</p>


<h3 id="apiv_ra_13">apiversion.action.resubmit</h3>
<p>Used to resubmit a new or revised API version for approval.</p>
<p>Same as <strong>apiversion.action.submit.approval</strong> above.</p>
<p>The <strong>apiversion.action.reject</strong> action is available by default when the API version is in this workflow state:</p>
<ul>
	<li><strong>Rejected</strong></li>
</ul>



<h3 id="apiv_ra_additional">Additional reserved actions for modifying an API version that's already activated</h3>
<p>for your convenience, additional reserved actions are available in case you want to be able to modify one or more properties of an API version after activation. For example, you might need to change a deployment zone or add an implementation. In most cases it's not a good idea to modify an API version, but it might be necessary in some scenarios. By using one or more of these additional reserved actions, you can grant permissions to users with certain roles, to modify one or more specific aspects of an API version.</p>
<p><strong>Note</strong>: The reserved actions below are only valid to be assigned when the API workflow state is <strong>ACTIVE</strong>. In the attached API version template (see <a href="#apiv_workflow_template">API Version Workflow: Custom Workflow Template</a> below), this step: <span class="apidoc_code">&lt;step id=&quot;400&quot; name=&quot;Active&quot;&gt;</span>.</p>
<p>The following reserved actions are available in this category:</p>
<ul>
	<li><a href="#apiv_ra_03">@ModifyPolicies</a> (Valid in version: 2019.1.0 and later)</li>
	<li><a href="#apiv_ra_04">@ModifyDeployments</a> (Valid in version: 2019.1.0 and later)</li>
	<li><a href="#apiv_ra_05">@ModifyDebugOptions</a> (Valid in version: 2019.1.0 and later)</li>
	<li><a href="#apiv_ra_06">@ModifyOutboundIdentities</a> (Valid in version: 2019.1.0 and later)</li>
	<li><a href="#apiv_ra_07">@ModifyExtensionProperties</a> (Valid in version: 2019.1.0 and later)</li>
	<li><a href="#apiv_ra_08">@DeleteAPIImplementation</a> (Valid in version: 2019.1.0 and later)</li>
	<li><a href="#apiv_ra_09">@ModifyLegals</a> (Valid in version: 2019.1.0 and later)</li>
	<li><a href="#apiv_ra_14">@AddDeploymentZones</a> (Valid in version: 2019.1.7 and later)</li>
	<li><a href="#apiv_ra_15">@ModifyAutoConnectSettings</a> (Valid in version: 2019.1.7 and later)</li>
	<li><a href="#apiv_ra_16">@ModifyImplementationInfo</a> (Valid in version: 2019.1.7 and later)</li>
	<li><a href="#apiv_ra_17">@AddApiImplementation</a> (Valid in version: 2019.1.7 and later)</li>
	<li><a href="#apiv_ra_18">@ModifyPolicies</a> (Valid in version: 2019.1.7 and later)</li>
	<li><a href="#apiv_ra_19">@ModifyDeployments</a> (Valid in version: 2019.1.7 and later)</li>
	<li><a href="#apiv_ra_20">@ModifyDebugOptions</a> (Valid in version: 2019.1.7 and later)</li>
	<li><a href="#apiv_ra_21">@ModifyOutboundIdentities</a> (Valid in version: 2019.1.7 and later)</li>
	<li><a href="#apiv_ra_22">@ModifyExtensionProperties</a> (Valid in version: 2019.1.7 and later)</li>
	<li><a href="#apiv_ra_23">@DeleteAPIImplementation</a> (Valid in version: 2019.1.7 and later)</li>
	<li><a href="#apiv_ra_24">@ModifyLegals</a> (Valid in version: 2019.1.7 and later)</li>
</ul>



<h4 id="apiv_ra_03">@ModifyPolicies</h4>
<p><strong>Valid in version: 2019.1.0 and later</strong></p>
<p>If you want to give users with one or more roles permission to modify the policies for an API version, even when the API version is activated, you can use this reserved action. You can then specify which roles can perform the action.</p>
<p><strong>Note</strong>: This is provided for your convenience in case you want to modify an API version after it's been activated. In most cases, this is not necessary or recommended.</p>
<p>The platform only looks for this workflow action if the @Modify action, which gives broad permission to modify all aspects of the API version, is not present in the custom workflow.</p>
<p>The example below, from the sample custom workflow template at <a href="#apiv_eg_01">API Version Workflow: Customization Example</a> later in this document, shows use of the @ModifyPolicies reserved action to assign this ability to an API version in Active state.</p>
<pre>&lt;action id="402" name="@ModifyPolicies"&gt;
  &lt;restrict-to&gt;
    &lt;conditions type="OR"&gt;
      &lt;condition type="authorizeByAtmosphereRole"&gt;
        &lt;arg name="role"&gt;&amp;AtmoRoleBusinessAdmin;&lt;/arg&gt;
      &lt;/condition&gt;
      &lt;condition type="authorizeByAtmosphereRole"&gt;
        &lt;arg name="role"&gt;&amp;AtmoRoleApiAdmin;&lt;/arg&gt;
      &lt;/condition&gt;
      &lt;condition type="authorizeByAtmosphereAction"&gt;
        &lt;arg name="Action"&gt;Modify&lt;/arg&gt;
        &lt;arg name="ResourceType"&gt;apiversion&lt;/arg&gt;
      &lt;/condition&gt; 
    &lt;/conditions&gt;
  &lt;/restrict-to&gt;
  &lt;results&gt;
    &lt;unconditional-result old-status="Active" status="Active" step="400" /&gt;
  &lt;/results&gt;
&lt;/action&gt;
</pre>


<h4 id="apiv_ra_04">@ModifyDeployments</h4>
<p><strong>Valid in version: 2019.1.0 and later</strong></p>
<p>If you want to give users with one or more roles permission to add, modify, or delete deployments for an API version, even when the API version is activated, you can use this reserved action. You can then specify which roles can perform the action.</p>
<p><strong>Note</strong>: This is provided for your convenience in case you want to modify an API version after it's been activated. In most cases, this is not necessary or recommended.</p>
<p>The platform only looks for this workflow action if the @Modify action, which gives broad permission to modify all aspects of the API version, is not present in the custom workflow.</p>


<h4 id="apiv_ra_05">@ModifyDebugOptions</h4>
<p><strong>Valid in version: 2019.1.0 and later</strong></p>
<p>If you want to give users with one or more roles permission to modify the debug setting for an API version, even when the API version is activated, you can use this reserved action. You can then specify which roles can perform the action.</p>
<p><strong>Note</strong>: This is provided for your convenience in case you want to modify an API version after it's been activated. In most cases, this is not necessary or recommended.</p>
<p>The platform only looks for this workflow action if the @Modify action, which gives broad permission to modify all aspects of the API version, is not present in the custom workflow.</p>

<h4 id="apiv_ra_06">@ModifyOutboundIdentities</h4>
<p><strong>Valid in version: 2019.1.0 and later</strong></p>
<p>If you want to give users with one or more roles permission to modify the outbound identities for an API version, even when the API version is activated, you can use this reserved action. You can then specify which roles can perform the action.</p>
<p><strong>Note</strong>: This is provided for your convenience in case you want to modify an API version after it's been activated. In most cases, this is not necessary or recommended.</p>
<p>The platform only looks for this workflow action if the @Modify action, which gives broad permission to modify all aspects of the API version, is not present in the custom workflow.</p>


<h4 id="apiv_ra_07">@ModifyExtensionProperties</h4>
<p><strong>Valid in version: 2019.1.0 and later</strong></p>
<p>If you want to give users with one or more roles permission to modify the extension properties for an API version (when extension properties are in place), even when the API version is activated, you can use this reserved action. You can then specify which roles can perform the action.</p>
<p><strong>Note</strong>: This is provided for your convenience in case you want to modify an API version after it's been activated. In most cases, this is not necessary or recommended.</p>
<p>The platform only looks for this workflow action if the @Modify action, which gives broad permission to modify all aspects of the API version, is not present in the custom workflow.</p>


<h4 id="apiv_ra_08">@DeleteAPIImplementation</h4>
<p><strong>Valid in version: 2019.1.0 and later</strong></p>
<p>If you want to give users with one or more roles permission to delete an implementation for an API version, even when the API version is activated, you can use this reserved action. You can then specify which roles can perform the action.</p>
<p><strong>Note</strong>: This is provided for your convenience in case you want to modify an API version after it's been activated. In most cases, this is not necessary or recommended.</p>
<p>The platform only looks for this workflow action if the @Modify action, which gives broad permission to modify all aspects of the API version, is not present in the custom workflow.</p>


<h4 id="apiv_ra_09">@ModifyLegals</h4>
<p><strong>Valid in version: 2019.1.0 and later</strong></p>
<p>If you want to give users with one or more roles permission to modify the legal agreement for an API version, even after the API version is activated, you can use this reserved action. You can then specify which roles can perform the action.</p>
<p><strong>Note</strong>: This is provided for your convenience in case you want to modify an API version after it's been activated. In most cases, this is not necessary or recommended.</p>
<p>The platform only looks for this workflow action if the @Modify action, which gives broad permission to modify all aspects of the API version, is not present in the custom workflow.</p>


<h4 id="apiv_ra_14">@AddDeploymentZones</h4>
<p><strong>Valid in version: 2019.1.7 and later</strong></p>
<p>If you want to give users with one or more roles permission to add a deployment zone for an API version, even after the API version is activated, you can use this reserved action. You can then specify which roles can perform the action.</p>
<p><strong>Note</strong>: This is provided for your convenience in case you want to modify an API version after it's been activated. In most cases, this is not necessary or recommended.</p>


<h4 id="apiv_ra_15">@ModifyAutoConnectSettings</h4>
<p><strong>Valid in version: 2019.1.7 and later</strong></p>
<p>If you want to give users with one or more roles permission to modify the auto-connect setting for an API version, even after the API version is activated, you can use this reserved action. You can then specify which roles can perform the action.</p>
<p><strong>Note</strong>: This is provided for your convenience in case you want to modify an API version after it's been activated. In most cases, this is not necessary or recommended.</p>


<h4 id="apiv_ra_16">@ModifyImplementationInfo</h4>
<p><strong>Valid in version: 2019.1.7 and later</strong></p>
<p>If you want to give users with one or more roles permission to modify implementation information for an API version, even after the API version is activated, you can use this reserved action. You can then specify which roles can perform the action.</p>
<p><strong>Note</strong>: This is provided for your convenience in case you want to modify an API version after it's been activated. In most cases, this is not necessary or recommended.</p>


<h4 id="apiv_ra_17">@AddApiImplementation</h4>
<p><strong>Valid in version: 2019.1.7 and later</strong></p>
<p>If you want to give users with one or more roles permission to add an implementation to an API version, even after the API version is activated, you can use this reserved action. You can then specify which roles can perform the action.</p>
<p><strong>Note</strong>: This is provided for your convenience in case you want to modify an API version after it's been activated. In most cases, this is not necessary or recommended.</p>


<h4 id="apiv_ra_18">@ModifyPolicies</h4>
<p><strong>Valid in version: 2019.1.7 and later</strong></p>
<p>If you want to give users with one or more roles permission to add, modify, or delete the policy assignments for one or more of the implementations for an API version, even after the API version is activated, you can use this reserved action. You can then specify which roles can perform the action.</p>
<p><strong>Note</strong>: This is provided for your convenience in case you want to modify an API version after it's been activated. In most cases, this is not necessary or recommended.</p>


<h4 id="apiv_ra_19">@ModifyDeployments</h4>
<p><strong>Valid in version: 2019.1.7 and later</strong></p>
<p>If you want to give users with one or more roles permission to modify deployments zone for an API version, even after the API version is activated, you can use this reserved action. You can then specify which roles can perform the action.</p>
<p><strong>Note</strong>: This is provided for your convenience in case you want to modify an API version after it's been activated. In most cases, this is not necessary or recommended.</p>


<h4 id="apiv_ra_20">@ModifyDebugOptions</h4>
<p><strong>Valid in version: 2019.1.7 and later</strong></p>
<p>If you want to give users with one or more roles permission to modify the debug setting for one or more of the implementations for an API version, even after the API version is activated, you can use this reserved action. You can then specify which roles can perform the action.</p>
<p><strong>Note</strong>: This is provided for your convenience in case you want to modify an API version after it's been activated. In most cases, this is not necessary or recommended.</p>


<h4 id="apiv_ra_21">@ModifyOutboundIdentities</h4>
<p><strong>Valid in version: 2019.1.7 and later</strong></p>
<p>If you want to give users with one or more roles permission to modify the outbound identities for an API version, even after the API version is activated, you can use this reserved action. You can then specify which roles can perform the action.</p>
<p><strong>Note</strong>: This is provided for your convenience in case you want to modify an API version after it's been activated. In most cases, this is not necessary or recommended.</p>


<h4 id="apiv_ra_22">@ModifyExtensionProperties</h4>
<p><strong>Valid in version: 2019.1.7 and later</strong></p>
<p>If you want to give users with one or more roles permission to modify extension properties for an API version, even after the API version is activated, you can use this reserved action. You can then specify which roles can perform the action.</p>
<p><strong>Note</strong>: This is provided for your convenience in case you want to modify an API version after it's been activated. In most cases, this is not necessary or recommended.</p>


<h4 id="apiv_ra_23">@DeleteAPIImplementation</h4>
<p><strong>Valid in version: 2019.1.7 and later</strong></p>
<p>If you want to give users with one or more roles permission to delete an implementation for an API version, even after the API version is activated, you can use this reserved action. You can then specify which roles can perform the action.</p>
<p><strong>Note</strong>: This is provided for your convenience in case you want to modify an API version after it's been activated. In most cases, this is not necessary or recommended.</p>


<h4 id="apiv_ra_24">@ModifyLegals</h4>
<p><strong>Valid in version: 2019.1.7 and later</strong></p>
<p>If you want to give users with one or more roles permission to modify the legal agreement configuration for an API version, even after the API version is activated, you can use this reserved action. You can then specify which roles can perform the action.</p>
<p><strong>Note</strong>: This is provided for your convenience in case you want to modify an API version after it's been activated. In most cases, this is not necessary or recommended.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="apiv_f_00">API Version Workflow: Functions</h2>
<p>The following functions are available for the API version workflow:</p>
<ul>
	<li><a href="#apiv_f_01">exportAPIVersion</a></li>
	<li><a href="#apiv_f_02">exportAPIAllVersions</a></li>
	<li><a href="#apiv_f_03">markApiVersionDeleted</a> (Valid in version: 2019.1.0 and later)</li>
	<li><a href="#apiv_f_05">updateApiVersionStatus</a> (Valid in version: 2019.1.0 and later)</li>
	<li><a href="#apiv_f_connectappsfrompreviousversion">connectAppsFromPreviousVersion</a> (Valid in version: 2020.0.0 and later)</li>
</ul>
<!--<p>{\com.soa.atmosphere.impl\src\com\soa\api\workflow\impl\APIVersionWorkflowFunctions.java}</p>-->



<h3 id="apiv_f_01">exportAPIVersion</h3>
<p>Used to control workflow actions associated with export of the specified version of the specified API.</p>

<h4>Parameters</h4>
<p>None.</p>
<h4>Examples/Notes/Additional Information</h4>
<p>The example below uses this function to export the API version.</p>
<pre>&lt;action id="100" name="Export-WF"&gt;
  &lt;restrict-to&gt;
    &lt;conditions type="AND"&gt;
      &lt;condition type="authorizeByAtmosphereRole"&gt;
&lt;arg name="role"&gt;ApiAdmin&lt;/arg&gt;
      &lt;/condition&gt;
    &lt;/conditions&gt;
  &lt;/restrict-to&gt;
  &lt;results&gt;
    &lt;unconditional-result old-status="Ready" status="Ready" step="100" owner="${caller}" /&gt;
  &lt;/results&gt;
  &lt;post-functions&gt;
    &lt;function type="exportAPIVersion"/&gt;
  &lt;/post-functions&gt;
&lt;/action&gt;</pre>


<h3 id="apiv_f_02">exportAPIAllVersions</h3>
<p>Exports all versions of the specified API.</p>

<h4>Parameters</h4>
<p>None.</p>
<h4>Examples/Notes/Additional Information</h4>
<p>The example below uses this function to export all versions of the API.</p>
<pre>&lt;action id="101" name="Export-All-Versions-WF"&gt;
  &lt;restrict-to&gt;
    &lt;conditions type="AND"&gt;
      &lt;condition type="authorizeByAtmosphereRole"&gt;
&lt;arg name="role"&gt;ApiAdmin&lt;/arg&gt;
      &lt;/condition&gt;
    &lt;/conditions&gt;
  &lt;/restrict-to&gt;
  &lt;results&gt;
    &lt;unconditional-result old-status="Ready" status="Ready" step="100" owner="${caller}" /&gt;
  &lt;/results&gt;
  &lt;post-functions&gt;
    &lt;function type="exportAPIAllVersions"/&gt;
  &lt;/post-functions&gt;
&lt;/action&gt;</pre>


<h3 id="apiv_f_03">markApiVersionDeleted</h3>
<p><strong>Valid in version: 2019.1.0 and later</strong></p>
<p>Marks an API version as deleted.</p>

<h4>Parameters</h4>
<p>None.</p>
<h4>Examples/Notes/Additional Information</h4>
<p>The example below shows the Delete action in the template custom workflow. Once the conditions have been satisfied, the status is updated from Draft to Deleted and <strong>markApiVersionDeleted</strong> is implemented as a post-function.</p>
<pre>&lt;action id="102" name="@Delete"&gt;
  &lt;restrict-to&gt;
    &lt;conditions type="AND"&gt;
        &lt;condition type="isApiVersionInDraftState" /&gt;
        &lt;conditions type="OR"&gt;
          &lt;condition type="authorizeByAtmosphereRole"&gt;
            &lt;arg name="role"&gt;&amp;AtmoRoleBusinessAdmin;&lt;/arg&gt;
          &lt;/condition&gt;
          &lt;condition type="authorizeByAtmosphereAction"&gt;
            &lt;arg name="Action"&gt;Delete&lt;/arg&gt;
            &lt;arg name="ResourceType"&gt;apiversion&lt;/arg&gt;
          &lt;/condition&gt;
          &lt;condition type="authorizeByAtmosphereRole"&gt;
            &lt;arg name="role"&gt;&amp;AtmoRoleApiAdmin;&lt;/arg&gt;
          &lt;/condition&gt; 
        &lt;/conditions&gt;
    &lt;/conditions&gt;
  &lt;/restrict-to&gt;
  &lt;results&gt;
    &lt;unconditional-result old-status="Draft" status="Deleted" step="500" /&gt;
  &lt;/results&gt;
  &lt;post-functions&gt;
    &lt;function type="markApiVersionDeleted"/&gt;
  &lt;/post-functions&gt;
&lt;/action&gt;</pre>


<h3 id="apiv_f_05">updateApiVersionStatus</h3>
<p><strong>Valid in version: 2019.1.0 and later</strong></p>
<p>Updates the status of an API version, to the value provided in the argument. The new status must be a valid transition from the current status; for example, from <strong>Pending Approval</strong> to <strong>Active</strong>.</p>
<h4>Parameters</h4>
<table class="doctable">
	<thead>
		<tr>
			<th>Name</th>
			<th>Description/Values</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>status</td>
			<td><p>The new status that the API version is being updated to. Use the valid states defined in the sample (see <a href="#apiv_workflow_template">API Version Workflow: Custom Workflow Template</a>):</p>
				<ul><li>com.soa.api.state.draft</li>
					<li>com.soa.api.state.pending_approval</li>
					<li>com.soa.api.state.rejected</li>
					<li>com.soa.api.state.active</li>
				</ul></td>
		</tr>
	</tbody>
</table>

<h4>Examples/Notes/Additional Information</h4>
<p>The example below shows the API version workflow when an API version is submitted for approval. The previous status is <strong>Draft</strong>, and the new status is <strong>Pending Approval</strong>.</p>
<pre>&lt;action id="103" name="apiversion.action.submit.approval"&gt;
  &lt;restrict-to&gt;
    &lt;conditions type="AND"&gt;
      &lt;condition type="isApiVersionInDraftState" /&gt;
      &lt;conditions type="OR"&gt;
        &lt;condition type="authorizeByAtmosphereRole"&gt;
          &lt;arg name="role"&gt;&amp;AtmoRoleBusinessAdmin;&lt;/arg&gt;
        &lt;/condition&gt;
        &lt;condition type="authorizeByAtmosphereAction"&gt;
          &lt;arg name="Action"&gt;Modify&lt;/arg&gt;
          &lt;arg name="ResourceType"&gt;apiversion&lt;/arg&gt;
        &lt;/condition&gt;
        &lt;condition type="authorizeByAtmosphereRole"&gt;
          &lt;arg name="role"&gt;&amp;AtmoRoleApiAdmin;&lt;/arg&gt;
        &lt;/condition&gt; 
      &lt;/conditions&gt;
    &lt;/conditions&gt;
  &lt;/restrict-to&gt;
  &lt;results&gt;
    &lt;unconditional-result old-status="Draft" status="Pending Approval" step="300" /&gt;
  &lt;/results&gt;
  &lt;post-functions&gt;
    &lt;function type="updateApiVersionStatus"&gt;
      &lt;arg name="status"&gt;&amp;StatePendingApproval;&lt;/arg&gt;
    &lt;/function&gt;
  &lt;/post-functions&gt;
&lt;/action&gt;
</pre>


<h3 id="apiv_f_connectappsfrompreviousversion">connectAppsFromPreviousVersion</h3>
<p><strong>Valid in version: 2020.0.0 and later</strong></p>
<p>When a new API version is created, connects all apps that are currently contracted to the API, to the new version.</p>

<h4>Parameters</h4>
<p>None.</p>
<h4>Examples/Notes/Additional Information</h4>
<p>The example below shows a workflow step that adds <strong>connectAppsFromPreviousVersion</strong> as a pre-function when an API version becomes active. This initiates API access for the apps that are connected to the existing API version.</p>
<pre>&lt;step id="400" name="Active"&gt;
  &lt;pre-functions&gt;
    &lt;function type="connectAppsFromPreviousVersion"&gt;
    &lt;/function&gt;
  &lt;/pre-functions&gt;</pre>
<p><a href="#top">Back to top</a></p>



<h2 id="apiv_c_00">API Version Workflow: Conditions</h2>
<p>The following condition applies to the API version workflow:</p>
<ul>
	<li><a href="#apiv_c_01">isApiVersionInDraftState</a> (Valid in version: 2019.1.0 and later)</li>
</ul>
<h3 id="apiv_c_01">isApiVersionInDraftState</h3>
<p><strong>Valid in version: 2019.1.0 and later</strong></p>
<p>Tests to see if the API Version is in Draft state; returns Boolean true or false.</p>
<h4>Arguments</h4>
<p>None.</p>

<h4>Examples/Notes/Additional Information</h4>
<p>In the example below, an API version is submitted for approval. The workflow firsts checks that the API version is in Draft state.</p>
<pre>&lt;action id="103" name="apiversion.action.submit.approval"&gt;
  &lt;restrict-to&gt;
    &lt;conditions type="AND"&gt;
      &lt;condition type="isApiVersionInDraftState" /&gt;
      &lt;conditions type="OR"&gt;
        &lt;condition type="authorizeByAtmosphereRole"&gt;
          &lt;arg name="role"&gt;&amp;AtmoRoleBusinessAdmin;&lt;/arg&gt;
        &lt;/condition&gt;
        &lt;condition type="authorizeByAtmosphereAction"&gt;
          &lt;arg name="Action"&gt;Modify&lt;/arg&gt;
          &lt;arg name="ResourceType"&gt;apiversion&lt;/arg&gt;
        &lt;/condition&gt;
        &lt;condition type="authorizeByAtmosphereRole"&gt;
          &lt;arg name="role"&gt;&amp;&amp;AtmoRoleApiAdmin;&lt;/arg&gt;
        &lt;/condition&gt; 
      &lt;/conditions&gt;
    &lt;/conditions&gt;
  &lt;/restrict-to&gt;
  &lt;results&gt;
    &lt;unconditional-result old-status="Draft" status="Pending Approval" step="300" /&gt;
  &lt;/results&gt;
  &lt;post-functions&gt;
    &lt;function type="updateApiVersionStatus"&gt;
      &lt;arg name="status"&gt;&amp;StatePendingApproval;&lt;/arg&gt;
    &lt;/function&gt;
  &lt;/post-functions&gt;
&lt;/action&gt;</pre>
<!--<p>{\com.soa.atmosphere.impl\src\com\soa\api\workflow\impl\APIVersionWorkflowConditions.java}</p>-->
<p><a href="#top">Back to top</a></p>




<h2 id="apiv_vr_00">API Version Workflow: Variable Resolvers</h2>
<p>The API version workflow governs the API Version object. There is one variable available for the API version workflow:</p>
<ul>
	<li><a href="#apiv_vr_01">${api.dn}</a></li>
</ul>
<!--<p>{\com.soa.atmosphere.impl\src\com\soa\api\workflow\impl\APIVersionWorkflowVariableResolver.java}</p>-->


<h3 id="apiv_vr_01">${api.dn}</h3>
<p>The unique ID for the API that the API version is associated with (APIID).</p>
<p><a href="#top">Back to top</a></p>




<h2 id="apiv_workflow_template">API Version Workflow: Custom Workflow Template</h2>
<!--<p>{https://subversion.aws.roguewave.com/svn/akana/trunk/products/api-portal/com.soa.atmosphere.impl/META-INF/resources/templates/apiversion-workflow-template.xml </p>-->
<p>As a starting point, download and review this template:</p>
<p><a href="assets/apiversion-workflow-template.xml">API Workflow Template for Customization</a></p>
<p>Then, you can modify actions and roles as needed to achieve the results you want.</p>
<p>When you have your custom workload ready, upload it to the developer portal and assign it as your default workflow for API versions. For instructions, see <a href="../learnmore/apiadmin_workflow_custom.htm#proc_workflow_custom">To implement a custom API version workflow</a> (developer portal documentation).</p>
<p><a href="#top">Back to top</a></p>



<h2 id="apiv_eg_01">API Version Workflow: Customization Example</h2>
<p>This section:</p>
<ul>
	<li>Describes a scenario where you might want to use custom workflow to implement custom behavior that includes an API version approval process, so that the API version is in a Draft state until approval is requested.</li>
	<li>Includes a template that you could use to implement this specific behavior.</li>
</ul>
<h3>Default behavior</h3>
<p>Without a custom workflow in place, when a user creates an API in the developer portal, it is activated immediately. It becomes searchable (unless marked as Private, and even then, it is marked as Searchable to those who have visibility). Users who can see the API can connect to that API version automatically. By default, there is no approval process for the API; it becomes active immediately.</p>

<h3>Custom behavior</h3>
<p>Instead of the default behavior, you might want to implement a scenario where when an API is still being designed it is in Draft state, and remains in Draft state until you submit it for approval. In Draft state, you can save the API and go back tomorrow to add more operations or more model objects, or to add or modify other data associated with the API such as policies and deployment zones.</p>
<p>When the API is ready, you can submit it for approval. At that point, the API is in Pending Approval state.</p>
<p>Then, specific users can approve the API. For this template, users with the role of API Approver or Business Admin can approve the API. If the API is approved, it is in Activated state. Alternatively, if the API is rejected, it goes back to Draft state.</p>


<h3>Activated state: default behavior</h3>
<p>Without custom workflow in place, an API version can be changed at any point by any user with API Admin right for the API, or by a Business Admin.</p>


<h3>Activated state: custom template behavior</h3>
<p>With this custom workflow template in place, once an API version is in Activated state it cannot be changed. This helps maintain reliability and consistency in a scenario where many apps might be connected to an API version.</p>
<p>However, you might want to implement a scenario where certain actions are allowed. For example, when an API is in Approved state and in production, you would not want to change the API design, but you might want to add a Detailed Auditing policy for monitoring purposes, or add a deployment zone, or add new endpoints. To allow these actions with this custom template workflow, you'd need to add one or more of the reserved actions shown below, and then give users with one or more roles permission to perform that action. For an example, see <a href="#apiv_ra_03">@ModifyPolicies</a> above.</p>
<p>The actions you can allow even when the API version is in Activated state, with the custom template workflow, are:</p>
<ul>
	<li>Modify policies: <a href="#apiv_ra_03">@ModifyPolicies</a></li>
	<li>Modify deployment zones: <a href="#apiv_ra_04">@ModifyDeployments</a></li>
	<li>Change the debug setting: <a href="#apiv_ra_05">@ModifyDebugOptions</a></li>
	<li>Modify the Outbound Identity values: <a href="#apiv_ra_06">@ModifyOutboundIdentities</a></li>
	<li>Modify extension properties associated with the API version: <a href="#apiv_ra_07">@ModifyExtensionProperties</a></li>
	<li>Delete an API implementation: <a href="#apiv_ra_08">@DeleteAPIImplementation</a></li>
	<li>Change the legal agreement associated with the API version: <a href="#apiv_ra_09">@ModifyLegals</a></li>
</ul>
<p>The custom workflow template has the built-in flexibility for you to control any of the above actions to a fine level of granularity.</p>
<p><a href="#top">Back to top</a></p>




<hr class="divide_hr" />




<h2 id="related_topics">Related Topics</h2>
<div class="relatedlinks" id="cm_workflow">
<ul>
	<li><a href="01_overview_cm_wf.htm">Custom Workflows in the Developer Portal</a></li>
	<li><a href="02_general.htm">Workflow General Reference: Functions, Conditions, and Variables</a></li>
	<li><a href="03_app_version_wf.htm">App Version Workflow</a></li>
	<li><a href="04_api_version_wf.htm">API Version Workflow</a></li>
	<li><a href="05_api_contract_wf.htm">API Contract Workflow</a></li>
	<li><a href="06_ticket_wf.htm">Ticket Workflow</a></li>
</ul>
<ul>
	<li><a href="07_group_membership_wf.htm">Group Membership Workflow</a></li>
	<li><a href="08_user_wf.htm">User Workflow</a></li>
	<li><a href="09_review_wf.htm">Review Workflow</a></li>
	<li><a href="10_discussions_wf.htm">Discussions Workflow</a></li>
	<li><a href="11_comments_wf.htm">Comments Workflow</a></li>
	<li><a href="12_model_wf.htm">Model Object Workflow</a></li>
</ul>
</div>