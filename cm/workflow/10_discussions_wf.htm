---
layout: page
title: Discussions Workflow | Customizing Workflows in the API Platform
description: Information about initial actions, reserved actions, functions, conditions, and variables for the Discussions workflow.
product: cm
category: ref
sub-nav-class: Workflows
weight: 10
type: page
nav-title: Discussions Workflow
---
<h1 id="top">Discussions Workflow</h1>
<p>This section provides information about functions, conditions, and variables for the Discussions workflow, as well as initial actions and reserved actions.</p>

<hr class="divide_hr" />


<h2 style="color: gray;">Table of Contents</h2>
<ol class="table_of_contents">
	<li><a href="#disc_ia_00">Discussions Workflow: Initial Actions</a></li>
	<li><a href="#disc_ra_00">Discussions Workflow: Reserved Actions</a></li>
	<li><a href="#disc_f_00">Discussions Workflow: Functions</a></li>
	<li><a href="#disc_c_00">Discussions Workflow: Conditions</a></li>
	<li><a href="#disc_vr_00">Discussions Workflow: Variable Resolvers</a> (none)</li>
</ol>
<hr class="divide_hr" />
<!--<p>{\atmosphere\com.soa.atmosphere.impl\META-INF\resources\templates\default-discussion-workflow.xml}</p>-->



<h2 id="disc_ia_00">Discussions Workflow: Initial Actions</h2>
<p>The initial actions valid for Akana API Platform workflows relating to discussions are:</p>
<ul>
	<li><a href="#disc_ia_01">@StartDiscussion</a></li>
	<li><a href="#disc_ia_02">@Audit</a></li>
	<li><a href="#disc_ia_03">@Alert</a></li>
</ul>


<h3 id="disc_ia_01">@StartDiscussion</h3>
<p>This is how a discussion is introduced into the workflow. If you are customizing the initial behavior when a discussion is added, this is where the customization needs to go.</p>


<h3 id="disc_ia_02">@Audit</h3>
<p>An initial action that could be used to initiate a discussion for audit purposes.</p>


<h3 id="disc_ia_03">@Alert</h3>
<p>An initial action that could be used to initiate a discussion as the result of an alert&#8212;for example, SLA or quota alerts.</p>
<!--<p>{\atmosphere\com.soa.atmosphere.impl\src\com\soa\discussion\workflow\DiscussionWorkflowConstants.java}</p>-->
<p><a href="#top">Back to top</a></p>



<h2 id="disc_ra_00">Discussions Workflow: Reserved Actions</h2>
<p>The following reserved actions are defined for Akana API Platform workflows relating to discussions:</p>
<ul>
	<li><a href="#disc_ra_01">@read</a></li>
</ul>


<h3 id="disc_ra_01">@read</h3>
<p>Applies to unpublished discussions only.</p>
<p>This action controls who can read an unpublished discussion. When the @read action is available, read permission is available for someone to read the discussion in an unpublished state. If @read is not available for a specific user for the current state of the discussion, the user cannot see it.</p>
<p>Once the discussion is published, all users who have visibility of the resource can see it.</p>
<!--<p>{\atmosphere\com.soa.atmosphere.impl\src\com\soa\discussion\workflow\DiscussionWorkflowConstants.java and some must be elsewhere.}</p>-->
<p><a href="#top">Back to top</a></p>



<h2 id="disc_f_00">Discussions Workflow: Functions</h2>
<p>The following functions are available for Akana API Platform workflows relating to discussions:</p>
<ul>
	<li><a href="#disc_f_01">MarkPublished</a></li>
	<li><a href="#disc_f_02">markUnPublished</a></li>
	<li><a href="#disc_f_03">deleteDiscussion</a></li>
	<li><a href="#disc_f_04">sendNotification</a></li>
</ul>
<!--<p>{\atmosphere\com.soa.atmosphere.impl\src\com\soa\discussion\workflow\DiscussionWorkflowFunctions.java}</p>-->


<h3 id="disc_f_01">MarkPublished</h3>
<p>Marks a discussion as published. This might be used in a scenario where the Moderator has determined that the discussion meets guidelines, or if discussions are not moderated.</p>

<h4>Parameters</h4>
<p>None.</p>
<h4>Examples/Notes/Additional Information</h4>
<p>The example below shows part of the workflow for a pending discussion. It can be approved for publication; the workflow restricts the action to certain authorized roles. The status is changed from Pending to Published, and the markPublished function is run.</p>
<pre>&lt;step id="200" name="Pending"&gt;
  &lt;actions&gt;
    &lt;action id="201" name="discussion.action.approve.publish"&gt;
      &lt;restrict-to&gt;
        &lt;conditions type="OR"&gt;
          &lt;condition type="authorizeByAtmosphereRole"&gt;
            &lt;arg name="role"&gt;SiteAdmin,BusinessAdmin,SubjectAssociatedApiAdmin&lt;/arg&gt;
          &lt;/condition&gt;
        &lt;/conditions&gt;
      &lt;/restrict-to&gt;
      &lt;results&gt;
        &lt;unconditional-result old-status="Pending" status="Published" step="300" owner="${caller}" /&gt;
      &lt;/results&gt;
      &lt;post-functions&gt;
        &lt;function type="markPublished"/&gt;
      &lt;/post-functions&gt;
    &lt;/action&gt;</pre>


<h3 id="disc_f_02">markUnPublished</h3>
<p>Marks a discussion as not published. This might be used in a scenario where the Moderator has determined that the discussion does not meet guidelines.</p>

<h4>Parameters</h4>
<p>None.</p>
<h4>Examples/Notes/Additional Information</h4>
<p>The example below defines valid actions for a discussion in the Published state. One valid action is for the discussion to be unpublished. The workflow first checks that the action is being performed by an authorized user. If so, the discussion is moved from an Approved state to Pending, and the markUnPublished function is run as a post-function.</p>
<pre>&lt;step id="300" name="Published"&gt;
  &lt;actions&gt;
    &lt;action id="301" name="discussion.action.unpublish"&gt;
      &lt;restrict-to&gt;
        &lt;conditions type="AND"&gt;
          &lt;condition type="authorizeByAtmosphereRole"&gt;
            &lt;arg name="role"&gt;SiteAdmin,BusinessAdmin,Author,SubjectAssociatedApiAdmin&lt;/arg&gt;
          &lt;/condition&gt;
        &lt;/conditions&gt;
      &lt;/restrict-to&gt;
      &lt;results&gt;
        &lt;unconditional-result old-status="Approved" status="Pending" step="200" owner="${caller}" /&gt;
      &lt;/results&gt;
      &lt;post-functions&gt;
        &lt;function type="markUnPublished"/&gt;
      &lt;/post-functions&gt;
    &lt;/action&gt;</pre>


<h3 id="disc_f_03">deleteDiscussion</h3>
<p>Deletes a discussion.</p>

<h4>Parameters</h4>
<p>None.</p>
<h4>Examples/Notes/Additional Information</h4>
<p>In the example below, for a discussion in the Rejected state, delete is a valid action. The workflow first checks that the user is authorized to perform the action. If so, the discussion is moved from the Rejected state to the Finished state, and the <strong>deleteDiscussion</strong> function is run.</p>
<pre>&lt;step id="400" name="Rejected"&gt;
  &lt;actions&gt;

    &lt;action id="402" name="discussion.action.delete"&gt;
      &lt;restrict-to&gt;
        &lt;conditions type="AND"&gt;
          &lt;condition type="authorizeByAtmosphereRole"&gt;
            &lt;arg name="role"&gt;SiteAdmin,BusinessAdmin,Author,SubjectAssociatedApiAdmin&lt;/arg&gt;
          &lt;/condition&gt;
        &lt;/conditions&gt;
      &lt;/restrict-to&gt;
      &lt;results&gt;
        &lt;unconditional-result old-status="Rejected" status="Finished" step="500" owner="${caller}" /&gt;
      &lt;/results&gt;
      &lt;post-functions&gt;
        &lt;function type="deleteDiscussion"/&gt;
      &lt;/post-functions&gt;
    &lt;/action&gt;</pre>


<h3 id="disc_f_04">sendNotification</h3>
<p>Triggers the specified notification based on an event relating to a discussion.</p>
<p><strong>Note</strong>: The email isn't sent instantly; it is queued to be sent. It goes to the notifications queue, and the job runs every 60 seconds. There might be a short delay before the user receives the email.</p>

<h4>Parameters</h4>
<table class="doctable">
	<thead>
		<tr>
			<th>Name</th>
			<th>Description/Values</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>subjectType</td>
			<td><p>Indicates the type of resource the notification relates to. Valid values:</p>
				<ul>
					<li>apiversion</li>
					<li>app-version</li>
					<li>group</li>
					<li>board</li>
				</ul>      </td>
		</tr>
		<tr>
			<td>Role</td>
			<td><p>The role to which the notifications will be sent&#8212;only users who hold this role for the type of resource as specified in the subjectType parameter. Valid values:</p>
				<ul>
					<li>SubjectAdmin</li>
				</ul></td>
		</tr>
		<tr>
			<td>notificationType</td>
			<td><p>The type of notification being sent. Can be any valid notification existing in the platform. For example:</p>
				<ul>
					<li>com.soa.notification.type.api.post.created (for an API)</li>
					<li>com.soa.notification.type.app.post.created (for an app)</li>
					<li>com.soa.notification.type.group.post.created (for a group)</li>
					<li>com.soa.notification.type.board.post.created (for a board)</li>
				</ul>      </td>
		</tr>
	</tbody>
</table>

<h4>Examples/Notes/Additional Information</h4>
<p>In the example below, the workflow is set up so that a review added by an administrator is approved automatically. When the review is published, a notification is sent to applicable admins. A different notification is sent for an API review versus an app review.</p>
<pre>&lt;action id="102" name="Auto Approve Auto Publish" auto="TRUE"&gt;
    &lt;restrict-to&gt;
      &lt;conditions type="OR"&gt;
        &lt;condition type="authorizeByAtmosphereRole"&gt;
          &lt;arg name="role"&gt;SiteAdmin,BusinessAdmin&lt;/arg&gt;
        &lt;/condition&gt;
        &lt;condition type="isAutoPublishEnabled"/&gt;
      &lt;/conditions&gt;
    &lt;/restrict-to&gt;
    &lt;results&gt;
      &lt;unconditional-result old-status="none"  status="Published" step="300" owner="${caller}" /&gt;
    &lt;/results&gt;
    &lt;post-functions&gt;
      &lt;function type="markPublished"/&gt;
      &lt;function type="sendNotification"&gt;
        &lt;arg name="subjectType"&gt;apiversion&lt;/arg&gt;
        &lt;arg name="role"&gt;SubjectAdmin&lt;/arg&gt;
        &lt;arg name="notificationType"&gt;com.soa.notification.type.api.post.created&lt;/arg&gt;
      &lt;/function&gt;
      &lt;function type="sendNotification"&gt;
        &lt;arg name="subjectType"&gt;app-version&lt;/arg&gt;
        &lt;arg name="role"&gt;SubjectAdmin&lt;/arg&gt;
        &lt;arg name="notificationType"&gt;com.soa.notification.type.app.post.created&lt;/arg&gt;
      &lt;/function&gt;
      &lt;function type="sendNotification"&gt;
        &lt;arg name="subjectType"&gt;group&lt;/arg&gt;
        &lt;arg name="role"&gt;SubjectAdmin&lt;/arg&gt;
        &lt;arg name="notificationType"&gt;com.soa.notification.type.group.post.created&lt;/arg&gt;
      &lt;/function&gt;
      &lt;function type="sendNotification"&gt;
        &lt;arg name="subjectType"&gt;board&lt;/arg&gt;
        &lt;arg name="role"&gt;SubjectAdmin&lt;/arg&gt;
        &lt;arg name="notificationType"&gt;com.soa.notification.type.board.post.created&lt;/arg&gt;
      &lt;/function&gt;
    &lt;/post-functions&gt;
  &lt;/action&gt;</pre>
<p><a href="#top">Back to top</a></p>



<h2 id="disc_c_00">Discussions Workflow: Conditions</h2>
<p>The following conditions apply to the discussions workflow:</p>
<ul>
	<li><a href="#disc_c_01">isAutoPublishEnabled</a></li>
</ul>
<!--<p>{\atmosphere\com.soa.atmosphere.impl\src\com\soa\discussion\workflow\DiscussionWorkflowConditions.java}</p>-->



<h3 id="disc_c_01">isAutoPublishEnabled</h3>
<p>Checks the platform settings to determine whether a discussion can be automatically published; returns <strong>true</strong> if so. If <strong>false</strong>, new discussions require moderation.</p>

<h4>Arguments</h4>
<p>None.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="disc_vr_00">Discussions Workflow: Variable Resolvers</h2>
<p>There are currently no variable resolvers for Akana API Platform workflows relating to discussions.</p>
<!--<p>{\atmosphere\com.soa.atmosphere.impl\src\com\soa\discussion\workflow\DiscussionWorkflowVariableResolver.java}</p>-->
<p><a href="#top">Back to top</a></p>




<hr class="divide_hr" />




<h2 id="related_topics">Related Topics</h2>
<div class="relatedlinks" id="cm_workflow">
<ul>
	<li><a href="01_overview_cm_wf.htm">Custom Workflows in the Community Manager developer portal</a></li>
	<li><a href="02_general.htm">Workflow General Reference: Functions, Conditions, and Variables</a></li>
	<li><a href="03_app_version_wf.htm">App Version Workflow</a></li>
	<li><a href="04_api_version_wf.htm">API Version Workflow</a></li>
	<li><a href="05_api_contract_wf.htm">API Contract Workflow</a></li>
	<li><a href="06_ticket_wf.htm">Ticket Workflow</a></li>
</ul>
<ul>
	<li><a href="07_group_membership_wf.htm">Group Membership Workflow</a></li>
	<li><a href="08_user_wf.htm">User Workflow</a></li>
	<li><a href="09_review_wf.htm">Review Workflow</a></li>
	<li><a href="10_discussions_wf.htm">Discussions Workflow</a></li>
	<li><a href="11_comments_wf.htm">Comments Workflow</a></li>
	<li><a href="12_model_wf.htm">Model Object Workflow</a></li>
</ul>
</div>