---
layout: page
title: Comments Workflow | Customizing Workflows in the API Platform
description: Information about initial actions, reserved actions, functions, conditions, and variables for the Comments workflow.
product: cm
category: ref
sub-nav-class: Workflows
weight: 11
type: page
nav-title: Comments Workflow
---
<h1 id="top">Comments Workflow</h1>
<p>This section provides information about functions, conditions, and variables for the Comments workflow, as well as initial actions and reserved actions.</p>
<hr class="divide_hr" />


<h2 style="color: gray;">Table of Contents</h2>
<ol class="table_of_contents">
	<li><a href="#comment_ia_00">Comments Workflow: Initial Actions</a></li>
	<li><a href="#comment_ra_00">Comments Workflow: Reserved Actions</a></li>
	<li><a href="#comment_f_00">Comments Workflow: Functions</a></li>
	<li><a href="#comment_c_00">Comments Workflow: Conditions</a></li>
	<li><a href="#comment_vr_00">Comments Workflow: Variable Resolvers</a> (none)</li>
</ol>
<hr class="divide_hr" />
<!--<p>{\atmosphere\com.soa.atmosphere.impl\META-INF\resources\templates\default-comments-workflow.xml}</p>-->



<h2 id="comment_ia_00">Comments Workflow: Initial Actions</h2>
<p>The initial actions valid for Akana API Platform workflows relating to comments are:</p>
<ul>
	<li><a href="#comment_ia_01">@AddComment</a></li>
	<li><a href="#comment_ia_02">@Audit</a></li>
	<li><a href="#comment_ia_03">@Alert</a></li>
</ul>
<h3 id="comment_ia_01">@AddComment</h3>
<p>This is how a comment is introduced into the workflow. If you are customizing the initial behavior when a comment is added, this is where the customization needs to go.</p>


<h3 id="comment_ia_02">@Audit</h3>
<p>An initial action that could be used to initiate a comment for audit purposes.</p>


<h3 id="comment_ia_03">@Alert</h3>
<p>An initial action that could be used to initiate a comment as the result of an alert&#8212;for example, SLA or quota alerts.</p>
<!--<p>{\atmosphere\com.soa.atmosphere.impl\src\com\soa\comment\workflow\CommentWorkflowConstants.java}</p>-->
<p><a href="#top">Back to top</a></p>




<h2 id="comment_ra_00">Comments Workflow: Reserved Actions</h2>
<p>The following reserved actions are defined for comments workflows:</p>
<ul>
	<li><a href="#comment_ra_01">@read</a></li>
</ul>


<h3 id="comment_ra_01">@read</h3>
<p>Applies to unpublished comments only. This action controls who can read an unpublished comment. When the @read action is available, read permission is available for someone to read the comment in an unpublished state. If @read is not available for a specific user for the current state of the comment, the user cannot see it.</p>
<p>Once the comment is published, all users who have visibility of the resource can see it.</p>
<!--<p>{\atmosphere\com.soa.atmosphere.impl\src\com\soa\comment\workflow\CommentWorkflowConstants.java}</p>-->
<p><a href="#top">Back to top</a></p>



<h2 id="comment_f_00">Comments Workflow: Functions</h2>
<p>The following functions are available for the comments workflow:</p>
<ul>
	<li><a href="#comment_f_01">MarkPublished</a></li>
	<li><a href="#comment_f_02">markUnPublished</a></li>
	<li><a href="#comment_f_03">deleteComment</a></li>
	<li><a href="#comment_f_04">sendNotification</a></li>
</ul>
<!--<p>{\atmosphere\com.soa.atmosphere.impl\src\com\soa\comment\workflow\CommentWorkflowFunctions.java}</p>-->


<h3 id="comment_f_01">MarkPublished</h3>
<p>Marks a comment as published. This might be used in a scenario where the Moderator has determined that the comment meets guidelines, or if comments are not moderated.</p>

<h4>Parameters</h4>
<p>None.</p>
<h4>Examples/Notes/Additional Information</h4>
<p>In the example below, when a new comment is added, the workflow checks the platform settings to see if a comment added by an admin is auto-approved, and also checks the role of the user. If both conditions are met, the status is changed from <strong>none</strong> to <strong>Published</strong>, and the workflow runs the <strong>markPublished</strong> function.</p>
<pre>&lt;step id="100" name="Route Add New Comment"&gt;
  &lt;actions&gt;
    &lt;action id="101" name="Auto Approve Admin Add" auto="TRUE"&gt;
      &lt;restrict-to&gt;
        &lt;conditions type="AND"&gt;
          &lt;condition type="authorizeByCMRole"&gt;
            &lt;arg name="role"&gt;SiteAdmin,BusinessAdmin&lt;/arg&gt;
          &lt;/condition&gt;
        &lt;/conditions&gt;
      &lt;/restrict-to&gt;
      &lt;results&gt;
        &lt;unconditional-result old-status="none"  status="Published" step="300" owner="${caller}" /&gt;
      &lt;/results&gt;
      &lt;post-functions&gt;
        &lt;function type="markPublished"/&gt;
      &lt;/post-functions&gt;
    &lt;/action&gt;</pre>


<h3 id="comment_f_02">markUnPublished</h3>
<p>Marks a comment as not published. This might be used in a moderated scenario where the Moderator has determined that the comment does not meet guidelines.</p>

<h4>Parameters</h4>
<p>None.</p>
<h4>Examples/Notes/Additional Information</h4>
<p>In the example below, when a new comment is added, the workflow checks the platform settings to see if a comment added by an admin is auto-approved. If manual approval is needed (action id 102), the status is changed from <strong>none</strong> to <strong>Pending</strong>, and the workflow runs the <strong>markUnPublished</strong> function.</p>
<pre>&lt;step id="100" name="Route Add New Comment"&gt;
  &lt;actions&gt;
    &lt;action id="101" name="Auto Approve Admin Add" auto="TRUE"&gt;
      &lt;restrict-to&gt;
        &lt;conditions type="AND"&gt;
          &lt;condition type="authorizeByCMRole"&gt;
            &lt;arg name="role"&gt;SiteAdmin,BusinessAdmin&lt;/arg&gt;
          &lt;/condition&gt;
        &lt;/conditions&gt;
      &lt;/restrict-to&gt;
      &lt;results&gt;
        &lt;unconditional-result old-status="none"  status="Published" step="300" owner="${caller}" /&gt;
      &lt;/results&gt;
      &lt;post-functions&gt;
        &lt;function type="markPublished"/&gt;
      &lt;/post-functions&gt;
    &lt;/action&gt;
    &lt;action id="102" name="Manual Approval Needed" auto="TRUE"&gt;
      &lt;results&gt;
        &lt;unconditional-result old-status="none" status="Pending" step="200" owner="${caller}" /&gt;
      &lt;/results&gt;
      &lt;post-functions&gt;
        &lt;function type="markUnPublished"/&gt;
      &lt;/post-functions&gt;
    &lt;/action&gt;
  &lt;/actions&gt;
&lt;/step&gt;</pre>


<h3 id="comment_f_03">deleteComment</h3>
<p>Deletes a comment.</p>

<h4>Parameters</h4>
<p>None.</p>
<h4>Examples/Notes/Additional Information</h4>
<p>In the example below, an action is taken the delete the comment. The workflow first verifies that the user is authorized. If the condition is met, the status is changed from <strong>Published</strong> to <strong>Finished</strong>, and the workflow runs the <strong>deleteComment</strong> function.</p>
<pre>&lt;action id="302" name="comment.action.delete"&gt;
  &lt;restrict-to&gt;
    &lt;conditions type="AND"&gt;
      &lt;condition type="authorizeByCMRole"&gt;
        &lt;arg name="role"&gt;SiteAdmin,BusinessAdmin,Author,SubjectAssociatedApiAdmin&lt;/arg&gt;
      &lt;/condition&gt;
    &lt;/conditions&gt;
  &lt;/restrict-to&gt;
  &lt;results&gt;
    &lt;unconditional-result old-status="Published" status="Finished" step="500" owner="${caller}" /&gt;
  &lt;/results&gt;
  &lt;post-functions&gt;
    &lt;function type="deleteComment"/&gt;
  &lt;/post-functions&gt;
&lt;/action&gt;</pre>
<p><a href="#top">Back to top</a></p>



<h3 id="comment_f_04">sendNotification</h3>
<p>Triggers the specified notification based on an event relating to a comment. For example, this can be used to trigger a notification email to be sent to API admins when a comment is made on a pending API access request. By default, in the comments workflow, a notification email is sent only to the app developer.</p>
<p><strong>Note</strong>: The email isn't sent instantly; it is queued to be sent. It goes to the notifications queue, and the job runs every 60 seconds. There might be a short delay before the user receives the email.</p>

<h4>Parameters</h4>
<table class="doctable">
	<thead>
		<tr>
			<th>Name</th>
			<th>Description/Values</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>subjectType</td>
			<td>Indicates the type of resource the notification relates to. In the context of the comments workflow, the subjectType is <strong>board-item</strong>.</td>
		</tr>
		<tr>
			<td>subjectSubtype</td>
			<td><p>Valid only when <strong>subjectType</strong> is set to <strong>board-item</strong>. Indicates the type of resource that was commented on. Valid values are the board item types that can have comments attached to them:</p>
				<ul>
					<li>For API access requests: <strong>ContractRequest</strong></li>
					<li>For group membership requests: <strong>GroupMemberReq</strong></li>
					<li>For general app or API discussions: <strong>Discussion</strong></li>
				</ul></td>
		</tr>
		<tr>
			<td>Role</td>
			<td><p>The role to which the notifications will be sent&#8212;only users who hold this role for the type of resource as specified in the subjectType parameter. Valid values:</p>
				<ul>
					<li>SubjectAdmin</li>
					<li>SiteAdmin</li>
					<li>ApiAdmins</li>
					<li>BusinessAdmin</li>
					<li>Author</li>
				</ul></td>
		</tr>
		<tr>
			<td>notificationType</td>
			<td><p>The type of notification being sent. Can be any valid notification existing in the platform. For example:</p>
				<ul>
					<li>com.soa.notification.type.api.post.created (for an API)</li>
					<li>com.soa.notification.type.app.post.created (for an app)</li>
					<li>com.soa.notification.type.group.post.created (for a group)</li>
					<li>com.soa.notification.type.board.post.created (for a board)</li>
				</ul>      </td>
		</tr>
	</tbody>
</table>

<h4>Examples/Notes/Additional Information</h4>
<p>In the example below, the workflow is set up so that if a comment is made on an API access request, a notification is sent to API Admins. Without this workflow modification, the notification only goes to the app owner.</p>
<pre>&lt;action id="101" name="Auto Approve Admin Add" auto="TRUE"&gt;
  &lt;restrict-to&gt;
    &lt;conditions type="OR"&gt;
      &lt;condition type="authorizeByCMRole"&gt;
        &lt;arg name="role"&gt;SiteAdmin,BusinessAdmin&lt;/arg&gt;
      &lt;/condition&gt;
      &lt;condition type="isCommentAutoPublishEnabled"/&gt;
    &lt;/conditions&gt;
  &lt;/restrict-to&gt;
  &lt;results&gt;
    &lt;unconditional-result old-status="none"  status="Published" step="300" owner="${caller}" /&gt;
  &lt;/results&gt;
  &lt;post-functions&gt;
    &lt;function type="markPublished"/&gt;
    &lt;function type="sendNotification"&gt;
      &lt;arg name="subjectType"&gt;board-item&lt;/arg&gt;
      &lt;arg name="subjectSubtype"&gt;ContractRequest&lt;/arg&gt;
      &lt;arg name="role"&gt;ApiAdmins&lt;/arg&gt;
      &lt;arg name="notificationType"&gt;com.soa.notification.type.my.post.comment&lt;/arg&gt;
    &lt;/function&gt;
  &lt;/post-functions&gt;
&lt;/action&gt;</pre>
<p><a href="#top">Back to top</a></p>



<h2 id="comment_c_00">Comments Workflow: Conditions</h2>
<p>The following conditions apply to the comments workflow:</p>
<ul>
	<li><a href="#comment_c_01">authorizeByCMRole</a></li>
	<li><a href="#comment_c_02">isCommentAutoPublishEnabled</a></li>
</ul>
<!--<p>{\atmosphere\com.soa.atmosphere.impl\src\com\soa\comment\workflow\CommentWorkflowConditions.java}</p>-->


<h3 id="comment_c_01">authorizeByCMRole</h3>
<p>Tests to see if the workflow user has one or more specific roles in the platform, and is therefore authorized to perform the workflow action; returns Boolean true or false.</p>

<h4>Arguments</h4>
<table class="doctable">
	<thead>
		<tr>
			<th>Name</th>
			<th>Description/Values</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>Role</td>
			<td><p>One or more roles that are authorized to perform the workflow action.</p>
<p>Valid values:</p>
<ul>
	<li>Author</li>
	<li>BusinessAdmin</li>
	<li>SiteAdmin</li>
	<li>SubjectAssociatedApiAdmin</li>
</ul>      </td>
		</tr>
	</tbody>
</table>

<h4>Examples/Notes/Additional Information</h4>
<p>In the example below, when a new comment is added, the workflow checks the platform settings to see if a comment added by an admin is auto-approved, and then checks the role of the user. If the user is a Site Admin or Business Admin, the workflow proceeds. If not, the action is not allowed.</p>
<pre>&lt;step id="100" name="Route Add New Comment"&gt;
  &lt;actions&gt;
    &lt;action id="101" name="Auto Approve Admin Add" auto="TRUE"&gt;
      &lt;restrict-to&gt;
        &lt;conditions type="AND"&gt;
          &lt;condition type="authorizeByCMRole"&gt;
            &lt;arg name="role"&gt;SiteAdmin,BusinessAdmin&lt;/arg&gt;
          &lt;/condition&gt;</pre>


<h3 id="comment_c_02">isCommentAutoPublishEnabled</h3>
<p>Checks whether a comment can be automatically published; returns <strong>true</strong> if so. If <strong>false</strong>, new comments require moderation.</p>

<h4>Arguments</h4>
<p>None.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="comment_vr_00">Comments Workflow: Variable Resolvers</h2>
<p>There are currently no variable resolvers for Akana API Platform workflows relating to comments.</p>
<!--<p>{\atmosphere\com.soa.atmosphere.impl\src\com\soa\comment\workflow\CommentWorkflowVariableResolver.java}</p>-->
<p><a href="#top">Back to top</a></p>




<hr class="divide_hr" />




<h2 id="related_topics">Related Topics</h2>
<div class="relatedlinks" id="cm_workflow">
<ul>
	<li><a href="01_overview_cm_wf.htm">Custom Workflows in the Community Manager developer portal</a></li>
	<li><a href="02_general.htm">Workflow General Reference: Functions, Conditions, and Variables</a></li>
	<li><a href="03_app_version_wf.htm">App Version Workflow</a></li>
	<li><a href="04_api_version_wf.htm">API Version Workflow</a></li>
	<li><a href="05_api_contract_wf.htm">API Contract Workflow</a></li>
	<li><a href="06_ticket_wf.htm">Ticket Workflow</a></li>
</ul>
<ul>
	<li><a href="07_group_membership_wf.htm">Group Membership Workflow</a></li>
	<li><a href="08_user_wf.htm">User Workflow</a></li>
	<li><a href="09_review_wf.htm">Review Workflow</a></li>
	<li><a href="10_discussions_wf.htm">Discussions Workflow</a></li>
	<li><a href="11_comments_wf.htm">Comments Workflow</a></li>
	<li><a href="12_model_wf.htm">Model Object Workflow</a></li>
</ul>
</div>