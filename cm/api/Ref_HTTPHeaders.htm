---
layout: apipage
title: HTTP Headers | Reference Material | Enterprise API Platform API
description: This topic provides information about HTTP request and response headers used in the platform's API operations. It includes-
product: cm
category: ref
nav-title: HTTP Headers 
no-nav: api
sub-nav: true
sub-nav-class: ref
no-catalog: true
---

<h2><a name="top"></a>HTTP Headers</h2>
<p>This topic provides information about HTTP request and response headers used in the platform's API operations. It includes:</p>
<ul>
  <li>HTTP Request Headers</li>
  <li>HTTP Response Headers</li>
</ul>
<h3><a name="ref_httprequestheaders"></a>HTTP Request Headers</h3>
<p>The&nbsp;<!-- #BeginLibraryItem "/Library/_PlatformName.lbi" -->Enterprise API Platform<!-- #EndLibraryItem -->&nbsp;API uses the HTTP request headers shown in the table below.<!-- For general information about each header field, refer to the applicable glossary entries.--> The significant headers are:</p>
<ul>
  <li><a href="#acceptheader">Accept</a></li>
  <li>For operations other than GET, <a href="#contenttype_request">Content-Type</a></li>
  <li><a href="#host_request">Host</a></li>
  <li>Cookie (certain cookies, see <a href="Ref_Cookies.htm">Cookies in the&nbsp;<!-- #BeginLibraryItem "/Library/_PlatformName.lbi" -->Enterprise API Platform<!-- #EndLibraryItem -->&nbsp;</a>)</li>
</ul>
<table class="tableparmsresponse" width="100%" cellspacing="0" cellpadding="2">
  <thead>
    <tr>
      <th width="20%">Header Name</th>
      <th width="15%">Used In</th>
      <th width="65%">Description/Values</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><a id="acceptheader"></a>Accept</td>
      <td>Request Only</td>
      <td><p><!-- #BeginLibraryItem "/Library/hdrreq_accept.lbi" -->
        Lists one or more data formats that are valid in the response. For example,<strong> application/json or text/xml</strong>. The Accept header can include other formats as long as the required format is included. It's a good idea to list only the required format, or at least include it as the first on the list.<!-- #EndLibraryItem --></p>
        <p>For information on valid values, see <a href="Ref_MediaTypes.htm">Media Types</a>.</p></td>
  </tr>
    <tr>
      <td>Accept-Encoding</td>
      <td>Request Only</td>
      <td>Lists one or more encoding methods that are valid for compression of the response message. This ties in with the response header <strong>Content-Encoding</strong> which specifies the method actually used. For example: <strong>gzip,  deflate</strong></td>
  </tr>
    <tr>
      <td>Accept-Language</td>
      <td>Request Only</td>
      <td>Lists one or more languages that are valid for the response. <strong>en-us</strong> is preferred, <strong>en</strong> is valid. For example:<strong> en-us,en;q=0.5</strong></td>
  </tr>

    <tr>
      <td>Cache-Control</td>
      <td>Both</td>
      <td><!-- #BeginLibraryItem "/Library/hdrboth_cache-control.lbi" -->
Used in both request and response to specify whether the message can be cached between the client and the server.&nbsp;<!-- #BeginLibraryItem "/Library/_PlatformName.lbi" -->Enterprise API Platform<!-- #EndLibraryItem -->&nbsp;operations generally do not cache responses, so the value is generally <strong>no-cache</strong>. In some instances, such as with avatars and content, it is more efficient to cache the information. In these cases, we set a value in the Cache-Control response header. For example: <strong>Cache-Control: public, max-age=604800</strong>. This sets the content to be cached for 604800 seconds (one week).<!-- #EndLibraryItem --></td>
  </tr>
    <tr>
      <td>Connection</td>
      <td>Request Only</td>
      <td><!-- #BeginLibraryItem "/Library/hdrreq_connection.lbi" -->Instructs the server what to do with the connection once the request is received. The <strong>keep-alive</strong> value for this header means that the connection is kept open for the response.<!-- #EndLibraryItem --></td>
  </tr>
    <tr>
      <td>Content-Length</td>
      <td>Request Only</td>
      <td>Indicates the length of the message body, in bytes. Example: <strong>53</strong>.</td>
  </tr>
    <tr>
      <td><a id="contenttype_request"></a>Content-Type</td>
      <td>Both</td>
      <td><!-- #BeginLibraryItem "/Library/hdrreq_content-type.lbi" -->
<p>Specifies the media type of a request or response message body.</p>
<p>For request messages, content-type is used for POST&nbsp;and PUT&nbsp;but not for GET&nbsp;or DELETE. Most&nbsp;<!-- #BeginLibraryItem "/Library/_PlatformName.lbi" -->Enterprise API Platform<!-- #EndLibraryItem -->&nbsp;operations that use this header use <strong>application/json</strong> in the request message. Methods involving file upload use <strong>multipart/form-data</strong>. Methods with POST&nbsp;parameters might use <strong>application/x-www-form-urlencoded</strong>; for example, the <span class="apidoc_code"><a href="login/m_login_renewToken.htm">POST&nbsp;/api/login/renewToken</a></span> operation.</p><!-- #EndLibraryItem -->
<p>For information on valid values, see <a href="Ref_MediaTypes.htm">Media Types</a>.</p></td>
  </tr>
    <tr>
      <td>Cookie</td>
      <td>Request Only</td>
      <td><!-- #BeginLibraryItem "/Library/hdrreq_cookie.lbi" -->
An extension header used for client identification and tracking. In the&nbsp;<!-- #BeginLibraryItem "/Library/_PlatformName.lbi" -->Enterprise API Platform<!-- #EndLibraryItem -->&nbsp;API the cookie parameter contains the session ID.<!-- #EndLibraryItem -->For more information, see <a href="Ref_Cookies.htm">Cookies in the&nbsp;<!-- #BeginLibraryItem "/Library/_PlatformName.lbi" -->Enterprise API Platform<!-- #EndLibraryItem --></a>.</td>
  </tr>
    <tr>
      <td><a id="host_request"></a>Host</td>
      <td>Request Only</td>
      <td><!-- #BeginLibraryItem "/Library/hdrreq_host.lbi" -->
The hostname and port number of the machine sending the message. Example: <strong>api.acmepayments.com.</strong><!-- #EndLibraryItem --></td>
  </tr>
    <tr>
      <td>Referer</td>
      <td>Request Only</td>
      <td><!-- #BeginLibraryItem "/Library/hdrreq_referer.lbi" -->
The URL from which the request originated. Example: <strong>https://api.acmepayments.com</strong>.<!-- #EndLibraryItem --></td>
  </tr>
    <tr>
      <td>User-Agent</td>
      <td>Request Only</td>
      <td>Indicates the software/version making the request. Generally includes browser name and version, and sometimes includes additional information such as operating system. Example: <strong>Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1</strong>.</td>
  </tr>
    <tr>
      <td>X-Requested-With</td>
      <td>Request Only</td>
      <td>An extension header used to identify Ajax requests. Wherever the&nbsp;<!-- #BeginLibraryItem "/Library/_PlatformName.lbi" -->Enterprise API Platform<!-- #EndLibraryItem -->&nbsp;API uses this header, the value is <strong>XMLHttpRequest</strong>.</td>
  </tr>
    <tr>
      <td><a id="csrf_token_request"></a>X-Csrf-Token_{<a href="Ref_IDsOnThePlatform.htm#id_fedmemberid">fedmemberid</a>}</td>
      <td>Request Only</td>
      <td><p>A custom header used for protection against CSRF attacks. For more information, see <a href="Ref_CSRFPreventionOnThePlatform.htm">CSRF Prevention on the Platform</a>.</p>
        <p>Uses the <a href="Ref_IDsOnThePlatform.htm#id_fedmemberid">fedmemberid</a> for the tenant.</p></td>
    </tr>
  </tbody>
</table>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>



<h3><a name="ref_httpresponseheaders"></a>HTTP Response Headers</h3>
<p>The&nbsp;<!-- #BeginLibraryItem "/Library/_PlatformName.lbi" -->Enterprise API Platform<!-- #EndLibraryItem -->&nbsp;API uses the HTTP response headers shown in the table below.<!-- For general information about each header field, refer to the applicable glossary entries.--> The significant headers are:</p>
<ul>
  <li>Content-Type</li>
  <li>For the specific operations that require it, Atmo-Renew-Token</li>
</ul>
<table class="tableparmsresponse" width="100%" cellspacing="0" cellpadding="2">
  <thead>
    <tr>
      <th width="20%">Header Name</th>
      <th width="15%">Used In</th>
      <th width="65%">Description/Values</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><a id="atmorenewtoken"></a>Atmo-Renew-Token</td>
      <td>Response only</td>
      <td><!-- #BeginLibraryItem "/Library/hdrrsp_atmo-renew-token.lbi" -->
<strong>renew</strong>. This is a custom response header used when the action of the method causes a change in a value  that's stored in the token. The token includes information on the user's apps, APIs, and groups, so actions such as adding an app or accepting an invitation to join an app team require update of the token. A value of <strong>renew</strong> means that the operation has changed some information that's stored in the token, and you must therefore renew the token using the <span class="apidoc_code"><a href="login/m_login_renewToken.htm">POST&nbsp;/api/login/renewToken</a></span> operation.<!-- #EndLibraryItem --></td>
  </tr>

    <tr>
      <td><a id="cachecontrol"></a>Cache-Control</td>
      <td>Both</td>
      <td><!-- #BeginLibraryItem "/Library/hdrboth_cache-control.lbi" -->
Used in both request and response to specify whether the message can be cached between the client and the server.&nbsp;<!-- #BeginLibraryItem "/Library/_PlatformName.lbi" -->Enterprise API Platform<!-- #EndLibraryItem -->&nbsp;operations generally do not cache responses, so the value is generally <strong>no-cache</strong>. In some instances, such as with avatars and content, it is more efficient to cache the information. In these cases, we set a value in the Cache-Control response header. For example: <strong>Cache-Control: public, max-age=604800</strong>. This sets the content to be cached for 604800 seconds (one week).<!-- #EndLibraryItem --></td>
  </tr>
    <tr>
      <td>Content-Encoding</td>
      <td>Response only</td>
      <td><!-- #BeginLibraryItem "/Library/hrdrsp_content-encoding.lbi" -->
Indicates the type of compression encoding the server used for the response message, so that the client can decode the message. This is the counterpart to the <strong>Accept-Encoding</strong> request header which specifies which types of compression are acceptable in the response. Example: <strong>gzip</strong>. The&nbsp;<!-- #BeginLibraryItem "/Library/_PlatformName.lbi" -->Enterprise API Platform<!-- #EndLibraryItem -->&nbsp;API always returns a gzip-encoded response if the request header indicates that gzip encoding is accepted for responses.<!-- #EndLibraryItem --></td>
  </tr>
    <tr>
      <td><a id="contentdisposition_response"></a>Content-Disposition</td>
      <td>Response only</td>
      <td>An opportunity to raise a &quot;File Download&quot; dialog box for a known binary file type, or to suggest a filename. This facilitates prompting the user to save the file directly to disk, bypassing the default behavior of displaying the file in the browser. All operations that return content as a downloadable file, such as app and API export files and metrics, use this header. For more information, see <a href="Ref_DownloadableFilesInResponseMessages.htm">Downloadable Files in Response Messages</a>.</td>
    </tr>
    <tr>
      <td><a id="contenttype_response"></a>Content-Type</td>
      <td>Both</td>
      <td><p>Specifies the media type of a request or response message  body.</p>
<p>For response messages, content-type is always used. Refer to  specific methods for valid values. Some typical scenarios:</p>
<ul class="apidoctable_ul">
  <li>Generally, response messages use <strong>application/json</strong>, <strong>text/xml</strong>,  or <strong>text/plain</strong>.</li>
  <li>Methods returning an RSS feed generally use <strong>application/json</strong> unless another format is requested in the request message's accept  header.</li>
  <li>Methods involving file upload use <strong>multipart/form-data</strong>. When binary data is included in the response, different content-types are used based on the type of the data; for example, <strong>image/gif</strong>, <strong>image/jpeg</strong>, <strong>image/png</strong>, or <strong>application/zip</strong>.
  <p>For more information about uploading files to the platform with the multipart/form-data media type, see <a href="Ref_ManagingMultipartFormDataUploads.htm">Managing Multipart/Form-Data Uploads</a>.</p></li>
</ul></td>
  </tr>
    <tr>
      <td><a id="location_response"></a>Location</td>
      <td>Response only</td>
      <td>Used with HTTP 307 Temporary Redirect, to provide the URL location for the redirect. For example, the <span class="apidoc_code"><a href="login/m-login_ssoLogin.htm">GET&nbsp;/api/login/ssoLogin</a></span> operation uses this response header.</td>
    </tr>
    <tr>
      <td>Date</td>
      <td>Response only</td>
      <td><!-- #BeginLibraryItem "/Library/hdrrsp_date.lbi" -->
A date/timestamp representing the time on the server when the message response was sent. Example: <strong>Wed,  22 Jan 2014 21:09:23 GMT</strong>.<!-- #EndLibraryItem --></td>
  </tr>
    <tr>
      <td><a id="setcookie_response"></a>Set-Cookie</td>
      <td>Response only</td>
      <td>Sends an updated user cookie. Cookies are used for the authentication token, and some operations require an update to the cookie. For example, the authentication token includes information about groups that the user is a member of, so the <span class="apidoc_code"><a href="groups/m_groups_addGroup.htm">POST&nbsp;/api/groups</a></span>, <span class="apidoc_code"><a href="groups/m_groups_deleteGroup.htm">DELETE&nbsp;/api/groups/{GroupID}</a></span>, and <span class="apidoc_code"><a href="groups/m_groups_removeMemberFromGroup.htm">DELETE&nbsp;/api/groups/{GroupID}/members/{UserID}</a></span> operations return an updated cookie. Operations relating to signing in, such as <span class="apidoc_code"><a href="users/m_users_completeSignup.htm">POST&nbsp;/api/users/completeSignup</a></span>, also update the cookie. The <span class="apidoc_code"><a href="login/m_login_logout.htm">POST&nbsp;/api/login/logout</a></span> operation returns an updated value that expires the browser cookie since the user is logging out.</td>
  </tr>
    <tr>
      <td>Transfer-Encoding</td>
      <td>Response only</td>
      <td><!-- #BeginLibraryItem "/Library/hdrrsp_transfer-encoding.lbi" -->
If encoding was used to transfer the message safely, this value indicates the encoding method used. Example: <strong>chunked</strong>. For HTTP 1.1 messages, the&nbsp;<!-- #BeginLibraryItem "/Library/_PlatformName.lbi" -->Enterprise API Platform<!-- #EndLibraryItem -->&nbsp;API always uses the value <strong>chunked</strong>. For HTTP 1.0, transfer-encoding is not used.<br /><strong>Note</strong>: We recommend using HTTP version 1.1 since it includes several enhancements; chunking is one of them.<!-- #EndLibraryItem --></td>
  </tr>
  </tbody>
</table>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>



<h3>Related Topics</h3>
<ul>
  <li><a href="index.htm"><!-- #BeginLibraryItem "/Library/_PlatformName.lbi" -->Enterprise API Platform<!-- #EndLibraryItem -->&nbsp;API: Overview</a></li>
  <li><a href="Ref_AuthenticationAndSecurity.htm">Authentication and Security</a></li>
  <li><a href="Ref_TroubleshootingAndSupport.htm">Troubleshooting and Support</a></li>
  <li><a href="Ref_Glossary_CommunityPlatform.htm">Glossary of Terms</a></li>
  <li><a href="Ref_DocConventions.htm">Documentation Conventions</a></li>
</ul>

<hr />
