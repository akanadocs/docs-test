---
layout: apipage-noindex
title: User Object | Users Service | Akana API Platform API
description: Contains information about a platform user.
product: cm
category: ref
nav-title: User Object 
no-nav: api
sub-nav: true
sub-nav-class: obj
no-catalog: true
---

<div class="apidocContent">
<h2 id="top">User  Object</h2>
<p><!-- #BeginLibraryItem "/Library/o_users_User.lbi" -->Contains information about a platform user.<!-- #EndLibraryItem --></p>
<p class="usedby">This object is used by the following operations:</p>
<ul>
  <li><span class="apidoc_code"><a href="../users/m_users_signupUser.htm">POST&nbsp;/api/users/signupUser[/{InvitationCode}]</a></span> (in the request)</li>
  <li><span class="apidoc_code"><a href="../users/m_users_changeSignupState.htm">PUT&nbsp;/api/users/{UserID}/registration/state</a></span> (in the response)</li>
  <li><span class="apidoc_code"><a href="../users/m_users_changeStatus.htm">PUT&nbsp;/api/users/{UserID}/status</a></span> (in the response)</li>
  <li><span class="apidoc_code"><a href="../users/m_users_modifyUser.htm">PUT&nbsp;/api/users/{UserID}</a></span> (in the request)</li>
  <li><span class="apidoc_code"><a href="../users/m_users_getUser.htm">GET&nbsp;/api/users/{UserID}</a></span> (in the response)</li>
  <li><span class="apidoc_code"><a href="../users/m_users_addUser.htm">POST&nbsp;/api/users</a></span> (in request and response)</li>
  <li><span class="apidoc_code"><a href="../login/m_login_validateRegistrationCode.htm">POST&nbsp;/api/login/validateRegistrationCode</a></span> (in the request)</li>
  <li><span class="apidoc_code"><a href="../users/m_users_changeUserDomain.htm">PUT&nbsp;/api/users/{UserID}/domains/{DomainID}</a></span> (in the response)</li>
</ul>

<p>The properties included in the <strong>User</strong> object are listed below. All values are optional.</p>
<table class="tableparmsresponse">
  <thead>
    <tr>
    <th>Property</th>
    <th>Type</th>
    <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><a href="../aaref/Ref_IDsOnThePlatform.htm#id_userid">UserID</a></td>
      <td>string</td>
      <td><!-- #BeginLibraryItem "/Library/o_ID_UserID.lbi" -->
        The unique ID for a specific user.<!-- #EndLibraryItem --></td>
  </tr>
    <tr>
      <td>UserName</td>
      <td>string</td>
      <td><!-- #BeginLibraryItem "/Library/o_users_UserName.lbi" -->
The user's name, as set up by the user in the&nbsp;<!-- #BeginLibraryItem "/Library/_PlatformName.lbi" -->Akana API Platform<!-- #EndLibraryItem -->. For a Facebook user, the user name is a numeric ID. For a Google user it is a URL.<!-- #EndLibraryItem --></td>
  </tr>
    <tr>
      <td>FirstName</td>
      <td>string</td>
      <td>The user's first name.</td>
  </tr>
    <tr>
      <td>LarstName</td>
      <td>string</td>
      <td>The user's last name.</td>
  </tr>
    <tr>
      <td>AuthIdentifier</td>
      <td>string</td>
      <td><!-- #BeginLibraryItem "/Library/o_users_authIdentifier.lbi" -->
        The identifier for the user, as provided by the identify store. If the user signed up using Facebook, this value is a numeric ID; for Google, it is the URI of the user on Google. If the user signed up on the platform, it is a unique identifier for the platform.<!-- #EndLibraryItem --></td>
  </tr>
    <tr>
      <td>Password</td>
      <td>string</td>
      <td>The user's password.</td>
  </tr>
    <tr>
      <td>Description</td>
      <td>string</td>
      <td>A text description for the user, if there is one.</td>
  </tr>
    <tr>
      <td>Link</td>
      <td>string</td>
      <td>The URL to an external webpage for the user, if one is set up.</td>
  </tr>
    <tr>
      <td>Visibility</td>
      <td>string</td>
      <td><p><!-- #BeginLibraryItem "/Library/parm_Visibility_all.lbi" -->
The <a href="../Ref_Glossary_CommunityPlatform.htm#gl_visibility">visibility</a> setting for this resource. For a list of valid values, see <a href="../aaref/Ref_Values.htm#values_visibilitysettings">Visibility Settings</a>.<!-- #EndLibraryItem --></p>
        <p>Currently, the visibility of all users is Public.</p></td>
  </tr>
    <tr>
      <td>Phone</td>
      <td>string</td>
      <td>Phone number for the user.</td>
  </tr>
    <tr>
      <td>Email</td>
      <td>string</td>
      <td>The user's email address.</td>
  </tr>
    <tr>
      <td><a href="../aaref/Ref_IDsOnThePlatform.htm#id_businessid">BusinessID</a></td>
      <td>string</td>
      <td><!-- #BeginLibraryItem "/Library/o_ID_BusinessID.lbi" -->
The unique ID for a specific business <a href="../Ref_Glossary_CommunityPlatform.htm#gl_organization">organization</a> on the platform.<!-- #EndLibraryItem --></td>
  </tr>
    <tr>
      <td>Title</td>
      <td>string</td>
      <td>The user's job title. In the user interface, this information is set up on the Your Personal Info page.</td>
  </tr>
    <tr>
      <td>Industry</td>
      <td>string</td>
      <td>The user's industry. In the user interface, this information is set up on the <strong>Your Personal Info</strong> page.</td>
  </tr>
    <tr>
      <td>Language</td>
      <td>string[&nbsp;]</td>
      <td>A list of the user's favorite computer languages, separated by commas. In the user interface, this information is set up on the <strong>Your Personal Info</strong> page.</td>
    </tr>
    <tr>
      <td>Technology</td>
      <td>string[&nbsp;]</td>
      <td>A list of technologies the user is interested in, separated by commas. In the user interface, this information is set up on the <strong>Your Personal Info</strong> page, in the Frameworks section.</td>
  </tr>
    <tr>
      <td>Favorites</td>
      <td>string</td>
      <td>A list of the user's favorite APIs. In the user interface, this information is set up on the <strong>Your Personal Info</strong> page.</td>
    </tr>
    <tr>
      <td><a href="../aaref/Ref_IDsOnThePlatform.htm#id_pictureid">PictureID</a></td>
      <td>long</td>
      <td>The unique ID for the picture uploaded for the user, if applicable.</td>
  </tr>
    <tr>
      <td>AvatarProvider</td>
      <td>string</td>
      <td><!-- #BeginLibraryItem "/Library/parm_AvatarProvider.lbi" -->The avatar provider, such as Gravatar, if applicable.<!-- #EndLibraryItem --></td>
  </tr>
    <tr>
      <td>HasPicture</td>
      <td>boolean</td>
      <td>A value indicating whether the user's profile includes a picture (defaults to false indicating there is no picture).</td>
  </tr>
    <tr>
      <td>State</td>
      <td>string</td>
      <td><!-- #BeginLibraryItem "/Library/parm_State_user.lbi" -->
        The current signup state of the user; for example, pending_validation. For a list of valid values, see <a href="../aaref/Ref_Values.htm#values_usersignupstate">User Signup State Values</a>.<!-- #EndLibraryItem --></td>
  </tr>
    <tr>
      <td>Created</td>
      <td>dateTime</td>
      <td><!-- #BeginLibraryItem "/Library/o_Created.lbi" -->
        The date/time stamp when the resource was first created. Used only in response messages.<!-- #EndLibraryItem --></td>
  </tr>
    <tr>
      <td>Updated</td>
      <td>dateTime</td>
      <td><!-- #BeginLibraryItem "/Library/o_Updated.lbi" -->
        The date/time stamp when the resource was last updated. Used only in response messages.<!-- #EndLibraryItem --></td>
  </tr>
    <tr>
      <td>AvatarURL</td>
      <td>anyURI</td>
      <td><!-- #BeginLibraryItem "/Library/parm_AvatarURL.lbi" -->
URL for the avatar uploaded for the resource, if any. Used only in response messages.<!-- #EndLibraryItem --></td>
    </tr>
    <tr>
      <td>Domain</td>
      <td>string</td>
      <td>The user's domain.</td>
    </tr>
    <tr>
      <td>LastLoginDate</td>
      <td>dateTime</td>
      <td>The date/time stamp that the user last logged in.</td>
    </tr>
    <tr>
      <td>Disabled</td>
      <td>boolean</td>
      <td>Indicates whether the user's status has been changed to <a href="../aaref/Ref_Values.htm#values_userstatus">disabled</a>.</td>
    </tr>
    <tr>
      <td>ProfileName</td>
      <td>string</td>
      <td>The user's profile name.</td>
    </tr>
    <tr>
      <td>AcceptedAgreementID</td>
      <td>string[&nbsp;]</td>
      <td>One or more unique IDs for agreements the user has accepted.</td>
    </tr>
    <tr>
      <td>UserIdentificationChallenges</td>
      <td><a href="o_users_UserIdentificationChallenges.htm">UserIdentificationChallenges</a></td>
      <td><!-- #BeginLibraryItem "/Library/o_users_UserIdentificationChallenges.lbi" -->
Contains information about one or more user identification challenge questions applicable to a specific user, and in some cases the answers also.<!-- #EndLibraryItem --></td>
    </tr>
    <tr>
      <td><a href="../aaref/Ref_IDsOnThePlatform.htm#id_logindomainid">LoginDomainID</a></td>
      <td>LoginDomainID</td>
      <td><!-- #BeginLibraryItem "/Library/o_ID_LoginDomainID.lbi" -->The unique ID for a user's <a href="../Ref_Glossary_CommunityPlatform.htm#gl_logindomain">login domain</a>; either the platform, for a local account, or an additional login domain such as Google or Facebook. The login domains supported by a specific platform version are configured by the Site Admin.<!-- #EndLibraryItem --></td>
    </tr>
    <tr>
      <td>ForcePasswordChangeOnLogin</td>
      <td>boolean</td>
      <td>Indicates whether the user must change password on first login. When the user is added by the Site Admin using the <span class="apidoc_code"><a href="../users/m_users_addUser.htm">POST&nbsp;/api/users</a></span> operation, this defaults to <strong>true</strong> to force the user to change from the default password.</td>
    </tr>
    <tr>
      <td>Locked</td>
      <td>boolean</td>
      <td>Indicates whether the user's account is locked.</td>
    </tr>
    <tr>
      <td>LockExpirationDate</td>
      <td>dateTime</td>
      <td>Indicates the expiration date of the lock, if the user's account is locked.</td>
    </tr>
    <tr>
      <td>ExpirationDate</td>
      <td>dateTime</td>
      <td><p>Indicates the expiration date for the user account. If a user account includes an expiration date, and the date expires, the account is no longer active and the user cannot log in.</p>
        <p>By default, an expiration date is set on a new account for new users who have not yet logged in. Accounts that are not activated expire and can be purged periodically. Once a user logs in, the expiration date is removed from the user account. Specific implementations might use this field differently.</p></td>
    </tr>
    <tr>
    	<td>UserPhones</td>
    	<td><a href="o_users_UserPhones.htm">UserPhones</a></td>
    	<td><!-- #BeginLibraryItem "/Library/o_users_UserPhones.lbi" -->Contains information about one or more phone numbers associated with the user.<!-- #EndLibraryItem --></td>
    	</tr>
    <tr>
    	<td>classifiers</td>
    	<td>classifiers</td>
    	<td><!-- #BeginLibraryItem "/Library/o_classifiers.lbi" --><p>Applicable with Lifecycle Repository integration only. Contains a property name and an array of one or more values for the property. For an example, see <span class="apidoc_code"><a href="../users/m_users_completeSignUpAdvanced.htm#samplerequest">POST&nbsp;/api/users/completeSignup</a></span>.</p>
<p>The user interface shows custom properties as a single concept, but on the API, app, or user they exist as classifiers and artifacts. The artifacts have URLs ("<strong>by-ref</strong>" artifacts). Classifiers and artifacts are only applicable if the Repository Extension is enabled and custom properties configured.</p><!-- #EndLibraryItem --></td>
    	</tr>
    <tr>
    	<td>artifacts</td>
    	<td>artifacts</td>
    	<td><!-- #BeginLibraryItem "/Library/o_artifacts.lbi" --><p>Applicable with Lifecycle Repository integration only. Contains entries with an artifact name and value. The value is always a URL. For an example, see <span class="apidoc_code"><a href="../users/m_users_completeSignUpAdvanced.htm#samplerequest">POST&nbsp;/api/users/completeSignup</a></span>.</p>
<p>The user interface shows custom properties as a single concept, but on the API, app, or user they exist as classifiers and artifacts. The artifacts have URLs ("<strong>by-ref</strong>" artifacts). Classifiers and artifacts are only applicable if the Repository Extension is enabled and custom properties configured.</p><!-- #EndLibraryItem --></td>
    	</tr>
    </tbody>
</table>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<h3 id="relatedtopics">Related Topics</h3><!-- #BeginLibraryItem "/Library/_RelatedTopics.lbi" -->
<div class="relatedlinks">
<ul>
	<li><a href="../index.htm">Akana API Platform API: Overview</a></li>
	<li><a href="../Ref_Glossary_CommunityPlatform.htm">Glossary of Terms</a></li>
	<li><a href="../Ref_DocConventions.htm">Documentation Conventions</a></li>
</ul>
<ul>
	<li><a href="../Ref_AuthenticationAndSecurity.htm">Authentication and Security</a></li>
	<li><a href="../Ref_TroubleshootingAndSupport.htm">Troubleshooting and Support</a></li>
	<li><a href="../Ref_API_Reference.htm">Akana API Platform API: Reference Material</a></li>
</ul> 
</div><!-- #EndLibraryItem --></div>
