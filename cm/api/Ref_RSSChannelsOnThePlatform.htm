---
layout: apipage
title: RSS Channels on the Platform | Reference Material | Enterprise API Platform API
description: RSS is a widely used technology that allows users to subscribe to website content they're interested in. The content provider organizes information in a defined information structure called an RSS channel. Users can then subscribe to the channel via a piece of software called an RSS feed. Once a user subscribes to an RSS feed, content updates are automatically delivered, without the user having to check the individual websites for updates.
product: cm
category: ref
nav-title: RSS Channels on the Platform 
no-nav: api
sub-nav: true
sub-nav-class: ref
no-catalog: true
---

<h2><a name="top"></a>RSS Channels on the Platform</h2>
<p>RSS is a widely used technology that allows users to subscribe to website content they're interested in. The content provider organizes information in a defined information structure called an RSS channel. Users can then subscribe to the channel via a piece of software called an RSS feed. Once a user subscribes to an RSS feed, content updates are automatically delivered, without the user having to check the individual websites for updates.</p>
<p>Many of the operations in the&nbsp;<!-- #BeginLibraryItem "/Library/_PlatformName.lbi" -->Enterprise API Platform<!-- #EndLibraryItem -->&nbsp;API use RSS in the response. In general, GET&nbsp;operations that return any type of list return the information as an RSS channel, in either JSON or XML format. For examples, see <a href="#rss_platform_rss"><!-- #BeginLibraryItem "/Library/_PlatformName.lbi" -->Enterprise API Platform<!-- #EndLibraryItem -->&nbsp;Objects Returned as RSS Channels</a> below.</p>
<p>The RSS channel always includes the required summary information, and can also hold a list of items. In some cases, the RSS structure includes additional extension elements. In cases where&nbsp;<!-- #BeginLibraryItem "/Library/_PlatformName.lbi" -->Enterprise API Platform<!-- #EndLibraryItem -->&nbsp;operations use additional extension elements, they are described in the documentation for the applicable operation.</p>
<p>This topic includes the following information:</p>
<ul>
  <li><a href="#rss_fields">RSS Fields</a></li>
  <li><a href="#rss_pagingofreturnedrssitems">Paging of Returned RSS Items</a></li>
  <li><a href="#rss_platform_rss"><!-- #BeginLibraryItem "/Library/_PlatformName.lbi" -->Enterprise API Platform<!-- #EndLibraryItem -->&nbsp;Objects Returned as RSS Channels</a></li>
</ul>
<h4><a name="rss_fields"></a>RSS Fields</h4>
<p>The following tables describe elements that might appear in RSS feeds returned by the&nbsp;<!-- #BeginLibraryItem "/Library/_PlatformName.lbi" -->Enterprise API Platform<!-- #EndLibraryItem -->&nbsp;API.</p>
<p>In general, platform RSS responses include a few main values, and then one or more items, each with a set of values. These two sets of information are described in the tables below. For examples, refer to <a href="#rss_platform_rss">Enterprise API PlatformÂ Objects Returned as RSS Channels</a> below.</p>
<p><strong>RSS response main values</strong>:</p>
<table class="tableparmsresponse" width="100%" cellspacing="0"
	cellpadding="2">
<thead>
  <tr bgcolor="#DDDDDD">
    <th width="20%">Header</th>
    <th width="80%">Description</th>
    </tr>
</thead>
<tbody>
    <tr>
      <td><a name="rss_title"></a>title</td>
      <td>Name of the RSS feed. In the&nbsp;<!-- #BeginLibraryItem "/Library/_PlatformName.lbi" -->Enterprise API Platform<!-- #EndLibraryItem -->, examples are <strong>Application Contracts</strong> (for <span class="apidoc_code"><a href="apps/m_apps_getContracts.htm">GET&nbsp;/api/apps/versions/{AppVersionID}/contracts</a></span>), <strong>APIs</strong> (for <span class="apidoc_code"><a href="apis/m_apis_listAPIs.htm">GET&nbsp;/api/apis</a></span>), <strong>User Notifications</strong> (for <span class="apidoc_code">GET&nbsp;notifications/types</span>).</td>
  </tr>
    <tr>
      <td>item</td>
      <td>One or more items specific to the individual RSS feed. For possible item structures, and likely values, refer to the table below.</td>
    </tr>
    <tr>
      <td>version</td>
      <td>The RSS version is always <strong>1.0</strong>.</td>
    </tr>
</tbody>
</table>
<p><strong>RSS item values:</strong></p>
<table class="tableparmsresponse" width="100%" cellspacing="0"
	cellpadding="2">
<thead>
  <tr bgcolor="#DDDDDD">
    <th width="20%">Header</th>
    <th width="80%">Description</th>
    </tr>
</thead>
<tbody>
    <tr>
      <td>link</td>
      <td>The URL to the HTML page with details of the item.</td>
    </tr>
    <tr>
      <td>description</td>
      <td>Short description of the item. This may be the actual description of the item or an automatically generated descriptor of the resource based on its attributes.</td>
  </tr>
    <tr>
      <td>comments</td>
      <td>Relative URI to the comment list page for the item.</td>
  </tr>
    <tr>
      <td>CommentsPreview</td>
      <td>Extensibility element holding a preview of comments for an item. Optional.</td>
  </tr>
    <tr>
      <td><a name="rss_marks"></a>Marks</td>
      <td><p>Extensibility element that describes whether the item has been marked("liked") by a user, and if so how often. It includes a numeric count and a boolean value, IsMarkedByReader, indicating whether the current user (if a user is logged in) marked the Board item. Example:</p>
  <pre>"Marks" : {
  "Count" : 0,
  "IsMarkedByReader" : false
}</pre></td>
  </tr>
    <tr>
      <td><a name="rss_category"></a>category</td>
      <td><p>An array of optional elements of type Category. Each category has two parts: value and domain.</p>
        <p>The domains for which values are defined are:</p>
        <ul class="apidoctable_ul">
          <li><strong>Resource type</strong>: uddi:soa.com:resourcetype</li>
          <li><strong>Document type</strong>: uddi:soa.com:documenttype</li>
          <li><strong>Document State</strong>: uddi:soa.com:state</li>
          <li><strong>Filename</strong>: uddi:soa.com:filename</li>
          <li><strong>Version</strong>: uddi:soa.com:version</li>
          <li><strong>Document path</strong>: uddi:soa.com:docpath</li>
        </ul></td>
  </tr>
    <tr>
      <td>enclosure</td>
      <td>A media file that needs to be rendered with the item. This field is standard to the RSS feed structure, but isn't used by the&nbsp;<!-- #BeginLibraryItem "/Library/_PlatformName.lbi" -->Enterprise API Platform<!-- #EndLibraryItem -->&nbsp;API.</td>
  </tr>
    <tr>
      <td><a name="rss_pubdate"></a>pubDate</td>
      <td>The date the item was created, or last modified, formatted in <a href="Ref_Glossary_CommunityPlatform.htm#gl_coordinateduniversaltime">Coordinated Universal Time (UTC)</a>.</td>
  </tr>
    <tr>
      <td><a name="rss_guid"></a><a href="Ref_Glossary_CommunityPlatform.htm#gl_guid">guid</a></td>
      <td>Globally unique identifier for the item (<a href="Ref_Glossary_CommunityPlatform.htm#gl_fdn">FDN</a>).</td>
  </tr>
    <tr>
      <td><a name="rss_action"></a>Action</td>
      <td><p>An extensibility element for an action event that is valid for a specific item returned in the RSS channel. Used to call a JavaScript action.</p>
      <p>In some cases, actions that can be taken might be different for each of the items returned. For example, if the RSS channel is a list of tickets, some might be open and some might be closed. The action &quot;Close&quot; is only valid for open tickets. For a list of API access contracts, if a specific contract is suspended then &quot;Suspend&quot; is not a valid action for that contract. In the Action field, the RSS channel includes a list of valid dynamic actions available, per object, so that the application can determine what actions are valid for a specific object. This is only applicable to API access requests, tickets, group membership requests, and legal agreements.</p>
      <p>For more information on valid actions for different resources, see <a href="Ref_ExecutingWorkflowActions.htm">Executing Workflow Actions</a>.</p>
      <p><strong>Note</strong>: Actions that are always valid are not included. For example, someone can always comment on a ticket, so the action &quot;Comment&quot; is not included.</p></td>
  </tr>
    <tr>
      <td>Icon</td>
      <td>Extensibility element for an icon that is rendered along with the item. Used to show state or attribute of the item.</td>
  </tr>
    <tr>
      <td><a name="rss_entityreferences"></a>EntityReferences</td>
      <td><p>Extensibility element for referring to an entity in the system. Optional. <!-- #BeginLibraryItem "/Library/define_entityreferences.lbi" -->When an HTTP GET operation in the platform returns information in the form of an RSS channel, it very often includes entity references. Where an RSS item represents an object, the entity references include additional information about the object. For example, if the RSS channel returns information about an app version, the entity reference might include information about the app to which the app version belongs. All relevant relationships to the object returned in the RSS response are represented in the entity references.<!-- #EndLibraryItem --></p>
        <p><strong>Note</strong>: Each item in an RSS feed could include a list of EntityReferences. Each EntityReference in the list is another object that is somehow related to the object in the RSS feed item. In the past, we put EntityReference objects directly in the RSS item. This caused difficulties with JavaScript interpreting different EntityReference elements when there were one versus many. For this reason, we added EntityReferences as a separate element. In viewing the RSS feed results, you can ignore the EntityReference elements directly in the RSS item. Use only the EntityReference elements in the RSS item. Later, we will be removing the EntityReference objects references in the RSS item itself.</p></td>
  </tr>
    <tr>
      <td>AuthoringUser</td>
      <td>Information identifying the item's author. Optional.</td>
  </tr>
    <tr>
      <td>Image</td>
      <td>Extensibility element for an icon to be shown with the item, such as a company logo, user photo, or avatar. If this does not exist, the icon for the item can be determined by convention based on the item type. For example, ~/api/icon.png. Optional.</td>
  </tr>
</tbody>
</table>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<h4><a name="rss_pagingofreturnedrssitems"></a>Paging of Returned RSS Items</h4>
<p>When the total number of items in a list exceeds the search results page size, the list is broken down into pages, where each returned RSS channel is one page. <a href="Ref_Glossary_CommunityPlatform.htm#gl_opensearch">OpenSearch</a> 1.1 elements are used as extensions to the RSS <span class="apidoc_code">channel</span> element to describe how the returned channel represents a page and where it fits in the overall list.</p>
<p>For example, if the search results are limited to elements 101-200 out of a total of 1000 possible results, that information is included in the RSS channel, in the OpenSearch fields: totalResults, startIndex, and itemsPerPage. Including this information allows the user to get the broader picture of the possible search results available.  If the full set of possible search results is returned, we don't include totalResults.</p>
<p>Definitions for the paging properties are listed below.</p>
<table width="100%"
	cellpadding="2" cellspacing="0" class="tableparmsresponse">
  <thead>
    <tr bgcolor="#DDDDDD">
      <th width="15%">Paging Property</th>
      <th width="60%">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>startIndex</td>
      <td><!-- #BeginLibraryItem "/Library/parm_startIndex.lbi" -->The  starting position for the search results page. This corresponds to the <strong>start</strong> value in the request parameters.<!-- #EndLibraryItem --></td>
    </tr>
    <tr>
      <td>totalResults</td>
      <td><!-- #BeginLibraryItem "/Library/parm_totalResults.lbi" --> The total number of results matching the search terms, even if a subset of total results is returned.<!-- #EndLibraryItem --></td>
    </tr>
    <tr>
      <td>itemsPerPage</td>
      <td><!-- #BeginLibraryItem "/Library/parm_itemsPerPage.lbi" -->The number of search results to be displayed on the search results page. This corresponds to the <strong>count</strong> value in the request parameters.<!-- #EndLibraryItem --></td>
    </tr>
  </tbody>
</table>
<p>For a full description of OpenSearch elements, see <a href="http://www.acmecorpsearch.org/Specifications/OpenSearch/1.1" target="_blank">the OpenSearch 1.1 specification</a>.</p>
<p>A JSON example of OpenSearch elements used in an RSS channel is shown below. Ellipses indicate content omitted from the JSON object.</p>
<pre>
{
  &quot;channel&quot; : {
    ...
    &quot;startIndex&quot; : 10,
    &quot;totalResults&quot; : 1000,
    &quot;itemsPerPage&quot; : 10,
    &quot;item&quot; : [
    <i>RssItem</i>,
    ...
    ]
  },
  &quot;version&quot; : &quot;1.0&quot;
}</pre>
<h4><a name="rss_platform_rss"></a>&nbsp;<!-- #BeginLibraryItem "/Library/_PlatformName.lbi" -->Enterprise API Platform<!-- #EndLibraryItem -->&nbsp;Objects Returned as RSS Channels</h4>
<p>The following is a list of some of the types of&nbsp;<!-- #BeginLibraryItem "/Library/_PlatformName.lbi" -->Enterprise API Platform<!-- #EndLibraryItem -->&nbsp;information that are returned as RSS channels:</p>
<ul>
  <li>APIs: <a href="apis/m_apis_listAPIs.htm#rss_apis_json">JSON,</a> <a href="apis/m_apis_listAPIs.htm#rss_apis_xml">XML</a></li>
  <li>API Board: <a href="apis/m_apis_getBoard.htm#rss_apiboard_json">JSON,</a> <a href="apis/m_apis_getBoard.htm#rss_apiboard_xml">XML</a></li>
  <li>API Followers: <a href="apis/m_apis_getFollowers.htm#rss_followers_json">JSON only</a></li>
  <li>API Version Board: <a href="apis/m_apis_getVersionBoard.htm#rss_apiversionboard_json">JSON,</a> <a href="apis/m_apis_getVersionBoard.htm#rss_apiversionboard_xml">XML</a></li>
  <li>API Versions: <a href="apis/m_apis_getAPIVersions.htm#rss_apiversions">JSON example</a> </li>
  <li>API Contracts (contract versions): <a href="apis/m_apis_getContractVersions.htm#rss_apicontracts_json">JSON,</a> <a href="apis/m_apis_getContractVersions.htm#rss_apicontracts_xml">XML</a> </li>
  <li>App Board: <a href="apps/m_apps_getBoard.htm#rss_appboard_json">JSON,</a> <a href="apps/m_apps_getBoard.htm#rss_appboard_xml">XML</a></li>
  <li>Apps connected to a specific API version: <a href="apis/m_apis_getConnectedApps.htm#rss_appsconnected_json">JSON,</a> <a href="apis/m_apis_getConnectedApps.htm#rss_appsconnected_xml">XML</a></li>
  <li>App Contracts: <a href="apps/m_apps_getContracts.htm#rss_applicationcontracts_json">JSON,</a> <a href="apps/m_apps_getContracts.htm#rss_applicationcontracts_xml">XML</a></li>
  <li>App Followers: <a href="apps/m_apps_getFollowers.htm#rss_followers_json">JSON only</a></li>
  <li>App Team Members: <a href="apps/m_apps_getTeamMembers.htm#rss_applicationteammembers">JSON example</a></li>
  <li>App Version Board: <a href="apps/m_apps_getVersionBoard.htm#rss_appversionboard_json">JSON,</a> <a href="apps/m_apps_getVersionBoard.htm#rss_appversionboard_xml">XML</a></li>
  <li>App Versions: <a href="apps/m_apps_listVersions.htm#rss_applicationversions_json">JSON,</a> <a href="apps/m_apps_listVersions.htm#rss_applicationversions_xml">XML</a></li>
  <li>Business Resources: <a href="businesses/m_businesses_getBusinessResource.htm#rss_businessresources_json">JSON,</a> <a href="businesses/m_businesses_getBusinessResource.htm#rss_businessresources_xml">XML</a></li>
  <li>Businesses: <a href="businesses/m_businesses_getBusinesses.htm#rss_businesses_json">JSON,</a> <a href="businesses/m_businesses_getBusinesses.htm#rss_businesses_xml">XML</a></li>
  <li>Deployment Zones: <a href="deploymentzones/m_deploymentzones_getDeploymentZones.htm#rss_deploymentzones_json">JSON,</a> <a href="deploymentzones/m_deploymentzones_getDeploymentZones.htm#rss_deploymentzones_xml">XML</a></li>
  <li>Group Board: <a href="groups/m_groups_getBoard.htm#rss_groupboard_json">JSON,</a> <a href="groups/m_groups_getBoard.htm#rss_groupboard_xml">XML</a></li>
  <li>Group Followers: <a href="groups/m_groups_getFollowers.htm#rss_groupfollowers_json">JSON only</a></li>
  <li>Legal Agreement Documents: <a href="apis/m_apis_getLegals.htm#rss_agreementdocuments_json">JSON,</a> <a href="apis/m_apis_getLegals.htm#rss_agreementdocuments_textxml">text/XML</a></li>
  <li>User Notifications (notifications for an individual user): <a href="users/m_users_getNotifications.htm#rss_notifications_json">JSON example</a></li>
  <li>Policies: <a href="policies/m_policies_getPolicies.htm#rss_policies_json">JSON,</a> <a href="policies/m_policies_getPolicies.htm#rss_policies_xml">XML</a></li>
  <li>Private Viewers: <a href="apis/m_apis_getPrivateViewers.htm#rss_privateviewers_json">JSON,</a> <a href="apis/m_apis_getPrivateViewers.htm#rss_privateviewers_xml">XML</a></li>
  <li>Reviews: <a href="reviews/m_reviews_listReviews.htm#rss_reviews_json">JSON,</a> <a href="reviews/m_reviews_listReviews.htm#rss_reviews_xml">XML</a></li>
  <li>Search results: <a href="search/m_search_search.htm#rss_search_json">JSON,</a> <a href="search/m_search_search.htm#rss_search_xml">XML</a></li>
  <li>User Feed: <a href="users/m_users_getHomeFeed.htm#rss_userfeed_json">JSON,</a> <a href="users/m_users_getHomeFeed.htm#rss_userfeed_xml">XML</a></li>
  <li>User's list of apps: <a href="users/m_users_getApps.htm#rss_myapps_json">JSON,</a> <a href="users/m_users_getApps.htm#rss_myapps_xml">XML</a></li>
  <li>User's list of APIs: <a href="users/m_users_getApis.htm#rss_myapis_json">JSON,</a> <a href="users/m_users_getApis.htm#rss_myapis_xml">XML</a></li>
  <li>User's list of groups: <a href="users/m_users_getMyGroups.htm#rss_mygroups_json">JSON,</a> <a href="users/m_users_getMyGroups.htm#rss_mygroups_xml">XML</a></li>
  <li>User's list of Board items: <a href="users/m_users_getBoard.htm#rss_userboard_json">JSON,</a> <a href="users/m_users_getBoard.htm#rss_userboard_xml">XML</a></li>
</ul>
<p>The properties in the objects above are mapped to specific fields in the RSS channel. For details, refer to the documentation pages for specific operations.</p>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<h3 id="relatedtopics">Related Topics</h3><!-- #BeginLibraryItem "/Library/_RelatedTopics.lbi" -->
<table width="700" border="0" cellspacing="0" cellpadding="2">
  <tr>
    <td width="300"><ul>
  <li><a href="index.htm">Enterprise API Platform API: Overview</a></li>
  <li><a href="Ref_Glossary_CommunityPlatform.htm">Glossary of Terms</a></li>
  <li><a href="Ref_DocConventions.htm">Documentation Conventions</a></li>
</ul>
</td>
    <td width="400"><ul>
  <li><a href="Ref_AuthenticationAndSecurity.htm">Authentication and Security</a></li>
  <li><a href="Ref_TroubleshootingAndSupport.htm">Troubleshooting and Support</a></li>
  <li><a href="Ref_API_Reference.htm">Enterprise API Platform API: Reference Material</a></li>
</ul>
</td>
  </tr>
</table><!-- #EndLibraryItem --><hr />
