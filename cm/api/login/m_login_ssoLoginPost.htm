---
layout: apipage
title: SSO Login (POST) | Login Service | Akana API Platform API
description: Logs the user in to an external identity system such as Google or Facebook, for a login domain set up on the platform.
product: cm
category: ref
nav-title: SSO Login (POST) 
no-nav: api
sub-nav: true
sub-nav-class: login
no-catalog: true
---

<div class="apidocContent">
<!-- InstanceBeginEditable name="Heading" -->
<h1 id="top">POST&#160;/api/login/ssoLogin</h1>
<!-- InstanceEndEditable -->

<!-- InstanceBeginEditable name="Intro_AuthRoles" -->
<p>Logs the user in to an external identity system such as Google or Facebook, for a login domain set up on the platform.</p>
<p class="apidoc_note"><strong>Note</strong>: Login domains might support SSO login via POST or GET. For example, an OpenID Connect Relying Party domain might support a response mode of query, fragment, or form_post. If the domain supports form_post, <span class="apidoc_code">POST&#160;/api/login/ssoLogin</span> is used. If the domain supports query or fragment, <span class="apidoc_code">GET&#160;/api/login/ssoLogin</span> is used.</p>
<p>The specific processing that occurs with this operation depends on the login domain being used, as specified in the <strong>domain</strong> parameter in the request message. For example:</p>
<ul>
	<li>OpenID Connect Relying Party domain (includes Google and Facebook connectors in the platform): the platform references the domain setup, applying the OpenID Connect specification to see what should be used for the SSO token; for example, id_token. For an example, see <a href="#samplerequest_02">Sample request #2: Google</a> and <a href="#sampleresponse_02">Sample response #2: Google</a>.</li>
	<li>CA Siteminder domain: the operation looks for the <a href="../Ref_Glossary_CommunityPlatform.htm#gl_smsession_cookie">SMSESSION</a> cookie header.</li>
	<li>SAML Web SSO domain: it looks for the SAML assertion in query or form parameters.</li>
</ul>
<p>  With SSO Login, depending on the domain being used, and the protocol that it implements, the requirements of the request message are different.</p>
<p><strong>Note</strong>: for an example of SSO login using a SAML domain, including request and response, see <a href="../aaex/Ref_Ex_SSO_Login_SAML.htm">Example: SSO login with SAML Provider</a>.</p>
<p id="id_roles"><strong>Authorization Roles/Permissions</strong>: Anyone can run this operation.</p>
<!-- InstanceEndEditable -->
<p>This topic includes the following sections:</p>
<div class="relatedlinks">
<ul>
	<li><a href="#httpmethod">HTTP Method</a></li>
	<li><a href="#endpoint">URL</a></li>
	<li><a href="#samplerequest">Sample Request</a></li>
	<li><a href="#requestheaders">Request Headers</a></li>
	<li><a href="#requestparameters">Request Parameters</a></li>
</ul>
<ul>
	<li><a href="#response">Response</a></li>
	<li><a href="#sampleresponse">Sample Response</a></li>
	<li><a href="#responseheaders">Response Headers</a></li>
	<li><a href="#responsebody">Response Body</a></li>
	<li><a href="#errorcodes">Error Codes/Messages</a></li>
</ul>
</div>
<h2 id="httpmethod">HTTP Method</h2>
<!-- InstanceBeginEditable name="HTTP Method" -->
<p class="httpverb">POST</p>
<!-- InstanceEndEditable -->
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>

<h2 id="endpoint">URL</h2>
<!-- InstanceBeginEditable name="URL" -->
<pre class="soaapidoc_endpoint">https://{hostname}/api/login/ssoLogin</pre>
<!-- InstanceEndEditable -->
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<!-- InstanceBeginEditable name="Sample Request" -->
<h2 id="samplerequest">Sample Request #1: LDAP</h2>
<p id="id_samplerequest">The examples below shows an SSO login request for an LDAP domain. The first example sends the <strong>domain</strong> parameter in the POST content, the second sends it in the path.</p>
<p>In processing the request, the platform looks for the <strong>domain</strong> parameter first in the POST content, and then in the path.</p>
<p><strong>Request URL #1-1 (LDAP)</strong></p>
<p>Domain parameter is not included in the path, it is sent in the POST content (see sample request body #1).</p>
<pre>http://acmepaymentscorp.com/api/login/ssoLogin</pre>

<p><strong>Request URL #1-2 (LDAP)</strong></p>
<p>Domain parameter is sent in the path, and other parameters are sent in the POST content (see sample request body #2).</p>
<pre>http://acmepaymentscorp.com/api/login/ssoLogin/Ldapacmepaymentscorp1acmepaymentscorp</pre>

<p><strong>Sample request headers</strong></p>
<pre>Host: {hostname}
Accept: application/json, text/javascript, */*; q=0.01
Content-Type: application/x-www-form-urlencoded; charset=UTF-8
Cookie: JSESSIONID_pm60=1gsjqvxu1cgnj1th05legkdfvo</pre>

<p><strong>Sample request body #1 (LDAP)</strong></p>
<pre>identity_username=MaryMartinson&amp;secret_password=MyPassword11&amp;domain=Ldapacmepaymentscorp1acmepaymentscorp</pre>

<p><strong>Sample request body #2 (LDAP)</strong></p>
<pre>identity_username=MaryMartinson&amp;secret_password=MyPassword11</pre>



<h2 id="samplerequest_02">Sample Request #2: Google</h2>
<p>The example below shows login via Google. In this scenario, the Site Admin must first set up an  OpenID Connect Relying Party domain, and then enable the domain for login.</p>
<p>Then, users can log in by using their Google credentials. The platform sends a message to Google, and Google either collects the user's credentials and then returns the token, or else returns the token immediately if the user is already logged in. This call then&#160;logs the user in to the platform using the token from Google, as shown below, and returns the authentication cookies.</p>
<p><strong>Sample request URL and headers (Google):</strong></p>
<p>The example below shows the request headers in Postman.</p>
<p><img src="../assets/login_ssoLoginPost_postman_req_headers.png" alt="login_ssoLoginPost: request headers" /></p>
<p><strong>Sample request body/parameters (Google):</strong></p>
<p>The example below shows the request body in Postman.</p>
<p>The domain is the name of the domain that the Site Admin set up in the Community Manager developer portal. The ID token is returned by your provider after authenticating the user.</p>
<p><img src="../assets/login_ssoLoginPost_postman_req_body.png" alt="login_ssoLoginPost: request body" /></p>



<h2 id="samplerequest_03">Sample Request #3: SAML</h2>
<p>To log in with SAML as the identity provider, first make a call to the <span class="apidoc_code"><a href="../login/m_login_ssoLogin.htm">GET&#160;/api/login/ssoLogin</a></span> operation, then a call to the SAML identity provider, and then a call to this operation&#160;to complete the login process.</p>
<p>For a full example of SSO login using a SAML domain, including request and response, see <a href="../aaex/Ref_Ex_SSO_Login_SAML.htm">Example: SSO login with SAML Provider</a>.</p>
<p><strong>Sample request URL and headers (SAML):</strong></p>
<p><img src="../assets/eg_ssoLogin_saml_01_GET.png" alt="POSTÂ /api/login/ssoLogin, request headers" /></p>
<p><strong>Sample request body/parameters (SAML):</strong></p>
<p><img src="../assets/eg_ssoLogin_saml_05.png" alt="POST&#160;/api/login/ssoLogin, request body" /></p>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>
<!-- InstanceEndEditable -->


<!-- InstanceBeginEditable name="Request Headers" -->
<h2 id="requestheaders">Request Headers</h2>
<p>For general information on request header values, refer to <a href="../aaref/Ref_HTTPHeaders.htm#ref_httprequestheaders">HTTP Request Headers</a>.</p>
<table class="tableparmsresponse">
	<thead>
		<tr>
			<th>Header</th>
			<th>Description</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td><a href="../aaref/Ref_HTTPHeaders.htm#acceptheader">Accept</a></td>
			<td><strong>application/json</strong>, <strong>application/vnd.soa.v71+json</strong>, <strong>application/vnd.soa.v72+json</strong>, <strong>application/vnd.soa.v80+json</strong>, <strong>application/vnd.soa.v81+json</strong></td>
		</tr>
		<tr>
			<td><a href="../aaref/Ref_HTTPHeaders.htm#contenttype_request">Content-Type</a></td>
			<td><strong>application/x-www-form-urlencoded</strong></td>
		</tr>
	</tbody>
</table>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>
<!-- InstanceEndEditable -->


<!-- InstanceBeginEditable name="Request Parameters" -->
<h2 id="requestparameters">Request Parameters</h2>
<table class="tableparmsresponse">
	<thead>
		<tr>
			<th>Parameter</th>
			<th>Parm Type</th>
			<th>Data Type</th>
			<th>Required</th>
			<th>Description</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td><a href="../aaref/Ref_IDsOnThePlatform.htm#id_domainid">domain</a></td>
			<td>Form</td>
			<td>String</td>
			<td>Required</td>
			<td>Unique ID for the valid platform login domain that the user has chosen to log in on.</td>
		</tr>
	</tbody>
</table>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>
<!-- InstanceEndEditable -->


<!-- InstanceBeginEditable name="Response Description" -->
<h2 id="response">Response</h2>
<p id="id_successstatement">If successful, this operation returns HTTP status code 200, and the user's login request is processed. If all other login tasks are complete, the user is logged in. If not, the user is directed to the next login task.</p>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>
<!-- InstanceEndEditable -->


<!-- InstanceBeginEditable name="Sample Response" -->
<h2 id="sampleresponse">Sample Response #1: LDAP</h2>
<p id="id_sampleresponse">The sample response below shows successful completion of this operation.</p>
<p><strong>Sample response headers</strong></p>
<pre>HTTP/1.1 200 OK
Content-Type: application/json
Expires: Mon, 28 Sep 2015 15:23:14 GMT
Set-Cookie: SignupToken_acmepaymentescorp=Fbnw5YUYLtPVfzTCxtriPKVdB9m7xO7ALwGyt8_f2MiZg
1393OGQISkdqSwAtm-1nakXzGLmC_uw3ipUj-ZlHY5NhVjuykWvri5pKVNJhJPyKs2gLN_40SkKGJ7Dc
DDLTPi4id31yKJ6CDFPCEK7OSycu3fpuvYCCwDv_pfKE5kFrOtW1mFN2whcUNhboAyT9KioLrKREdBr7kc8c</pre>
<p><strong>Sample response body #1-1</strong></p>
<p>User is logged in.</p>
<pre>{
  &quot;state&quot; : &quot;registered&quot;,
  &quot;response&quot; : {
    &quot;userName&quot; : &quot;Engineering100user100&quot;,
    &quot;loginState&quot; : &quot;login.complete&quot;,
    &quot;loginDomainID&quot; : &quot;f6b0cfa2-7985-4363-9dc7-8f00df8ea83a.acmepaymentescorp&quot;,
    &quot;userFDN&quot; : &quot;9b633341-0aa9-4160-8f81-b70c55355aaf.acmepaymentescorp&quot;,
    &quot;pendingNotifications&quot; : 0
  },
  &quot;status&quot; : &quot;Active&quot;
}</pre>

<p><strong>Sample response body #1-2</strong></p>
<p>In the example below, the user still needs to accept the signup agreement, so the user's <strong>state</strong> value is <strong>pending_validation</strong>. The user is redirected to a page for accepting the agreement.</p>
<pre>{
  &quot;state&quot; : &quot;pending_validation&quot;,
  &quot;status&quot; : &quot;Disabled&quot;,
  &quot;response&quot; : {
    &quot;userName&quot; : &quot;Engineering100user100&quot;,
    &quot;pendingAgreements&quot; : [ &quot;signupagrmtv1.acmepaymentescorp&quot; ],
    &quot;loginDomainID&quot; : &quot;1d3c5eaf-f575-4844-be74-fc94eb091479.acmepaymentescorp&quot;,
    &quot;userFDN&quot; : &quot;64471a3a-16c4-42d4-b09d-e12e8294f927.acmepaymentescorp&quot;,
    &quot;pendingNotifications&quot; : 0
  },
  &quot;signupCode&quot; : &quot;Fbnw5YUYLtPVfzTCxtriPKVdB9m7xO7ALwGyt8_f2MiZg1393OGQISkdqSwAtm-1nakXzGLmC_uw3ipUj-
ZlHY5NhVjuykWvri5pKVNJhJPyKs2gLN_40SkKGJ7DcDDLTPi4id31yKJ6CDFPCEK7OSycu3fpuvYCCwDv_pfKE5kFrOtW1mFN2whcUNhboAyT9KioLrKREdBr7kc8c&quot;
}</pre>



<h2 id="sampleresponse_02">Sample Response #2: Google</h2>
<p>The example below shown an HTTP 200 response code returned,&#160;with the <a href="../aaref/Ref_CookiesOnThePlatform.htm#cookie_atmoauthtoken">AtmoAuthToken_{fedmemberid}</a> platform cookie and <a href="../aaref/Ref_HTTPHeaders.htm#csrf_token_request">X-Csrf-Token_{fedmemberID}</a> CSRF cookie, which which are needed for further API calls.</p>
<p><strong>Sample response headers:</strong></p>
<p><img src="../assets/login_ssoLoginPost_postman_response.png" alt="login_ssoLoginPost: response" /></p>
<p><strong>Sample response body:</strong></p>
<p><img src="../assets/login_ssoLoginPost_postman_responsebody.png" alt="login_ssoLoginPost: response body" /></p>



<h2 id="sampleresponse_03">Sample Response #3: SAML</h2>
<p>The SAML response is shown below. The user is registered and logged in, and the platform cookies are returned.</p>
<p>For a  full example of SSO login using a SAML domain, including request and response, see <a href="../aaex/Ref_Ex_SSO_Login_SAML.htm">Example: SSO login with SAML Provider</a>.</p>
<p><strong>Sample response body:</strong></p>
<p><img src="../assets/eg_ssoLogin_saml_06.png" alt="POSTÂ /api/login/ssoLogin, response body" /></p>
<p><strong>Response cookies&#8212;AtmoAuthToken_{fedmember}:</strong></p>
<p><img src="../assets/eg_ssoLogin_saml_07.png" alt="POSTÂ /api/login/ssoLogin, response body, login cookie" /></p>
<p><strong>Response cookies&#8212;Csrf-Token_{fedmember}:</strong></p>
<p><img src="../assets/eg_ssoLogin_saml_08.png" alt="POST /api/login/ssoLogin, response body CSRF cookie" /></p>
<p><strong>Note</strong>: As well as the login cookie and CSRF cookie, certain operations require specific roles. For example, to create an API, a user who logs in via an external domain would need an additional role, such as being invited to the API Admin group and accepting the invitation. This scenario would use the <span class="apidoc_code"><a href="../groups/m_groups_inviteMemberToGroup.htm">POST&#160;/api/groups/{GroupID}/members</a></span> and <span class="apidoc_code"><a href="../groups/m_groups_executeWorkflowAction.htm">POST&#160;/api/groups/requests/{MembershipRequestID}/actions</a></span> operations. After that, the user could add an API using the <span class="apidoc_code"><a href="../apis/m_apis_createAPI.htm">POST&#160;/api/apis</a></span> operation.</p>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>

<!-- InstanceEndEditable -->


<!-- InstanceBeginEditable name="Response Headers" -->
<h2 id="responseheaders">Response Headers</h2>
<p>For general information on response header values, refer to <a href="../aaref/Ref_HTTPHeaders.htm#ref_httpresponseheaders">HTTP Response Headers</a>.</p>
<table class="tableparmsresponse">
	<thead>
		<tr>
			<th>Header</th>
			<th>Description</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td><a href="../aaref/Ref_HTTPHeaders.htm#contenttype_response">Content-Type</a></td>
			<td><strong>application/json</strong>, <strong>application/vnd.soa.v71+json</strong>, <strong>application/vnd.soa.v72+json</strong>, <strong>application/vnd.soa.v80+json</strong>, <strong>application/vnd.soa.v81+json</strong></td>
		</tr>
	</tbody>
</table>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>
<!-- InstanceEndEditable -->


<!-- InstanceBeginEditable name="Response Body" -->
<h2 id="responsebody">Response Body</h2>
<p>The response body depends on the domain used.</p>
<table class="tableparmsresponse">
	<thead>
		<tr>
			<th>Name</th>
			<th>Type</th>
			<th>Description</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>LoginData</td>
			<td><a href="../obj/o_login_LoginData.htm">LoginData</a></td>
			<td>Contains data associated with a user's login.</td>
		</tr>
	</tbody>
</table>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>
<!-- InstanceEndEditable -->


<h2 id="errorcodes">Error Codes/Messages</h2>
<p>If the call is unsuccessful an error code/message is returned. One or more examples of possible errors for this operation are shown below.</p>
<!-- InstanceBeginEditable name="Error Messages" -->
<table class="tableparmsresponse">
	<thead>
		<tr>
			<th>Item</th>
			<th>Value</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td><a href="../aaref/Ref_HTTPStatusCodes.htm#http500">500</a></td>
			<td>An error occurred processing the call.</td>
		</tr>
	</tbody>
</table>
<!-- InstanceEndEditable -->
<p><a href="../aaref/Ref_ErrorMessages.htm">More information about Akana API Platform API error messages.</a></p>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<h2 id="relatedtopics">Related Topics</h2>
<div class="relatedlinks">
<ul>
	<li><a href="../index.htm">Akana API Platform API: Overview</a></li>
	<li><a href="../Ref_Glossary_CommunityPlatform.htm">Glossary of Terms</a></li>
	<li><a href="../Ref_DocConventions.htm">Documentation Conventions</a></li>
</ul>
<ul>
	<li><a href="../Ref_AuthenticationAndSecurity.htm">Authentication and Security</a></li>
	<li><a href="../Ref_TroubleshootingAndSupport.htm">Troubleshooting and Support</a></li>
	<li><a href="../Ref_API_Reference.htm">Akana API Platform API: Reference Material</a></li>
	<li><a href="../aaex/Ref_Ex_Overview.htm">Examples: Overview</a></li>
</ul>
</div>




</div>
