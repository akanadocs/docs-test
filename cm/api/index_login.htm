---
layout: apipage
title: Login Service | Overview | Akana API Platform API
description: The Login service provides a REST interface and a set of operations that deal with logging in and out, including getting an authentication token, renewing an authorization token, and deleting an authorization token cookie. This API also includes interfaces to perform SSO login.
product: cm
category: ref
nav-title: Login Service 
no-nav: api
sub-nav: false
sub-nav-class: login
no-catalog: false
---

<div class="apidocContent">
<h1 id="top">Login Service: Overview</h1>
<p>
The Login service provides a REST interface and a set of operations that deal with logging in and out, including getting an authentication token, renewing an authorization token, and deleting an authorization token cookie. This API also includes interfaces to perform SSO login.</p>
<p>For an overview of the tasks managed by this service, and associated tasks, see <a href="aaref/Ref_TheLoginProcess.htm">The Login Process</a>.</p>
<p><strong>URL</strong>: <span class="apidoc_code">https://{hostname}/api/login</span></p>

<table class="tableparmsresponse">
	<thead>
		<tr>
			<th>Action</th>
			<th>Endpoint</th>
			<th>Description</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>log in</td>
			<td><a href="login/m_login_login.htm">POST&#160;/api/login</a></td>
			<td>
Initiates the login process by verifying the credentials of a user who is attempting to log in to the platform. If there are pending login tasks, this operation directs the user to the next task; if there are no pending tasks, it logs the user in, returning an authentication cookie that is used to make authenticated calls to the platform. The cookie is valid for 30 minutes. To renew it, use the <span class="apidoc_code"><a href="login/m_login_renewToken.htm">POST&#160;/api/login/renewToken</a></span> operation.</td>
		</tr>
		<tr>
			<td>log out</td>
			<td><p><a href="login/m_login_logout.htm">POST&#160;/api/login/logout</a></p>
			<p>use <a href="login/m_login_endSession.htm">GET&#160;/api/login/endsession</a> instead)</p></td>
			<td><p> Destroys any authentication cookies associated with the current session for a tenant logging out.</p>
			<p><strong>Note</strong>: We recommend using the <a href="login/m_login_endSession.htm">GET&#160;/api/login/endsession</a> operation, which provides the same functionality, rather than this one which will be deprecated.</p></td>
		</tr>
		<tr>
			<td>end session</td>
			<td><a href="login/m_login_endSession.htm">GET&#160;/api/login/endsession</a></td>
			<td> Ends the current session for the user, either on user logout or on session timeout. If user is actively logging out, and had logged in via an external identity provider or remote tenant, this operation also initiates single logout with the external provider or remote tenant.</td>
		</tr>
		<tr>
			<td>get login domains</td>
			<td><a href="login/m_login_getLoginDomains.htm">GET&#160;/api/login/domains</a></td>
			<td>Returns information about the <a href="Ref_Glossary_CommunityPlatform.htm#gl_logindomain">login domains</a> that are valid for the platform.</td>
		</tr>
		<tr>
			<td>get login status</td>
			<td><a href="login/m_login_getLoginStatus.htm">GET&#160;/api/login/status</a></td>
			<td>Returns information about the current user's login status, including whether there is a pending login task that the user must complete as part of the login process.</td>
		</tr>
		<tr>
			<td>renew token</td>
			<td><a href="login/m_login_renewToken.htm">POST&#160;/api/login/renewToken</a></td>
			<td> Updates the time for which an authentication token cookie is valid, as well as other information stored in the cookie.</td>
		</tr>
		<tr>
			<td>resolve login pending tasks</td>
			<td><a href="login/m_login_renewToken.htm">POST&#160;/api/login/renewToken</a></td>
			<td>Used if a custom user workflow is in use in the platform that requires custom tasks; for example, entering a two-factor verification code. In this scenario, this operation allows a user to log in, guiding the user through any pending tasks that are needed, including custom tasks, such as 2FA verification, and any standard tasks, such as accepting a legal agreement or changing the password.</td>
		</tr>
		<tr>
			<td colspan="3"><strong>Operations relating to SSO login:</strong></td>
		</tr>
		<tr>
			<td>SSO login (POST)</td>
			<td><a href="login/m_login_ssoLoginPost.htm">POST&#160;/api/login/ssoLogin</a></td>
			<td>Logs the user in to an external identity system such as Google or Facebook, for a login domain set up on the platform.</td>
		</tr>
		<tr>
			<td>SSO login (GET)</td>
			<td><a href="login/m_login_ssoLogin.htm">GET&#160;/api/login/ssoLogin</a></td>
			<td>Allows a user to log in by authenticating with an external identity provider that has its own login screen, providing SSO is enabled between the platform and the identity provider. Examples: Facebook, Google. SSO must already be enabled between the platform and the identity provider; the System Admin must have already created the OpenID Connect domain and enabled it for login.</td>
		</tr>
		<tr>
			<td>SSO login instructions</td>
			<td><a href="login/m_login_ssoLoginInstructions.htm">GET&#160;/api/login/ssoLoginInstructions</a></td>
			<td>
Returns applicable instructions for logging in the user, depending on the login option the user has selected.</td>
		</tr>
		<tr>
			<td colspan="3"><strong>Other:</strong></td>
		</tr>
		<tr>
		<td>app login</td>
		<td><a href="login/m_login_appLogin.htm">POST&#160;/api/login/appLogin</a></td>
		<td>Validates the AppID and Shared Secret associated with a specific app.</td>
		</tr>
		<tr>
			<td>authenticate with password reset code</td>
			<td><a href="login/m_login_authenticateWithPasswordResetCode.htm">POST&#160;/api/login/authenticateWithPasswordResetCode</a></td>
			<td>Authenticates user with a valid reset code generated with the PasswordManagement API, resets the user's password, and logs the user in.</td>
		</tr>
		<tr>
			<td>validate registration code</td>
			<td><a href="login/m_login_validateRegistrationCode.htm">POST&#160;/api/login/validateRegistrationCode</a></td>
			<td>Validates the registration code that was issued to a new user as a result of the Site Admin adding the user.</td>
		</tr>
	</tbody>
</table>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>




<h2 id="relatedtopics">Related Topics</h2>
<div class="relatedlinks">
<ul>
	<li><a href="index.htm">Akana API Platform API: Overview</a></li>
	<li><a href="Ref_Glossary_CommunityPlatform.htm">Glossary of Terms</a></li>
	<li><a href="Ref_DocConventions.htm">Documentation Conventions</a></li>
</ul>
<ul>
	<li><a href="Ref_AuthenticationAndSecurity.htm">Authentication and Security</a></li>
	<li><a href="Ref_TroubleshootingAndSupport.htm">Troubleshooting and Support</a></li>
	<li><a href="Ref_API_Reference.htm">Akana API Platform API: Reference Material</a></li>
	<li><a href="aaex/Ref_Ex_Overview.htm">Examples: Overview</a></li>
</ul>
</div>



</div>
