---
layout: apipage
title: Example - Modifying an API Endpoint | How-To Material | Akana API Platform API
description: This example gives you the high-level sequence of operations to run to modify an API endpoint.
product: cm
category: ref
nav-title: Example - Modifying an API Endpoint 
no-nav: api
sub-nav: true
sub-nav-class: aaex
no-catalog: true
---

<div class="apidocContent">
<h1 id="top">Example: Modifying an API Endpoint</h1>
<p>This example gives you the high-level sequence of operations to run to modify an API endpoint.</p>
<p>The steps are different depending on whether you're updating the endpoint for:</p>
<ul>
	<li><strong>The physical service</strong>&#8212;the actual API endpoint. For example: <strong>http://petstore.swagger.io/v2/</strong>.</li>
	<li><strong>The virtual service</strong>&#8212;the endpoint that you'll use if your API is hosted on the Akana API Platform. API users send messages to the virtual endpoint, and the platform applies policies, monitors traffic etc. and relays messages to the physical service endpoint. For example: <strong>http://api.acmepaymentscorp.com/api10410live</strong>.</li>
</ul>
<p>Before starting, you'll need:</p>
<ul>
	<li>A valid UserID and password for portal access.</li>
	<li>API Admin rights to the API you want to modify.</li>
</ul>



<h2 id="ex_modifyendpoint_vs">Operations to run to modify an endpoint for a virtual service</h2>
<p>The key operation to run for modifying a virtual service endpoint is: <span class="apidoc_code"><a href="../apis/m_apis_modifyAPIImplementationDeployments.htm">PUT&#160;/api/apis/versions/{APIVersionID}/implementations/{ImplCode}/deployments</a></span>. Other operations in the example below will help you to get authenticated and then to discover any other IDs or information you'll need to successfully run the operation, such as path parameters and request body. If you already have that information you can skip those operations.</p>
<h4>Log in</h4>
<ol>
	<li>Log in using the authorized user profile you've already set up. Operation: <span class="apidoc_code"><a href="../login/m_login_login.htm">POST&#160;/api/login</a></span>.
		<p>From the response, get your UserID (<strong>userFDN</strong> value).</p></li>
	</ol>

<h4>Get the API Version ID</h4>
<ol>
	<li>Generate a list of your APIs. Operation: <span class="apidoc_code"><a href="../apis/m_apis_listAPIs.htm">GET&#160;/api/apis</a></span>.
		<p>From the response, get the APIVersionID of the API you want to modify. If you're not sure, look in the <strong>EntityReferences</strong> section for the <strong>Title</strong> (API version name) and then the <strong>guid</strong> (APIVersionID).</p>
		<p><strong>Note</strong>: If you have the APIID, you could also run the <span class="apidoc_code"><a href="../apis/m_apis_getAPI.htm">GET&#160;/api/apis/{APIID}</a></span> operation and get the APIVersionID from that (<strong>LatestVersionID</strong> if there is just one version).</p>
	</li>
	</ol>
<h4>Get the current deployment information</h4>
<ol>
	<li>Get information about the current endpoint. Operation: <span class="apidoc_code"><a href="../apis/m_apis_getAPIImplementationDeploymentSuggestions.htm">GET&#160;/api/apis/versions/{APIVersionID}/implementations/{ImplCode}/deploymentsuggestions</a></span>.
		<p>ImplCode is <strong>Live</strong> or <strong>Sandbox</strong>.</p>
		<p>Copy the response body.</p>
		<p><strong>Note</strong>: If the response body is empty, no endpoints have been set up yet.</p>
	</li>
	</ol>

<h4>Modify the endpoint</h4>
<ol>
	<li>Update the endpoint. Operation: <span class="apidoc_code"><a href="../apis/m_apis_modifyAPIImplementationDeployments.htm">PUT&#160;/api/apis/versions/{APIVersionID}/implementations/{ImplCode}/deployments</a></span>.
		<p>Use the response from the previous operation in the request body, and modify the endpoint (<strong>EndpointPath</strong> value). For example, you might change the context path from <strong>/api10411live</strong> to <strong>/api12345live</strong>. Do not change the hostname since it is hosted on the Community Manager developer portal. Make sure you change it in all three places:</p>
		<ul>
			<li>EndpointPath</li>
			<li>Path</li>
			<li>Url</li>
		</ul>
	</li>
	<li>Review the response. You'll see that the new endpoint appears&#160;in the response, in the<strong>EndpointPath</strong>, <strong>Path</strong>, and <strong>Url</strong> fields for the deployment zone, and the <strong>URI</strong> field for the endpoint.</li>
</ol>
	<p><strong>Note</strong>: To perform this operation in the Community Manager developer portal, go to: <strong>API</strong> &gt; <strong>Implementations</strong> &gt; choose implementation &gt; <strong>Deployments</strong> section &gt; click <strong>Edit</strong> and update the <strong>Context Path</strong> field.</p>

<h4>Log out</h4>
<ol>
	<li>When done, remember to log out using the <span class="apidoc_code"><a href="../login/m_login_endSession.htm">GET&#160;/api/login/endsession</a></span> operation. Use the following values:
		<ul>
			<li>URL: <strong>https://{hostname}/api/login/endsession</strong></li>
			<li>Accept header: <strong>application/json</strong></li>
		</ul>
	</li>
</ol>
<h2 id="ex_modifyendpoint_ps">Operations to run to modify an endpoint for a physical service</h2>
<p>The key operation to run for modifying a physical service endpoint is: <span class="apidoc_code"><a href="../apis/m_apis_saveServiceEndpoints.htm">PUT&#160;/api/apis/versions/{ApiVersionID}/implementations/{ImplCode}/services/{ServiceID}/endpoints</a></span>. Other operations in the example below will help you to get authenticated and then to discover any other IDs or information you'll need to successfully run the operation, such as path parameters and request body. If you already have that information you can skip those operations.</p>
<h4>Log in</h4>
<ol>
	<li>Log in using the authorized user profile you've already set up. Operation: <span class="apidoc_code"><a href="../login/m_login_login.htm">POST&#160;/api/login</a></span>.
		<p>From the response, get your UserID (<strong>userFDN</strong> value).</p>
	</li>
</ol>
<h4>Get the API Version ID</h4>
<ol>
	<li>Generate a list of your APIs. Operation: <span class="apidoc_code"><a href="../apis/m_apis_listAPIs.htm">GET&#160;/api/apis</a></span>.
		<p>From the response, get the APIVersionID of the API you want to modify. If you're not sure, look in the <strong>EntityReferences</strong> section for the <strong>Title</strong> (API version name) and then the <strong>guid</strong> (APIVersionID).</p>
		<p><strong>Note</strong>: If you have the APIID, you could also run the <span class="apidoc_code"><a href="../apis/m_apis_getAPI.htm">GET&#160;/api/apis/{APIID}</a></span> operation and get the APIVersionID from that (<strong>LatestVersionID</strong> if there is just one version).</p>
	</li>
</ol>
<h4 id="phys_svc_id">Get the Service ID for the physical service</h4>
<ol>
	<li>You'll need to get the ID for the physical service you want to update. Operation: <span class="apidoc_code"><a href="../apis/m_apis_getAPIImplementation.htm">GET&#160;/api/apis/versions/{APIVersionID}/implementations/{ImplCode}</a></span>.
		<p>ImplCode is <strong>Live</strong> or <strong>Sandbox</strong>.</p>
		<p>In the response:</p>
		<ul>
			<li>At the top of the response, under <strong>Pattern</strong>, the <strong>ServiceKey</strong> value is the service key for the <strong>virtual</strong> service. This is <strong>not</strong> the one you want.</li>
			<li>At the bottom of the response, under <strong>ProxyImplementationDetails</strong>, the <strong>ServiceKey</strong> value is the ServiceID for the <strong>physical</strong> service. You can see that it's the actual endpoint for the API. Save this value.</li>
		</ul>
		<p>For an example, see <a href="../apis/m_apis_getAPIImplementation.htm#sample_resp">GET API implementations: sample response</a>.</p>
		</li>
</ol>
<h4>Get the format of the model object (current information)</h4>
<ol>
	<li>Get the current information about the service endpoints. Operation: <span class="apidoc_code"><a href="../apis/m_apis_getServiceEndpoints.htm">GET&#160;/api/apis/versions/{ApiVersionID}/implementations/{ImplCode}/services/{ServiceID}/endpoints</a></span>.
		<p>Copy the response body.</p>
		<p><strong>Note</strong>: the <strong>Uri</strong> field shows the existing endpoint for the physical service.</p>
	</li>
</ol>
<h4>Modify the endpoint</h4>
<ol>
	<li>Update the endpoint for the physical service. Operation: <span class="apidoc_code"><a href="../apis/m_apis_saveServiceEndpoints.htm">PUT&#160;/api/apis/versions/{ApiVersionID}/implementations/{ImplCode}/services/{ServiceID}/endpoints</a></span>.
		<p>Use the response from the previous operation in the request body, and modify the endpoint. Of course, make sure that the new endpoint is valid.</p>
	</li>
</ol>
<h4>Log out</h4>
<ol>
	<li>When done, remember to log out using the <span class="apidoc_code"><a href="../login/m_login_endSession.htm">GET&#160;/api/login/endsession</a></span> operation. Use the following values:
		<ul>
			<li>URL: <strong>https://{hostname}/api/login/endsession</strong></li>
			<li>Accept header: <strong>application/json</strong></li>
		</ul>
	</li>
</ol>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<h2 id="relatedtopics">Related Topics</h2>
<div class="relatedlinks">
<ul>
	<li><a href="../index.htm">Akana API Platform API: Overview</a></li>
	<li><a href="../Ref_Glossary_CommunityPlatform.htm">Glossary of Terms</a></li>
	<li><a href="../Ref_DocConventions.htm">Documentation Conventions</a></li>
</ul>
<ul>
	<li><a href="../Ref_AuthenticationAndSecurity.htm">Authentication and Security</a></li>
	<li><a href="../Ref_TroubleshootingAndSupport.htm">Troubleshooting and Support</a></li>
	<li><a href="../Ref_API_Reference.htm">Akana API Platform API: Reference Material</a></li>
	<li><a href="Ref_Ex_Overview.htm">Examples: Overview</a></li>
</ul>
</div>



</div>
