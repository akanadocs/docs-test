---
layout: apipage
title: Get API Document | APIs Service | Akana API Platform API
description: Returns the generated API description document for the specified API version. With the optional <strong>IncludeDocId</strong> parameter, returns the generated API description document in the specified format.
product: cm
category: ref
nav-title: Get API Document 
no-nav: api
sub-nav: true
sub-nav-class: apis
no-catalog: true
---

<div class="apidocContent">
<!-- InstanceBeginEditable name="Heading" -->
<h1 id="top">GET&#160;/api/apis/versions/{APIVersionID}/definition/{Specification}</h1>
<h1>GET&#160;/api/apis/versions/{APIVersionID}/definition/{Specification}/{IncludeDocId}</h1>
<!-- InstanceEndEditable -->

<!-- InstanceBeginEditable name="Intro_AuthRoles" -->
<p>
Returns the generated API description document for the specified API version. With the optional <strong>IncludeDocId</strong> parameter, returns the generated API description document in the specified format.</p>
<p id="id_roles"><strong>Authorization Roles/Permissions</strong>: User must have read permission for the API, per the visibility rules below.</p>
<p><strong>Visibility rules for generated API description document</strong>: The visibility behavior varies according to the specification for the API, as follows:</p>
<ul>
	<li><strong>RAML 0.8/WSDL documents</strong>: This operation does not support applying visibility scopes to specific content within RAML/WSDL documents. The platform returns these documents to the user only if the user has permission for the entire API. If the user has partial or no visibility permission for the API, the platform returns an Unauthorized message.</li>
	<li><strong>Open API 3.0, Swagger 2.0 or 1.2</strong>: The operation returns the Swagger document with the information that the user has visibility to see. In this scenario, if the user has visibility to certain parts of the API, but not others, the user sees the authorized portions of the API, as determined by the API settings and the user's permissions.</li>
</ul>
<p><strong>Note</strong>: WSDL is generally used for SOAP rather than REST APIs. If you're retrieving the API definition in WSDL format for a REST API, it will include proprietary extensions for the Akana platform. For SOAP services it will be standard WSDL.</p>
<!-- InstanceEndEditable -->
<p>This topic includes the following sections:</p>
<div class="relatedlinks">
<ul>
	<li><a href="#httpmethod">HTTP Method</a></li>
	<li><a href="#endpoint">URL</a></li>
	<li><a href="#samplerequest">Sample Request</a></li>
	<li><a href="#requestheaders">Request Headers</a></li>
	<li><a href="#requestparameters">Request Parameters</a></li>
</ul>
<ul>
	<li><a href="#response">Response</a></li>
	<li><a href="#sampleresponse">Sample Response</a></li>
	<li><a href="#responseheaders">Response Headers</a></li>
	<li><a href="#responsebody">Response Body</a></li>
	<li><a href="#errorcodes">Error Codes/Messages</a></li>
</ul>
</div>
<h2 id="httpmethod">HTTP Method</h2>
<!-- InstanceBeginEditable name="HTTP Method" -->
<p class="httpverb">GET</p>
<!-- InstanceEndEditable -->
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>

<h2 id="endpoint">URL</h2>
<!-- InstanceBeginEditable name="URL" -->
<pre class="soaapidoc_endpoint">https://{hostname}/api/apis/versions/{APIVersionID}/definition/{Specification}/[{IncludeDocId}][?Environment={Environment}]</pre>
<!-- InstanceEndEditable -->
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<!-- InstanceBeginEditable name="Sample Request" -->
<h2 id="samplerequest">Sample Request #1: Open API 3.0</h2>
<p id="id_samplerequest">The example below shows a request for the Open API 3.0 document for an API set up on the platform, in the Live implementation. The API is a subset of the Swagger Petstore API. For the corresponding response, see <a href="#sampleresponse">Sample Response #1</a>.</p>
<p><strong>Request URL #1: Open API 3.0</strong></p>
<pre>https://{hostname}/api/apis/versions/4b8ceb11-d751-499f-ba1a-ff76cec0e064.acmepaymentscorp/definition/oas3?Environment=Production</pre>
<p><strong>Sample request headers</strong></p>
<pre>GET /api/apis/versions/4b8ceb11-d751-499f-ba1a-ff76cec0e064.acmepaymentscorp/definition/oas3?Environment=Production HTTP/1.1
Host: {hostname}
X-Csrf-Token_rcoaless":"TokenID%3D8ed70a13-8469-11e8-b37a-b155e4eabeb8%2CexpirationTime%3D153...
Cookie: AtmoAuthToken_{fedmemberid}={Cookie value (usually starts with TokenID)}</pre>
<p><strong>Sample request body</strong></p>
<p>Not applicable.</p>

<h2 id="samplerequest_2">Sample Request #2: Swagger 2.0</h2>
<p id="id_samplerequest_2">The examples below show requests for the documentation for an API set up on the platform, that is a subset of the sample Swagger Petstore API. You can also click through to view the corresponding responses.</p>

<p><strong>Request URL #2: Swagger 2.0</strong></p>
<p>For the response, see <a href="#sampleresponse_2">Sample Response #2: Swagger 2.0</a> below.</p>
<pre>https://{hostname}/api/apis/versions/4b8ceb11-d751-499f-ba1a-ff76cec0e064.acmepaymentscorp/definition/swagger</pre>



<h2 id="samplerequest_3">Sample Request #3: Swagger 1.2</h2>
<p><strong>Request URL #3: Swagger 1.2</strong></p>
<p>For the response, see <a href="#sampleresponse_3">Sample Response #3: Swagger 1.2</a> below.</p>
<pre>https://{hostname}/api/apis/versions/4b8ceb11-d751-499f-ba1a-ff76cec0e064.acmepaymentscorp/definition/swagger1_2</pre>



<h2 id="samplerequest_4">Sample Request #4: RAML 0.8</h2>
<p><strong>Request URL #4: RAML 0.8</strong></p>
<p>For the response, see <a href="#sampleresponse_4">Sample Response #4: RAML 0.8</a> below.</p>
<p>The example below includes an appropriate Accept header for the response format. However, this is not necessary; the response media type is determined by the specification.</p>
<pre>https://{hostname}/api/apis/versions/4b8ceb11-d751-499f-ba1a-ff76cec0e064.acmepaymentscorp/definition/raml
Accept: application/raml+yaml</pre>



<h2 id="samplerequest_5">Sample Request #5: WSDL</h2>
<p><strong>Request URL #5: WSDL</strong></p>
<p>For the response, see <a href="#sampleresponse_5">Sample Response #5: WSDL</a> below.</p>
<pre>https://{hostname}/api/apis/versions/4b8ceb11-d751-499f-ba1a-ff76cec0e064.acmepaymentscorp/definition/wsdl</pre>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>
<!-- InstanceEndEditable -->


<!-- InstanceBeginEditable name="Request Headers" -->
<h2 id="requestheaders">Request Headers</h2>
<p>For general information on request header values, refer to <a href="../aaref/Ref_HTTPHeaders.htm#ref_httprequestheaders">HTTP Request Headers</a>.</p>
<table class="tableparmsresponse">
	<thead>
		<tr>
			<th>Header</th>
			<th>Description</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td><a href="../aaref/Ref_HTTPHeaders.htm#acceptheader">Accept</a></td>
			<td><p>The media type is determined by the specification. Use a generic value such as */*, specify an appropriate value for the specification you're using, or leave blank. For example:</p>
				<ul class="apidoctable_ul">
					<li>Open API 3.0, Swagger 2.0, Swagger 1.2: application/json</li>
					<li>RAML 0.8: application/raml+yaml</li>
					<li>WSDL: application/xml</li>
				</ul></td>
		</tr>
		<tr>
			<td>Cookie</td>
			<td><a href="../aaref/Ref_CookiesOnThePlatform.htm#cookie_atmoauthtoken">AtmoAuthToken_{fedmemberid}={cookie value, which usually starts with TokenID}</a>&#8212;The platform cookie. This is the Akana API Platform authorization token, and must be sent with every API request that requires login. For more information and an example, see <a href="../aaref/Ref_CookiesOnThePlatform.htm#cookies_custom">Session cookies</a>.</td>
		</tr>
		<tr>
			<td><a href="../aaref/Ref_HTTPHeaders.htm#csrf_token_request">X-Csrf-Token_{fedmemberID}</a></td>
			<td>The CSRF prevention header; may or may not be required, depending on platform settings. See <a href="../aaref/Ref_CSRFPreventionOnThePlatform.htm">CSRF Prevention on the Platform</a>. By default, the CSRF header is not required for GET operations and is required for all others, with a few exceptions relating to user login.</td>
		</tr>
	</tbody>
</table>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>
<!-- InstanceEndEditable -->


<!-- InstanceBeginEditable name="Request Parameters" -->
<h2 id="requestparameters">Request Parameters</h2>
<table class="tableparmsresponse">
	<thead>
		<tr>
			<th>Parameter</th>
			<th>Parm Type</th>
			<th>Data Type</th>
			<th>Required</th>
			<th>Description</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td><a href="../aaref/Ref_IDsOnThePlatform.htm#id_apiversionid">APIVersionID</a></td>
			<td>Path</td>
			<td>string</td>
			<td>Required</td>
			<td>The unique ID for a specific API version.</td>
		</tr>
		<tr>
			<td>Specification</td>
			<td>Path</td>
			<td>string</td>
			<td>Required</td>
			<td><p>The specification to be used in generating the API description document. Valid values:</p>
				<ul class="apidoctable_ul">
					<li>swagger (defaults to swagger2 which is Swagger 2.0)</li>
					<li>swagger1_2</li>
					<li>oas3</li>
					<li>raml</li>
					<li>wsdl</li>
				</ul></td>
		</tr>
		<tr>
			<td>IncludeDocId</td>
			<td>Path</td>
			<td>string</td>
			<td>Optional</td>
			<td>For Swagger 1.2 or WSDL, a description document might import, or include, another document. In that case, the main document will have an import statement with the <strong>IncludeDocId</strong> parameter. This allows the client to fetch the imported files.</td>
		</tr>
		<tr>
			<td>Environment</td>
			<td>Query</td>
			<td>string</td>
			<td>Optional</td>
			<td>Optionally, specify the implementation (Sandbox or Live implementation.</td>
		</tr>
	</tbody>
</table>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>
<!-- InstanceEndEditable -->


<!-- InstanceBeginEditable name="Response Description" -->
<h2 id="response">Response</h2>
<p id="id_successstatement">If successful, this operation returns HTTP status code 200, with the API description document in the requested format.</p>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>
<!-- InstanceEndEditable -->


<!-- InstanceBeginEditable name="Sample Response" -->
<h2 id="sampleresponse">Sample Response #1: Open API 3.0</h2>
<p id="id_sampleresponse">The example below shows the responses to the API request shown in <a href="#samplerequest">Sample Request #1</a>. The API is a subset of the sample Swagger Petstore API.</p>
<p><strong>Sample response #1 headers</strong></p>
<pre>Content-Type: application/json
Date: Thu, 05 Mar 2020 22:51:14 GMT</pre>
<p><strong>Sample response #1 body</strong></p>
<pre>{
  "openapi": "3.0",
  "info": {
    "title": "Swagger_Petstore_4_Operations",
    "description": "Swagger_Petstore_4_Operations. Based on http://petstore.swagger.io/v2/swagger.json with deletions in API Designer.",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://testing.acmepaymentscorp.com:7955/api16098live"
    },
    {
      "url": "http://testing.acmepaymentscorp.com:7905/api16098live"
    }
  ],
  "paths": {
    "/pet": {
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "Add a new pet to the store",
        "operationId": "addPet",
        "requestBody": {
          "description": "Pet object that needs to be added to the store",
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "405": {
            "description": "Invalid input",
            "content": {
              "application/xml": {},
              "application/json": {}
            }
          }
        }
      }
    },
    "/pet/findByTags": {
      "get": {
        "tags": [
          "pet"
        ],
        "summary": "Finds Pets by tags",
        "description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
        "operationId": "findPetsByTags",
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "description": "Tags to filter by",
            "required": true,
            "style": "form",
            "schema": {
              "type": "array",
              "description": "Tags to filter by",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid tag value",
            "content": {
              "application/xml": {},
              "application/json": {}
            }
          },
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {},
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/pet/{petId}": {
      "get": {
        "tags": [
          "pet"
        ],
        "summary": "Find pet by ID",
        "description": "Returns a single pet",
        "operationId": "getPetById",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet to return",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of pet to return",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied",
            "content": {
              "application/xml": {},
              "application/json": {}
            }
          },
          "404": {
            "description": "Pet not found",
            "content": {
              "application/xml": {},
              "application/json": {}
            }
          },
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "pet"
        ],
        "summary": "Deletes a pet",
        "operationId": "deletePet",
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "default": "null"
            }
          },
          {
            "name": "petId",
            "in": "path",
            "description": "Pet id to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Pet id to delete",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied",
            "content": {
              "application/xml": {},
              "application/json": {}
            }
          },
          "404": {
            "description": "Pet not found",
            "content": {
              "application/xml": {},
              "application/json": {}
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "petId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "shipDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Order Status",
            "enum": [
              "placed",
              "approved",
              "delivered"
            ]
          },
          "complete": {
            "type": "boolean"
          }
        },
        "xml": {
          "name": "Order"
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Category"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "userStatus": {
            "type": "integer",
            "description": "User Status",
            "format": "int32"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Tag"
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Pet": {
        "required": [
          "name",
          "photoUrls"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "name": {
            "type": "string",
            "example": "doggie"
          },
          "photoUrls": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "string",
              "xml": {
                "name": "photoUrl"
              }
            }
          },
          "tags": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "status": {
            "type": "string",
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold"
            ]
          }
        },
        "xml": {
          "name": "Pet"
        }
      }
    }
  },
  "tags": [
    {
      "name": "pet",
      "description": "Everything about your Pets",
      "externalDocs": {
        "url": "http://swagger.io"
      }
    },
    {
      "name": "store",
      "description": "Access to Petstore orders"
    },
    {
      "name": "user",
      "description": "Operations about user",
      "externalDocs": {
        "url": "http://swagger.io"
      }
    }
  ]
}</pre>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>



<h2 id="sampleresponse_2">Sample Response  #2: Swagger 2.0</h2>
<p id="id_sampleresponse_2">The example below shows the responses to the API request shown in <a href="#samplerequest_2">Sample Request #2</a>. The API is a subset of the sample Swagger Petstore API.</p>
<p><strong>Sample response #2 headers</strong></p>
<pre>Content-Type: application/json
Date: Thu, 05 Mar 2020 22:54:49 GMT</pre>
<p><strong>Sample response #2 body</strong></p>
<pre>{
  "swagger": "2.0",
  "info": {
    "description": "Swagger_Petstore_4_Operations. Based on http://petstore.swagger.io/v2/swagger.json with deletions in API Designer.",
    "version": "v1",
    "title": "Swagger_Petstore_4_Operations"
  },
  "host": "testing.acmepaymentscorp.com:7955",
  "basePath": "/api16098live",
  "schemes": [
    "HTTPS",
    "HTTP"
  ],
  "paths": {
    "/pet": {
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "Add a new pet to the store",
        "operationId": "addPet",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/pet/findByTags": {
      "get": {
        "tags": [
          "pet"
        ],
        "summary": "Finds Pets by tags",
        "description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
        "operationId": "findPetsByTags",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "description": "Tags to filter by",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pet"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        },
        "deprecated": true
      }
    },
    "/pet/{petId}": {
      "get": {
        "tags": [
          "pet"
        ],
        "summary": "Find pet by ID",
        "description": "Returns a single pet",
        "operationId": "getPetById",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        }
      },
      "delete": {
        "tags": [
          "pet"
        ],
        "summary": "Deletes a pet",
        "operationId": "deletePet",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "null"
          },
          {
            "name": "petId",
            "in": "path",
            "description": "Pet id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "petId": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "shipDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Order Status",
          "enum": [
            "placed",
            "approved",
            "delivered"
          ]
        },
        "complete": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "Order"
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "userStatus": {
          "type": "integer",
          "format": "int32",
          "description": "User Status"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Pet": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "name": {
          "type": "string",
          "example": "doggie"
        },
        "photoUrls": {
          "type": "array",
          "xml": {
            "wrapped": true
          },
          "items": {
            "type": "string",
            "xml": {
              "name": "photoUrl"
            }
          }
        },
        "tags": {
          "type": "array",
          "xml": {
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "status": {
          "type": "string",
          "description": "pet status in the store",
          "enum": [
            "available",
            "pending",
            "sold"
          ]
        }
      },
      "xml": {
        "name": "Pet"
      }
    }
  },
  "tags": [
    {
      "name": "pet",
      "description": "Everything about your Pets",
      "externalDocs": {
        "url": "http://swagger.io"
      }
    },
    {
      "name": "store",
      "description": "Access to Petstore orders"
    },
    {
      "name": "user",
      "description": "Operations about user",
      "externalDocs": {
        "url": "http://swagger.io"
      }
    }
  ]
}</pre>



<h2 id="sampleresponse_3">Sample Response  #3: Swagger 1.2</h2>
<p id="id_sampleresponse_3">The example below shows the responses to the API request shown in <a href="#samplerequest_3">Sample Request #3</a>. The API is a subset of the sample Swagger Petstore API.</p>
<p><strong>Sample response #3 headers</strong></p>
<pre>Content-Type: application/json
Date: Thu, 05 Mar 2020 22:57:18 GMT</pre>
<p><strong>Sample response #3 body</strong></p>
<pre>{
 "swaggerVersion": "1.2",
 "apis": [
  {
   "path": "/pet"
  }
 ],
 "info": {
  "title": "Swagger_Petstore_4_Operations_v1_Live",
  "description": "Swagger_Petstore_4_Operations. Based on http://petstore.swagger.io/v2/swagger.json with deletions in API Designer."
 }
}</pre>



<h2 id="sampleresponse_4">Sample Response #4: RAML 0.8</h2>
<p id="id_sampleresponse_4">The example below shows the responses to the API request shown in <a href="#samplerequest_4">Sample Request #4</a>. The API is a subset of the sample Swagger Petstore API.</p>
<p><strong>Sample response #4 headers</strong></p>
<pre>Content-Type: application/raml+yaml
Date: Thu, 05 Mar 2020 22:59:28 GMT</pre>
<p><strong>Sample response #4 body</strong></p>
<pre>#%RAML 0.8
title: "Swagger_Petstore_4_Operations_v1_Live"
baseUri: "https://testing.acmepaymentscorp.com:7955/api16098live"
protocols: [HTTPS, HTTP]
schemas: 
  - 
    "json": '{"ApiResponse":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"type":{"type":"string"},"message":{"type":"string"}}},"Category":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"}},"xml":{"name":"Category"}},"Order":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"petId":{"type":"integer","format":"int64"},"quantity":{"type":"integer","format":"int32"},"shipDate":{"type":"string","format":"date-time"},"status":{"type":"string","description":"Order Status","enum":["placed","approved","delivered"]},"complete":{"type":"boolean"}},"xml":{"name":"Order"}},"Pet":{"required":["name","photoUrls"],"type":"object","properties":{"id":{"type":"integer","format":"int64"},"category":{"$ref":"#/Category"},"name":{"type":"string","example":"doggie"},"photoUrls":{"type":"array","xml":{"wrapped":true},"items":{"type":"string","xml":{"name":"photoUrl"}}},"tags":{"type":"array","xml":{"wrapped":true},"items":{"$ref":"#/Tag"}},"status":{"type":"string","description":"pet status in the store","enum":["available","pending","sold"]}},"xml":{"name":"Pet"}},"Tag":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"}},"xml":{"name":"Tag"}},"User":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"username":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"email":{"type":"string"},"password":{"type":"string"},"phone":{"type":"string"},"userStatus":{"type":"integer","description":"User Status","format":"int32"}},"xml":{"name":"User"}}}'
"/pet/findByTags": 
  get: 
    description: "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing."
    queryParameters: 
      "tags": 
        displayName: "tags"
        description: "Tags to filter by"
        type: string
        required: true
        repeat: true
    responses: 
      "400": 
        description: "Invalid tag value"
        body: 
          "application/xml": 
          "application/json": 
      "200": 
        description: "successful operation"
        body: 
          "application/xml": 
          "application/json": 
            schema: '{"type":"array","items":{"$ref":"#/Pet"}}'
"/pet/{petId}": 
  uriParameters: 
    "petId": 
      displayName: "petId"
      description: "ID of pet to return"
      type: integer
      required: true
      repeat: false
  get: 
    description: "Returns a single pet"
    responses: 
      "404": 
        description: "Pet not found"
        body: 
          "application/xml": 
          "application/json": 
      "200": 
        description: "successful operation"
        body: 
          "application/xml": 
          "application/json": 
      "400": 
        description: "Invalid ID supplied"
        body: 
          "application/xml": 
          "application/json": 
  delete: 
    description: "Deletes a pet"
    headers: 
      "api_key": 
        displayName: "api_key"
        type: string
        required: false
        repeat: false
        default: "null"
    responses: 
      "400": 
        description: "Invalid ID supplied"
        body: 
          "application/xml": 
          "application/json": 
      "404": 
        description: "Pet not found"
        body: 
          "application/xml": 
          "application/json": 
"/pet": 
  post: 
    description: "Add a new pet to the store"
    body: 
      "application/xml": 
        schema: '{"$ref":"#/Pet"}'
      "application/json": 
        schema: '{"$ref":"#/Pet"}'
    responses: 
      "405": 
        description: "Invalid input"
        body: 
          "application/xml": 
          "application/json": 
documentation: 
  - 
    title: "description"
    content: "Swagger_Petstore_4_Operations. Based on http://petstore.swagger.io/v2/swagger.json with deletions in API Designer."</pre>



<h2 id="sampleresponse_5">Sample Response #5: WSDL</h2>
<p>WSDL is generally used for SOAP rather than REST APIs. If you're retrieving the API definition in WSDL format for a REST API, it will include proprietary extensions for the Akana platform, as shown in the example below. In addition, depending on your browser, you might need to view source in the browser to see it. For SOAP services the response is standard WSDL.</p>
<p id="id_sampleresponse_5">The example below shows the responses to the API request shown in <a href="#samplerequest_5">Sample Request #5</a>. The API is a subset of the sample Swagger Petstore API.</p>
<p><strong>Sample response #5 headers</strong></p>
<pre>Content-Type: application/xml
Date: Fri, 06 Mar 2020 14:42:52 GMT</pre>
<p><strong>Sample response #5 body</strong></p>
<pre>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsdl:definitions targetNamespace="Swagger_Petstore_4_Operations_v1" xmlns:sdoc="http://soa.com/wsdl/doc" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns="http://soa.com/uri/products/wsdlext/1.0" xmlns:tns="Swagger_Petstore_4_Operations_v1" xmlns:js="http://soa.com/jsonSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:shttp="http://soa.com/wsdl/http"&gt;
  &lt;wsdl:types&gt;
    &lt;shttp:schema language="json" targetNamespace="http://soa.com/jsonSchema" xmlns:shttp="http://soa.com/wsdl/http"&gt;&lt;![CDATA[{"ApiResponse":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"type":{"type":"string"},"message":{"type":"string"}}},"Category":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"}},"xml":{"name":"Category"}},"Order":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"petId":{"type":"integer","format":"int64"},"quantity":{"type":"integer","format":"int32"},"shipDate":{"type":"string","format":"date-time"},"status":{"type":"string","description":"Order Status","enum":["placed","approved","delivered"]},"complete":{"type":"boolean"}},"xml":{"name":"Order"}},"Pet":{"required":["name","photoUrls"],"type":"object","properties":{"id":{"type":"integer","format":"int64"},"category":{"$ref":"#/Category"},"name":{"type":"string","example":"doggie"},"photoUrls":{"type":"array","xml":{"wrapped":true},"items":{"type":"string","xml":{"name":"photoUrl"}}},"tags":{"type":"array","xml":{"wrapped":true},"items":{"$ref":"#/Tag"}},"status":{"type":"string","description":"pet status in the store","enum":["available","pending","sold"]}},"xml":{"name":"Pet"}},"Tag":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"}},"xml":{"name":"Tag"}},"User":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"username":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"email":{"type":"string"},"password":{"type":"string"},"phone":{"type":"string"},"userStatus":{"type":"integer","description":"User Status","format":"int32"}},"xml":{"name":"User"}}}]]&gt;&lt;/shttp:schema&gt;
  &lt;/wsdl:types&gt;
  &lt;wsdl:message name="findPetsByTagsResponseMessage_200"&gt;
    &lt;wsdl:part name="body" type="xs:anyType"&gt;
    &lt;/wsdl:part&gt;
  &lt;/wsdl:message&gt;
  &lt;wsdl:message name="addPetResponseMessage"&gt;
  &lt;/wsdl:message&gt;
  &lt;wsdl:message name="findPetsByTagsFault_400"&gt;
  &lt;/wsdl:message&gt;
  &lt;wsdl:message name="getPetByIdResponseMessage_200"&gt;
    &lt;wsdl:part name="body" type="js:Pet"&gt;
    &lt;/wsdl:part&gt;
    &lt;wsdl:part name="body" type="js:Pet"&gt;
    &lt;/wsdl:part&gt;
  &lt;/wsdl:message&gt;
  &lt;wsdl:message name="getPetByIdRequestMessage"&gt;
    &lt;wsdl:part name="petId" type="xs:int"&gt;
    &lt;/wsdl:part&gt;
  &lt;/wsdl:message&gt;
  &lt;wsdl:message name="getPetByIdFault_404"&gt;
  &lt;/wsdl:message&gt;
  &lt;wsdl:message name="findPetsByTagsRequestMessage"&gt;
    &lt;wsdl:part name="tags" type="xs:string"&gt;
    &lt;/wsdl:part&gt;
  &lt;/wsdl:message&gt;
  &lt;wsdl:message name="getPetByIdFault_400"&gt;
  &lt;/wsdl:message&gt;
  &lt;wsdl:message name="deletePetRequestMessage"&gt;
    &lt;wsdl:part name="api_key" type="xs:string"&gt;
    &lt;/wsdl:part&gt;
    &lt;wsdl:part name="petId" type="xs:int"&gt;
    &lt;/wsdl:part&gt;
  &lt;/wsdl:message&gt;
  &lt;wsdl:message name="deletePetFault_400"&gt;
  &lt;/wsdl:message&gt;
  &lt;wsdl:message name="deletePetResponseMessage"&gt;
  &lt;/wsdl:message&gt;
  &lt;wsdl:message name="addPetRequestMessage"&gt;
    &lt;wsdl:part name="body" type="xs:anyType"&gt;
    &lt;/wsdl:part&gt;
  &lt;/wsdl:message&gt;
  &lt;wsdl:message name="addPetFault_405"&gt;
  &lt;/wsdl:message&gt;
  &lt;wsdl:message name="deletePetFault_404"&gt;
  &lt;/wsdl:message&gt;
  &lt;wsdl:portType name="Swagger_Petstore_4_Operations_PortType_0"&gt;
    &lt;wsdl:operation name="addPet"&gt;
&lt;wsdl:documentation&gt;&lt;sdoc:displayName&gt;addPet&lt;/sdoc:displayName&gt;&lt;/wsdl:documentation&gt;
      &lt;wsdl:input message="tns:addPetRequestMessage"&gt;
    &lt;/wsdl:input&gt;
      &lt;wsdl:output message="tns:addPetResponseMessage"&gt;
    &lt;/wsdl:output&gt;
      &lt;wsdl:fault name="addPetFault_405" message="tns:addPetFault_405"&gt;
    &lt;/wsdl:fault&gt;
    &lt;/wsdl:operation&gt;
    &lt;wsdl:operation name="findPetsByTags"&gt;
&lt;wsdl:documentation&gt;&lt;sdoc:displayName&gt;findPetsByTags&lt;/sdoc:displayName&gt;&lt;/wsdl:documentation&gt;
      &lt;wsdl:input message="tns:findPetsByTagsRequestMessage"&gt;
    &lt;/wsdl:input&gt;
      &lt;wsdl:output message="tns:findPetsByTagsResponseMessage_200"&gt;
    &lt;/wsdl:output&gt;
      &lt;wsdl:fault name="findPetsByTagsFault_400" message="tns:findPetsByTagsFault_400"&gt;
    &lt;/wsdl:fault&gt;
    &lt;/wsdl:operation&gt;
    &lt;wsdl:operation name="getPetById"&gt;
&lt;wsdl:documentation&gt;&lt;sdoc:displayName&gt;getPetById&lt;/sdoc:displayName&gt;&lt;/wsdl:documentation&gt;
      &lt;wsdl:input message="tns:getPetByIdRequestMessage"&gt;
    &lt;/wsdl:input&gt;
      &lt;wsdl:output message="tns:getPetByIdResponseMessage_200"&gt;
    &lt;/wsdl:output&gt;
      &lt;wsdl:fault name="getPetByIdFault_400" message="tns:getPetByIdFault_400"&gt;
    &lt;/wsdl:fault&gt;
      &lt;wsdl:fault name="getPetByIdFault_404" message="tns:getPetByIdFault_404"&gt;
    &lt;/wsdl:fault&gt;
    &lt;/wsdl:operation&gt;
    &lt;wsdl:operation name="deletePet"&gt;
&lt;wsdl:documentation&gt;&lt;sdoc:displayName&gt;deletePet&lt;/sdoc:displayName&gt;&lt;/wsdl:documentation&gt;
      &lt;wsdl:input message="tns:deletePetRequestMessage"&gt;
    &lt;/wsdl:input&gt;
      &lt;wsdl:output message="tns:deletePetResponseMessage"&gt;
    &lt;/wsdl:output&gt;
      &lt;wsdl:fault name="deletePetFault_404" message="tns:deletePetFault_404"&gt;
    &lt;/wsdl:fault&gt;
      &lt;wsdl:fault name="deletePetFault_400" message="tns:deletePetFault_400"&gt;
    &lt;/wsdl:fault&gt;
    &lt;/wsdl:operation&gt;
  &lt;/wsdl:portType&gt;
  &lt;wsdl:binding name="Swagger_Petstore_4_Operations_Binding_0" type="tns:Swagger_Petstore_4_Operations_PortType_0"&gt;
&lt;wsdl:documentation&gt;&lt;sdoc:group path="/pet"/&gt;&lt;sdoc:group path="/pet/findByTags"/&gt;&lt;sdoc:group path="/pet/{petId}"/&gt;&lt;/wsdl:documentation&gt;
    &lt;shttp:binding/&gt;
    &lt;wsdl:operation name="addPet"&gt;
&lt;wsdl:documentation&gt;&lt;sdoc:response code="405" fault="addPetFault_405"&gt;&lt;sdoc:description&gt;&lt;![CDATA[Invalid input]]&gt;&lt;/sdoc:description&gt;&lt;/sdoc:response&gt;&lt;sdoc:displayName&gt;addPet&lt;/sdoc:displayName&gt;&lt;sdoc:summary&gt;&lt;![CDATA[Add a new pet to the store]]&gt;&lt;/sdoc:summary&gt;&lt;sdoc:tag&gt;pet&lt;/sdoc:tag&gt;&lt;/wsdl:documentation&gt;
    &lt;shttp:operation inputSerialization="application/xml,application/json" location="/pet" method="POST" outputSerialization="application/xml,application/json"/&gt;
      &lt;wsdl:input&gt;
    &lt;shttp:input name="body" part="body" type="entity"&gt;&lt;shttp:schema type="application/xml"&gt;&lt;![CDATA[{"$ref":"#/Pet"}]]&gt;&lt;/shttp:schema&gt;&lt;shttp:schema type="application/json"&gt;&lt;![CDATA[{"$ref":"#/Pet"}]]&gt;&lt;/shttp:schema&gt;&lt;wsdl:documentation&gt;&lt;sdoc:description&gt;&lt;![CDATA[Pet object that needs to be added to the store]]&gt;&lt;/sdoc:description&gt;&lt;sdoc:required&gt;true&lt;/sdoc:required&gt;&lt;/wsdl:documentation&gt;&lt;/shttp:input&gt;
      &lt;/wsdl:input&gt;
      &lt;wsdl:output&gt;
      &lt;/wsdl:output&gt;
      &lt;wsdl:fault name="addPetFault_405"&gt;
    &lt;shttp:output name="body" part="body" type="entity"/&gt;
      &lt;/wsdl:fault&gt;
    &lt;/wsdl:operation&gt;
    &lt;wsdl:operation name="findPetsByTags"&gt;
&lt;wsdl:documentation&gt;&lt;sdoc:response code="400" fault="findPetsByTagsFault_400"&gt;&lt;sdoc:description&gt;&lt;![CDATA[Invalid tag value]]&gt;&lt;/sdoc:description&gt;&lt;/sdoc:response&gt;&lt;sdoc:response code="200"&gt;&lt;sdoc:description&gt;&lt;![CDATA[successful operation]]&gt;&lt;/sdoc:description&gt;&lt;sdoc:schema type="application/json"&gt;&lt;![CDATA[{"type":"array","items":{"$ref":"#/Pet"}}]]&gt;&lt;/sdoc:schema&gt;&lt;/sdoc:response&gt;&lt;sdoc:displayName&gt;findPetsByTags&lt;/sdoc:displayName&gt;&lt;sdoc:description&gt;&lt;![CDATA[Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.]]&gt;&lt;/sdoc:description&gt;&lt;sdoc:summary&gt;&lt;![CDATA[Finds Pets by tags]]&gt;&lt;/sdoc:summary&gt;&lt;sdoc:tag&gt;pet&lt;/sdoc:tag&gt;&lt;sdoc:deprecated&gt;true&lt;/sdoc:deprecated&gt;&lt;/wsdl:documentation&gt;
    &lt;shttp:operation location="/pet/findByTags" method="GET" outputSerialization="application/xml,application/json"/&gt;
      &lt;wsdl:input&gt;
    &lt;shttp:input name="tags" part="tags" type="query"&gt;&lt;wsdl:documentation&gt;&lt;sdoc:type&gt;array&lt;/sdoc:type&gt;&lt;sdoc:displayName&gt;tags&lt;/sdoc:displayName&gt;&lt;sdoc:description&gt;&lt;![CDATA[Tags to filter by]]&gt;&lt;/sdoc:description&gt;&lt;sdoc:required&gt;true&lt;/sdoc:required&gt;&lt;sdoc:collectionFormat&gt;csv&lt;/sdoc:collectionFormat&gt;&lt;sdoc:type&gt;array&lt;/sdoc:type&gt;&lt;sdoc:items&gt;&lt;sdoc:type&gt;string&lt;/sdoc:type&gt;&lt;/sdoc:items&gt;&lt;/wsdl:documentation&gt;&lt;shttp:schema type="application/json"&gt;&lt;![CDATA[{"type":"array","description":"Tags to filter by","items":{"type":"string"}}]]&gt;&lt;/shttp:schema&gt;&lt;/shttp:input&gt;
      &lt;/wsdl:input&gt;
      &lt;wsdl:output&gt;
    &lt;shttp:output name="body" part="body" type="entity"&gt;&lt;shttp:schema type="application/json"&gt;&lt;![CDATA[{"type":"array","items":{"$ref":"#/Pet"}}]]&gt;&lt;/shttp:schema&gt;&lt;wsdl:documentation&gt;&lt;sdoc:type&gt;array&lt;/sdoc:type&gt;&lt;sdoc:items&gt;&lt;sdoc:type&gt;array&lt;/sdoc:type&gt;&lt;/sdoc:items&gt;&lt;/wsdl:documentation&gt;&lt;/shttp:output&gt;
      &lt;/wsdl:output&gt;
      &lt;wsdl:fault name="findPetsByTagsFault_400"&gt;
    &lt;shttp:output name="body" part="body" type="entity"/&gt;
      &lt;/wsdl:fault&gt;
    &lt;/wsdl:operation&gt;
    &lt;wsdl:operation name="getPetById"&gt;
&lt;wsdl:documentation&gt;&lt;sdoc:response code="400" fault="getPetByIdFault_400"&gt;&lt;sdoc:description&gt;&lt;![CDATA[Invalid ID supplied]]&gt;&lt;/sdoc:description&gt;&lt;/sdoc:response&gt;&lt;sdoc:response code="404" fault="getPetByIdFault_404"&gt;&lt;sdoc:description&gt;&lt;![CDATA[Pet not found]]&gt;&lt;/sdoc:description&gt;&lt;/sdoc:response&gt;&lt;sdoc:response code="200"&gt;&lt;sdoc:description&gt;&lt;![CDATA[successful operation]]&gt;&lt;/sdoc:description&gt;&lt;/sdoc:response&gt;&lt;sdoc:displayName&gt;getPetById&lt;/sdoc:displayName&gt;&lt;sdoc:description&gt;&lt;![CDATA[Returns a single pet]]&gt;&lt;/sdoc:description&gt;&lt;sdoc:summary&gt;&lt;![CDATA[Find pet by ID]]&gt;&lt;/sdoc:summary&gt;&lt;sdoc:tag&gt;pet&lt;/sdoc:tag&gt;&lt;/wsdl:documentation&gt;
    &lt;shttp:operation location="/pet/{petId}" method="GET" outputSerialization="application/xml,application/json"/&gt;
      &lt;wsdl:input&gt;
    &lt;shttp:input name="petId" part="petId" type="path"&gt;&lt;wsdl:documentation&gt;&lt;sdoc:type&gt;integer&lt;/sdoc:type&gt;&lt;sdoc:format&gt;int64&lt;/sdoc:format&gt;&lt;sdoc:displayName&gt;petId&lt;/sdoc:displayName&gt;&lt;sdoc:description&gt;&lt;![CDATA[ID of pet to return]]&gt;&lt;/sdoc:description&gt;&lt;sdoc:required&gt;true&lt;/sdoc:required&gt;&lt;/wsdl:documentation&gt;&lt;shttp:schema type="application/json"&gt;&lt;![CDATA[{"type":"integer","description":"ID of pet to return","format":"int64"}]]&gt;&lt;/shttp:schema&gt;&lt;/shttp:input&gt;
      &lt;/wsdl:input&gt;
      &lt;wsdl:output&gt;
    &lt;shttp:output name="body" part="body" type="entity"/&gt;
      &lt;/wsdl:output&gt;
      &lt;wsdl:fault name="getPetByIdFault_400"&gt;
    &lt;shttp:output name="body" part="body" type="entity"/&gt;
      &lt;/wsdl:fault&gt;
      &lt;wsdl:fault name="getPetByIdFault_404"&gt;
    &lt;shttp:output name="body" part="body" type="entity"/&gt;
      &lt;/wsdl:fault&gt;
    &lt;/wsdl:operation&gt;
    &lt;wsdl:operation name="deletePet"&gt;
&lt;wsdl:documentation&gt;&lt;sdoc:response code="400" fault="deletePetFault_400"&gt;&lt;sdoc:description&gt;&lt;![CDATA[Invalid ID supplied]]&gt;&lt;/sdoc:description&gt;&lt;/sdoc:response&gt;&lt;sdoc:response code="404" fault="deletePetFault_404"&gt;&lt;sdoc:description&gt;&lt;![CDATA[Pet not found]]&gt;&lt;/sdoc:description&gt;&lt;/sdoc:response&gt;&lt;sdoc:displayName&gt;deletePet&lt;/sdoc:displayName&gt;&lt;sdoc:summary&gt;&lt;![CDATA[Deletes a pet]]&gt;&lt;/sdoc:summary&gt;&lt;sdoc:tag&gt;pet&lt;/sdoc:tag&gt;&lt;/wsdl:documentation&gt;
    &lt;shttp:operation location="/pet/{petId}" method="DELETE" outputSerialization="application/xml,application/json"/&gt;
      &lt;wsdl:input&gt;
    &lt;shttp:input name="api_key" part="api_key" type="header"&gt;&lt;wsdl:documentation&gt;&lt;sdoc:type&gt;string&lt;/sdoc:type&gt;&lt;sdoc:default&gt;null&lt;/sdoc:default&gt;&lt;sdoc:displayName&gt;api_key&lt;/sdoc:displayName&gt;&lt;sdoc:required&gt;false&lt;/sdoc:required&gt;&lt;/wsdl:documentation&gt;&lt;shttp:schema type="application/json"&gt;&lt;![CDATA[{"type":"string","default":"null"}]]&gt;&lt;/shttp:schema&gt;&lt;/shttp:input&gt;
    &lt;shttp:input name="petId" part="petId" type="path"&gt;&lt;wsdl:documentation&gt;&lt;sdoc:type&gt;integer&lt;/sdoc:type&gt;&lt;sdoc:format&gt;int64&lt;/sdoc:format&gt;&lt;sdoc:displayName&gt;petId&lt;/sdoc:displayName&gt;&lt;sdoc:description&gt;&lt;![CDATA[Pet id to delete]]&gt;&lt;/sdoc:description&gt;&lt;sdoc:required&gt;true&lt;/sdoc:required&gt;&lt;/wsdl:documentation&gt;&lt;shttp:schema type="application/json"&gt;&lt;![CDATA[{"type":"integer","description":"Pet id to delete","format":"int64"}]]&gt;&lt;/shttp:schema&gt;&lt;/shttp:input&gt;
      &lt;/wsdl:input&gt;
      &lt;wsdl:output&gt;
      &lt;/wsdl:output&gt;
      &lt;wsdl:fault name="deletePetFault_404"&gt;
    &lt;shttp:output name="body" part="body" type="entity"/&gt;
      &lt;/wsdl:fault&gt;
      &lt;wsdl:fault name="deletePetFault_400"&gt;
    &lt;shttp:output name="body" part="body" type="entity"/&gt;
      &lt;/wsdl:fault&gt;
    &lt;/wsdl:operation&gt;
  &lt;/wsdl:binding&gt;
  &lt;wsdl:service name="svc_4b8ceb11-d751-499f-ba1a-ff76cec0e064.acmepaymentscorp.live"&gt;
&lt;wsdl:documentation&gt;&lt;sdoc:title&gt;Swagger_Petstore_4_Operations_v1_Live&lt;/sdoc:title&gt;&lt;sdoc:description&gt;&lt;![CDATA[Swagger_Petstore_4_Operations. Based on http://petstore.swagger.io/v2/swagger.json with deletions in API Designer.]]&gt;&lt;/sdoc:description&gt;&lt;/wsdl:documentation&gt;
    &lt;wsdl:port name="https1883586292" binding="tns:Swagger_Petstore_4_Operations_Binding_0"&gt;
    &lt;shttp:address location="https://testing.acmepaymentscorp.com:7955/api16098live"/&gt;
    &lt;soa:connectionProperty name="gateway_hostname" value="testing.acmepaymentscorp.com" xmlns:soa="http://soa.com/uri/products/wsdlext/1.0"/&gt;
    &lt;soa:connectionProperty name="visibility" value="public" xmlns:soa="http://soa.com/uri/products/wsdlext/1.0"/&gt;
    &lt;soa:connectionProperty name="virtualHost" value="testing.acmepaymentscorp.com" xmlns:soa="http://soa.com/uri/products/wsdlext/1.0"/&gt;
    &lt;/wsdl:port&gt;
    &lt;wsdl:port name="http1415836027" binding="tns:Swagger_Petstore_4_Operations_Binding_0"&gt;
    &lt;shttp:address location="http://testing.acmepaymentscorp.com:7905/api16098live"/&gt;
    &lt;soa:connectionProperty name="gateway_hostname" value="testing.acmepaymentscorp.com" xmlns:soa="http://soa.com/uri/products/wsdlext/1.0"/&gt;
    &lt;soa:connectionProperty name="visibility" value="public" xmlns:soa="http://soa.com/uri/products/wsdlext/1.0"/&gt;
    &lt;soa:connectionProperty name="virtualHost" value="testing.acmepaymentscorp.com" xmlns:soa="http://soa.com/uri/products/wsdlext/1.0"/&gt;
    &lt;/wsdl:port&gt;
  &lt;/wsdl:service&gt;
&lt;/wsdl:definitions&gt;
</pre>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>
<!-- InstanceEndEditable -->


<!-- InstanceBeginEditable name="Response Headers" -->
<h2 id="responseheaders">Response Headers</h2>
<p>For general information on response header values, refer to <a href="../aaref/Ref_HTTPHeaders.htm#ref_httpresponseheaders">HTTP Response Headers</a>.</p>
<table class="tableparmsresponse">
	<thead>
		<tr>
			<th>Header</th>
			<th>Description</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td><a href="../aaref/Ref_HTTPHeaders.htm#contenttype_response">Content-Type</a></td>
			<td>The response Content-Type value is determined by the specification.</td>
		</tr>
	</tbody>
</table>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>
<!-- InstanceEndEditable -->


<!-- InstanceBeginEditable name="Response Body" -->
<h2 id="responsebody">Response Body</h2>
<p>The response body is the generated API documentation.</p>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>
<!-- InstanceEndEditable -->


<h2 id="errorcodes">Error Codes/Messages</h2>
<p>If the call is unsuccessful an error code/message is returned. One or more examples of possible errors for this operation are shown below.</p>
<!-- InstanceBeginEditable name="Error Messages" -->
<table class="tableparmsresponse">
	<thead>
		<tr>
			<th>Item</th>
			<th>Value</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td><a href="../aaref/Ref_HTTPStatusCodes.htm#http401">401</a></td>
			<td>Unauthorized. For example, you would get this response if you didn't include the custom <a href="../Ref_Glossary_CommunityPlatform.htm#gl_xcsrf_token_fedmemberid">X-Csrf-Token_{fedmemberID}</a> header in the request, when it was required by the platform settings; or if you included an invalid or expired value for this header. You would also get this response for any operation that requires login (almost all) if the login cookie was missing.</td>
		</tr>
		<tr>
			<td><a href="../aaref/Ref_HTTPStatusCodes.htm#http500">500</a></td>
			<td>An error occurred processing the call.</td>
		</tr>
	</tbody>
</table>
<!-- InstanceEndEditable -->
<p><a href="../aaref/Ref_ErrorMessages.htm">More information about Akana API Platform API error messages.</a></p>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<h2 id="relatedtopics">Related Topics</h2>
<div class="relatedlinks">
<ul>
	<li><a href="../index.htm">Akana API Platform API: Overview</a></li>
	<li><a href="../Ref_Glossary_CommunityPlatform.htm">Glossary of Terms</a></li>
	<li><a href="../Ref_DocConventions.htm">Documentation Conventions</a></li>
</ul>
<ul>
	<li><a href="../Ref_AuthenticationAndSecurity.htm">Authentication and Security</a></li>
	<li><a href="../Ref_TroubleshootingAndSupport.htm">Troubleshooting and Support</a></li>
	<li><a href="../Ref_API_Reference.htm">Akana API Platform API: Reference Material</a></li>
	<li><a href="../aaex/Ref_Ex_Overview.htm">Examples: Overview</a></li>
</ul>
</div>




</div>
