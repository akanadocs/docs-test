---
layout: apipage
title: Managing Avatars on the Platform | Reference Material | Enterprise API Platform API
description: This topic includes information about managing avatars on the platform, including-
product: cm
category: ref
nav-title: Managing Avatars on the Platform 
no-nav: api
sub-nav: true
sub-nav-class: ref
no-catalog: true
---

<h2><a name="top"></a>Managing Avatars on the Platform</h2>
<p>This topic includes information about managing avatars on the platform, including:</p>
<ul>
  <li><a href="#resourcesthathaveavatars">Resources that Have Avatars on the Platform</a></li>
  <li><a href="#supportedfiletypesandsize">Supported File Types and File Size</a></li>
  <li><a href="#workingwithresourceimages">Working With Resource Images</a></li>
  <li><a href="#managingcachingforavatars">Managing Caching for Avatars</a></li>
  <li><a href="#difference">Usage Note: Difference Between getAvatar and getDefaultAvatar</a></li>
  <li><a href="#processflowexample">Process Flow: Example</a></li>
</ul>


<h3><a name="resourcesthathaveavatars"></a>Resources that Have Avatars on the Platform</h3>
<p>The platform supports upload of an image for use as an avatar for the following resource types:</p>
<ul>
  <li>APIs</li>
  <li>Apps</li>
  <li>Groups</li>
  <li>Users</li>
</ul>

<h3><a name="supportedfiletypesandsize"></a>Supported File Types and File Size</h3>
<p>Supported image files must be no more than 4MB in size, and must be one of these supported image types:</p>
<ul>
  <li>JPG</li>
  <li>GIF</li>
  <li>TIFF</li>
  <li>BMP</li>
  <li>PNG</li>
</ul>

<h3><a name="workingwithresourceimages"></a>Working With Resource Images</h3>
<p>The Dropbox service provides operations for uploading images to the platform. Working with images might include such activities as uploading an image, cropping it, and saving the cropped portion as the <a href="Ref_Glossary_CommunityPlatform.htm#gl_avatar">avatar</a> for a resource.</p>
<p>Below is a suggested implementation that uses several of the Dropbox operations, in sequence, to complete these tasks.</p>
<table class="tableparmsresponse" width="100%" cellspacing="0" cellpadding="2">
  <thead>
    <tr>
      <th width="25%">Use this Dropbox operation&#8230;</th>
      <th width="15%">HTTP Verb</th>
      <th width="50%">To complete this step&#8230;</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><a href="dropbox/m_dropbox_addPicture.htm">POST&nbsp;/api/dropbox/pictures</a></td>
      <td>POST</td>
      <td>Upload the image to the Dropbox.</td>
  </tr>
    <tr>
      <td><a href="dropbox/m_dropbox_getPicture.htm">GET&nbsp;dropbox/pictures/{pictureId}</a></td>
      <td>GET</td>
      <td>Get the image so the cropping feature can display it.</td>
  </tr>
    <tr>
      <td><a href="dropbox/m_dropbox_cropPicture.htm">PUT&nbsp;dropbox/pictures/{pictureId}</a></td>
      <td>PUT</td>
      <td>Update the image with only the selected part.</td>
  </tr>
    <tr>
      <td><a href="dropbox/m_dropbox_getPicture.htm">GET&nbsp;dropbox/pictures/{pictureId}</a></td>
      <td>GET</td>
      <td>Get the cropped image so it can be displayed as the avatar for the resource.</td>
  </tr>
  </tbody>
</table>


<p>The services that support managing these various resources include operations that allow you to add, update, or delete avatars or get avatar information:</p>
<ul>
  <li><span class="apidoc_code"><a href="resource/m_deleteImage.htm">DELETE&nbsp;/api/users/{UserID}/picture</a></span> (Users only; deletes an avatar. For APIs and Apps services, you cannot delete an avatar, only replace it).</li>
  <li><span class="apidoc_code"><a href="resource/m_getAvatar.htm">GET&nbsp;{service}/{ID}/avatars/{AvatarVersionID}.png</a></span></li>
  <li><span class="apidoc_code"><a href="resource/m_getDefaultAvatar.htm">GET&nbsp;{service}/{ID}/avatar</a></span>: Retrieves the default avatar image for the specified resource.</li>
</ul>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<h3><a name="managingcachingforavatars" id="managingcachingforavatars"></a>Managing Caching for Avatars</h3>
<p>Because many different resources, such as APIs, apps, and users, can have a different avatar, it's possible that a platform resource, such as an API's Board page with many comments and notifications, might include many different images. For maximum efficiency, avatars can be cached.</p>
<p>Whenever the avatar for a resource is changed, the URL is updated. An updated image will always have a different URL. This means that you can cache avatars indefinitely without risk that you might be referencing an outdated avatar.</p>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<h3><a name="difference"></a>Usage Note: Difference Between getAvatar and getDefaultAvatar</h3>
<p>There are two operations available for retrieving the avatar associated with a resource, with one key difference between them:</p>
<ul>
  <li><span class="apidoc_code"><a href="resource/m_getDefaultAvatar.htm">GET&nbsp;/api/{service}/{ID}/avatar</a> (getDefaultAvatar)</span>: This operation simply returns the avatar for the resource, such as app, API, or user.</li>
  <li><span class="apidoc_code"><a href="resource/m_getAvatar.htm">GET&nbsp;{service}/{ID}/avatars/{AvatarVersionID}.png</a> (getAvatar)</span>: Each time a new avatar is set up for a resource, the platform assigns an AvatarVersionID. If the avatar is changed, the new avatar has a new AvatarVersionID. By specifying the AvatarVersionID you can retrieve the avatar for a resource even if it isn't the current avatar.</li>
</ul>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<h3><a name="processflowexample" id="processflowexample"></a>Process Flow: Example</h3>
<p>Let's say a user, Jane Mead, adds an avatar to her user profile. She then decides to change the image; she removes the existing avatar and adds a different one. This process flow uses the following operations:</p>
<ol>
  <li>User uploads an image from disk: <a href="dropbox/m_dropbox_addPicture.htm">POST&nbsp;/api/dropbox/pictures</a>. Image is saved to database and PictureID is returned.</li>
  <li>Image is retrieved for user to crop: <a href="dropbox/m_dropbox_getPicture.htm">GET&nbsp;/api/dropbox/pictures/{pictureId}</a>.</li>
  <li>User crops picture: <a href="dropbox/m_dropbox_cropPicture.htm">PUT&nbsp;/api/dropbox/pictures/{pictureId}</a>. Cropped image is saved to database and PictureID is returned (same PictureID).</li>
  <li>Cropped image is retrieved for use: <a href="resource/m_getDefaultAvatar.htm">GET&nbsp;/api/users/UserID/avatar</a>.</li>
  <li>User record is updated: <a href="users/m_users_modifyUser.htm">PUT&nbsp;/api/users/{UserID}</a>.</li>
  <li>Updated user record is retrieved: <a href="users/m_users_getUser.htm">GET&nbsp;/api/users/{UserID}</a>.</li>
  <li>User deletes avatar: <a href="resource/m_deleteImage.htm">DELETE&nbsp;{service}/{ID}/picture</a>.</li>
  <li>User record is updated: <a href="users/m_users_modifyUser.htm">PUT&nbsp;/api/users/{UserID}</a>.</li>
  <li>Updated user record is retrieved: <a href="users/m_users_getUser.htm">GET&nbsp;/api/users/{UserID}</a>.</li>
  <li>User uploads a second image from disk: steps 1-6 above are repeated.</li>
</ol>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<h3 id="relatedtopics">Related Topics</h3><!-- #BeginLibraryItem "/Library/_RelatedTopics.lbi" -->
<table width="700" border="0" cellspacing="0" cellpadding="2">
  <tr>
    <td width="300"><ul>
  <li><a href="index.htm">Enterprise API Platform API: Overview</a></li>
  <li><a href="Ref_Glossary_CommunityPlatform.htm">Glossary of Terms</a></li>
  <li><a href="Ref_DocConventions.htm">Documentation Conventions</a></li>
</ul>
</td>
    <td width="400"><ul>
  <li><a href="Ref_AuthenticationAndSecurity.htm">Authentication and Security</a></li>
  <li><a href="Ref_TroubleshootingAndSupport.htm">Troubleshooting and Support</a></li>
  <li><a href="Ref_API_Reference.htm">Enterprise API Platform API: Reference Material</a></li>
</ul>
</td>
  </tr>
</table><!-- #EndLibraryItem --><hr />
