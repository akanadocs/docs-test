---
layout: apipage
title: Upload Content | Content Service | Akana API Platform API
description: Uploads a single file of existing content to the platform, or uploads a ZIP file of existing content and unzips it to the specified location.
product: cm
category: ref
nav-title: Upload Content 
no-nav: api
sub-nav: true
sub-nav-class: content
no-catalog: true
---

<div class="apidocContent">
<!-- InstanceBeginEditable name="Heading" -->
<h1 id="top">POST&#160;/content/{path}</h1>
<!-- InstanceEndEditable -->

<!-- InstanceBeginEditable name="Intro_AuthRoles" -->
<p>
Uploads a single file of existing content to the platform, or uploads a ZIP file of existing content and unzips it to the specified location.</p>

<p class="apidoc_note"><strong>Note</strong>: When creating or uploading content files, you can use the <span class="apidoc_code"><a href="m_content_upload.htm">POST&#160;/content/{path}</a></span> operation (with <strong>multipart/form-data</strong> content type) to upload a single file, or multiple files in a ZIP. You can use the <span class="apidoc_code"><a href="m_content_add.htm">POST&#160;/content/{path}</a></span> operation (with <strong>application/x-www-form-urlencoded</strong> content-type) to create a new folder with a default JSON table of contents file in it, as in the example below, or to create a new file. If you are creating a new file, it cannot be empty; you must include the file contents in the payload, and must use the <strong>application/x-www-form-urlencoded</strong> content type.</p>

<p id="id_roles"><strong>Authorization Roles/Permissions</strong>: Must be <a href="../Ref_Glossary_CommunityPlatform.htm#gl_login">logged in</a>. <a href="../aaref/Ref_AuthorizationRolesOnThePlatform.htm#authroles_apiadmin">API Admin</a> or other authorized user.</p>
<!-- InstanceEndEditable -->
<p>This topic includes the following sections:</p>
<div class="relatedlinks">
<ul>
	<li><a href="#httpmethod">HTTP Method</a></li>
	<li><a href="#endpoint">URL</a></li>
	<li><a href="#samplerequest">Sample Request</a></li>
	<li><a href="#requestheaders">Request Headers</a></li>
	<li><a href="#requestparameters">Request Parameters</a></li>
</ul>
<ul>
	<li><a href="#response">Response</a></li>
	<li><a href="#sampleresponse">Sample Response</a></li>
	<li><a href="#responseheaders">Response Headers</a></li>
	<li><a href="#responsebody">Response Body</a></li>
	<li><a href="#errorcodes">Error Codes/Messages</a></li>
</ul>
</div>
<h2 id="httpmethod">HTTP Method</h2>
<!-- InstanceBeginEditable name="HTTP Method" -->
<p class="httpverb">POST</p>
<!-- InstanceEndEditable -->
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>

<h2 id="endpoint">URL</h2>
<!-- InstanceBeginEditable name="URL" -->
<pre class="soaapidoc_endpoint">https://{hostname}/content/{path}</pre>
<!-- InstanceEndEditable -->
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<!-- InstanceBeginEditable name="Sample Request" -->
<h2 id="samplerequest">Sample Request</h2>
<p id="id_samplerequest">The example below shows a request to upload a ZIP file of content for the specified API.</p>
<p><strong>Request URL #1</strong></p>
<p>Uploads an API documentation ZIP file and unzips it.</p>
<pre>https://acmepaymentscorp.com/content/api/api19427.acmepaymentscorp/documents?unpack=true&amp;wrapInHTML=true</pre>
<p><strong>Request URL #2</strong></p>
<pre>https://acmepaymentscorp.com/content/help?unpack=true</pre>
<p><strong>Sample request headers</strong></p>
<pre>POST /content/api/api19427.acmepaymentscorp/documents?unpack=true&amp;wrapInHTML=true HTTP/1.1
Host: {hostname}
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
X-Csrf-Token_rcoaless":"TokenID%3D8ed70a13-8469-11e8-b37a-b155e4eabeb8%2CexpirationTime%3D153...</pre>
<p><strong>Sample request body</strong></p>
<p>The request body is the ZIP file.</p>



<p id="contentupload_help_zip"><strong>Sample request #2 in Postman</strong></p>
<p>In the example below, the content being uploaded is a ZIP file to be placed in the content/help folder for display in SimpleDev theme. The <strong>index.zip</strong> file is uploaded to the <strong>content/help</strong> folder and unzipped (<strong>unpack=true</strong> parameter).</p>
<p><img src="../assets/content_upload_postman_01.jpg" alt="Content Upload in Postman: URL, uploaded ZIP file, successful result" /></p>

<p id="contentupload_legalagreement_plat"><strong>Request URL #3: Adding a platform legal agreement</strong></p>
<p id="id_samplerequest3">The example below uploads a platform legal agreement to the <strong>content/system/agreements</strong> folder.</p>
<pre>http://acmepaymentscorp.com/content/system/agreements</pre>
<p><strong>Sample request headers</strong></p>
<pre>POST /content/system/agreements
Host: {hostname}
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Content-Type: application/x-www-form-urlencoded
X-Csrf-Token_rcoaless":"TokenID%3D8ed70a13-8469-11e8-b37a-b155e4eabeb8%2CexpirationTime%3D153...</pre>
<p><strong>Sample request body (request URL #3)</strong></p>
<p>The request body is the uploaded file. See Postman example below.</p>
<p><strong>Sample request/response #3 in Postman</strong></p>
<p>The example below uploads a platform legal agreement. The valid content path for a platform legal agreement is <strong>/content/system/agreements</strong>. The file is uploaded and the operation is successful. The response is an HTTP 200 with no content.</p>
<p><img src="../assets/content_upload_postman_02.jpg" alt="Content Upload of platform legal agreement in Postman" /></p>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>
<!-- InstanceEndEditable -->


<!-- InstanceBeginEditable name="Request Headers" -->
<h2 id="requestheaders">Request Headers</h2>
<p>For general information on request header values, refer to <a href="../aaref/Ref_HTTPHeaders.htm#ref_httprequestheaders">HTTP Request Headers</a>.</p>
<table class="tableparmsresponse">
	<thead>
		<tr>
			<th>Header</th>
			<th>Description</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td><a href="../aaref/Ref_HTTPHeaders.htm#acceptheader">Accept</a></td>
			<td>Not applicable.</td>
		</tr>
		<tr>
			<td><a href="../aaref/Ref_HTTPHeaders.htm#contenttype_request">Content-Type</a></td>
			<td><p><strong><a href="../aaref/Ref_MediaTypes.htm#mediatype_multipartformdata">multipart/form-data</a></strong></p>
				<p>In the form data, you must include a key of <strong>File</strong>; the value for the key is the individual file or ZIP file with the content you want to upload to the specified location, as shown above in Postman. If you're uploading a ZIP file, include the <strong>unpack=true</strong> query parameter. Refer to <a href="#contentupload_help_zip">Sample Request #2</a> and <a href="#contentupload_legalagreement_plat">Sample Request #3</a> above.</p></td>
		</tr>
		<tr>
			<td>Cookie</td>
			<td><a href="../aaref/Ref_CookiesOnThePlatform.htm#cookie_atmoauthtoken">AtmoAuthToken_{fedmemberid}={cookie value, which usually starts with TokenID}</a>&#8212;The platform cookie. This is the Akana API Platform authorization token, and must be sent with every API request that requires login. For more information and an example, see <a href="../aaref/Ref_CookiesOnThePlatform.htm#cookies_custom">Session cookies</a>.</td>
		</tr>
		<tr>
			<td><a href="../aaref/Ref_HTTPHeaders.htm#csrf_token_request">X-Csrf-Token_{fedmemberID}</a></td>
			<td>The CSRF prevention header; may or may not be required, depending on platform settings. See <a href="../aaref/Ref_CSRFPreventionOnThePlatform.htm">CSRF Prevention on the Platform</a>. By default, the CSRF header is not required for GET operations and is required for all others, with a few exceptions relating to user login.</td>
		</tr>
	</tbody>
</table>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>
<!-- InstanceEndEditable -->


<!-- InstanceBeginEditable name="Request Parameters" -->
<h2 id="requestparameters">Request Parameters</h2>
<table class="tableparmsresponse">
	<thead>
		<tr>
			<th>Parameter</th>
			<th>Parm Type</th>
			<th>Data Type</th>
			<th>Required</th>
			<th>Description</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>path</td>
			<td>Path</td>
			<td>string</td>
			<td>Required</td>
			<td>The path to the location where the content being uploaded will be unzipped and stored. The path must be valid for your API resources.</td>
		</tr>
		<tr>
			<td>unpack</td>
			<td>Query</td>
			<td>boolean</td>
			<td>Required</td>
			<td>Indicates whether the content must be unzipped. For a ZIP file this parameter is requied and must be set to <strong>true</strong>.</td>
		</tr>
		<tr>
			<td>InMultiPart</td>
			<td>Body</td>
			<td>multipart</td>
			<td>Required</td>
			<td>The content being uploaded. For more information, see <a href="../aaref/Ref_ManagingMultipartFormDataUploads.htm">Managing Multipart/Form-Data Uploads</a>.</td>
		</tr>
	</tbody>
</table>
<p class="apidoc_note"><strong>Note</strong>:For information about the <strong>wrapInHTML</strong> parameter shown in the sample request above, see <a href="../aaref/Ref_FileUploadWithAjax.htm">File Upload with Ajax</a>. This is only used if you are running the API in a browser context.</p>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>
<!-- InstanceEndEditable -->


<!-- InstanceBeginEditable name="Response Description" -->
<h2 id="response">Response</h2>
<p id="id_successstatement">If successful, this operation returns HTTP status code 200, wrapped in HTML.</p>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>
<!-- InstanceEndEditable -->


<!-- InstanceBeginEditable name="Sample Response" -->
<h2 id="sampleresponse">Sample Response</h2>
<p id="id_sampleresponse">The sample response below shows successful completion of this operation.</p>
<p><strong>Sample response headers</strong></p>
<pre>HTTP/1.1 200 OK
Content-Type: text/html
Content-Encoding: gzip
Date: Mon, 24 Jun 2013 19:22:21 GMT</pre>
<p><strong>Sample response body</strong></p>
<pre>&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot; status=&quot;200&quot; statusText=&quot;success&quot;&gt;
&lt;head&gt;
&lt;meta content=&quot;text/html; charset=UTF-8&quot; http-equiv=&quot;Content-Type&quot;&gt;
&lt;meta content=&quot;IE=edge&quot; http-equiv=&quot;X-UA-Compatible&quot;&gt;
&lt;meta name=&quot;description&quot; content=&quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris lacus elit, ornare eget luctus vel, porta id elit. 
Maecenas molestie, libero sit amet blandit faucibus, orci nisi aliquet nisi, id mollis mauris ipsum a enim. Morbi lacus velit, placerat sit amet luctus eget, 
pulvinar a massa. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi eleifend tincidunt pellentesque. Cras eu sapien massa, vitae rutrum sapien. 
Aenean id condimentum sem. Suspendisse tempor luctus ipsum, vel metus.&quot;&gt;
&lt;/head&gt;
&lt;body status=&quot;200&quot; statusText=&quot;success&quot;&gt;
&lt;/body&gt;
&lt;/html&gt;</pre>
<p class="apidoc_note"><strong>Note</strong>: for information about the HTML wrapper shown in the sample response above, see <a href="../aaref/Ref_FileUploadWithAjax.htm">File Upload with Ajax</a>.</p>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>

<!-- InstanceEndEditable -->


<!-- InstanceBeginEditable name="Response Headers" -->
<h2 id="responseheaders">Response Headers</h2>
<p>For general information on response header values, refer to <a href="../aaref/Ref_HTTPHeaders.htm#ref_httpresponseheaders">HTTP Response Headers</a>.</p>
<table class="tableparmsresponse">
	<thead>
		<tr>
			<th>Header</th>
			<th>Description</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td><a href="../aaref/Ref_HTTPHeaders.htm#contenttype_response">Content-Type</a></td>
			<td>text/html</td>
		</tr>
	</tbody>
</table>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>
<!-- InstanceEndEditable -->


<!-- InstanceBeginEditable name="Response Body" -->
<h2 id="responsebody">Response Body</h2>
<table class="tableparmsresponse">
	<thead>
		<tr>
			<th>Name</th>
			<th>Type</th>
			<th>Description</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>Response</td>
			<td>String</td>
			<td>The response code, wrapped in HTML.</td>
		</tr>
	</tbody>
</table>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>
<!-- InstanceEndEditable -->


<h2 id="errorcodes">Error Codes/Messages</h2>
<p>If the call is unsuccessful an error code/message is returned. One or more examples of possible errors for this operation are shown below.</p>
<!-- InstanceBeginEditable name="Error Messages" -->
<table class="tableparmsresponse">
	<thead>
		<tr>
			<th>Item</th>
			<th>Value</th>
		</tr>
		<tr>
			<td><a href="../aaref/Ref_HTTPStatusCodes.htm#http401">401</a></td>
			<td>Unauthorized. For example, you would get this response if you didn't include the custom <a href="../Ref_Glossary_CommunityPlatform.htm#gl_xcsrf_token_fedmemberid">X-Csrf-Token_{fedmemberID}</a> header in the request, when it was required by the platform settings; or if you included an invalid or expired value for this header. You would also get this response for any operation that requires login (almost all) if the login cookie was missing.</td>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td><a href="../aaref/Ref_HTTPStatusCodes.htm#http500">500</a></td>
			<td>An error occurred processing the call.</td>
		</tr>
	</tbody>
</table>
<!-- InstanceEndEditable -->
<p><a href="../aaref/Ref_ErrorMessages.htm">More information about Akana API Platform API error messages.</a></p>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<h2 id="relatedtopics">Related Topics</h2>
<div class="relatedlinks">
<ul>
	<li><a href="../index.htm">Akana API Platform API: Overview</a></li>
	<li><a href="../Ref_Glossary_CommunityPlatform.htm">Glossary of Terms</a></li>
	<li><a href="../Ref_DocConventions.htm">Documentation Conventions</a></li>
</ul>
<ul>
	<li><a href="../Ref_AuthenticationAndSecurity.htm">Authentication and Security</a></li>
	<li><a href="../Ref_TroubleshootingAndSupport.htm">Troubleshooting and Support</a></li>
	<li><a href="../Ref_API_Reference.htm">Akana API Platform API: Reference Material</a></li>
	<li><a href="../aaex/Ref_Ex_Overview.htm">Examples: Overview</a></li>
</ul>
</div>




</div>
