---
layout: apipage
title: Add Content | Content Service | Akana API Platform API
description:  Adds a single file of new content to the platform, or adds a new directory.
product: cm
category: ref
nav-title: Add Content 
no-nav: api
sub-nav: true
sub-nav-class: content
no-catalog: true
---

<div class="apidocContent">
<!-- InstanceBeginEditable name="Heading" -->
<h1 id="top">POST&nbsp;/content/{path}</h1>
<!-- InstanceEndEditable -->

<!-- InstanceBeginEditable name="Intro_AuthRoles" -->
<p><!-- #BeginLibraryItem "/Library/desc_content_add.lbi" -->
Adds a single file of new content to the platform, or adds a new directory.<!-- #EndLibraryItem --></p>
<p class="apidoc_note"><strong>Note</strong>: When creating or uploading content files, you can use the <span class="apidoc_code"><a href="m_content_upload.htm">POST&nbsp;/content/{path}</a></span> operation (with <strong>multipart/form-data</strong> content type) to upload a single file, or multiple files in a ZIP. You can use the <span class="apidoc_code"><a href="m_content_add.htm">POST&nbsp;/content/{path}</a></span> operation (with <strong>application/x-www-form-urlencoded</strong> content-type) to create a new folder with a default JSON table of contents file in it, as in the example below, or to create a new file. If you are creating a new file, it cannot be empty; you must include the file contents in the payload, and must use the <strong>application/x-www-form-urlencoded</strong> content type.</p>

<p id="id_roles"><strong>Authorization Roles/Permissions</strong>:<!-- #BeginLibraryItem "/Library/roles_user.lbi" --> Must be <a href="../Ref_Glossary_CommunityPlatform.htm#gl_login">logged in</a>.<!-- #EndLibraryItem --> <a href="../aaref/Ref_AuthorizationRolesOnThePlatform.htm#authroles_apiadmin">API Admin</a> or other authorized user.</p>
<!-- InstanceEndEditable --><!-- #BeginLibraryItem "/Library/_whatdoyouwanttoreadabout.lbi" -->
<p>This topic includes the following sections:</p>
<div class="relatedlinks">
<ul>
	<li><a href="#httpmethod">HTTP Method</a></li>
	<li><a href="#endpoint">URL</a></li>
	<li><a href="#samplerequest">Sample Request</a></li>
	<li><a href="#requestheaders">Request Headers</a></li>
	<li><a href="#requestparameters">Request Parameters</a></li>
</ul>
<ul>
	<li><a href="#response">Response</a></li>
	<li><a href="#sampleresponse">Sample Response</a></li>
	<li><a href="#responseheaders">Response Headers</a></li>
	<li><a href="#responsebody">Response Body</a></li>
	<li><a href="#errorcodes">Error Codes/Messages</a></li>
</ul>
</div><!-- #EndLibraryItem --><h2 id="httpmethod">HTTP Method</h2>
<!-- InstanceBeginEditable name="HTTP Method" -->
<p class="httpverb">POST</p>
<!-- InstanceEndEditable -->
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>

<h2 id="endpoint">URL</h2>
<!-- InstanceBeginEditable name="URL" -->
<pre class="soaapidoc_endpoint">https://<!-- #BeginLibraryItem "/Library/_endpointhost.lbi" -->{hostname}<!-- #EndLibraryItem -->/content/{path}</pre>
<!-- InstanceEndEditable -->
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<!-- InstanceBeginEditable name="Sample Request" -->
<h2 id="samplerequest">Sample Request</h2>
<p><strong>Request URL #1: Creating a new folder with empty table of contents file</strong></p>
<p id="id_samplerequest">The example below creates a new folder named <strong>assets</strong> with a file in it, named <strong>toc.apiversion20693.acmepaymentscorp.json</strong>, the <a href="../aaref/Ref_ManagingAPIDocumentationContent.htm">JSON table of contents file</a> for the new folder. The file contains a single pair of curly braces (encoded in <a href="#contentadd_req_body_01">Sample request body (request URL #1)</a> below).</p>
<pre>https://api.acmepaymentscorp.com/content/api/api18969.acmepaymentscorp/documents/assets/toc.apiversion20693.acmepaymentscorp.json?body=%7B%7D</pre>

<p id="contentadd_legalagreement"><strong>Request URL #2: Creating an API legal agreement</strong></p>
<p id="id_samplerequest2">The example below creates a new legal agreement for an API, with very simple text.</p>
<pre>https://api.acmepaymentscorp.com/content/api/0af593d7-6a4f-47ed-a058-4e1f77b26dab.acmepaymentscorp/legal/eula.txt?body=End+user+license+agreement</pre>

<p id="contentadd_apilegalagreement_publish"><strong>Request URL #3: Publishing an API legal agreement</strong></p>
<p id="id_samplerequest2b">The example below publishes a legal agreement for an API by updating the JSON TOC (table of contents) file in the folder. The legal agreement must already exist. The URL and message body update the TOC. For the body content, see <a href="#contentadd_req_body_03">Sample request body (request URL #3)</a> below.</p>
<pre>https://rcoaless.apiportal.com/content/api/1254cc85-f5a7-4dfc-aa98-c0a2ec258dae.rcoaless/
legal/toc.ff46365a-ebac-4fd3-9cbd-f1ac20262f80.rcoaless.json</pre>

<p id="contentadd_folder"><strong>Request URL #4: Adding a SimpleDev documentation folder</strong></p>
<p id="id_samplerequest3">The example below creates the <strong>documentation</strong> folder for a corresponding SimpleDev theme.</p>
<pre>http://acmepaymentscorp.com/content/documentation</pre>
<p><strong>Sample request headers</strong></p>
<pre>POST /content/api/api18969.acmepaymentscorp/documents/assets/toc.apiversion20693.acmepaymentscorp.json HTTP/1.1
Host: {hostname}
Accept: */*
Content-Type: application/x-www-form-urlencoded
<!-- #BeginLibraryItem "/Library/hdr_xcsrf.lbi" -->X-Csrf-Token_rcoaless":"TokenID%3D8ed70a13-8469-11e8-b37a-b155e4eabeb8%2CexpirationTime%3D153...<!-- #EndLibraryItem --></pre>
<p id="contentadd_req_body_01"><strong>Sample request body (request URL #1)</strong></p>
<pre>body=%7B%7D</pre>

<p id="contentadd_req_body_03"><strong>Sample request body (request URL #3)</strong></p>
<p>The request body updates the folder table of content to reflect the fact that the API legal agreement has been published, and is now ready to be activated. The request body must be URL-encoded.</p>
<pre>body=%7B%22toc%22%3A%5B%22api_legal_agreement_rcoaless.txt%22%2C%22api_legal_agreement_rcoaless2.txt%22%5D%2C%22sequence%22%3A%5B%22api_legal_agreement_rcoaless.txt%22%2C%22api_legal_agreement_rcoaless2.txt%22%2C%22toc.ff46365a-ebac-4fd3-9cbd-f1ac20262f80.rcoaless.json%22%5D%2C%22displayNames%22%3A%7B%7D%7D</pre>

<p><strong>Sample request&nbsp; body (request URL #4) in Postman</strong></p>
<p>The example below creates the help folder for a corresponding SimpleDev theme, in Postman. In this example, CSRF is turned off, so only the content-type header is required. The <strong>path</strong> path parameter and <strong>folder</strong> form parameters are used.</p>
<p><img src="../assets/content_add_postman_01.jpg" alt="Content Upload in Postman: URL, uploaded ZIP file, successful result" /></p>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>

<!-- InstanceEndEditable -->


<!-- InstanceBeginEditable name="Request Headers" -->
<h2 id="requestheaders">Request Headers</h2>
<p>For general information on request header values, refer to <a href="../aaref/Ref_HTTPHeaders.htm#ref_httprequestheaders">HTTP Request Headers</a>.</p>
<table class="tableparmsresponse">
	<thead>
		<tr>
			<th>Header</th>
			<th>Description</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td><a href="../aaref/Ref_HTTPHeaders.htm#acceptheader">Accept</a></td>
			<td>Not applicable.</td>
		</tr>
		<tr>
			<td><a href="../aaref/Ref_HTTPHeaders.htm#contenttype_request">Content-Type</a></td>
			<td><strong>application/x-www-form-urlencoded</strong></td>
		</tr>
		<tr>
			<td>Cookie</td>
			<td><!-- #BeginLibraryItem "/Library/hdrval_cookie.lbi" -->
<a href="../aaref/Ref_CookiesOnThePlatform.htm#cookie_atmoauthtoken">AtmoAuthToken_{fedmemberid}={cookie value, which usually starts with TokenID}</a>&#8212;The platform cookie. This is the&nbsp;<!-- #BeginLibraryItem "/Library/_PlatformName.lbi" -->Akana API Platform<!-- #EndLibraryItem -->&nbsp;authorization token, and must be sent with every API request that requires login. For more information and an example, see <a href="../aaref/Ref_CookiesOnThePlatform.htm#cookies_custom">Session cookies</a>.<!-- #EndLibraryItem --></td>
		</tr>
		<tr>
			<td><a href="../aaref/Ref_HTTPHeaders.htm#csrf_token_request">X-Csrf-Token_{fedmemberID}</a></td>
			<td><!-- #BeginLibraryItem "/Library/hrdval_csrf.lbi" -->The CSRF prevention header; may or may not be required, depending on platform settings. See <a href="../aaref/Ref_CSRFPreventionOnThePlatform.htm">CSRF Prevention on the Platform</a>. By default, the CSRF header is not required for GET operations and is required for all others, with a few exceptions relating to user login.<!-- #EndLibraryItem --></td>
		</tr>
	</tbody>
</table>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>
<!-- InstanceEndEditable -->


<!-- InstanceBeginEditable name="Request Parameters" -->
<h2 id="requestparameters">Request Parameters</h2>
<table class="tableparmsresponse">
	<thead>
		<tr>
			<th>Parameter</th>
			<th>Parm Type</th>
			<th>Data Type</th>
			<th>Required</th>
			<th>Description</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>body</td>
			<td>Form</td>
			<td>string</td>
			<td>Required</td>
			<td>The contents for the new file, URL-encoded. For example, for an empty JSON table of contents file in a new empty directory, this parameter would be <strong>body=%7B%7D</strong> which adds an empty set of curly braces for the empty JSON file.</td>
		</tr>
		<tr>
			<td>type</td>
			<td>Form</td>
			<td>string</td>
			<td>Optional</td>
			<td>The type of content. Use a valid media type as a value for this attribute; for example, <strong>html</strong> or <strong>json</strong>. If not specified, the operation uses the file extension to determine the media type.</td>
		</tr>
		<tr>
			<td>path</td>
			<td>Path</td>
			<td>string</td>
			<td>Required</td>
			<td>The path and filename for the location where you want to store the new content that you're adding. The path must be valid for your API resources. You choose the filename in the same way that you would when creating a file in your local file system.</td>
		</tr>
		<tr>
			<td>folder</td>
			<td>Form</td>
			<td>Boolean</td>
			<td>Optional</td>
			<td>Indicates whether the operation is adding a folder. Default: <strong>false</strong>.</td>
		</tr>
	</tbody>
</table>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>
<!-- InstanceEndEditable -->


<!-- InstanceBeginEditable name="Response Description" -->
<h2 id="response">Response</h2>
<p id="id_successstatement">If successful, this operation returns HTTP status code 200&nbsp;with no content.</p>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>
<!-- InstanceEndEditable -->


<!-- InstanceBeginEditable name="Sample Response" -->
<h2 id="sampleresponse">Sample Response</h2>
<p id="id_sampleresponse">The sample response below shows successful completion of this operation.</p>
<p><strong>Sample response headers</strong></p>
<pre>HTTP/1.1 200 OK
Content-Type: text/html
Date: Tue, 1 Jul 2014 20:00:00 GMT</pre>
<p><strong>Sample response body</strong></p>
<p>None. However, note that if you are running the API in a browser the HTTP code is returned in an HTML wrapper. For more information, see <a href="../aaref/Ref_FileUploadWithAjax.htm">File Upload with Ajax</a>.</p>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>

<!-- InstanceEndEditable -->


<!-- InstanceBeginEditable name="Response Headers" -->
<h2 id="responseheaders">Response Headers</h2>
<p>For general information on response header values, refer to <a href="../aaref/Ref_HTTPHeaders.htm#ref_httpresponseheaders">HTTP Response Headers</a>.</p>
<table class="tableparmsresponse">
	<thead>
		<tr>
			<th>Header</th>
			<th>Description</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td><a href="../aaref/Ref_HTTPHeaders.htm#contenttype_response">Content-Type</a></td>
			<td>text/html</td>
		</tr>
	</tbody>
</table>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>
<!-- InstanceEndEditable -->


<!-- InstanceBeginEditable name="Response Body" -->
<h2 id="responsebody">Response Body</h2>
<table class="tableparmsresponse">
	<thead>
		<tr>
			<th>Name</th>
			<th>Type</th>
			<th>Description</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>Response</td>
			<td>String</td>
			<td>The response code, wrapped in HTML.</td>
		</tr>
	</tbody>
</table>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>
<!-- InstanceEndEditable -->


<h2 id="errorcodes">Error Codes/Messages</h2>
<p>If the call is unsuccessful an error code/message is returned. One or more examples of possible errors for this operation are shown below.</p>
<!-- InstanceBeginEditable name="Error Messages" -->
<table class="tableparmsresponse">
	<thead>
		<tr>
			<th>Item</th>
			<th>Value</th>
		</tr>
		<tr>
			<td><a href="../aaref/Ref_HTTPStatusCodes.htm#http401">401</a></td>
			<td><!-- #BeginLibraryItem "/Library/401_CSRF.lbi" -->Unauthorized. For example, you would get this response if you didn't include the custom <a href="../Ref_Glossary_CommunityPlatform.htm#gl_xcsrf_token_fedmemberid">X-Csrf-Token_{fedmemberID}</a> header in the request, when it was required by the platform settings; or if you included an invalid or expired value for this header. You would also get this response for any operation that requires login (almost all) if the login cookie was missing.<!-- #EndLibraryItem --></td>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td><a href="../aaref/Ref_HTTPStatusCodes.htm#http500">500</a></td>
			<td>An error occurred processing the call.</td>
		</tr>
	</tbody>
</table>
<!-- InstanceEndEditable -->
<p><a href="../aaref/Ref_ErrorMessages.htm">More information about&nbsp;<!-- #BeginLibraryItem "/Library/_PlatformName.lbi" -->Akana API Platform<!-- #EndLibraryItem -->&nbsp;API error messages.</a></p>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<h2 id="relatedtopics">Related Topics</h2><!-- #BeginLibraryItem "/Library/_RelatedTopics.lbi" -->
<div class="relatedlinks">
<ul>
	<li><a href="../index.htm">Akana API Platform API: Overview</a></li>
	<li><a href="../Ref_Glossary_CommunityPlatform.htm">Glossary of Terms</a></li>
	<li><a href="../Ref_DocConventions.htm">Documentation Conventions</a></li>
</ul>
<ul>
	<li><a href="../Ref_AuthenticationAndSecurity.htm">Authentication and Security</a></li>
	<li><a href="../Ref_TroubleshootingAndSupport.htm">Troubleshooting and Support</a></li>
	<li><a href="../Ref_API_Reference.htm">Akana API Platform API: Reference Material</a></li>
	<li><a href="../aaex/Ref_Ex_Overview.htm">Examples: Overview</a></li>
</ul> 
</div><!-- #EndLibraryItem --></div>
