---
layout: apipage
title: Managing Multipart/Form-Data Uploads | Reference Material | Akana API Platform API
description: In some cases, operations uploading data to the platform use the Multipart-Form Data content type. This more complex media type allows upload of more than one type of data, separated by boundaries with a unique ID.
product: cm
category: ref
nav-title: Managing Multipart/Form-Data Uploads 
no-nav: api
sub-nav: true
sub-nav-class: aaref
no-catalog: true
---

<div class="apidocContent">
<h1 id="top">Managing Multipart/Form-Data Uploads</h1>
<p>In some cases, operations uploading data to the platform use the Multipart-Form Data content type. This more complex media type allows upload of more than one type of data, separated by boundaries with a unique ID.</p>
<p>This document includes some examples to show you how the headers might look on these operations, and/or how you might run the operation in a web client that supports file upload, such as Postman (<a href="https://www.getpostman.com/" title="Link to Postman website" target="new">https://www.getpostman.com/</a>).</p>
<p>It includes:</p>
<ul>
	<li><a href="#fileupload_operations">Operations that use the multipart/form-data Content-Type header for file upload</a></li>
	<li><a href="#fileupload_example_apps_savekeyinfo">Apps Service: Save Key Info</a></li>
	<li><a href="#fileupload_example_dropbox_addpicture">Dropbox Service: Add Picture</a></li>
	<li><a href="#fileupload_example_tenant_import">Tenant Administration Service: Import Package</a></li>
</ul>



<h2 id="fileupload_operations">Operations that use the multipart/form-data Content-Type header for file upload</h2>
<p>Some operations that use file upload are shown in the table below.</p>
<table class="tableparmsresponse">
	<thead>
		<tr>
			<th>Service</th>
			<th>Endpoint</th>
			<th>Description</th>
		</tr>
		<tr>
			<td>Apps</td>
			<td><span class="apidoc_code"><a href="../apps/m_apps_saveKeyInfo.htm">POST&#160;/api/apps/versions/{AppVersionID}/keyinfo</a></span></td>
			<td><p>Adds an app's public key or certificate (for runtime security).</p>
				<p>For an example, see <span class="apidoc_code"><a href="#fileupload_example_apps_savekeyinfo">Apps Service: Save Key Info</a></span> below.</p></td>
		</tr>
		<tr>
			<td>Boards</td>
			<td><span class="apidoc_code"><a href="../boards/m_boards_addArtifact.htm">POST&#160;/api/boards/items/{BoardItemID}/artifacts</a></span></td>
			<td>Adds an artifact, such as an uploaded image or file, to be used in the markdown for a Board item that is being edited (subsequent artifact, after the first).</td>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>Boards</td>
			<td><span class="apidoc_code"><a href="../boards/m_boards_addCommentArtifact.htm">POST&#160;/api/boards/items/comments/{CommentID}/artifacts</a></span></td>
			<td>Adds an artifact, such as an uploaded image or file, to be used in the markdown for a comment that is being edited (subsequent artifact, after the first).</td>
		</tr>
		<tr>
			<td>Boards</td>
			<td><span class="apidoc_code"><a href="../boards/m_boards_addFirstArtifact.htm">POST&#160;/api/boards/items/artifacts</a></span></td>
			<td> Adds the first artifact, such as an uploaded image or file, to be used in the markdown for a Board item that is being created.</td>
		</tr>
		<tr>
			<td>Boards</td>
			<td><span class="apidoc_code"><a href="../boards/m_boards_addFirstCommentArtifact.htm">POST&#160;/api/boards/items/comments/artifacts</a></span></td>
			<td>Adds an artifact, such as an uploaded image or file, to be used in the markdown for a comment that is being created (first artifact).</td>
		</tr>
		<tr>
			<td>Console Resources</td>
			<td><span class="apidoc_code"><a href="../consoleresource/m_consoleresource_upload.htm">POST&#160;/resources/{path:.*}</a></span></td>
			<td>Uploads a Community Manager developer portal resource, such as a stylesheet, to the /resources/ folder structure.</td>
		</tr>
		<tr>
			<td>Content</td>
			<td><span class="apidoc_code"><a href="../content/m_content_upload.htm">POST&#160;/content/{path}</a></span> (with specific content-type)</td>
			<td> Uploads a single file of existing content to the platform, or uploads a ZIP file of existing content and unzips it to the specified location.</td>
		</tr>
		<tr>
			<td>Dropbox</td>
			<td><span class="apidoc_code"><a href="../dropbox/m_dropbox_addPicture.htm">POST&#160;/api/dropbox/pictures</a></span></td>
			<td><p>
        Uploads an image, for a resource such as a user profile, to the Dropbox.</p>
				<p>For an example, see <span class="apidoc_code"><a href="#fileupload_example_dropbox_addpicture">Dropbox Service: Add Picture</a></span> below.</p></td>
		</tr>
		<tr>
			<td>Tenant Administration</td>
			<td><span class="apidoc_code"><a href="../tenantadmin/m_tenantadmin_importPackage.htm">POST&#160;/api/tenants/{FedmemberID}/packages</a></span></td>
			<td><p>Imports information that was previously exported from a platform version.</p>
				<p>For an example, see <span class="apidoc_code"><a href="#fileupload_example_tenant_import">Tenant Administration Service: Import Package</a></span> below.</p></td>
		</tr>
		<tr>
			<td>Workflow</td>
			<td><span class="apidoc_code"><a href="../workflow/m_workflow_addWorkloadDefinitionConfiguration.htm">POST&#160;/api/workflow/definitions</a></span></td>
			<td>Uploads a new workflow definition file to the Community Manager developer portal.</td>
		</tr>
	</tbody>
</table>



<h2 id="fileupload_example_apps_savekeyinfo">Apps Service: Save Key Info</h2>
<p>One example of an operation that uses this media type in the Content-Type request header, in the application service, uploads the app's certificate signing request (CSR) or security certificate: <span class="apidoc_code"><a href="../apps/m_apps_saveKeyInfo.htm">POST&#160;/api/apps/versions/{AppVersionID}/keyinfo</a></span>.</p>
<p>An example of the multipart-form data header for this operation is shown below.</p>
<pre>POST http://{hostname}/api/apps/versions/9vQtwz5cVjB4Lb0tW7YDoRGm.acmepaymentscorp/keyinfo?wrapInHTML=true HTTP/1.1
Host: {hostname}
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Cookie: AtmoAuthToken_acmepaymentscorp=TokenID%3Db1f87d98-a01e-11e4-a4c8-c152b79a9472%2Cclaimed_id%3Durn%3Aacmepaymentscorp%3Auser%3Aacmepaymentscorp%3A7222fcd1-fe4b-4b80-ad25-ec86981c7962%2CissueTime%3D1421701444022%2CexpirationTime%3D1421703244005%2CAttributesIncluded%3Dfalse%2CUserFDN%3D7222fcd1-fe4b-4b80-ad25-ec86981c7962%252Eacmepaymentscorp%2CUserName%3Dadminacmepaymentscorp%2Csig%3DNE567Vbh1ZdIE1Yx6HlnQF9zFwy2-xKqq-EquYiugI-k2_jzUR9rvV0xkyLDg8_CBL68dAqCfq1VXSghLjvFV2nreg4WLlR-mhBrOa209ZT7pgryPCTg-wlEL3e_zq-9lsoGxPPRSyCvRXqwzurhLLM_9GWokQoZUYsXrTP6Jx8; Csrf-Token_rcoaless=TokenID%3Db1f87d98-a01e-11e4-a4c8-c152b79a9472%2CexpirationTime%3D1421703244028%2CUserFDN%3D7222fcd1-fe4b-4b80-ad25-ec86981c7962%252Eacmepaymentscorp%2Csig%3DIid5J_crulvfYk5hHYGUt6fCbZvpp4nACDBA7JIqIMGbDZXaaItzW87rrPxPBazCQ-N8BacJcrEsib8bWmeGNZPqWgtXiFtRZcHBakb5zyFwLuSCE9RQK5lu8mg2iFfRH9Cm_ERMqGUW2q28agiMT36tJWZ6SN9F8-JG6tRnYjA
X-Csrf-Token_acmepaymentscorp":"TokenID%3D8ed70a13-8469-11e8-b37a-b155e4eabeb8%2CexpirationTime%3D153...
Content-Type: multipart/form-data; boundary=---------------------------138372179114855

-----------------------------138372179114855
Content-Disposition: form-data; name="Certificate"; filename="cert.csr"
Content-Type: application/txt

-----BEGIN CERTIFICATE REQUEST-----
MIIClzCCAX8CAQAwVDEPMA0GA1UEAxMGUmFtZXNoMQwwCgYDVQQLEwNQRE8xDDAKBgNVBAoTA1NP
QTELMAkGA1UEBxMCTEExCzAJBgNVBAgTAkNBMQswCQYDVQQGEwJVUzCCASIwDQYJKoZIhvcNAQEB
BQADggEPADCCAQoCggEBAIheb0Q2+PkfDwnxtdR+FLgMcNNRGuAy5pp8ku4VPpEt95//jJ+BRc52
zHc++FfSlDHOvn/N++1ZA+KM7PdpnJPYCu8ZDIkT2WVB+0CmuIRw9uToBdctLjpvBe1NLC/io7FD
UADSzXRu2/Iqv8Idj9UQSObrBiYPY5KIFtPA7M4b54M35YV6BHWg+eZ+vLEeSGpbsuA8TlbFKJF4
rrQApTPtcJkju7EMeBdkvRr7uKHSfSYCHQXPT8cYr6pVzq+dh38f960deS0QyHag3/d09fy7Ahmj
Re8ieWufYW6b9LsJut9hW9EmfM38sTcq2jFWvHUstl2qq4QcxG/X9SVJnPUCAwEAATANBgkqhkiG
9w0BAQUFAAOCAQEAcxkJWbv06sKseT5XSBrDCP2KiCdTv2BIgsZzGs0A56DmDj6Jbw3zfS/sgrO3
uN2nIp5zfiy9TzyAIN8Gs7DRKVBPptPARRXaSk6RhbrrjLg+erpFuNzHUmc9HAeXu6/MbnFDpLcr
lhRgJ495OhI+hEVGjCqcObSD2NqSTs4q8FtkVOegpEIHLJSgoZfBKAq8eo4DUTvr9oSpcHxg1ExA
xYAm6hfXZX9ucHM8X8U69H1LZm491mcp1svinseSlkh/q2Y1aHCyMYjWajHvbZbF5pw8zgFCespp
7a9BMDlEtvG2btQgd6sRv3rSWVEzXeMoJPFx/QKJGDyRc1luekrroA==
-----END CERTIFICATE REQUEST-----

-----------------------------138372179114855
Content-Disposition: form-data; name="Comments"

testing
-----------------------------138372179114855
Content-Disposition: form-data; name="X-Csrf-Token_acmepaymentscorp"

TokenID%3Db1f87d98-a01e-11e4-a4c8-c152b79a9472%2CexpirationTime%3D1421703244028%2CUserFDN%3D7222fcd1-fe4b-4b80-ad25-ec86981c7962%252Eacmepaymentscorp%2Csig%3DIid5J_crulvfYk5hHYGUt6fCbZvpp4nACDBA7JIqIMGbDZXaaItzW87rrPxPBazCQ-N8BacJcrEsib8bWmeGNZPqWgtXiFtRZcHBakb5zyFwLuSCE9RQK5lu8mg2iFfRH9Cm_ERMqGUW2q28agiMT36tJWZ6SN9F8-JG6tRnYjA
-----------------------------138372179114855--</pre>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<h2 id="fileupload_example_dropbox_addpicture">Dropbox Service: Add Picture</h2>
<p>The example below illustrates how you might use Postman to upload the avatar for a user.</p>
<p><strong>Note</strong>: In this example, the <a href="../Ref_Glossary_CommunityPlatform.htm#gl_csrf_header">CSRF header</a> setting  is not enabled for POST operations in the platform settings, so the <a href="../Ref_Glossary_CommunityPlatform.htm#gl_xcsrf_token_fedmemberid">X-Csrf-Token_{fedmemberID}</a>  header is not required. If you need to include this header for your own implementation, see <a href="Ref_CSRFPreventionOnThePlatform.htm">CSRF Prevention on the Platform</a>.</p>
<h4>Prerequisites</h4>
<ul>
	<li>The user whose picture is being added must log in. See <span class="apidoc_code"><a href="../login/m_login_login.htm">POST&#160;/api/login</a></span>. Uploading an avatar can only be done by an authorized user. For example, for an API, it must be an API Admin or Business Admin; for a platform user, it must be the user or a Site Admin.
		<p>In fact, you'll be able to upload the avatar, but you won't be able to assign it to the user profile, which is a later step; see <a href="#fileupload_example_dropbox_addpicture_nextsteps">Next Steps</a> below.</p></li>
	<li>You'll need an avatar image ready to upload.</li>
</ul>
<h4>Settings in Postman</h4>
<p>The example below uses the <span class="apidoc_code"><a href="../dropbox/m_dropbox_addPicture.htm">POST&#160;/api/dropbox/pictures</a></span> operation.</p>
<p><strong>Headers</strong></p>
<p><strong></strong> No settings are required in the Headers section; the values are set in the Body section.</p>
<p><img src="../assets/fileupload_dropbox_addPicture_01.jpg" alt="Add Picture in Postman: Headers" /></p>

<p><strong>Body</strong></p>
<p>The key name is <strong>Profile</strong> and the value is the avatar filename, as shown below. You must navigate to the file in Postman via the <strong>Choose Files</strong> button.</p>
<p><img src="../assets/fileupload_dropbox_addPicture_02.jpg" alt="Add Picture in Postman: Body" /></p>

<p><strong>Result</strong></p>
<p>The image is uploaded to the Dropbox, and the Dropbox ID is returned, as shown below.</p>
<p><img src="../assets/fileupload_dropbox_addPicture_03.jpg" alt="Add Picture in Postman: Result" /></p>
<h4 id="fileupload_example_dropbox_addpicture_nextsteps">Next Steps</h4>
<p>To finish setting up the avatar, two more operations are required:</p>
<ol>
	<li>Assigns the crop dimensions to the image: <span class="apidoc_code"><a href="../dropbox/m_dropbox_cropPicture.htm">PUT&#160;/api/dropbox/pictures/{PictureID}</a></span></li>
	<li>Modifies the user's profile with the new image: <span class="apidoc_code"><a href="../users/m_users_modifyUser.htm">PUT&#160;/api/users/{UserID}</a></span></li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="fileupload_example_tenant_import">Tenant Administration Service: Import Package</h2>
<p>The example below illustrates how you might use Postman to import business information, previously exported from a platform version using the Actions menu in the context of a business organization: in the API, the <span class="apidoc_code"><a href="../businesses/m_businesses_exportPackage.htm">GET&#160;/api/businesses/{BusinessID}/package</a></span> operation. To import the information you'll use the <span class="apidoc_code"><a href="../tenantadmin/m_tenantadmin_importPackage.htm">POST&#160;/api/tenants/{FedmemberID}/packages</a></span> operation.</p>
<p><strong>Note</strong>: In this example, the <a href="../Ref_Glossary_CommunityPlatform.htm#gl_csrf_header">CSRF header</a> setting  is not enabled for POST operations in the platform settings, so the <a href="../Ref_Glossary_CommunityPlatform.htm#gl_xcsrf_token_fedmemberid">X-Csrf-Token_{fedmemberID}</a>  header is not required. If you need to include this header for your own implementation, see <a href="Ref_CSRFPreventionOnThePlatform.htm">CSRF Prevention on the Platform</a>.</p>
<h4>Prerequisites</h4>
<ul>
	<li>The user running the operation must be logged in, and must have appropriate permissions; must be a Site Admin.</li>
	<li>You'll need the <strong>business-export.zip</strong> file, previously exported from a platform version. The example below doesn't use a migration properties file, but if you're using migration properties you'll need to have that file also, as covered in the documentation for this operation.</li>
</ul>
<h4>Settings in Postman</h4>
<p>The example below uses the <span class="apidoc_code"><a href="../tenantadmin/m_tenantadmin_importPackage.htm">POST&#160;/api/tenants/{FedmemberID}/packages</a></span> operation.</p>
<p><strong>Headers</strong></p>
<p> The Accept header is <strong>application/json</strong>, as shown below. The Content-Type header is not specified; instead, the values are set in the Body section.</p>
<p><img src="../assets/fileupload_tenantadmin_importPackage_01.jpg" alt="Import Package in Postman: Headers" /></p>

<p><strong>Body</strong></p>
<p>The key name is <strong>Package</strong> and the value is the <strong>business-export.zip</strong> file, as shown below. You must navigate to the file in Postman via the <strong>Choose Files</strong> button.</p>
<p><img src="../assets/fileupload_tenantadmin_importPackage_02.jpg" alt="Import Package in Postman: Body" /></p>

<p><strong>Result</strong></p>
<p>The business information is uploaded to the platform, and an HTTP Status 200 is returned with a <strong>null</strong> value, as shown below.</p>
<p><img src="../assets/fileupload_tenantadmin_importPackage_03.jpg" alt="Import Package in Postman: Result" /></p>
<p><a href="#top">Back to top</a></p>



<h2 id="relatedtopics">Related Topics</h2>
<div class="relatedlinks">
<ul>
	<li><a href="../index.htm">Akana API Platform API: Overview</a></li>
	<li><a href="../Ref_Glossary_CommunityPlatform.htm">Glossary of Terms</a></li>
	<li><a href="../Ref_DocConventions.htm">Documentation Conventions</a></li>
</ul>
<ul>
	<li><a href="../Ref_AuthenticationAndSecurity.htm">Authentication and Security</a></li>
	<li><a href="../Ref_TroubleshootingAndSupport.htm">Troubleshooting and Support</a></li>
	<li><a href="../Ref_API_Reference.htm">Akana API Platform API: Reference Material</a></li>
	<li><a href="../aaex/Ref_Ex_Overview.htm">Examples: Overview</a></li>
</ul>
</div>




</div>
