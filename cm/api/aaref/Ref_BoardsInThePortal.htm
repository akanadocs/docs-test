---
layout: apipage
title: Boards in the Community Manager developer portal | Reference Material | Akana API Platform API
description: In the Community Manager developer portal, a board is a forum where users with similar interests or responsibilities can share information, report issues, and participate in discussions. The portal includes specific types of boards, and other types of boards can be created or customized. Each board includes information of a certain type or types; for example, an app version board includes information relating to the app version and for associated APIs. Types of information are categorized as Board Item Types.
product: cm
category: ref
nav-title: Boards in the Community Manager developer portal 
no-nav: api
sub-nav: true
sub-nav-class: aaref
no-catalog: true
---

<div class="apidocContent">
<h1 id="top">Boards in the Community Manager developer portal</h1>
<p>In the Community Manager developer portal, a board is a forum where users with similar interests or responsibilities can share information, report issues, and participate in discussions. The portal includes specific types of boards, and other types of boards can be created or customized. Each board includes information of a certain type or types; for example, an app version board includes information relating to the app version and for associated APIs. Types of information are categorized as Board Item Types.</p>
<p>This topic provides an overview of the different types of boards, how they work, who can access them, and the types of information displayed on boards. It includes:</p>
<ul>
	<li><a href="#boards_generalguidelines">Boards: General Guidelines</a></li>
	<li><a href="#boards_boardtypes">Board Types</a></li>
	<li><a href="#boards_boarditemtypes">Board Item Types</a></li>
	<li><a href="#boards_comments">Comments</a></li>
	<li><a href="#boards_thedashboard">The User Dashboard</a></li>
	<li><a href="#boards_visibility_boarditemtypes">Visibility: Board Item Types</a></li>
	<li><a href="#boards_forummoderation">Forum Moderation</a></li>
	<li><a href="#boards_customworkflow">Custom Workflow</a></li>
	<li><a href="#boards_platformapiboardservice">Platform API: Board Service</a></li>
</ul>



<h2><a id="boards_generalguidelines"></a>Boards: General Guidelines</h2>
<p>Here is some general information relating to boards and how they work:</p>
<ul>
<li>Users must be logged in to create board entries.</li>
<li>Certain boards can support certain board item types. For example, the board for an API or an app can support discussions, tickets, alerts, and applicable group membership; the board for a group supports discussions and group membership, but not API contracts, tickets, or alerts.</li>
<li>In the portal, user-initiated board item types that are applicable to a specific board are shown at the top of the board. For example, on the board for a group, the only user-initiated item type available is Discussion. In the portal, the board for a group offers the logged-in group member the opportunity to create a discussion, with a visual cue at the top of the page.</li>
</ul>
<p><a href="#top">Back to top</a></p>



<h2><a id="boards_boardtypes"></a>Board Types</h2>
<p>The portal includes two main board types:</p>
<ul>
	<li>System boards</li>
	<li>User-defined boards</li>
</ul>
<h3>System boards</h3>
<p>System boards are a part of the standard user interface. These include:</p>
<ul>
	<li><strong>API board</strong>: When an API is created, a board is automatically created for the API. The API board includes board items for all versions of the API.</li>
	<li><strong>API version board</strong>: When an API is created, a board is automatically created for the first version. Each time you add a new version, a new board for that version is also created. The API version board includes only board items relating to that specific version. The board entries on the API version board are a subset of those on the API board.</li>
	<li><strong>App board</strong>: When an app is created, a board is automatically created for the app. The app board includes board items for all versions of the app.</li>
	<li><strong>App version board</strong>: When an app is created, a board is automatically created for the first version. Each time you add a new version, a new board for that version is also created. The app version board includes only board items relating to that specific version. The board entries on the app version board are a subset of those on the app board, in the same way that the API version board is a subset of the API board.</li>
	<li><strong>Group board</strong>: Each time a group is created, a board is created for the group so that group members can collaborate.</li>
</ul>

<h3>User-defined boards</h3>
<p>Additional boards can be defined as part of site customization.</p>
<p>A few examples of custom boards:</p>
<ul>
	<li><strong>New APIs</strong>: You could create a new board specifically for new APIs, so that all developers could visit the board to see what's new.</li>
	<li><strong>Developer issues:</strong> You could create a board for developer issues, and include a link in your customized site documentation so that a developer who experiences an issue can easily click through to browse through user-generated content for a solution.</li>
	<li><strong>Enhancement Suggestions:</strong> You could have a board for users to suggest enhancements to your product, and include a link to the enhancements board in your customized site documentation</li>
	<li><strong>Payment issues:</strong> If you have a board for payment issues, and offer a link in your customized site documentation so that a user with a payment concern can easily click through and enter comments.</li>
</ul>
<p>These are all ways to service your customers and encourage engagement, participation, and collaboration between users.</p>
<p>The Support Board is also considered to be a user-defined board. The Support Board is available to all users, but is not part of the standard Community Manager developer portal user interface. The URL is: <strong>{protocol}://{hostname}/#/board/supportboard.{tenantfedmemberid}/board</strong>.</p>
<p>To view details of the support board, use the <span class="apidoc_code"><a href="../boards/m_board_getBoard.htm">GET&#160;/api/boards/{BoardID}</a></span> operation.</p>
<p>The Dashboard is not a board, but is a cumulative summary of items from all the boards that a specific user is following, as well as user-specific items. For more information about the Dashboard, see <a href="#boards_thedashboard">The User Dashboard</a> below.</p>
<p><a href="#top">Back to top</a></p>



<h2><a id="boards_boarditemtypes"></a>Board Item Types</h2>
<p>Depending on the nature of a specific board, it might contain one or more of the following board item types, which fall into two categories:</p>
<ol>
	<li>Board item types that are added by users directly to the board:
		<ul>
			<li>Discussions</li>
			<li>Reviews</li>
			<li>Tickets</li>
		</ul>
	</li>
	<li>Board item types that are added as a result of performing some other action:
		<ul>
			<li>Alerts</li>
			<li>API access requests (Contract requests)</li>
			<li>Group membership invitations</li>
		</ul>
	</li>
</ol>
<p>The table below shows the board item types that are available on the standard boards in the Community Manager developer portal.</p>
<table class="tableparmsresponse">
	<thead>
		<tr>
			<th>This board type...</th>
			<th>Can have these board item types...</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>API board</td>
			<td><p>Any of the below that relate directly to the API, any version:</p>
				<ul class="apidoctable_ul">
					<li>Alerts</li>
					<li>API access requests (contract requests)</li>
					<li>Discussions</li>
					<li>Group Memberships (API Admins or groups associated with the API, only)</li>
					<li>Reviews (of any API version)</li>
					<li>Tickets</li>
				</ul></td>
		</tr>
		<tr>
			<td>API version board</td>
			<td><p>Any of the below that relate directly to the specific API version:</p>
				<ul class="apidoctable_ul">
					<li>Alerts</li>
					<li>API access requests (contract requests)</li>
					<li>Discussions</li>
					<li>Group Memberships (API Admins or groups associated with the API, only)</li>
					<li>Reviews (of the API version)</li>
					<li>Tickets</li>
				</ul></td>
		</tr>
		<tr>
			<td>App board</td>
			<td><p>Any of the below that relate directly to the app, any version:</p>
				<ul class="apidoctable_ul">
					<li>Alerts</li>
					<li>API access requests (contract requests)</li>
					<li>Discussions</li>
					<li>Group Memberships (app team only)</li>
					<li>Reviews (of an associated API version)</li>
					<li>Tickets</li>
				</ul></td>
		</tr>
		<tr>
			<td>App version board</td>
			<td><p>Any of the below that relate directly to the specific app version:</p>
				<ul class="apidoctable_ul">
					<li>Alerts</li>
					<li>API Access Request (Contract)</li>
					<li>Discussions</li>
					<li>Group Memberships (app team only)</li>
					<li>Reviews (of an associated API version)</li>
					<li>Tickets</li>
				</ul></td>
		</tr>
		<tr>
			<td>Group board</td>
			<td><p>Any of the below that relate directly to the specific group, or to an app or API the group is associated with:</p>
				<ul class="apidoctable_ul">
					<li>Discussions</li>
					<li>Group Memberships</li>
				</ul>
				<p><strong>Note</strong>: The group board does not allow tickets or alerts.</p></td>
		</tr>
		<tr>
			<td>Support board</td>
			<td>Discussions</td>
		</tr>
	</tbody>
</table>
<p>You can see from the above that the same board item might appear on multiple boards. Some scenarios:</p>
<p>An app developer initiates an API access request with a specific API version. The board item appears on the:</p>
<ul>
	<li>API board and applicable API version board</li>
	<li>App board and applicable app version board</li>
	<li>Dashboard for all API admins and app team members</li>
</ul>
<p>Two apps have a contract with a specific API. A developer from App A writes a ticket on the API, referencing his app. The ticket appears on the:</p>
<ul>
	<li>API and applicable API version board</li>
	<li>App board and applicable app version board for App A (visible to app developers but not general users)</li>
	<li>Dashboard for all API admins</li>
	<li>Dashboard for all developers associated with App A</li>
</ul>
<p>The certificate for App C is updated. The app does not have any API contracts. The board item appears on the:</p>
<ul>
	<li>App board and applicable app version board for App C</li>
	<li>Dashboard for all developers associated with App C </li>
</ul>
<p><a href="#top">Back to top</a></p>



<h2><a id="boards_comments"></a>Comments</h2>
<p>The following board item types support comments:</p>
<ul>
	<li>Discussion</li>
	<li>Review</li>
	<li>Ticket</li>
</ul>
<p>Once a Discussion, Review, or Ticket has been created&#8212;and approved, if approval is needed before publication&#8212;users who are logged in and have visibility of the resource can comment on the board item. Comments on a board item are governed by the Comments workflow, not the workflow for the board item type itself. So, for example, discussions can have a custom workflow and comments on discussions have a different workflow, which can also be customized.</p>
<p>Depending on the comments workflow, comments might need to be approved before publication. In this case, the comments workflow defines whether a specific user can see the comment or not. In general, users authorized to approve the comment for publication, such as a Site Admin, have visibility of the comment. The original author always has visibility of his/her own comments. Other site users generally do not have visibility of unpublished comments even if they have visibility of the resource that the parent discussion, review, or ticket is associated with. Once the comment is published, all users who have visibility of the resource have visibility of the comment.</p>
<p>Note that comments are not nested, they are a flat list. This means that users cannot comment on another comment, only on the original discussion, review, or ticket.</p>
<p><a href="#top">Back to top</a></p>



<h2><a id="boards_thedashboard"></a>The User Dashboard</h2>
<p>The platform also includes, for each user, a user <strong>Dashboard</strong>. The Dashboard is an aggregate of all the boards that the user is following. It includes such items as:</p>
<ul>
	<li>Board items relating to all apps the user is associated with and is following. When a user creates an app, the <a href="../Ref_Glossary_CommunityPlatform.htm#gl_followrequest"><strong>follow</strong></a> relationship is created by default, but the user can still <strong>unfollow</strong> the app, in which case items relating to that app would not appear on the user's Dashboard.</li>
	<li>Board items relating to all APIs the user is associated with and is following. Even if the user created the API, the <strong>follow</strong> relationship is not created by default.</li>
	<li>Invitations to join a platform group, and board items relating to all groups the user is a member of.</li>
	<li>Board items intended for that specific user (welcome message).</li>
</ul>
<p><a href="#top">Back to top</a></p>



<h2><a id="boards_visibility_overview"></a>Visibility: Boards</h2>
<p>There are several factors that affect the visibility of boards and board items. They are:</p>
<ul>
	<li>The visibility of the resource that the board relates to. If an app, API, or group is private, visibility is restricted to those who have visibility of the resource that the board is associated with. </li>
	<li>The visibility of the individual board item types. There are specific rules associated with board item types; for example, a ticket on an API might be visible to some users who have visibility of the API but not to others. For more information, and examples, see <a href="#boards_visibility_boarditemtypes">Visibility: Board Item Types</a> below.</li>
	<li>The workflow state of the board item entry. For example, published content has the same visibility as the resource it relates to; unpublished content has a more limited audience. For more information, and examples, see <a href="#boards_forummoderation">Forum Moderation</a> below.</li>
	<li>For user-defined boards: visibility is defined as part of defining the board. User-defined boards are commonly used for public boards.</li>
</ul>
<p class="apidoc_note"><strong>Note</strong>: Although the board might be visible, some board items might not be visible to different users, depending on the board item types, the user's role, and the workflow state of the board item type. For more information, see below.</p>
<p><a href="#top">Back to top</a></p>



<h2><a id="boards_visibility_boarditemtypes"></a>Visibility: Board Item Types</h2>
<p>Content for user-generated board item types (discussions, reviews, and tickets), as well as for comments on any of these, is governed first by the visibility rules for the resource. For example, a discussion relating to a private app is visible only to users who have visibility of the app.</p>
<p>In addition, there are visibility rules that might further limit visibility of certain board item types. For example:</p>
<ul>
	<li>Ticket visibility is governed by a platform setting, controlled by the Site Admin (<strong>Administration</strong> &gt; <strong>Settings</strong> &gt; <strong>Tickets</strong> &gt; <strong>Visibility</strong>). If ticket visibility is set to Private, tickets are visible to the submitter, API Admins, and app team members only if the ticket was submitted in the context of a specific app. Users who are not app team members cannot see the ticket, even if the app is public.</li>
	<li>If an app certificate is modified, there is a board item that only app team members can see, even if the app is public. General users do not see this board item.</li>
	<li>An alert is written on an API. The alert entry is published on the board for the API and the specific API version, and on the board for all apps that are connected to the API. However, only the API admins and app team members see this alert, even if both the app and the API are public. Visibility is limited to team members.</li>
</ul>
<p>Finally, if an approval process is in place, visibility of board item types is further limited by the publication state. If a new review or comment is pending approval, the pending content is only visible to the author and to authorized approvers. For more information, see Forum Moderation below.</p>
<p><a href="#top">Back to top</a></p>



<h2><a id="boards_forummoderation"></a>Forum Moderation</h2>
<p>Depending on how your installation is set up, board items might be moderated. In some cases, an item such as a discussion, review, or comment might need to be approved by an Administrator before itâs published. In this scenario, visibility of the unpublished user-generated content is governed as follows:</p>
<ul>
<li>Items that are pending approval are visible only to the author and to members of the Admin team who are authorized to approve (or reject) the content.</li>
<li>Items that are approved are visible to all users who have visibility of the resource.</li>
</ul>
<p>As an illustration, letâs take an example of a moderated discussion relating to a private API, API XYZ. A developer, whose app has a contract with the API, starts the discussion. Initially, this discussion is in an Unpublished state. At this point, it is only visible to API Admins who are authorized to approve it. Once it is approved by an API Admin, all users who have visibility of the API now see the new discussion:</p>
<ul>
<li>API admins</li>
<li>Members of independent groups that are connected to the API</li>
<li>Members of the app team for any apps that are connected to the API</li>
<li>Business admins</li>
</ul>
<p>If a discussion is created by the API admin, it's published automatically without the need for approval.</p>
<p>Let's say a specific user, John Thomas, comments on the discussion. His comment is pending approval. John can see his own comment immediately. Users with the authority to approve the comment also see it; in this case, API admins and business admins. Once a business admin approves the comment, it is visible to all users who have visibility of the API.</p>
<p><strong>Note</strong>: The above is a description of the default workflow for the portal. If a custom workflow is in effect, the behavior might be different.</p>
<p><a href="#top">Back to top</a></p>



<h2><a id="boards_customworkflow"></a>Custom Workflow</h2>
<p>Many board item types can be governed by a custom workflow definition. The information in this document refers to the default behavior; custom workflow might define different states for the board item types and different transitions and behaviors.</p>
<p>For more information about custom workflows, refer to <a href="../../workflow/01_overview_cm_wf.htm" target="_blank">Custom Workflows in the Community Manager developer portal</a>.</p>
<p><a href="#top">Back to top</a></p>



<h2><a id="boards_platformapiboardservice"></a>Platform API: Board Service</h2>
<p>For general information about the Boards service, a description of each operation, and links to operations, see <a href="../index_boards.htm">Boards Service: Overview</a>.</p>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>



<h2 id="relatedtopics">Related Topics</h2>
<div class="relatedlinks">
<ul>
	<li><a href="../index.htm">Akana API Platform API: Overview</a></li>
	<li><a href="../Ref_Glossary_CommunityPlatform.htm">Glossary of Terms</a></li>
	<li><a href="../Ref_DocConventions.htm">Documentation Conventions</a></li>
</ul>
<ul>
	<li><a href="../Ref_AuthenticationAndSecurity.htm">Authentication and Security</a></li>
	<li><a href="../Ref_TroubleshootingAndSupport.htm">Troubleshooting and Support</a></li>
	<li><a href="../Ref_API_Reference.htm">Akana API Platform API: Reference Material</a></li>
	<li><a href="../aaex/Ref_Ex_Overview.htm">Examples: Overview</a></li>
</ul>
</div>




</div>
