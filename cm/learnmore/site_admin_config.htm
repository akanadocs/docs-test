---
layout: page
title: Configuration Tasks | Site Administration | Akana API Platform Help
description: Configure custom color schemes, define a platform login, upload documentation files and style sheets, and manage the platform legal agreement.
product: cm
category: learn
sub-nav-class: Site Administration
weight: 3224
type: page
nav-title: Configuration Tasks
---
<h2 id="top">Configuration</h2>

<p>Set up custom color schemes, define a platform login, upload documentation files and style sheets, and manage the platform legal agreement.</p>
<h5 class="stamp">API Platform Version: 8.1</h5>


<div class = "divider1"></div>

<h3 style="color: gray;">Table of Contents</h3>


<h5 style="color: gray;"><a href="#h_custom_styles">Custom Styles:</a></h5>


<ol class="table_of_contents">
  <li><a href="#i_want_to_customize_platform_styles">I want to customize platform styles. What do I do?</a></li>
  <li><a href="#which_css_should_i_update">Which platform CSS file should I update?</a></li>
  <li><a href="#how_do_i_customize_how_markdown_looks_in_the_developer_portal">How do I customize how Markdown looks in the developer portal?</a></li>
  <li><a href="#what_color_scheme_changes_are_supported_on_my_platform_deployment">What color scheme changes are supported on my platform deployment?</a></li>
  <li><a href="#what_style_sheets_do_i_use_to_update_the_color_scheme_on_my_platform_deployment">What style sheets do I use to update the color scheme of my platform deployment?</a></li>
  <li><a href="#how_do_i_download_platform_css">How do I download the platform CSS?</a></li>
  <li><a href="#upload_modified_custom_less">How do I upload the custom.less file after I've updated it?</a></li>
  <li><a href="#after_i_update_my_customless_file_how_do_i_apply_the_changes_to_my_platform_deployment">After I update my custom.less file, how do I apply the changes to my platform deployment?</a></li>
  <li><a href="#how_do_i_rebuild_my_color_scheme_styles_after_i_have_uploaded_the_customless_file">How do I rebuild my color scheme styles after I have uploaded the custom.less file?</a></li>
  <li><a href="#what_is_a_sprite">What is a sprite?</a></li>
  <li><a href="#how_do_i_modify_sprite_colors">How do I modify sprite colors?</a></li>
  <li><a href="#what_is_lessjs_and_what_are_the_benefits">What is less.js and what are the benefits?</a></li>
  <li><a href="#how_do_i_make_my_style_and_sprite_file_changes_visible_on_my_platform_deployment_after_i_regenerate_styles">How do I make my style and sprite file changes visible on my platform deployment after I regenerate styles?</a></li>
  <li><a href="#how_do_i_configure_a_custom_footer">How do I configure a custom footer?</a></li>
  <li><a href="#how_do_i_configure_a_custom_logo">How do I configure a custom logo?</a></li>
  <li><a href="#what_is_a_platform_theme">What is a platform theme?</a></li>
  <li><a href="#determine_theme_name">How can I determine the theme name?</a></li>
  <li><a href="#customization_hermosa_files">Where do I store customization files for Hermosa theme?</a></li>
</ol>


<h5 style="color: gray;"><a href="#h_logins">Logins:</a></h5>


<ol class="table_of_contents">
  <li><a href="#how_does_login_configuration_work">How does login configuration work?</a></li>
  <li><a href="#does_the_platform_provide_a_default_login">Does the platform provide a default login?</a></li>
  <li><a href="#how_do_i_enable_and_customize_a_login_domain">How do I enable and customize a platform login domain?</a></li>
  <li><a href="#what_is_a_target_host">What is a Target Host?</a></li>
  <li><a href="#what_login_page_integration_modes_are_supported">What login page integration modes are supported?</a></li>
  <li><a href="#how_do_i_disable_a_platform_login">How do I disable a platform login?</a></li>
  <li><a href="#how_do_i_configure_a_session_timeout_value">How do I configure a session timeout value?</a></li>
  <li><a href="#how_do_i_disable_the_option_for_users_to_change_email_address">How do I disable the option for users to change the email address on the account?</a></li>
</ol>


<h5 style="color: gray;"><a href="#h_resources">Resources:</a></h5>


<ol class="table_of_contents">
  <li><a href="#what_is_a_resource">What is a Resource?</a></li>
  <li><a href="#what_is_the_difference_between_resources_and_content">What's the difference between Resources and Content?</a></li>
  <li><a href="#what_is_the_folder_structure_for_content_default">What is the folder structure for content in Default Theme?</a></li>
  <li><a href="#what_is_the_folder_structure_for_content_sd">What is the folder structure for content in Simple Developer Theme?</a></li>
  <li><a href="#how_do_i_upload_content_sd">How do I upload content for Simple Developer theme?</a></li>
  <li><a href="#how_do_i_download_files">How do I download content or resource files?</a></li>
  <li><a href="#how_do_i_upload_style_sheets_to_the_developer_portal">How do I upload style sheets to the platform?</a></li>
  <li><a href="#how_do_i_upload_sprite_files_to_the_developer_portal">How do I upload sprite files to the developer portal?</a></li>
  <li><a href="#how_do_i_upload_content_to_the_developer_portal">How do I upload content to the developer portal?</a></li>
  <li><a href="#how_do_i_upload_resources_to_the_developer_portal">How do I upload resources to the developer portal?</a></li>
  <li><a href="#how_do_i_add_a_platform_signup_legal_agreement">How do I add a platform signup legal agreement?</a></li>
  <li><a href="#how_do_i_change_the_platform_signup_legal_agreement">How do I change the platform signup legal agreement?</a></li>
  <li><a href="#how_do_i_modify_the_landing_page_for_the_developer_portal">How do I modify the landing page for the developer portal?</a></li>
  <li><a href="#how_do_i_modify_the_favicon_for_the_developer_portal">How do I modify the favicon for the developer portal?</a></li>
  <li><a href="#how_do_i_modify_the_default_icon_for_apps_or_apis">How do I modify the default icon for apps, APIs, or other resources?</a></li>
  <li><a href="#css_upload">How do I upload the API and Online Help content style sheet to the developer portal?</a></li>
  <li><a href="#how_do_i_develop_content_for_sd_theme">How do I develop content for Simple Developer theme?</a></li>
  <li><a href="#can_test_client_use_cors_to_send_requests_directly">Can Test Client use CORS to send the requests to the API endpoint directly without using the Forward Proxy?</a></li>

  <li><a href="#where_download_metadata_json">What are the metadata.json and widget_factory.json files, and how do I use them for customization?</a></li>
  <li><a href="#how_do_i_find_the_resource_version_key">What is the Resource Version Key and how do I find it?</a></li>

</ol>


<h5 style="color: gray;"><a href="#h_configuration">Configuration:</a></h5>


<ol class="table_of_contents">
  <li><a href="#how_do_i_configure_separate_notification_addresses_by_theme">How do I configure separate notification addresses for different platform themes?</a></li>
  <li><a href="#what_is_the_csrf_prevention_feature">What is the CSRF prevention feature?</a></li>
  <li><a href="#how_do_i_implement_csrf_prevention_feature">How do I implement the CSRF prevention feature?</a></li>
  <li><a href="#csrf_prevention_custom_client">I want CSRF prevention, but we already have a custom client. What do I do?</a></li>
  <li><a href="#how_do_i_configure_security_challenge_questions">How do I configure security challenge questions?</a></li>
  <li><a href="#how_do_i_enable_markdown_for_board_items">How do I enable Markdown for board items?</a></li>
  <li><a href="#how_do_i_monitor_app_security_changes">I need to monitor app security changes. What do I do?</a></li>
</ol>



<h5 style="color: gray;"><a href="#h_page_customization">Site Page Customization:</a></h5>


<ol class="table_of_contents">
  <li><a href="#custom_left_menubar">How do I customize the left menu bar?</a></li>
  <li><a href="#diff_page_after_login">How do I customize so that users are taken to a different page after login?</a></li>
  <li><a href="#custom_support_page">How do I customize the Support page?</a></li>
  <li><a href="#custom_fonts_overview">How do I customize fonts in the developer portal?</a></li>
  <li><a href="#custom_fonts_external">How do I customize fonts by referencing an external font?</a></li>
  <li><a href="#custom_fonts_uploaded">How do I customize fonts by uploading font files?</a></li>
<!--  <li><a href="#hermosa_custom_labels_text">How do I customize labels and text for Hermosa theme?</a></li>-->
</ol>



<h5 style="color: gray;"><a href="#h_cookies">Cookies:</a></h5>


<ol class="table_of_contents">
  <li><a href="#does_the_developer_portal_use_cookies_siteadmin">Does the developer portal use cookies?</a></li>
  <li><a href="#will_the_portal_work_properly_if_cookies_are_disabled">Will the developer portal work properly if cookies are disabled?</a></li>
  <li><a href="#what_information_is_in_the_cookies">What information is contained in the cookies and what is it used for?</a></li>
  <li><a href="#does_the_developer_portal_store_peristent_cookies_in_the_browser">Does the developer portal store persistent cookies in the browser?</a></li>
  <li><a href="#does_the_developer_portal_send_cookies_to_other_sites">Does the developer portal send cookies to other sites?</a></li>
  <li><a href="#does_the_developer_portal_use_any_other_cookies">Does the developer portal use any cookies other than the session and CSRF cookies?</a></li>
</ol>




<div class = "divider1"></div>
<h3><a name="h_custom_styles"></a>Custom Styles:</h3>




<a name="i_want_to_customize_platform_styles"></a><h3>I want to customize platform styles. What do I do?</h3>
<p>The platform comes with a default look and feel, including styles, colors, navigation, logo, and so on. These platform default styles are stored in a stylesheet which is dynamically generated from a file named <strong>custom.less</strong>.</p>
<p>If you want to customize platform styles, follow the basic steps below. If you want to start from the platform default styles and are modifying for the first time, follow the steps in <a href="#to_customize_platform_styles_for_the_first_time">To customize platform styles for the first time</a>. If you have already modified your styles and want to make additional changes, use <a href="#to_customize_platform_styles_additional_changes">To make additional changes to customized styles</a>.</p>
<p>For more information on what you can change, see <a href="#what_color_scheme_changes_are_supported_on_my_platform_deployment">What color scheme changes are supported on my platform deployment?</a></p>
<p class="apidoc_note"><strong>Note</strong>: When you upload new styles to the platform, you'll need to clear your browser cache and refresh the page to see the changes.</p>
<!--<p><strong>Note</strong>: <strong>custom.less</strong> is a subset of a larger site file, <strong>parameters.less</strong>, which includes additional variables you could customize; for example, the background color on tooltips is controlled by the <strong>tooltip-bg-color parameter</strong> in <strong>parameters.less</strong>, and this property is not present in <strong>custom.less</strong>. If you want to make customizations beyond the scope of <strong>custom.less</strong>, consult Technical Support for assistance in modifying the <strong>parameters.less</strong> file.</p>
-->
<h5><a name="to_customize_platform_styles_for_the_first_time"></a>To customize platform styles:</h5>
<ol>
  <li>Log in as the Site Admin.</li>
  <li>Go to <em>Administration &gt; Config &gt; Custom Styles</em>.</li>
  <li>If you want to work with the template for the Simple Developer Theme (Simple Dev) rather than the current user interface (Default Theme), choose it from the drop-down list at the top (theme names might be different depending on your implementation). Styles for all themes are managed in the same place. For more information, see <a href="#what_is_a_platform_theme">What is a platform theme?</a> and <a href="basics_glossary.htm#gl_theme_simpledev">Simple Developer theme</a>. </li>
  <li>Click <strong>Download</strong> to download the customized style sheet, <strong>custom.less</strong>.</li>
  <li>Choose a save location to save the file.</li>
  <li>Modify the styles as needed.</li>
  <li>Upload the revised file to the platform. For instructions, see <a href="#upload_modified_custom_less">How do I upload the custom.less file after I've updated it?</a></li>
  <li>Clear your browser cache and refresh the page to see the changes.</li>
</ol>
<p><strong>Note</strong>: The platform uses other stylesheets, such as <strong>style.css</strong> or <strong>supplement.css</strong>. Do not modify these stylesheets. All customizations should be stored in <strong>custom.less</strong> as explained above. For more information, see <a href="#which_css_should_i_update">Which platform CSS file should I update?</a> below.</p>
<p><a href="#top">Back to top</a></p>



<a name="which_css_should_i_update"></a><h3>Which platform CSS file should I update?</h3>
<p>All customizations should be stored inr <strong>custom.less</strong> as explained in <a href="#i_want_to_customize_platform_styles">I want to customize platform styles. What do I do?</a> above.</p>
<p>The platform uses other stylesheets, such as <strong>style.css</strong> or <strong>supplement.css</strong>. Do not modify these stylesheets. Some of the benefits of storing your cusotmizations in <strong>custom.less</strong>:</p>
<ul>
  <li>All customized styles are in one place.</li>
  <li>You can always revert back to the platform default if needed.</li>
  <li>Your custom styles will not be overridden by the platform's CSS hierarchy</li>
  <li>Your custom styles will not be overridden by platform updates</li>
</ul>
<p><a href="#top">Back to top</a></p>




<a name="how_do_i_customize_how_markdown_looks_in_the_developer_portal"></a><h3>How do I customize how Markdown looks in the developer portal?</h3>
<p>The developer portal includes a set of default style definitions for the styles supported for Markdown. These styles are defined in the platform's <strong>custom.less</strong> style file.</p>
<p>To customize the Markdown styles, download the <strong>custom.less</strong> file (Administration &gt; Config &gt; Custom Styles) and search for <strong>Markdown</strong>. You'll see the section that defines the Markdown styles. For example:</p>
<pre>// @markdown-preview-font-size-h1: 36px;</pre>
<p>The above defines the style that's rendered for the h1 Markdown:</p>
<pre># This is a Heading 1 in Markdown</pre>
<p>Modify the styles you want to change, remove the comment marks on any lines that you've changed (// at the beginning of the line), and then upload the revised <strong>custom.less</strong> file. The platform rebuilds the css based on the uploaded file, and the new styles are effective for both new and revised user-generated board entries that use Markdown.</p>
<p>For example, to change the default color for headings to red, find this line:</p>
<pre>// @markdown-preview-headings-color: inherit;</pre>
<p>and change it, as per the example below (you can also use any color values supported by standard CSS):</p>
<pre>@markdown-preview-headings-color: red;</pre>
<p>Then upload the modified file. See <a href="#upload_modified_custom_less">How do I upload the custom.less file after I've updated it?</a></p>
<p>To see the changes immediately, you'll need to clear cache. Active users do not see the changes immediately since the styles are cached for up to 30 minutes. After that point, everyone will see the revised styles.</p>
<p>For more information on modifying custom styles, see <a href="#i_want_to_customize_platform_styles">I want to customize platform styles. What do I do?</a></p>
<p>For more information on the use of Markdown for board items in the developer portal, see <a href="basics_boards.htm#h_markdown">Using Markdown</a>.</p>
<p><a href="#top">Back to top</a></p>



<a name="what_color_scheme_changes_are_supported_on_my_platform_deployment"></a><h3>What color scheme changes are supported on my platform deployment?</h3>
<p>You can change the color scheme for platform elements such as:</p>
<ul>
  <li>Site background color</li>
  <li>Left and top navigation</li>
  <li>Text content area</li>
  <li>Pop-up dialog elements</li>
  <li>Horizontal rules</li>
  <li>Text color of input fields</li>
  <li>Default link colors</li>
</ul>
<p>Color scheme updates are performed by updating the <strong>custom.less</strong> style sheet. For an overview of the process, and instructions, see <a href="#i_want_to_customize_platform_styles">I want to customize platform styles. What do I do?</a></p>
<p><a href="#top">Back to top</a></p>



<a name="what_style_sheets_do_i_use_to_update_the_color_scheme_on_my_platform_deployment"></a><h3>What style sheets do I use to update the color scheme of my platform deployment?</h3>
<p>The platform offers two options for downloading the platform style sheet, which is the starting point for customization of platform styles:</p>
<ul>
  <li><strong>Download the default style sheet template, custom_template.less</strong>. If you make customizations, and later want to revert, you can do so by downloading this file (<strong>Administration</strong> &gt; <strong>Config</strong> &gt; <strong>Custom Styles</strong> &gt;<strong>Download Template</strong>), renaming it to <strong>custom.less</strong>, and uploading it (<strong>Administration</strong> &gt; <strong>Config</strong> &gt; <strong>Custom Styles</strong> &gt;<strong> Upload</strong>).</li>
  <li><strong>Download the custom style file currently in use</strong>. If you haven't yet uploaded customizations, <strong>custom.less</strong> is the same as custom_template.less. If you've already uploaded customizations and are happy with them, but want to make further changes, you can download <strong>custom.less</strong> and build on that (but save a backup copy). In the UI: <strong>Administration</strong> &gt; <strong>Config</strong> &gt; <strong>Custom Styles</strong> &gt; <strong>Download</strong>.</li>
</ul>

<p>Some general points regarding the platform style sheet:</p>
<ul>
  <li>All of the variables and sprite file references in the custom_template.less file are configured with defaults that represent the look and feel of a default platform installation.</li>
  <li>All <strong>custom.less</strong> style sheet variables are commented out. For site elements you want to customize, remove the comment from the element and then customize the variable.</li>
  <li>Color management for icons is accomplished by modifying the Adobe Illustrator file that includes the sprite icons. <a href="assets/default_theme_sprites.zip">Download a ZIP containing the Adobe Illustrator files.</a></li>
</ul>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_download_platform_css"></a><h3>How do I download the platform CSS?</h3>
<p>The platform CSS rules are documented in a file called <strong>custom.less</strong>. To customize platform css, first download the <strong>custom.less</strong> file, then customize the file, and then upload the revised file.</p>
<p>When you upload the <strong>custom.less</strong> file the platform automatically rebuilds the styles and uses the new rules.</p>
<h5><a name="proc_download_custom_less"></a>To download the latest version of the style customization file for the platform (custom.less file)</h5>
<ol>
  <li>Log in as the Site Admin.</li>
  <li>Go to <em>Administration &gt; Config &gt; Custom Styles</em>.</li>
  <li>From the <strong>Theme</strong> drop-down list, choose the theme. For more information, see <a href="#what_is_a_platform_theme">What is a platform theme?</a> and <a href="basics_navigation.htm#platform_ui_overview">Platform user interface "theme"</a>.</li>
  <li>Click <strong>Download</strong> to download the customized style sheet, <strong>custom.less</strong>.</li>
  <li>Choose a save location to save the file.</li>
</ol>
<p class="apidoc_note"><strong>Note</strong>: It's a good idea to keep a backup copy of the original file and any customization versions that you implement, as a manual version control. If you're not happy with the results when you upload the new customizations, you can revert to the previous version before troubleshooting.</p>
<p><a href="#top">Back to top</a></p>


<a name="upload_modified_custom_less"></a><h3>How do I upload the custom.less file after I've updated it?</h3>
<p>The <em>Administration &gt; Config &gt; Custom Styles</em> section includes an <strong>Upload</strong> button that allows you to upload the <strong>custom.less</strong> file after you've customized it.</p>
<a name="proc_upload_modified_custom_less"></a><h5>To upload the modified custom.less file:</h5>
<ol>
  
  <li>Log in as the Site Admin.</li>
  <li>Go to <strong>Administration</strong><em> &gt; </em><strong>Config</strong><em> &gt; </em><strong>Custom Styles</strong>.</li>
  <li>From the <strong>Theme</strong> drop-down list, choose the theme.</li>
  <li>In the bottom right section, click <strong>Upload</strong>. </li>
  <li>Navigate to the location of the modified file and upload it. When you upload the file, the platform styles are automatically rebuilt using the new file. When regeneration is complete a confirmation message is displayed.The <strong>custom.less</strong> file is stored in the \resources\less directory.</li>
  <li>Clear the browser cache and refresh the page to review the changes.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="after_i_update_my_customless_file_how_do_i_apply_the_changes_to_my_platform_deployment"></a><h3>After I update my custom.less file, how do I apply the changes to my platform deployment?</h3>
<p>After you update your <strong>custom.less</strong> file, you can apply the changes to the platform deployment by uploading the modified file. When you upload the file, the site automatically rebuilds the site style sheets and the changes are reflected on the site.
 See <a href="#upload_modified_custom_less">How do I upload the custom.less file after I've updated it?</a> for more information.</p>
<p>If the style sheet and sprite file changes are not visible immediately after the style sheet rebuild process is complete, clear the browser cache and then refresh.</p>
<p><em>Note: If you want to go back to the default styles at any point, you can always go back to the <strong>custom_template.less</strong> file. See <a href="#to_customize_platform_styles_for_the_first_time">To customize platform styles for the first time</a>.</em></p>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_rebuild_my_color_scheme_styles_after_i_have_uploaded_the_customless_file"></a><h3>How do I rebuild my color scheme styles after I have uploaded the custom.less file?</h3>
<p>The <em>Administration > Config > Custom Styles</em> section includes a <strong>Rebuild Styles</strong> option that allows you to Initiate a rebuild of the platform style sheets. This option is primarily used when a platform update is installed that includes style sheet changes. This option is primarily used when a site update is performed where style sheet changes were made.</p>
<p>For example, if an update was applied to the site and the update included new additions to the UI that required style sheet changes; this would mean that the style sheets were not active immediately after the update was completed. In this case, the <strong>Rebuild Styles</strong> option would complete update process by regenerating the style sheets.</p>
<h5>To rebuild site style sheets:</h5>
<ol>
  
  <li>Log in as the Site Admin.</li>
  <li>Go to <em>Administration &gt; Config &gt; Custom Styles</em>.</li>
  <li>If you want to work with the template for the Simple Developer Theme (Simple Dev) rather than the current user interface (Default Theme), choose it from the drop-down list at the top (theme names might be different depending on your implementation). Styles for all themes are managed in the same place. For more information, see <a href="#what_is_a_platform_theme">What is a platform theme?</a> and <a href="basics_glossary.htm#gl_theme_simpledev">Simple Developer theme</a>. </li>
  <li>In the <strong>Styles Customization</strong> section, click <strong>Rebuild Styles</strong>. The rebuild process takes approximately one minute. After style sheets have been rebuilt, the &quot;Platform style sheets have been successfully regenerated using <strong>custom.less</strong>&quot; confirmation message displays.</li>
  <li>After the style sheets are regenerated, clear the browser cache and refresh the screen to view the changes.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="what_is_a_sprite"></a><h3>What is a sprite?</h3>
<p>A sprite is a two-dimensional image used by the developer portal CSS to control the colors in platform default icons and images.</p>
<p>The platform UI includes a series of standard icons that are used for standard components of the UI such as quick filters, help, menu navigation names, and window titles. Although the icons and images cannot themselves be changed, the colors can be changed, as part of UI customization, by changing the colors of the sprite files.</p>
<p>When developing your UI customization design, in addition to deciding what colors you want to use on your site, you must also decide what icons and "contrasts" you want, before moving forward with the customization tasks. This task should be part of your site UI design process.</p>
<p>The platform provides a set of sprite files for Default Theme. You can view how the sprite files are specified, in the <strong>custom_template.less</strong> file. Each one is commented with " // path to the image file" and lists a URL that represents the path of the file.</p>
<p><em>Sprite files should always be uploaded <strong>after</strong> you have uploaded and regenerated your style sheets. </em>For instructions, see <a href="#how_do_i_upload_sprite_files_to_the_developer_portal">How do I upload sprite files to the developer portal?</a></p>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_modify_sprite_colors"></a><h3>How do I modify sprite colors?</h3>
<p>During the UI design phase of your platform deployment your brand standards and colors are selected. The site includes a series of icons. The icon design is fixed and part of the site design, but the icon color and contrast can be changed by modifying the sprite files used by the platform icons. The general process for modifying icon colors involves the following steps:</p>
<ul>
  <li>To change icon color and contrast, you'll need to update one or more of a series of sprite files that define the color contrast for platform icons, by modifying the  applicable Adobe Illustrator file provided by Akana. <a href="assets/default_theme_sprites.zip">Download a ZIP containing the Adobe Illustrator files.</a></li>
  <li>The process involves selecting the Artboard that includes the icon you want to modify, changing the icon color, and saving the Artboard to a PNG file. The PNG file must then be uploaded to the /resources/theme/default/styles/images folder via <em>Administration &gt; Config &gt; Resources</em> to be updated in your platform UI.</li>
  <li>For detailed instructions on how to modify sprite files, see <a href="assets/modify_sprite_colors.pdf" target="_blank">Modifying Sprite Colors</a> (separate PDF file).</li>
  <li>If you save a sprite file to a filename that is not referenced in the custom_template.less file, edit the custom_template.less file and update the path to reflect the new filename. For example, if a particular icon was gray and you wanted it changed to orange, you might save your artwork to a new filename that reflected the color change or you could develop a naming convention using numbers, etc. The following example is an excerpt from a custom_template.less file that illustrates a sprite file URL reference:
    <pre>// path to the image file of 18px sprites of leftnav navigation items that reflect the current section of &quot;subject&quot; details
// @leftnav-active-icons: @icon-active-18px: url(&quot;images/sprites_18_color.png&quot;);
</pre>
</li>
  <li>If you updated a style sheet, use the <strong>Rebuild Styles</strong> option to regenerate the styles before uploading any new sprite files. Note that this function rebuilds all the folders in the /resources/theme/default/styles directory. Because of this, new sprite files must be uploaded after the site styles are regenerated.</li>
  <li>If you add a new Artboard to the Adobe illustrator file, or save an existing Artboard with a different name, you must upload the updated sprite files to the platform via the <em>Administration &gt; Config &gt; Resources</em> section and save them in the /resources/theme/default/style/images folder. Perform this step after rebuilding styles (<strong>Rebuild Styles</strong> option).</li>
  <li>After styles are regenerated and sprite files are uploaded, clear the browser cache and refresh the screen to view the changes.</li>
  <li>For information on uploading sprite files to the platform, see <a href="#how_do_i_upload_sprite_files_to_the_developer_portal">How do I upload sprite files to the developer portal?</a></li>
</ul>
<p><a href="#top">Back to top</a></p>


<a name="what_is_lessjs_and_what_are_the_benefits"></a><h3>What is less.js and what are the benefits?</h3>
<p>The <strong>custom.less</strong> style sheet is implemented with LESS which is a dynamic stylesheet language that extends the static CSS by adding a dynamic behavior in the CSS.</p>
<ul>
  <li>LESS.JS is a CSS pre-processor that allows you to write your own styles using the LESS pre-processor language and save them in a .LESS file.</li>
  <li>LESS.JS will compile the file into pure CSS. LESS variables are defined with an @ sign and Variable assignment is done with a colon (:). After you update the <strong>custom.less</strong> style sheet and rebuild, the values of the variables are inserted into the output CSS document.</li>
  <li>LESS helps reduce the size of the CSS and allows you to quickly and easily make changes to the platform color scheme and sprite files by updating one <strong>custom.less</strong> file and then rebuilding the complete set of site stylesheets.</li>
</ul>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_make_my_style_and_sprite_file_changes_visible_on_my_platform_deployment_after_i_regenerate_styles"></a><h3>How do I make my style and sprite file changes visible on my platform deployment after I regenerate styles?</h3>
<p>In most cases, after you regenerate styles and upload your sprite files you must clear the browser cache and refresh the screen to view the changes.</p>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_configure_a_custom_footer"></a><h3>How do I configure a custom footer?</h3>
<p>The footer customization process includes the following steps:</p>
<ol>
  <li>Footer customization is done with an HTML file that acts as a template. The HTML file is uploaded to the /resources/templates/footer with the name footer.htm.</li>
  <li>Links in the footer.htm file can have a class attribute with values "ext" or "dialog." When a link has a class "ext," clicking on the link will open a popup window. When the link has a class "dialog," clicking on the link will open the href in a dialog window.</li>
  <li>A footer can be uploaded using the File Manager in the <em>Site Administration &gt; Config &gt; Resources &gt; Resources </em>section. An uploaded footer becomes effective within five minutes if the page is refreshed after five minutes.</li>
  <li>If the footer.htm file requires additional styles, you can add them to <strong>custom.less</strong>.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_configure_a_custom_logo"></a><h3>How do I configure a custom logo?</h3>
<p>The process of adding a custom logo to the platform includes configuring your logo to comply with the logo file requirements (listed below), specifying the logo filename in the template (see <a href="#to_customize_your_logo_filename">To specify your logo filename in the template</a> below) and uploading it to the platform (see <a href="#to_upload_your_logo_file">To upload your logo file</a> below).</p>


<h5>Logo File Requirements</h5>
<p>Your logo must comply with the following requirements:</p>
<ul>
<li>Width should be no more than 295px.</li>
<li>Height should be 46px.</li>
<li>Background must be transparent.</li>
<li>File format should be PNG.</li>
<li>Specify the logo filename in the <strong>custom.less</strong> style sheet.</li>
</ul>
<h5><a name="to_customize_your_logo_filename"></a>To specify your logo filename in the template:</h5>

<ol>
  
  <li>Log in as the Site Admin.</li>
  <li>Go to <em>Administration &gt; Config &gt; Custom Styles</em>.</li>
  <li>If you want to work with the template for the Simple Developer Theme (Simple Dev) rather than the current user interface (Default Theme), choose it from the drop-down list at the top (theme names might be different depending on your implementation). Styles for all themes are managed in the same place. For more information, see <a href="#what_is_a_platform_theme">What is a platform theme?</a> and <a href="basics_glossary.htm#gl_theme_simpledev">Simple Developer theme</a>. </li>
  <li>Click <strong>Download</strong> to download a new custom_template.less file and rename it to <strong>custom.less</strong>.</li>
  <li>Load the custom .less file into an HTML editor and change the filename for this entry: @logo-img: url(&quot;images/{image_name}.png&quot;); to the new logo filename.</li>
  <li>In the <em>Custom Styles</em> section, click <strong>Upload</strong> to upload the updated <strong>custom.less</strong> file. <em>Note that the upload process automatically executes the <strong>Rebuild Styles</strong> function, which rebuilds the style sheets<strong>.</strong></em></li>
</ol>


<h5><a name="to_upload_your_logo_file"></a>To upload your logo file:</h5>
<ol>
  
  <li>Log in as the Site Admin.</li>
  <li>Go to <em>Administration &gt; Config &gt; Custom Styles</em>.</li>
  <li>If you want to work with the template for the Simple Developer Theme (Simple Dev) rather than the current user interface (Default Theme), choose it from the drop-down list at the top (theme names might be different depending on your implementation). Styles for all themes are managed in the same place. For more information, see <a href="#what_is_a_platform_theme">What is a platform theme?</a> and <a href="basics_glossary.htm#gl_theme_simpledev">Simple Developer theme</a>. </li>
  <li>Click <strong>Rebuild Styles</strong> to ensure that all the proper style folders are generated. <em>Note: If you specified a custom logo name in <strong>custom.less</strong> and already uploaded the style sheet the rebuild step is not required. </em></li>
  <li>Go to <em>Config &gt; Resources &gt; Resources &gt; File Manager</em> and navigate to the theme/default/style folder:<br />
  <br />
  <img src="assets/file_explorer_style_folder.jpg" width="426" height="299" alt="" /></li>
  <li>Click <strong>New Directory</strong> and name it <strong>images</strong>.
  <br />
  <br /></li>
  <li>Click into the /images folder and upload your logo file. <em>Note that the logo must comply with the stated logo requirements. </em></li>
  <li>If for some reason the new logo does not display, try refreshing your browser cache and/or go to <em>Administration &gt; Config &gt; Custom Styles</em>, choose the theme if needed, and click <strong>Rebuild Styles</strong>.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="what_is_a_platform_theme"></a><h3>What is a platform theme?</h3>
<p>One theme is one instance of the portal. During installation, the Site Admin has the option to configure more than one theme for the implementation. This is configured as part of running the jython scripts which are part of installation. Each theme has a separate URL.</p>
<p>When running the jython platform installation script, two parameters, <strong>theme</strong> and <strong>themeimpl</strong>, work together to establish the codebase that's installed.</p>
<p>If values are provided for both <strong>theme</strong> and <strong>themeImpl</strong> parameters: <strong>themeImpl</strong> is a unique code name for a specific theme which cannot be changed. It indicates the code base used for the implementation. Valid values: default or simpledev.</p>
<p>This introduces the possibility of cloning a specific theme with two or more user-defined sets of customizations. One set of customizations is independent of another. Definitions of the two parameters are given below.</p>
<h4><strong>theme</strong></h4>
<p>The <strong>theme</strong> parameter plays a different role as determined by whether the themeImpl parameter is also present:</p>
<ul>
  <li>If values are provided for both theme and themeImpl parameters: <strong>theme</strong> is a user-defined value. The customer can define multiple <strong>theme</strong> values, and each can later be customized via a unique <strong>custom.less</strong> file for each theme.</li>
  <li>If the themeImpl parameter is not provided (backwards compatibility scenario): <strong>theme</strong> takes the definition of the themeImpl parameter (see themeImpl below). Valid values: default or simpledev.</li>
</ul>
<h4><strong>themeImpl</strong></h4>
<p>If values are provided for both <strong>theme</strong> and <strong>themeImpl</strong> parameters: <strong>themeImpl</strong> is a unique code name for a specific theme which cannot be changed. It indicates the code base used for the implementation. Valid values: default or simpledev.</p>
<p>The new parameter takes the definitions previously applicable to the <strong>theme</strong> parameter. There are two valid values:</p>
<ul>
  <li><strong>default</strong> (used in most cases)</li>
  <li><strong>simpledev</strong></li>
</ul>
<p>The <strong>theme</strong> parameter now takes a customer-defined value, naming a theme that the customer can then customize via the <strong>custom.less</strong> file. The customer can define multiple values for the <strong>theme</strong> parameter; each name must be unique for the tenant.<br />
  For backwards compatibility, if the <strong>themeImpl</strong> parameter is not present in the installation jython script, the value provided for the <strong>theme</strong> parameter in the installation script must be one of the valid core values of <strong>default</strong> or <strong>simpledev</strong>.</p>
<p>By using these two parameters together, customers can define multiple access points into the platform, each of which can have its own set of customizations applied. Some sample scenarios:</p>
<ul>
  <li><strong>Multiple customizations of look and feel</strong>: Tenant ACMEPayments Corp has 10 partners; each partner has a different API on the platform, and each has an API admin who accesses the platform and exports metric information for the API.
    <p>When installing version 7.2, the site admin defines the <strong>themeImpl</strong> parameter as <strong>default</strong> and creates 10 themes, each named for one of the 10 partners, and each with a different URL that includes the tenant name and partner name.</p>
<p>After installation, the site admin customizes each version by uploading a <strong>custom.less</strong> file for each partner with the partner&rsquo;s company colors and logo.</p>
<p>When each API admin logs in via the URL for his company, he sees the colors and logo for his company.</p>
</li>
  <li><strong>Two theme implementations, additional theme customizations</strong>: Tenant ACMEPaymentDev Inc. has two audiences, a developer audience and an API Admin audience.
<p>In previous versions, this scenario was supported in only one customer case by supporting two completely different themes (one of which was a completely customer-specific customization). Although this solution allowed us to support two themes, it was not extensible.</p>
<p>Now, the same solution can be accomplished for any customer by supporting two themes, default and simpledev. But each theme could also be cloned, defining values for the theme property of default and simpledev and then also providing values for the theme property, allowing additional customization to be supported.</p>
<p>When creating the tenant, we just create a single theme. Additional theme values, and themeImpl values, are created using additional database scripts as shown later.</p>
<p>Two theme example: when installing version 7.2, the site admin defines the <strong>themeImpl</strong> parameter as <strong>default</strong> and then again as <strong>simpledev</strong>, and creates two themes:</p>
<ul>
  <li><strong>developer</strong> uses the <strong>simpledev</strong> theme</li>
  <li><strong>apiadmin</strong> uses the <strong>default</strong> theme</li>
</ul>
<p>He does not bother with a <strong>custom.less</strong> file since having a different look and feel is not significant at the moment, but this can easily be added later at any point.</p>
<p>Developers see the simpler user interface presented by the <strong>simpledev</strong> theme, while API Admins have access to the API management functionality offered only in the <strong>default</strong> theme.</p>
</li>
</ul>
<p><a href="#top">Back to top</a></p>



<a name="determine_theme_name"></a><h3>How can I determine the theme name?</h3>
<p>For some customization tasks, where you're creating custom files and uploading them to the platform, you'll need to know the theme name for the version of the developer portal you're using.</p>
<p>The theme name is determined when the platform is created, so you might not know what it is.</p>
<p>If you're not sure, follow the steps below to check the theme name for your installation.</p>
<h5>To determine the theme name for your installation</h5>
<ol>
  <li>Log in to  the developer portal as the Site Admin.</li>
  <li>Go to <strong>Administration</strong> &gt; <strong>Config</strong> &gt; <strong>Custom Styles</strong>.</li>
  <li>In the <strong>Theme</strong> drop-down at the top, click to see what options are available to you. Check the theme name on the list. Unless the names are customized, the theme names are:
    <ul>
      <li><strong>default</strong>: <a href="basics_glossary.htm#gl_theme_default">Default Theme</a></li>
      <li><strong>simpledev</strong>: <a href="basics_glossary.htm#gl_theme_simpledev">Simple Developer</a> theme</li>
      <li><strong>hermosa</strong>: <a href="basics_glossary.htm#gl_theme_hermosa">Hermosa</a> theme</li>
    </ul>
    </li>
</ol>
<p>Use the applicable value, exactly as it's represented on the list, in your customization tasks.</p>
<p><a href="#top">Back to top</a></p>



<a name="customization_hermosa_files"></a><h3>Where do I store customization files for Hermosa theme?</h3>
<p>In general, any customization that you put in place for Default Theme is also applied to Hermosa theme. You don't need to take any extra steps, or do anything twice.</p>
<p>There are two possible scenarios where you might want to set up different rules:</p>
<ul>
  <li>You have customization in place in Default Theme that you do <strong>not</strong> want to apply to your Hermosa theme.</li>
  <li>You want to apply customization to your Hermosa theme but don't want your Default Theme to be affected.</li>
</ul>
<p>If you do <strong>not</strong> want the same customization to apply to both themes, all you need to do is create customization files for the Hermosa theme. The rules are:</p>
<ul>
  <li>If the platform finds customization files for Default Theme only, it applies the customization <strong>to both themes</strong>.</li>
  <li>If the platform finds customization files for Hermosa, it applies that customization <strong>only to Hermosa</strong>.</li>
</ul>
<p>The location for customization files for Hermosa theme is parallel to the location for Default Theme, but with a different folder structure as defined by the theme name:</p>
<ul>
  <li>theme/{default}/</li>
  <li>theme/{hermosa}/</li>
</ul>
<p>For example, for Default Theme:</p>
<ul>
  <li>/resources/theme/default/locales/<a href="basics_glossary.htm#gl_custom_en_us_json">custom_en-us.json</a> (for custom code that affects page behavior)</li>
  <li>/resources/theme/default/styles (for custom styles)</li>
  <li>/resources/theme/default/styles/images (for custom images such as a favicon)</li>
</ul>
<p>and for Hermosa:</p>
<ul>
  <li>/resources/theme/hermosa/locales/<a href="basics_glossary.htm#gl_custom_en_us_json">custom_en-us.json</a> (for custom code that affects page behavior)</li>
  <li>/resources/theme/hermosa/styles (for custom styles)</li>
  <li>/resources/theme/hermosa/styles/images (for custom images such as a favicon)</li>
</ul>
<p><a href="#top">Back to top</a></p>




<div class = "divider1"></div>
<h3><a name="h_logins"></a>Logins:</h3>




<a name="how_does_login_configuration_work"></a><h3>How does login configuration work?</h3>
<p>As part of the initial platform setup, a Site Administrator sets up a series of domains that represent an enterprise's login requirements for the platform. Supported domain types for the platform login include:</p>
<ul>
  <li>Platform Login</li>
  <li>Google&reg; Connector</li>
  <li>Facebook&reg; Connector</li>
  <li>LDAP</li>
  <li>CA SiteMinder&reg;</li>
  <li>OAuth Provider</li>
  <li>OpenID Connect Relying Party</li>
</ul>
<p>In versions prior to 7.1.0, the platform installation also included a default platform domain that is automatically enabled when a new user account is created. In 7.1.0 and later, the default platform login domain is still there but it is not enabled by default. The Site Admin must manually enable the platform login domain as part of configuration.</p>
<p>After any desired login domains are installed, the Site Admin must enable them before they will be available to users. Additional configuration steps are also available, including:</p>
<ul>
  <li>Target Host (virtual hostname)</li>
  <li>Logo (the button that's displayed on the login page for this login domain. If not specified, defaults to the first letter of the domain name)</li>
  <li>External login screen display mode (popup window or main window)</li>
</ul>
<p>For instructions on configuring login domains, see <a href="site_admin_domains.htm#how_do_i_enable_a_domain_for_login">How do I enable a domain for login?</a></p>
<p><a href="#top">Back to top</a></p>



<a name="does_the_platform_provide_a_default_login"></a><h3>Does the platform provide a default login?</h3>
<p>No. In versions prior to 7.1.0, the platform installation supported certain security domains that allow login with email address and password to be automatically enabled for use once the security domain was created.</p>
<p>As of version 7.1.0, this default has been removed. The platform does not allow the default platform login screen to fall back to security domains supporting email/password-based login.</p>
<p>If your platform already had logins configured prior to upgrading to the version 7.1.0 release, the default option and configuration will be remain in place after upgrading. However, if you install 7.1.0 and then configure, you'll need to add the login domains and then enable them, in two separate steps.</p>
<p>For more information, including instructions for restoring the default by running a database query, see <a href="#how_do_i_enable_and_customize_a_login_domain">How do I enable and customize a platform login domain?</a> below.</p>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_enable_and_customize_a_login_domain"></a><h3>How do I enable and customize a platform login domain?</h3>
<p>There are two steps to setting up a login domain on the platform:</p>
<ul>
  <li>Create the domain. In some cases, this requires some setup in Policy Manager. For instructions on setting up the specific type of login domain you want, see <a href="site_admin_domains.htm">Domains</a>.</li>
  <li>Complete the configuration by enabling and customizing the login domain. See below for instructions.</li>
</ul>
<p><strong>Note</strong>: In versions prior to the 7.1.0 release, certain security domains that allow login with email address and password were automatically enabled once the security domain was created in Administration / Domains. The default has now been changed so that the default platform login screen does not fall back to security domains supporting email/password-based login. Instead, you must explicitly enable the login domain after adding it. If you have already configured the platform prior to upgrading to the version 7.1.0 release, your default option and configuration will be unchanged after upgrading. However, if you install any version 7.1.0 or later, and then configure, you'll need to add the login domains and then enable them, in two separate steps.</p>
<h5><a name="to_enable_and_customize_a_platform_login_domain"></a>To enable and customize a platform login domain:</h5>
<ol>
  <li>Log in as the Site Admin and click the <em>Administration</em> quick filter (wrench icon).</li>
  <li>Create the domain, following the instructions for the specific type of login domain you want: see <a href="site_admin_domains.htm">Domains</a>.</li>
  <li>Click <strong>Administration</strong> &gt; <strong>Config</strong> &gt; <strong>Logins</strong>.</li>
  <li>Check the <strong>Enable</strong> check box.</li>
  <li>Conditional: to restrict the login domain so that only URLs from one or more specified target hosts are allowed, enter one or more values, separated by commas, in the text box in the <strong>Target Host</strong> column. For more information, see <a href="site_admin_config.htm#what_is_a_target_host">What is a Target Host?</a> below.</li>
  <li>In the <strong>Logo</strong> column, click <strong>Upload</strong> and select the logo for the Login button. If you don't specify a logo, the login button defaults to the first letter of the domain name. For more information on managing the logo, see <a href="basics_account_management.htm#how_do_i_upload_and_crop_icons">How do I upload and crop icons?</a> below. You can upload your own custom button or refer to information from the provider, if available. For example:
    <ul>
    <li>Facebook login button usage: <a href="https://www.facebookbrand.com" target="_blank">https://www.facebookbrand.com</a></li>
    <li>LDAP: refer to the LDAP developer documentation for information on LDAP login button usage</li>
    <li>Google login button usage: <a href="https://developers.google.com/+/branding-guidelines#sign-in-button" target="_blank">Google+ Sign-In button branding guidelines</a></li>
  </ul>
  </li>
  <li>In the <strong>Mode</strong> column, click the applicable button to indicate whether you want the login to be a popup or to display in the main window. For more information, see <a href="#what_login_page_integration_modes_are_supported">What login page integration modes are supported?</a> below.</li>
  <li>Click <strong>Save</strong>.</li>
</ol>

<p><strong>Note:</strong> For new installations, if you want to restore the old setting so that platform login falls back to security domains supporting email/password login, run the following query on the database (line break added for display purposes only, query should not include line break):</p>
<pre>update LOGIN_RULES set AUTO_LOGIN_EXT_DOMAIN='com.soa.feature.enabled' where BUSINESSID in <br />(select BUSINESSID from TENANTS where FEDMEMBERID='{tenantid}';</pre>
<p>If you have additional questions, <a href="basics_support.htm#how_do_i_contact_technical_support">contact Akana technical support</a>.</p>
<p><a href="#top">Back to top</a></p>



<a name="what_is_a_target_host"></a><h3>What is a Target Host?</h3>
<p>The Site Administrator can specify one or more specific URLs that are valid logging into the platform. This could be used to provide a different login based on role (Business Admin, API Admin, Developer, and so forth), or for a backdoor login if one of the domain configurations is down. This is accomplished by specifying a <em><a href="basics_glossary.htm#gl_targethost">Target Host</a></em> address (virtual host address) for each login domain; for example, {role}.{company}.com.</p>
<p>It is best to develop a login plan for each role that covers different types of login scenarios. For example, if your site uses CA SiteMinder exclusively for logins, and the CA SiteMinder login is down for some reason, you will need a backdoor login to investigate the problem. To provide a resolution for this scenario, here are two possible approaches:</p>
<ul>
  <li>Configure the platform default login Target Host so that only the Site Administrator can log in using email and password credentials.</li>
  <li>Configure an alternate Facebook domain (using the Facebook Connector domain) or Google login domain (using the OpenID Connect domain) and specify a Target Host for backdoor logins.
  Only users from that specific target host will be able to log in using that domain.</li>
</ul>
<p><a href="#top">Back to top</a></p>



<a name="what_login_page_integration_modes_are_supported"></a><h3>What login page integration modes are supported?</h3>
<p>The platform allows you to select how the login page associated with a login domain is displayed to the user when logging in. The integration method is selected via the <strong>Mode</strong> option on the <em>Site Administration &gt; Config &gt; Logins</em> page for a specific domain. Two options are available:</p>
<ul>
  <li><em>Popup</em>&#8212;Displays the external login page as a popup window.</li>
  <li><em>Main</em>&#8212;Displays the external login page in the platform home page instead of as a popup.</li>
</ul>

<p><strong>Note</strong>: Mode options are not configurable for the default login page.</p>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_disable_a_platform_login"></a><h3>How do I disable a platform login?</h3>
<h5>To disable a platform login:</h5>
<ol>
  
  <li>Log in as the Site Admin.</li>
  <li>Go to <em>Administration</em> &gt; <em>Config &gt; Logins</em>. The <em>Configure</em> screen displays a listing of domains that have been added to the platform.</li>
  <li>To disable the domain, clear the <strong>Enable</strong> check box.</li>
  <li>Click <strong>Save</strong>.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_configure_a_session_timeout_value"></a><h3>How do I configure a session timeout value?</h3>
<p>You can configure a session timeout value for the platform, so that if a user is inactive for a specified period of time the user is automatically logged out.</p>
<p>Currently, you cannot change this setting via the user interface, but you can do it by running a database query. Replace the values in brackets below (remove the brackets also):</p>
<ul>
  <li><strong>{no-of-minutes}</strong>: replace with the session timeout value you want, in minutes. If the value is set to 0 (zero) there is no timeout; if it is set to 30, the session times out after 30 minutes.</li>
  <li><strong>{tenant-id}</strong>: replace with your specific tenant ID.</li>
</ul>
<p>Update the values, and then run the following query on your database:</p>
<pre>update LOGIN_RULES set LOGIN_SESSION_TIMEOUT=<strong>{no-of-minutes}</strong> where TENANTID = (select TENANTID from TENANTS where FEDMEMBERID='<strong>{tenant-id}</strong>');</pre>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_disable_the_option_for_users_to_change_email_address"></a><h3>How do I disable the option for users to change the email address on the account?</h3>
<p>For security reasons, you might want to disable the ability for users to change the email address associated with local accounts set up on the platform.</p>
<p>Currently, you cannot change this setting via the user interface, but you can do it in the database, as follows:</p>
<ul>
  <li><strong>Table</strong>: BUSINESS_SECURITY_SETTINGS</li>
  <li><strong>Column name</strong>: USER_MODIFY_EMAIL</li>
</ul>
<p>The default value for this column is: <strong>com.soa.feature.enabled</strong>. To disable the ability for users to change email address, set this value to: <strong>com.soa.feature.disabled</strong>.</p>
<p><a href="#top">Back to top</a></p>




<div class = "divider1"></div>
<h3><a name="h_resources"></a>Resources:</h3>




<a name="what_is_a_resource"></a><h3>What is a Resource?</h3>
<p>In the context of the <em>Administration &gt; Config &gt; Resources</em> section available to the Site Admin, a Resource is any type of publishing artifact used in the construction of the platform UI presentation. This includes:</p>
<ul>
  <li> css style sheets</li>
  <li>Images</li>
  <li>Sprite files</li>
  <li>Site copy</li>
  <li>The site legal agreement</li>
  <li>API documentation, legal agreements, and downloadable files</li>
  <li>Online help documentation</li>
</ul>
<p><a href="#top">Back to top</a></p>



<a name="what_is_the_difference_between_resources_and_content"></a><h3>What's the difference between Resources and Content?</h3>
<p>When you log in as the Site Admin and go to the <em>Administration &gt; Config &gt; Resources</em> section, you'll see two buttons to access File Manager:</p>
<ul>
  <li><strong>Resources</strong>
  <p>The Resources button takes you to the /resources folder for your implementation. From here, you can upload files and create folders. Use this location for assets that do not require indexing, such as images and sprite files.</p>
  <p><strong>Note</strong>: For site styles, use the Config &gt; Custom Styles option; see <a href="#i_want_to_customize_platform_styles">I want to customize platform styles. What do I do?</a></p>
  </li>
  <li><strong>Content</strong>
    <p>The Content button takes you to the /content folder for your implementation. Here, you can upload customized content files for the platform help and the platform legal agreement. You can also upload API documentation and API legal agreements, for any APIs already created on the platform. If you're uploading API documentation you'll need to know the APIID so that you choose the correct folder.</p>
    <p>Files uploaded to this location are indexed periodically, automatically, so that content is available for your site users when they use the Search feature to look for content.</p>
  </li>
</ul>
<p>For more information on the file and folder structure for your implementation, as it relates to files you might want to upload or customize, see <a href="#what_is_the_folder_structure_for_content_default">What is the folder structure for content in Default Theme?</a> and <a href="#what_is_the_folder_structure_for_content_sd">What is the folder structure for content in Simple Developer Theme?</a> below.</p>
<p><a href="#top">Back to top</a></p>



<a name="what_is_the_folder_structure_for_content_default"></a><h3>What is the folder structure for content in Default Theme?</h3>
<p>If you're uploading content to the platform, via <em>Administration &gt; Config &gt; Resources</em> &gt; <em>Content</em>, you'll need to make sure you place files in the correct folders.</p>
<p>Clicking the <strong>Content</strong> button takes you to File Manager where you can create folders, navigate up and down the folder structure, and upload single files or ZIP files. When you're uploading files, it's important to make sure you're in the right folder. You cannot move files.</p>
<p>The Content button takes you to the top level of the folder structure, the <strong>/content</strong> folder. From there, the folder structure is as follows:</p>
<ul>
  <li><strong>/api</strong>: top folder for any API documentation. When an API is added on the platform, a documentation folder is created. Click through to a specific API to upload API documentation.</li>
  <li><strong>/home</strong>: top folder for site content. From here there are additional subfolders:
    <ul>
      <li><strong>/landing</strong> for the site landing page and legal agreement (ideally HTML and PDF, but only one agreement)</li>
      <li><strong>/learnmore</strong> where the site content files are located.</li>
      <li><strong>/signup/confirm</strong> for the signup page.</li>
      <li><strong>/support</strong> for the support page.</li>
    </ul>
  </li>
</ul>
<p>For example, let's say you want to customize the Support page. The URL for the page is: {hostname}/#/home/support. You would go to <em>Administration &gt; Config &gt; Resources</em> &gt; <em>Content</em>, to access the Content folder, navigate down to the home/support folder, and upload the new file. See <a href="#proc_custom_support_page">To customize the Support page for the developer portal</a>.</p>
<p>If needed, you can save out the existing HTML; choose to view the file in the browser, click View Source, and then copy the HTML. Or you can export the fileset, which will include referenced assets.</p>
<p><a href="#top">Back to top</a></p>




<a name="what_is_the_folder_structure_for_content_sd"></a><h3>What is the folder structure for content in Simple Developer Theme?</h3>
<p>The Simple Developer theme shares the same file and folder structure as Default Theme (see <a href="#what_is_the_folder_structure_for_content_default">What is the folder structure for content in Default Theme?</a> above), but uses different folders for content.</p>
<p>Simple Developer theme, by default, includes the following three content files/folders:</p>
<ul>
  <li>Documentation page: documentation/index.htm. In the user interface, this is accessed via the Documentation link at the center of the top menu bar.</li>
  <li>Help page: documentation/index.htm. In the user interface, this is accessed via the Help link, right of top menu bar.</li>
  <li>Welcome page: documentation/index.htm. In the user interface, this is accessed by clicking on the logo at the top left.</li>
</ul>
<p>In the file system, these are represented by a structure of three subfolders in the main /content/ folder:</p>
<ul>
  <li>content/documentation/index.htm</li>
  <li>content/help/index.htm</li>
  <li>content/welcome/index.htm</li>
</ul>
<p>For more detailed information about content development and management for the Simple Developer theme, see <a href="site_admin_content_guidelines_sd.htm">Content Development Guidelines for Simple Developer Theme</a>.</p>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_upload_content_sd"></a><h3>How do I upload content for Simple Developer theme?</h3>
<p>The Simple Developer theme shares the same file and folder structure as Default Theme, but uses different folders for content. If you want to replace existing content, you must mirror the existing folder structure, as given in <a href="#what_is_the_folder_structure_for_content_sd">What is the folder structure for content in Simple Developer Theme?</a> above.</p>
<p>When you navigate to the <strong>content</strong> folder in File Explorer, you won't see these subfolders and files. However, to update the content, you must use identical folder and file names. Create the folder, click into the folder, and then upload the revised file, as explained below.</p>
<h5>To update a Simple Developer default page</h5>
<ol>
  <li>Log in to the platform (Default Theme) as a Site Administrator.</li>
  <li>Go to <em>Administration</em> &gt; <em>Config &gt; Resources</em>.</li>
  <li>In the <em>Content</em> section, click <strong>File Manager</strong> to access the Content folder.</li>
  <li>Click <strong>New Directory</strong>, and create a folder with the exact name of the folder in which you want to update the content: for example, <strong>help</strong>.</li>
  <li>Click the new folder to go into it in File Explorer.</li>
  <li>Click Upload a File.</li>
  <li>Navigate to the location of the updated file and upload it. You can also upload a ZIP archive if you want to add multiple files or assets. <br />
    <strong>Note</strong>: 
    If you are uploading a ZIP file, make sure you're in the correct folder before uploading. The files are automatically unzipped as part of the upload process.</li>
  <li>Click <strong>Upload</strong>. The file is uploaded.</li>
  <li>Test by viewing in Simple Developer theme.
  <p><strong>Note</strong>: to see the update immediately, you will need to clear cache and refresh the page. Cache is updated automatically every hour, so there is a delay before developers see the new page.</p></li>
</ol>
<p>For more detailed information about content development and management for the Simple Developer theme, see <a href="site_admin_content_guidelines_sd.htm">Content Development Guidelines for Simple Developer Theme</a>.</p>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_download_files"></a><h3>How do I download content or resource files?</h3>
<p>In File Explorer, you can download a ZIP file of the current directory including all files in the directory and all subfolders and their contents. You can download a ZIP of any content or resources that you are authorized to view and edit. Follow the instructions below.</p>
<h5>To download content or resource files:</h5>
<ol>
  <li>Log in to the platform (Default Theme) as a Site Admin.</li>
  <li>Go to <strong>Administration</strong> &gt; <strong>Config</strong> &gt; <strong>Resources</strong>.</li>
  <li>Under either Resources or Content, click the File Manager button.</li>
  <li>Navigate to the directory you want to download (or stay in the current directory).</li>
  <li>Click <strong>Download </strong><strong>Directory</strong>.</li>
  <li>Choose to open or save the file.</li>
</ol>
<p><a href="#top">Back to top</a></p>




<a name="how_do_i_upload_style_sheets_to_the_developer_portal"></a><h3>How do I upload style sheets to the developer portal?</h3>
<p>When you upload a new <strong>custom.less </strong>file in the <em>Custom Styles</em> section, the /resources/theme/default/style directory is automatically created and includes the site default style sheets. Some points to note:</p>
<ul>
  <li>These style sheets cannot be updated using the upload process used for static content because the styles are regenerated each time a new <strong>custom.less</strong> style sheet is uploaded.</li>
  <li>If you want to add new styles to the platform, you must first download the template, custom_template.less, then rename it to <strong>custom.less</strong>, add the new styles to the custom.less file, and upload the modified file. When you upload the revised file in the Config section of the user interface, the new styles are added to the site as part of the rebuild process. For more information and detailed instructions, see <a href="#to_customize_platform_styles_for_the_first_time">To customize platform styles for the first time</a>.</li>
  <li>Only a Site Administrator can update the platform style sheet.<br />
  </li>
</ul>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_upload_sprite_files_to_the_developer_portal"></a><h3>How do I upload sprite files to the developer portal?</h3>
<p>If you've updated one or more sprite files, you can create an /images folder in the /resources/theme/default/style directory and upload them. Sprite files must be uploaded AFTER you have uploaded your <strong>custom.less</strong> file and have rebuilt the site styles (either automatically as part of the <strong>custom.less</strong> upload process, or manually by executing the <strong>Rebuild</strong> function).</p>

<h5>To upload sprite files to the developer portal:</h5>
<ol>
  <li>Log in as the Site Admin.</li>
  <li>Go to <strong>Administration</strong> &gt; <strong>Config</strong> &gt; <strong>Resources</strong>.</li>
  <li>In the <em>Resources</em> section, click <strong>File Manager</strong>. Navigate to the /resources/theme/default/style directory. You will see the following default styles which were autogenerated as part of the <strong>custom.less</strong> upload process.<br />
    <br />
    <img src="assets/content image file.jpg" width="514" height="303" alt="" /></li>
  <li>Click <strong>New Directory</strong> and assign the name &quot;images.&quot;</li>
  <li>Navigate to the /images directory.</li>
  <li>Click <strong>Upload</strong>. The <em>File Upload</em> dialog box displays. Select the sprite file you would like to upload and click <strong>Open</strong>.</li>
  <li>Click <strong>Upload</strong> to upload the file to the selected directory. Repeat this process until all the sprite files are uploaded.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_upload_content_to_the_developer_portal"></a><h3>How do I upload content to the developer portal?</h3>
<p>Platform content typically consists of HTML files, images that are referenced in the content, any custom styles sheets that support the content, and reference material, such as PDF files or diagrams, that are linked in the content.</p>
<p>Content that you can add or customize includes:</p>
<ul>
  <li><strong>API Documentation Content</strong>&#8212;The /content/api directory includes a folder for each API that is added to the platform. When you initially add your API using the<strong> Add a New API</strong> function this folder is automatically generated and an id name is automatically assigned as the folder name; for example, <strong>api100.cm</strong>. API content is uploaded to this folder.</li>
  <li><strong>Online Help Content</strong>&#8212;The /content/home/learnmore directory includes html and supporting graphic files that comprise the platform <em>Online Help</em>.</li>
  <li><strong>Landing</strong> <strong>Page Content</strong>&#8212;The /content/home/landing directory includes HTML and supporting files that comprise the platform home page, including images, content, css styles sheets, javascript files, and supplemental documents such as the Developer Agreements that are used as part of the platform signup process.
<p><img src="assets/content landing.jpg" width="511" height="376" alt="" /></p></li>
  <li><strong>Signup</strong>&#8212;The /content/home/signup directory includes an html that includes response content for various platform <em>Signup</em> scenarios.
<p><img src="assets/content signup.jpg" width="486" height="210" alt="" /></p></li>
  <li><strong>Support</strong>&#8212;The /content/home/support directory includes any html and supporting graphic files that comprise the <em>Support</em> section of the platform.</li>
</ul>

<h5>To upload a content file to the developer portal:</h5>
<ol>
  
  <li>Log in as the Site Admin.</li>
  <li>Go to <em>Administration</em> &gt; <em>Config &gt; Resources</em>.</li>
  <li>In the <em>Content</em> section, click <strong>File Manager</strong>.</li>
  <li>Select the directory for the content area you would like to update.
    <p><img src="assets/resources_content.jpg" width="501" height="300" alt="" /></p></li>
  <li>Click <strong>Upload</strong>. The <em>File Upload</em> dialog box displays. Select the file you would like to upload and click <strong>Open</strong>.</li>
  <li>To upload the file to the selected directory, click <strong>Upload</strong>. If you receive an overwrite message click <strong>OK</strong>.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_upload_resources_to_the_developer_portal"></a><h3>How do I upload resources to the developer portal?</h3>
<p>You can upload platform resources, such as avatars and other images, stylesheets, and custom pages, in the same way that you upload platform content. There is a different button to access the file structure for platform resources.</p>

<h5>To upload resources to the platform:</h5>
<ol>
  
  <li>Log in as the Site Admin.</li>
  <li>Go to <strong>Administration</strong> &gt; <strong>Config</strong> &gt; <strong>Resources</strong>.</li>
  <li>In the <strong>Content</strong> section, click <strong>File Manager</strong>.</li>
  <li>Navigate to the folder to which you want to upload resources. If you are modifying default platform files for the first time, you'll need to create the folder structure. Follow the instructions for the type of custom content you're uploading, making sure you follow the exact naming for the folder structure. Use the buttons at the top of File Explorer to go up or down a level in the folder structure, and to upload a file or a ZIP archive.
  <p><strong>Note</strong>: You might get a message that the file exists, even though you just created the folder. This is expected if you are replacing a default platform file. Click <strong>OK</strong>.</p></li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_add_a_platform_signup_legal_agreement"></a><h3>How do I add a platform signup legal agreement?</h3>
<p>You might want to have a platform legal agreement in place, that all platform users will accept. If a legal agreement is in place, the platform requires users to accept the agreement as a precondition before completing the login process.</p>
<p>If there is an existing legal agreement in place, you must disable it before adding a new one. You can only have one. See <a href="#how_do_i_change_the_platform_signup_legal_agreement">How do I change the platform signup legal agreement?</a> below.</p>
<p class="apidoc_note"><strong>Note</strong>: The platform supports use of only one legal agreement. Make sure all the legal requirements are combined into one document.</p>

<h5>To add a platform legal agreement</h5>
<p>To add a legal agreement there are two steps:</p>
<ol>
  <li>First, upload the legal agreement file. You can do this in the user interface. See <a href="#p_legal_agreement_upload">Step 1: To upload a new legal agreement via the Akana API Platform user interface</a> below.</li>
  <li>Then, make the new agreement the default for the platform. See <a href="#p_legal_agreement_specify">Step 2: To set a specific legal agreement as the default for the platform</a> below.</li>
</ol>
<h5><a name="p_legal_agreement_upload"></a>Step 1: To upload a new legal agreement to the platform</h5>
<ol>
  <li>Log in as the Site Admin.</li>
  <li>Go to <strong>Administration</strong> &gt; <strong>Config</strong> &gt; <strong>Resources</strong>.</li>
  <li>In the <strong>Content</strong> section, click <strong>File Manager</strong> to access the /<strong>content</strong> folder.</li>
  <li>Navigate down to <strong>content/home/landing</strong>. If the folder structure doesn't exist, click <strong>New Directory</strong> to create a new subfolder, name it, and then click the new folder name to change directories down one level into the new one. Then create the next one until the folder structure exists and you are in the <strong>landing</strong> folder.
    <p><strong>Note</strong>: Make sure the folder naming, including sequence and capitalization, is exactly as above.</p>
  </li>
  <li>Click <strong>Upload a File</strong>, navigate to the location of the new developer agreement, and upload it (for example, it could be a .txt, .htm, or .html file). The resulting path might be: <strong>content/home/landing/developeragreement.html</strong>.</li>
</ol>
<p>Once you've uploaded the legal agreement, the next step is to make it the default for the platform. See below.</p>
<h5><a name="p_legal_agreement_specify"></a>Step 2: To set a specific legal agreement as the default for the platform</h5>
<p>Before setting the legal agreement as the default for the platform, you must upload it. See <strong>Step 1</strong> above.</p>
<p>The user interface does not currently support setting the default legal agreement for the platform, but you can do it via the API or by running a database script.</p>
<p>To use the API: in the Legals service, run the Create New Agreement operation (see <span class="apidoc_code"><a href="http://docs.akana.com/cm/api/legals/m_legals_createNewAgreement.htm" target="_blank">POST&nbsp;/api/legals</a></span> on docs.akana.com). In the request body, put the applicable path and/or filename in the <strong>ContentPath</strong>, <strong>PrintContentPath</strong>, and <strong>FileName</strong> parameters.</p>
<p>Once the above two steps are completed successfully, any new users signing up for the platform are required to accept the agreement before continuing. Existing users are required to accept the legal agreement at next login.</p>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_change_the_platform_signup_legal_agreement"></a><h3>How do I change the platform signup legal agreement?</h3>
<p>If you have a legal agreement in place, and want to change it, you must first deactivate the existing agreement by running a database script. Then, you can upload a new agreement following the instructions in <a href="#how_do_i_add_a_platform_signup_legal_agreement">How do I add a platform signup legal agreement?</a> above.</p>
<h5>To deactivate an existing legal agreement</h5>
<p class="apidoc_note"><strong>Note</strong>: The queries below remove any existing legal agreements, so if you uploaded more than one by mistake, this script will fix it.</p>
<p>For a multi-tenant install, use the script below. Replace the {<strong>tenantid</strong>} placeholder with the Tenant ID for your installation. Note that line breaks have been added for display purposes. Your script should not have line breaks.</p>
<pre>update AGREEMENT_DOCUMENTS set ACTIVE='N' where TYPE='com.soa.atmosphere.legals.signup' 
and DOCUMENT_ID in (select NAMEID from DISTINGUISHED_NAMES where FEDMEMBERID='{tenantid}' and OBJECTTYPE='agreement');</pre>
<p>For a single-tenant install, use the query below exactly as it is. You do not need to substitute any values. Note that line breaks have been added for display purposes. Your script should not have line breaks.</p>
<pre>update AGREEMENT_DOCUMENTS set ACTIVE='N' where TYPE='com.soa.atmosphere.legals.signup' 
and DOCUMENT_ID in (select NAMEID from DISTINGUISHED_NAMES where OBJECTTYPE='agreement');</pre>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_modify_the_landing_page_for_the_developer_portal"></a><h3>How do I modify the landing page for the developer portal?</h3>
<p>To modify the landing page, you must download it, modify it offline, and then upload it to the same location.</p>
<h5>To modify the landing page:</h5>
<ol>
  
  <li>Log in as the Site Admin.</li>
  <li>Go to <em>Administration</em> &gt; <em>Config &gt; Resources</em>.</li>
  <li>In the <em>Content</em> section, click <strong>File Manager.</strong></li>
  <li>Click into the content/home/landing directory.</li>
  <li>Locate the index.htm file and download it.</li>
  <li>Modify the file offline, and then upload the modified file using <strong>File Manager</strong>.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_modify_the_favicon_for_the_developer_portal"></a><h3>How do I modify the favicon for the developer portal?</h3>
<p>The <a href="basics_glossary.htm#gl_favicon">favicon</a> is the small icon displayed on the browser tab and possibly in other parts of the browser. You can customize the icon that displays for your installation of the developer platform.</p>
<h5>To modify the favicon for the developer portal:</h5>
<ol>
  <li>Log in as the Site Admin.</li>
  <li>Go to <em>Administration</em> &gt; <em>Config &gt; Resources</em>.</li>
  <li>In the <strong>Resources</strong> section, click <strong>File Manager</strong> to access the /<strong>resources</strong> folder.</li>
  <li>Navigate down to <strong>resources/theme/default/style/images</strong>. If the folder structure doesn't exist, click <strong>New Directory</strong> to create a new subfolder, name it, and then click the new folder name to change directories down one level into the new one. Then create the next one until the folder structure exists and you are in the <strong>images</strong> folder. If you click into the <strong>resources</strong> folder and the <strong>theme</strong> folder doesn't exist, you'll have to create four levels of subfolder.
    <p><strong>Note</strong>: Make sure the folder naming, including sequence and capitalization, is exactly as above.</p></li>
  <li>From the <strong>images</strong> folder, click <strong>Upload a File</strong>.</li>
  <li>Navigate to the location of the favicon image and upload it. It should be an image file, 15 x 15 pixels in size, saved in the Windows favicon format with the name <strong>favicon.ico</strong>.</li>
  <li>To update the browser, clear cache and refresh the page. You might even need to close the browser and re-open to see the new favicon on the browser tab.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_modify_the_default_icon_for_apps_or_apis"></a>
<h3>How do I modify the default icon for apps, APIs, or other resources?</h3>
<p>The platform includes default icons for apps, APIs, and other resources. You can specify new defaults by uploading new icons of the same filename, size, and type to the folder where the default files are stored.</p>
<p>The folder structure is not visible unless custom assets have already been created. If you have to create the folder structure, make sure you use the exact naming and spelling given below. Essentially you are creating the following files, two sizes for each resource for which you want to customize the icon.</p>
<table cellspacing="0px" class="doctable" style="width: 98%;">
  <thead>
    <tr>
      <th width="40%">Resource</th>
      <th width="40%">Main Icon (console/style/images/)</th>
      <th width="60%">Small Icons (console/style/images/)</th>
    </tr>
  </thead>
  <tbody>
    <tr class="t2row">
      <td>API</td>
      <td>avatar_api_75x75.png</td>
      <td>avatar_api_25x25.png</td>
    </tr>
    <tr class="t1row">
      <td>API version</td>
      <td>avatar_app_version_75x75.png</td>
      <td>avatar_api_version_25x25.png</td>
    </tr>
    <tr class="t2row">
      <td>App</td>
      <td>avatar_app_75x75.png</td>
      <td>avatar_app_25x25.png </td>
    </tr>
    <tr class="t1row">
      <td>App version</td>
      <td>avatar_app_version_75x75.png</td>
      <td>avatar_app_version_25x25.png</td>
    </tr>
    <tr class="t2row">
      <td>Alert</td>
      <td>avatar_alert_75x75.png</td>
      <td>avatar_alert_25x25.png</td>
    </tr>
    <tr class="t1row">
      <td>API Access Request</td>
      <td>avatar_api_access_req_75x75.png</td>
      <td>avatar_api_access_req_25x25.png</td>
    </tr>
    <tr class="t2row">
      <td>Group</td>
      <td>avatar_group_75x75.png</td>
      <td>avatar_group_25x25.png</td>
    </tr>
    <tr class="t1row">
      <td>Discussion</td>
      <td>avatar_discussion_75x75.png</td>
      <td>avatar_discussion_25x25.png</td>
    </tr>
    <tr class="t2row">
      <td>Ticket</td>
      <td>avatar_ticket_75x75.png</td>
      <td>avatar_ticket_25x25.png</td>
    </tr>
  </tbody>
</table>
<h5>To modify the default icon for apps, APIs, or other resources on the developer platform:</h5>
<ol>
  <li>Log in as the Site Admin.</li>
  <li>Go to <strong>Administration</strong> &gt; <strong>Config</strong> &gt; <strong>Resources</strong>.</li>
  <li>In the <strong>Resources</strong> section, click <strong>File Manager</strong> to access the /<strong>resources</strong> folder.</li>
  <li>Navigate down to <strong>resources/console/style/images</strong>. If the folder structure doesn't exist, click <strong>New Directory</strong> to create a new subfolder, name it, and then click the new folder name to change directories down one level into the new one. Then create the next one until the folder structure exists and you are in the <strong>images</strong> folder. If you click into the <strong>resources</strong> folder and the <strong>console</strong> folder doesn't exist, you'll have to create three levels of subfolder.
    <p><strong>Note</strong>: Make sure the folder naming, including sequence and capitalization, is exactly as above.</p></li>
  <li>From the <strong>images</strong> folder, click <strong>Upload a File</strong>.</li>
  <li>Navigate to the location of the new image or images and upload. You'll need to make sure your new default icons have the following properties:
    <ul>
      <li><strong>File type</strong>: PNG graphics format.</li>
      <li><strong>Dimensions</strong>: 75 x 75 pixels for the larger icon and 25 x 25 pixels for the smaller one.</li>
      <li><strong>Filenames</strong>: Refer to the table above for the filenames for each type of resource.</li>
    </ul>
  </li>
  
  <li>To update the browser, clear cache and refresh the page. You might even need to close the browser and re-open to see the new default images.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="css_upload"></a><h3>How do I upload the API and Online Help content style sheet to the developer portal?</h3>
<p>The document.css style sheet contains all the custom styles for both API and Online Help documentation. It is located in the /content/style directory. If you make changes to the document.css file, you can upload it directly to the /content/style directory.</p>
<p><em>Note: This style sheet is not affected by the <strong>custom.less</strong> style sheet regeneration process and will not be changed or overwritten when a new <strong>custom.less</strong> file is uploaded. </em></p>
<h5>To upload a document.css style sheet to the platform:</h5>
<ol>
  
  <li>Log in as the Site Admin.</li>
  <li>Go to <em>Administration</em> &gt; <em>Config &gt; Resources</em>.</li>
  <li>In the <em>Content</em> section, click <strong>File Manager</strong>. Navigate to /content/style. You will see a directory similar to the following:
<p><img src="assets/document style sheet.jpg" width="498" height="234" alt="" /></p></li>
  <li>Click <strong>Upload</strong>. The <em>File Upload</em> dialog box displays. Select the document.css file and click <strong>Open</strong>.</li>
  <li>To upload the file to the selected directory, click <strong>Upload</strong>. If you receive an overwrite message click <strong>OK</strong>.
</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_develop_content_for_sd_theme"></a><h3>How do I develop content for the Simple Developer theme?</h3>
<p>Content development for the Simple Developer theme is managed in the same way as content development for Default Theme. The files share the same main folder structure as Default Theme, but there are unique subfolders for Simple Developer content.</p>
<p>In addition, you can develop and upload custom pages for Simple Dev.</p>
<p>For detailed information on working with Simple Developer content pages, including working with styles, linking, supported file formats, managing assets, and other information, refer to <a href="site_admin_content_guidelines_sd.htm">Content Development Guidelines for Simple Developer Theme</a>.</p>
<p>For information about uploading the files, see <a href="#how_do_i_upload_content_sd">How do I upload content for Simple Developer theme?</a></p>
<p><a href="#top">Back to top</a></p>



<a name="can_test_client_use_cors_to_send_requests_directly"></a><h3>Can Test Client use CORS to send the requests to the API endpoint directly without using the Forward Proxy?</h3>
<p>Yes. You can configure the platform to enable or disable the <a href="basics_glossary.htm#gl_cors">CORS</a> policy for the purposes of apps testing APIs in the Test Client testing tool.</p>
<p>Regardless of whether the CORS policy is attached to a specific API, this policy is always turned off for the purposes of testing with the Test Client tool.</p>
<p>If you want to turn the CORS policy on as a default in Test Client, you will need to create a file named <strong>init.js</strong> with some custom lines of code, as given below; if you already have a custom <strong>init.js</strong> file, you'll need to add the lines of code to the existing file.</p>

<h5>To override the default setting for Same Origin Policy (CORS Policy) in Test Client:</h5>
<p><strong>Step 1: Check whether you have an existing init.js file</strong></p>
<ol>
  <li>Log in as the Site Admin.</li>
  <li>Go to <em>Administration</em> &gt; <em>Config &gt; Resources</em>.</li>
  <li>In the <strong>Resources</strong> section, click <strong>File Manager</strong> to access the /<strong>resources</strong> folder.</li>
  <li>Navigate down to <strong>resources/theme/{themename}/SOA/Dev/extensions</strong>. If the folder structure doesn't exist, click <strong>New Directory</strong> to create a new subfolder, name it, and then click the new folder name to change directories down one level into the new one. Then create the next one until the folder structure exists and you are in the <strong>extensions</strong> folder.
    <p><strong>Note</strong>: Make sure the folder naming, including sequence and capitalization, is exactly as above.</p>
  </li>
  <li>If the folder structure already exists, and there is an <strong>init.js</strong> file in the <strong>extensions</strong> folder, download the file so you can modify it offline.</li>
</ol>
<p><strong>Step 2: Create or update the init.js file</strong></p>
<ol>
  <li>Do either of the following:
    <ul>
      <li><strong>If there is an existing init.js file</strong>: Modify the file you downloaded above, adding the lines of code given in <a href="#p_modifying_custom_file_init_js">Modifying the custom init.js file</a> below.</li>
      <li><strong>If there is no existing init.js file</strong>: Create the file and add the code as below.</li>
    </ul>
  </li>
  <li>Customize the <strong>init.js</strong> file to the required settings. For instructions, review the comments in the code.</li>
</ol>
<p><strong>Step 3: Upload the customized init.js file</strong></p>
<ol>
  <li>From the <strong>extensions</strong> folder, click <strong>Upload a File</strong>. Navigate to the location of your custom <strong>init.js</strong> file and upload the file. If you kept the theme name that is the default, it will look like this:
    <ul>
      <li> resources/theme/simpledev/SOA/Dev/extensions/init.js</li>
    </ul>
  </li>
  <li>To update the browser, clear the cache and refresh the page. You might even need to close the browser and re-open to see the update.</li>
</ol>
<p>The default setting for the CORS policy, and the default behavior of Test Client with regard to whether the message is sent to the proxy or directly to the API endpoint, changes according to the value you specified in the <strong>init.js</strong> file. The file itself includes inline documentation.</p>

<h5><a name="p_modifying_custom_file_init_js"></a>Modifying the custom init.js file</h5>
<p>If no customizations were already added in your installation, this file will not exist in your file structure. In that case, you can create the file using the contents below. If the file already exists, you'll need to add the lines of code given below, and then customize as needed.</p>
<p>The code for the default CORS settings for Test Client is shown below. Inline documentation explains the settings you can change. There are two settings:</p>
<ul>
  <li><strong>allowOverride</strong>: <strong>true</strong> by default. If you change it to <strong>false</strong>, Test Client will not display the security settings dialog relating to the same origin policy, and therefore developers will not be able to change the setting.</li>
  <li><strong>defaultOption</strong>: <strong>cmForwardProxy</strong> by default, indicating that the message is sent by Test Client to the proxy and then forwarded to the API endpoint. If you change this setting to <strong>cors</strong>, indicating that the API is expected to support cross-origin resource sharing, the message is sent directly to the API endpoint; the forward proxy is not used.</li>
</ul>
<pre>SOA.Framework.Common.Map.config({
  "testClientSettings" : {
    "policySettings" : {
      "sameOriginPolicy" : {
        // possible values true, false
        // true - will display dialog
        // false - will not display dialog
        // By default this is set to true
        "allowOverride" : true,
        "cors" : {
          // possible values "cors" and "cmForwardProxy"
          // cors - directly access endpoint
          // cmForwardProxy - proxy through Forward Proxy
          // By default this is set to "cmForwardProxy"
          "defaultOption" : "cmForwardProxy"
        }
      }
    }
  }
});</pre>
<p><a href="#top">Back to top</a></p>



<h3><a name="where_download_metadata_json"></a>What are the metadata.json and widget_factory.json files, and how do I use them for customization?</h3>
<p>If you're performing UI customization tasks, you'll need to modify these files:</p>
<ul>
  <li><strong>metadata.json</strong>: a file that describes the layout of the pages and the corresponding URL for each page. If there is no customization in place yet, <strong>metadata.json</strong> contains only a single pair of brackets: <strong>{}</strong>. For an example of customization, see <a href="http://docs.akana.com/cm/share/cm_customizing_ui.htm#metadata_json" title="link to customization content on Akana docs site" target="_blank">metadata.json</a>.</li>
  <li><strong>widget_factory.json</strong>: A JSON file that describes the CanJS view corresponding to each widget in <strong>metadata.json</strong>. If there is no customization in place yet, <strong>widget_factory.json</strong> contains only a single pair of brackets: <strong>{}</strong>. For an example of customization, see <a href="http://docs.akana.com/cm/share/cm_customizing_ui.htm#widget_factory_json" title="link to customization content on Akana docs site" target="_blank">widget_factory.json</a>.</li>
</ul>
<p>First create the files, and them upload them to the location shown below:</p>
<ul>
  <li>/resources/theme/default/SOA/CM/extensions/metadata.json</li>
  <li>    /resources/theme/default/SOA/CM/extensions/widget_factory.json</li>
</ul>
<h5>To upload the metadata.json and widget_factory.json files to the developer portal:</h5>
<ol>
  <li>Log in as the Site Admin.</li>
  <li>Go to <strong>Administration</strong> &gt; <strong>Config</strong> &gt; <strong>Resources</strong>.</li>
  <li>In the <em>Resources</em> section, click <strong>File Manager</strong>.</li>
  <li>Navigate to the /resources/theme/default/SOA/CM/extensions directory. If the folder structure isn't there, create each folder in turn, go into it, and then create the next one until you have the structure. Make sure you get the capitalization exactly correct as shown here.</li>
  <li>In the /resources/theme/default/SOA/CM/extensions folder, upload <strong>metadata.json</strong> and <strong>widget_factory.json</strong>.</li>
  <li>Exit out of File Manager.<br />
  </li>
</ol>
<p><a href="#top">Back to top</a></p>



<h3><a name="how_do_i_find_the_resource_version_key"></a>What is the Resource Version Key and how do I find it?</h3>
<p>UI resource files include all code-related components such as JavaScript files, templates, and stylesheets.</p>
<p>These types of files are cached for a long time, to improve performance, since generally the files do not change. The cache setting is one month.</p>
<p>For all resource files, the URL includes a dynamically-constructed unique ID, called a Resource Version Key.</p>
<p>If a new version of the platform resource files is uploaded, there is a new Resource Version Key. Because the URL is different, the next time the file is retrieved, the latest version replaces the older version. Therefore, a <a href="basics_glossary.htm#gl_cdn">CDN</a>, browser cache, forward proxy, etc. will need to make a new call to get the latest version. The change in the URL triggers the new call, and the updated resource is served.</p>
<p>The key is dynamically constructed every 10 minutes. This means that if you update a file, you won't see the change immediately. To see the update you'll need to do two things:</p>
<ol>
  <li>Wait for 10 minutes to be sure the content is updated.</li>
  <li>Refresh the page so you'll see the change.</li>
</ol>
<p>If you need to set up your platform version so that file updates are immediate, you'll need to:</p>
<ul>
  <li>Make sure you are not using any other components between the browser and the server, that might cache the file, such as a CDN, forward proxy, or reverse proxy.</li>
  <li>Clear the browser cache and refresh the page.</li>
</ul>
<p>The resource version key is used to construct the URL, but is not used when the request comes in. The server will always serve the latest file, independent of the version key specified in the URL. A request referencing an old version key will still get the new version in response.</p>
<p><a href="#top">Back to top</a></p>




<div class = "divider1"></div>
<h3><a name="h_configuration"></a>Configuration:</h3>




<a name="how_do_i_configure_separate_notification_addresses_by_theme"></a><h3>How do I configure separate notification addresses for different platform themes?</h3>
<p>The platform sends out email notifications to keep platform users informed about specific events&#8212;for example, password reset or changes to a team that the user is a member of. Some of these notifications include the platform URL; for example, the Welcome email includes the platform homepage URL for logging in.</p>
<p>If you have more than one theme configured for your platform installation, each theme has a separate URL. If a developer using your theme B forgets his password, the notification with the reset password link must include the URL for Theme B, not for Theme A. Therefore, you will need to take some extra steps so that, where applicable, the notifications triggered by activity on a specific theme use the correct URL for that theme.</p>
<p>Since the theme which by default we call Simple Dev has a simpler user interface and is focused on a developer audience, and the theme which we call Default Theme includes additional functionality, such as API and business management and Site Admin functions, notifications for roles more applicable to Default Theme are always sent out from the Default Theme URL. These roles include:</p>
<ul>
  <li>Site Admin</li>
  <li>Business Admin</li>
  <li>API Admin</li>
</ul>
<p>Notifications for the following roles use a theme-specific URL:</p>
<ul>
  <li>Anonymous user (not signed in as a platform user; for example, in a &quot;forgot password&quot; scenario)</li>
  <li>Developer</li>
  <li>App team member</li>
</ul>
<p>For a full list of roles and the types of notifications that are sent to each role, see <a href="site_admin_users.htm#what_are_the_user_roles_for_notifications">What are the user roles for notifications sent out from the platform?</a></p>
<p>When there are multiple themes configured for the tenant, you will need to run a script to load the TENANT_THEME_ROLES table and map the theme &gt; roles list. This table tells the platform which theme is used for which notifications.</p>
<p>In the NOTIFICATION_ROLES table, each notification template is mapped to the role that it is meant for. Before a notification is sent out, the tenant.console.address variable is replace with the theme-specific URL for the role that the specific notification template is mapped to.</p>
<p>In a few cases, multiple themes might be possible for the same notification. For example, a user of any theme might request a password reset. In this case, the platform uses the URL for the theme that caused the notification to be generated. The Forgot Password notification will include the address of the console for the theme in which the user initiated the Forgot Password request. In an upgrade scenario, or if the database modification to the TENANT_THEME_ROLES table, as below, has not been done, no themes will be mapped to any roles. In that case, we use the default theme assigned to the tenant.</p>
<p>The theme-specific feature cannot be configured in the user interface. Instead, you must run a database script. A template is shown below; this uses variable placeholders for theme name, role name, and tenant name.</p>

<pre>insert into TENANT_THEME_ROLES select TENANTID, '{theme}', '{rolename}' from TENANTS where FEDMEMBERID='{tenant-name}';</pre>
<p>If there is only one tenant, you can omit the tenant name, like this:</p>
<pre>insert into TENANT_THEME_ROLES select TENANTID, '{theme}', '{rolename}' from TENANTS;
</pre>
<p>An example is shown below, using the theme names <strong>default</strong> and <strong>simpledev</strong>. In the below, substitute a value for the {tenant-name} variable or, if there is only one tenant, remove the <strong>where</strong> statement. If you are using different theme names, substitute the applicable values.</p>
<pre>insert into TENANT_THEME_ROLES select TENANTID, 'default', 'Anonymous User' from TENANTS where FEDMEMBERID='{tenant-name}';
insert into TENANT_THEME_ROLES select TENANTID, 'default', 'ApiAdmin' from TENANTS where FEDMEMBERID='{tenant-name}';
insert into TENANT_THEME_ROLES select TENANTID, 'default', 'BusinessAdmin' from TENANTS where FEDMEMBERID='{tenant-name}';
insert into TENANT_THEME_ROLES select TENANTID, 'default', 'SiteAdmin' from TENANTS where FEDMEMBERID='{tenant-name}';
insert into TENANT_THEME_ROLES select TENANTID, 'simpledev', 'User' from TENANTS where FEDMEMBERID='{tenant-name}';
insert into TENANT_THEME_ROLES select TENANTID, 'simpledev', 'Anonymous User' from TENANTS where FEDMEMBERID='{tenant-name}';
insert into TENANT_THEME_ROLES select TENANTID, 'simpledev', 'AppAdmin' from TENANTS where FEDMEMBERID='{tenant-name}';
insert into TENANT_THEME_ROLES select TENANTID, 'simpledev', 'Developer' from TENANTS where FEDMEMBERID='{tenant-name}';
</pre>
<p><a href="#top">Back to top</a></p>



<a name="what_is_the_csrf_prevention_feature"></a><h3>What is the CSRF prevention feature?</h3>
<p>The CSRF prevention feature adds a layer of protection against malicious <a href="basics_glossary.htm#gl_csrf_attack">CSRF</a> attacks, by means of a custom header.</p>
<p>A CSRF attack leverages the fact that the authorized user has already authenticated, and that the cookie is stored in the user's browser. The CSRF prevention feature requires an additional value to be sent as an extra header. If the extra header is not present, the request is rejected as unauthorized.</p>
<p>An authorized app developer can get the value from the cookie and compose and send the custom header with the request message.</p>
<p>The new header is the <a href="basics_glossary.htm#gl_xcsrf_token_fedmemberidheader">X-Csrf-Token_fedmemberID</a> header. The app must take the value in the new Csrf-Token_fedmemberid cookie and send it as the value for the X-Csrf-Token_fedmemberID header in the following scenarios:</p>
<ul>
  <li>All POST operations</li>
  <li>All PUT operations</li>
  <li>All DELETE operations  </li>
  <li>All GET operations <strong>except</strong> those in the following services/activities:
<ul>
      <li>Content upload and management</li>
      <li>Resource upload and management (such as avatars)</li>
      <li>Login</li>
    </ul>
  </li>
</ul>
<p>The <strong>Csrf-Token_fedmemberid</strong> cookie has the same timeout value as the <strong>AtmoAuthToken</strong> authorization cookie (as specified by the Site Admin, or 25 minutes by default).</p>
<p>For information on how to implement the CSRF prevention header, see <a href="#how_do_i_implement_csrf_prevention_feature">How do I implement the CSRF prevention feature?</a> below.</p>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_implement_csrf_prevention_feature"></a><h3>How do I implement the CSRF prevention feature?</h3>
<p>If you're concerned about malicious <a href="basics_glossary.htm#gl_csrf_attack">CSRF</a> attacks, make sure the CSRF prevention feature is in effect. This feature is turned on by default in new implementations, and turned off by default in existing implementations that upgrade to any version of the platform after version 7.1.3.</p>
<p>You can control CSRF prevention via the Business Security settings: see <a href="site_admin_settings.htm#settings_config_security_business">How do I configure settings for business security?</a></p>
<p>If you already have a custom client, refer to <a href="#csrf_prevention_custom_client">I want CSRF prevention, but we already have a custom client. What do I do?</a> below.</p>
<p><a href="#top">Back to top</a></p>



<a name="csrf_prevention_custom_client"></a><h3>I want CSRF prevention, but we already have a custom client. What do I do?</h3>
<p>If your implementation includes the <a href="basics_glossary.htm#gl_csrf_attack">CSRF</a> prevention feature, this requires all messages to POST, PUT, or DELETE operations to use the new <a href="basics_glossary.htm#gl_xcsrf_token_fedmemberidheader">X-Csrf-Token_fedmemberID</a> custom header.</p>
<p>However, if you already have a client that sends and receives messages to the Akana API Platform, when you implement the new feature, messages from the client will be refused because they don't have the custom header.</p>
<p>To support this feature in scenarios where there is an existing client that doesn't use the custom headers, there is a configuration setting you can use to specify that your client is a trusted sender and the custom header is not required. When the sending client is listed in this configuration setting, the messages are processed without the custom header.</p>
<p>In the configuration settings, under com.soa.atmosphere, choose atmosphere.config.csrfHttpWriteSkipUserAgents. This setting supports Network Director and federated Akana API Platform scenarios invoking Akana API Platform APIs without having to send the CSRF token.</p>
<p>For more information about accessing and modifying this setting, see <a href="site_admin_admin_console_settings.htm#ac_settings_cm_navigation">How do I get to the Akana API Platform Configuration Settings in the Akana Administration Console?</a></p>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_configure_security_challenge_questions"></a><h3>How do I configure security challenge questions?</h3>
<p>The platform includes a feature whereby you can configure security challenge questions to be offered to user signing up.</p>
<p>By default, a user signing up is asked to answer three questions. The user's answers are stored securely in the database and the questions/answers are used as additional security for certain sensitive operations, such as when the user requests a password reset.</p>
<p>Later, as part of managing the user profile, the user can modify answers to existing questions, or can choose one or more different questions from the list provided and then answer the new questions.</p>
<p>In some cases, the user's answer might not be displayed, depending on the site's security settings.</p>
<p>The Site Admin can choose from certain questions that are set up by default, to be offered to users, or can compose different questions.</p>
<p>This feature adds another layer of security for the user's account.</p>
<p>Site Admin management of this feature is not currently available via the user interface. You can do this in two ways:</p>
<ul>
  <li>By a database script. For more information, <a href="basics_support.htm#how_do_i_contact_technical_support">contact Technical Support</a>.</li>
  <li>Using the API: via the Save Challenges operation in the Businesses service. For more information, refer to <a href="http://docs.akana.com/cm/api/businesses/m_businesses_saveChallenges.htm" target="_blank">the API documentation for the <span class="apidoc_code">PUT&nbsp;/api/businesses/{BusinessID}/challenges</span> operation at docs.akana.com</a>.</li>
</ul>
<p class="apidoc_note"><strong>Note</strong>: If you add security questions and later replace them with different ones, the older questions are maintained in the database since user might have set up answers to those questions. In this case, they are set to Inactive in the database (ACTIVE=N) since they are no longer in active use.</p>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_enable_markdown_for_board_items"></a><h3>How do I enable Markdown for board items?</h3>
<p>The platform supports the use of Markdown to add rich text formatting, inline images, and downloadable files in user-generated board entries.</p>
<p>If enabled, Markdown is supported for discussions, tickets, alerts, reviews, and comments.</p>
<p>For each type of board item that supports Markdown, there are two configurable settings:</p>
<ul>
  <li>Markdown Support</li>
  <li>External Link Support</li>
</ul>
<h5>To enable Markdown for discussions, tickets, alerts, reviews, or comments:</h5>
<ol>
  <li>Log in as the Site Admin and click the <em>Administration</em> quick filter (wrench icon).</li>
  <li>On the left menu, click Settings.</li>
  <li>Choose the type of setting:
    <ul>
      <li><strong>Alerts</strong>. For more information, see <a href="site_admin_settings.htm#settings_config_alerts">How do I configure settings for alerts?</a></li>
      <li><strong>Comments</strong>. For more information, see <a href="site_admin_settings.htm#settings_config_comments">How do I configure settings for comments?</a></li>
      <li><strong>Discussions</strong>. For more information, see <a href="site_admin_settings.htm#settings_config_discussions">How do I configure settings for discussions?</a></li>
      <li><strong>Reviews</strong>. For more information, see <a href="site_admin_settings.htm#settings_config_reviews">How do I configure settings for reviews?</a></li>
      <li><strong>Tickets</strong>. For more information, see <a href="site_admin_settings.htm#settings_config_tickets">How do I configure settings for tickets?</a></li>
    </ul>
  </li>
    <li>On the <strong>Markdown Support</strong> field, click <strong>Enabled</strong>.
<p>This enables the use of Markdown to add formatting such as heading styles, bold and italics, tables, and lines. It also allows image upload for the display of inline images, and file upload so that the content can include a link to a downloadable file.</p></li>
    <li>On the <strong>External Link Support</strong> field, click <strong>Enabled</strong> (or leave as Disabled).
    <p>This enables the use of external links in Markdown. It's only applicable if Markdown support is enabled. One application of this setting is to restrict links to external sites for security reasons, by leaving external link support disabled, while allowing formatting and uploaded files by enabling the Markdown setting.</p></li>
    <li>Click <strong>Save</strong>.</li>
</ol>
<p>For more information on using Markdown, see <a href="basics_boards.htm#h_markdown">Using Markdown</a>.</p>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_monitor_app_security_changes"></a><h3>I need to monitor app security changes. What do I do?</h3>
<p>By default, whenever an app developer makes a significant change to app credentials, the user is required to enter a comment regarding the action being done. A notification is posted to the app's Board regarding the action, the user performing the action, and the user's comment. This acts as an audit trail which you can also access via the database.</p>
<p>Comments are collected, and Board items generated, for the following events relating to app security:</p>
<ul>
  <li>App Shared Secret is regenerated.</li>
  <li>Credentials are uploaded.</li>
  <li>Credentials are modified.</li>
  <li>Credentials are removed.</li>
</ul>
<p><a href="#top">Back to top</a></p>




<div class = "divider1"></div>
<h3 style="color: gray;"><a name="h_page_customization">Site Page Customization:</a></h3>




<a name="custom_left_menubar"></a><h3>How do I customize the left menu bar?</h3>
<p>The left menu bar  for all default pages in the API Platform user interface is controlled by the <strong>left_nav.json</strong> file.</p>
<p>This file includes definitions for all the left navigation menus in the Akana API platform user interface. Below are the top-level navigation pages:</p>
<table width="100%" border="0" align="left">
  <tr>
    <td width="15%" valign="top"><ul>
      <li>home</li>
      <li>api</li>
      <li>apiversion</li>
    </ul></td>
    <td width="15%" valign="top"><ul>
      <li>app</li>
      <li>group</li>
      <li>board</li>
    </ul></td>
    <td width="70%" valign="top"><ul>
      <li>system</li>
      <li>license</li>
      <li>user</li>
    </ul></td>
  </tr>
</table>

<p>You can customize any of the left menus to add, change, or delete entries.</p>
<p><strong>Note</strong>: once you have a customized file in place, the platform always refers to your custom file. If you upgrade to a new version of the platform that itself includes new left menu items, or includes any other changes, you won't get the benefit of the updates. In order to keep up with the latest version, you'd need to get the updated left_nav.json file from the new version, merge your changes, and upload again.</p>
<p>Remember that once you customize a user interface component, you have to manually manage those changes from release to release.</p>
<h5>To customize a specific left menu bar:</h5>
<ol>
  <li>Download the left_nav.json file for the current version (<a href="assets/left_nav.json" title="Left_nav JSON file" target="_blank">left_nav.json for version 8.1</a>).</li>
  <li>Identify which section of the file to edit, depending on which left menu bar you want to customize.</li>
  <li>Edit the file, making sure that you preserve the JSON structure.</li>
  <li>Upload the modified file (Administration &gt; Config &gt; Resources &gt; Resources file manager &gt; create path and upload file.</li>
  <li>Test.</li>
</ol>


<h5>Path for the file</h5>
<p>The path for the file, which you'll probably need to create in Step 3 above, is as follows: </p>
<p><strong>/resources/theme/{theme name}/SOA/CM/extensions</strong></p>
<p><strong>Note</strong>: In most cases, the value for {theme name} is <strong>default</strong>. This is the default value, generally accepted except in scenarios where there are several developer portal themes. If you're not sure of the theme name for your installation, you can easily check: in the UI go to <strong>Administration</strong> &gt; <strong>Config</strong> and check the <strong>Theme</strong> drop-down at the top left.</p>
<p>An example of the correct File Manager location, with the file uploaded, is shown below.</p>
<p><img src="assets/custom_leftnav.jpg" alt="file location for custom left nav" /></p>


<h5>Default file content</h5>
<p>A portion of the default content of the left_nav.json file for version 8.1 of the API platform is shown below. Note that this is just one small piece of the file as an example. This portion has two sections:</p>
<ul>
  <li>The initial example is a template showing how the file is put together.</li>
  <li>The API section, which has changed significantly in version 8.1.</li>
</ul>
<p>You can also <a href="assets/left_nav.json" title="Left_nav JSON file" target="_blank">download the entire file (version 8.1)</a>.</p>
<pre>{
  "example":[
    {
      "displayNameKey":"abc.def.ghi",
      "viewName":"used_by_parser"
    },
    {
      "displayNameKey":"abc.def.ghi",
      "viewName":"used_by_parser",
      "children":[
        {
          "displayNameKey":"abc.def.ghi",
          "viewName":"used_by_parser"
        },
        {
          "displayNameKey":"abc.def.ghi",
          "viewName":"used_by_parser"
        }
      ]
    },
    {
      "displayNameKey":"abc.def.ghi",
      "view":{
        "objectType":"this will override the parser",
        "viewName":"view name"
      }
    }
  ],
  "api":[
    {
      "displayNameKey":"resource.menu.api.details.overview",
      "viewName":"details"
    },
    {
      "displayNameKey":"resource.menu.api.details.details",
      "viewName":"specifics",
      "roleNames":[
        "Admin",
        "SiteAdmin"
      ]
    },
    {
      "displayNameKey":"resource.menu.api.implementations",
      "viewName":"implementations",
      "roleNames":[
        "Admin",
        "SiteAdmin"
      ]
    },
    {
      "displayNameKey":"resource.menu.api.board",
      "viewName":"board",
      "widgetRef":"DashboardItemsFilter"
    },
    {
      "displayNameKey":"resource.menu.api.details.monitor",
      "viewName":"monitor",
      "roleNames":[
        "Admin"
      ],
      "children":[
        {
          "displayNameKey":"resource.menu.api.details.monitor.overview",
          "viewName":"monitor"
        },
        {
          "displayNameKey":"resource.menu.api.details.monitor.charts",
          "viewName":"charts"
        },
        {
          "displayNameKey":"resource.menu.api.details.monitor.logs",
          "viewName":"logs"
        },
        {
          "displayNameKey":"resource.menu.api.details.monitor.licenses",
          "viewName":"licenses"
        }
      ]
    },
    {
      "displayNameKey":"resource.menu.api.details.documents",
      "viewName":"documents",
      "widgetRef":"DocTOC"
    },
    {
      "displayNameKey":"resource.menu.api.testclient",
      "viewName":"testclient"
    },
    {
      "displayNameKey":"resource.menu.api.details.legals",
      "viewName":"legal"
    },
    {
      "displayNameKey":"resource.menu.api.visibility",
      "viewName":"apilicense",
      "roleNames":[
        "Admin",
        "SiteAdmin"
      ],
      "postRenderer":"postRendererForAPIMenuVisibilityTab",
      "children":[
        {
          "displayNameKey":"resource.menu.api.groupaccess",
          "viewName":"groupaccess"
        }
      ]
    },
    {
      "displayNameKey":"resource.menu.api.admins",
      "viewName":"admins",
      "roleNames":[
        "Admin",
        "SiteAdmin"
      ]
    },
    {
      "displayNameKey":"resource.menu.api.connections",
      "viewName":"connections",
      "roleNames":[
        "Admin"
      ]
    },
    {
      "displayNameKey":"resource.menu.api.followers",
      "viewName":"followers",
      "roleNames":[
        "Admin"
      ]
    }
  ]
}</pre>

<h5>Customization example</h5>
<p>Let's say that on the API menu you wanted to extend the Monitor menu item to include an additional sub-item; in addition to Overview, Charts, Logs, and Licenses, you want to add a link to AlertSite.</p>
<p><strong>Step 1: find applicable section in default file</strong></p>
<p>First, in the <strong>left_nav.json</strong> file, find the api section and look for the Monitor section, shown below.</p>
<pre>"displayNameKey": "resource.menu.api.details.monitor",
"viewName": "monitor,
"roleNames": ["Admin"],
"children": [
  {
    "displayNameKey": "resource.menu.api.details.monitor.overview",
    "viewName": "monitor"
  }, {
    "displayNameKey": "resource.menu.api.details.monitor.charts",
    "viewName": "charts"
  }, {
    "displayNameKey": "resource.menu.api.details.monitor.logs",
    "viewName": "logs"
  }, {
    "displayNameKey": "resource.menu.api.details.monitor.licenses",
    "viewName": "licenses"
  }
]</pre>

<p><strong>Step 2: customize</strong></p>
<p>Now, add the new section. It might look something like the below (last subsection is new):</p>
<pre>"displayNameKey": "resource.menu.api.details.monitor",
"viewName": "monitor,
"roleNames": ["Admin"],
"children": [
  {
    "displayNameKey": "resource.menu.api.details.monitor.overview",
    "viewName": "monitor"
  }, {
    "displayNameKey": "resource.menu.api.details.monitor.charts",
    "viewName": "charts"
  }, {
    "displayNameKey": "resource.menu.api.details.monitor.logs",
    "viewName": "logs"
  }, {
    "displayNameKey": "resource.menu.api.details.monitor.licenses",
    "viewName": "licenses"
  }, {
    "displayNameKey": "resource.menu.api.details.monitor.alertsite",
    "viewName": "alertsite"
  }
]</pre>
<p><a href="#top">Back to top</a></p>



<a name="custom_support_page"></a><h3>How do I customize the Support page?</h3>
<p>In the developer portal user interface, the help link to the right of the top navbar leads to the Support page. Here, you can add content that's specific to your version of the developer portal. You can also include a link to the main help page to the developer portal (<a href="http://docs.akana.com/cm/learning.html" title="link to main help page" target="_blank">http://docs.akana.com/cm/learning.html</a>).</p>
<p>The URL for the Support page is:</p>
<pre>{hostname}/#/{tenantid}/home/support</pre>
<h5><a name="proc_custom_support_page"></a>To customize the Support page for the developer portal</h5>
<ol>
  <li>Outside the platform, prepare an HTML file for the Support page, and name it <strong>index.htm</strong>.</li>
  <li>Log in as the Site Admin.</li>
  <li>Go to <strong>Administration</strong> &gt; <strong>Config</strong><em> &gt; </em><strong>Resources</strong>.</li>
  <li>In the <strong>Content</strong> section, click <strong>File Manager</strong>. The File Manager window opens at the <strong>content</strong> folder.</li>
  <li>Click into the <strong>home</strong> directory and then the <strong>support</strong> directory. You'll see the existing <strong>index.htm</strong> file in the folder.</li>
  <li><strong>Optional</strong>: If you want to, you can rename the existing file so that you'd be able to restore it if needed. Click the <strong>Rename</strong> icon and change the name of the file, as shown below.
  <p><img src="assets/fe_rename.jpg" alt="Renaming a file in File Explorer" /></p></li>
  <li>Click <strong>Upload a File</strong>, navigate to the location of your new file, and upload it.</li>
  <li>Click outside the File Manager.</li>
  <li>Test:
    <ul>
      <li>Navigate to the Support page.</li>
      <li> If you don't immediately see the new page, clear the cache and refresh the page.</li>
      <li>Verify that the page looks as expected and that any links work.</li>
    </ul>
  </li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="custom_fonts_overview"></a><h3>How do I customize fonts in the developer portal?</h3>
<p>You can customize any of the fonts used in the developer portal user interface. You'll need to complete the high-level steps below.</p>
<h5><a name="proc_custom_fonts"></a>To customize fonts in the developer portal: high-level steps</h5>
<ol>
  <li>Identify the specific CSS rules you want to customize, using developer tools in the user interface.</li>
  <li>Determine the fonts you want to use and whether you want to reference or upload the fonts.</li>
  <li>Download the platform style file. See <a href="#how_do_i_download_platform_css">How do I download the platform CSS?</a></li>
  <li>Update the <strong>custom.less</strong> file to use the new fonts, in one of two ways:
<ul>
      <li>Referencing an external font file: see <a href="#custom_fonts_external">How do I customize fonts by referencing an external font?</a></li>
      <li>Uploading font files: see <a href="#custom_fonts_uploaded">How do I customize fonts by uploading font files?</a></li>
    </ul>
  </li>
  <li>Import the revised CSS. See <a href="#upload_modified_custom_less">How do I upload the custom.less file after I've updated it?</a></li>
  <li>Refresh your browser and review the results.</li>
</ol>
<p>The steps are essentially the same for Default Theme and Simple Developer theme, with the exception of the file locations for uploading the revised files. For information on the file locations for customization of Hermosa theme, see <a href="#customization_hermosa_files">Where do I store customization files for Hermosa theme?</a></p>
<p><a href="#top">Back to top</a></p>



<a name="custom_fonts_reference_external"></a><h3>How do I customize fonts by referencing an external font?</h3>
<p><strong>Note</strong>: this topic only covers the steps for referencing the external font in the <strong>custom.less</strong> file. For the full high-level font customization procedure, see <a href="#custom_fonts_overview">How do I customize fonts in the developer portal?</a> above.</p>
<p>When you reference an external font, you have to add code in the downloaded <strong>custom.less</strong> file to do two things:</p>
<ol>
  <li><a href="#custom_fonts_referenced_step_1">Reference the external font file using an <strong>@import</strong> statement</a>.</li>
  <li><a href="#custom_fonts_referenced_step_2">Indicate which styles will use the new font</a>.</li>
</ol>
<p class="apidoc_note"><strong>Note</strong>: It's a good idea to keep a backup copy of the original file and any customization versions that you implement, as a manual version control. If you're not happy with the results when you upload the new customizations, you can revert to the previous version before troubleshooting.</p>

<a name="custom_fonts_referenced_step_1"></a><h5>Reference the external font file using an <strong>@import</strong> statement</h5>
<p>Locate your <strong>custom.less</strong> file and reference the custom font by providing the import URL, as shown below. This example references one of Google's cloud-hosted fonts, &quot;Nixie One.&quot; Add this statement at the top of the file:</p>
<pre>@import url(https://fonts.googleapis.com/css?family=Nixie+One);</pre>

<a name="custom_fonts_referenced_step_2"></a><h5>Indicate which styles will use the new font</h5>
<p>Modify the CSS rules in the <strong>custom.less</strong> file to use the new font. The examples below illustrate modifying the font in two different ways:</p>
<ol>
  <li>Replacing all platform styles with the new font.</li>
  <li>Using the new font on specific elements.</li>
</ol>
<p><strong>Example 1</strong>: Replacing all platform styles with the new font, including headings, menus, error messages, and all other copy elements in the developer portal.</p>
<pre>@main-font: &quot;Nixie One&quot;, Arial, Helvetica, sans-serif;</pre>
<p><strong>Example 2</strong>: Using the new font on all Header elements and left nav links.</p>

<pre>.headerPanel {
  font-family: 'Nixie One', cursive;
}
.soa-ui-cm-leftnav-item {
  font-family: 'Nixie One', cursive;
}</pre>

<p>When you've modified the file, the next step is to upload the revised file and review the results. For the full high-level font customization procedure, see <a href="#proc_custom_fonts">To customize fonts in the developer portal: high-level steps</a> above.</p>
<p><a href="#top">Back to top</a></p>



<a name="custom_fonts_uploaded"></a><h3>How do I customize fonts by uploading font files?</h3>
<p><strong>Note</strong>: this topic only covers the steps for uploading the fonts and referencing the uploaded fonts in the <strong>custom.less</strong> file. For the full high-level font customization procedure, see <a href="#custom_fonts_overview">How do I customize fonts in the developer portal?</a> above.</p>
<p>When you customize fonts by uploading font files, you have to do three things:</p>
<ol>
  <li><a href="#custom_fonts_uploaded_step_1">Upload the font files to the correct location</a>.</li>
  <li><a href="#custom_fonts_uploaded_step_2">Update the custom.less file to reference the new fonts in the location you uploaded them to, using <strong>@font-face</strong></a>.</li>
  <li><a href="#custom_fonts_uploaded_step_3">Add or modify CSS rules to use the new font</a>.</li>
</ol>


<a name="custom_fonts_uploaded_step_1"></a><h5>Upload the font files to the correct location</h5>
<p>The platform looks for the font files in a location relative to the <strong>supplement.css</strong> or <strong>style.css</strong> files, which are stored in the<strong> /resources/theme/default/style</strong> folder.</p>
<p>It's important to upload the files in the right place, and then use the correct relative path when referencing the font files in the <strong>custom.less</strong> file. The examples below use a font named <strong>advent-pro-v4-latin</strong>, and the fonts are stored in a <strong>/fonts/advent-pro-v4-latin</strong> subfolder. To do this you'd need to complete these steps:</p>
<ol>
  <li>Prepare the font ZIP file externally. See <a href="#preparing_zip">Prepare the fonts ZIP file</a> below.</li>
  <li>In the platform, go to <strong>Administration</strong> &gt; <strong>Config</strong> &gt; <strong>Resources</strong> &gt; <strong>Resources File Manager</strong>.</li>
  <li>In the File Manager, click down to the<strong> /theme/default/style</strong> folder.</li>
  <li>Create a <strong>fonts</strong> folder and navigate down into the folder.</li>
  <li>Choose <strong>Upload a ZIP Archive</strong> to upload the <strong>fonts.zip</strong> file that you prepared in Step 1. The fonts are uploaded and are immediately available.</li>
  <li>Next, update the <strong>custom.less</strong> file to use the new fonts. See <a href="#custom_fonts_uploaded_step_2">Update the custom.less file to reference the new fonts in the location you uploaded them to, using @font-face</a> below.</li>
</ol>

<a name="preparing_zip"></a>
<h5><strong>Prepare the fonts ZIP file</strong></h5>
<p>You can create folders and upload files individually, but you can also upload everything in one ZIP file, which is quicker.</p>
<p>For the example above, let's say that you are using one custom font, advent-pro-v4-latin, which includes five individual files for variations of the font.</p>
<p>On your local drive, create a folder that uses the font name, <strong>advent-pro-v4-latin</strong>, and download the files inside it.</p>
<p>Then, create a ZIP file named <strong>fonts.zip</strong> and copy the <strong>advent-pro-v4-latin folder</strong> and its contents into it. Then, you can upload the <strong>fonts.zip</strong> file in step 5 above.</p>

<a name="custom_fonts_uploaded_step_2"></a><h5>Update the custom.less file to reference the new fonts in the location you uploaded them to, using @font-face</h5>
<p>The next step is to use the css attribute of <strong>@font-face</strong> to use the new font. Use the example below as a guide.</p>
<p>In this example, you can see that the paths reference the /fonts/advent-pro-v4-latin font files that you uploaded in the previous step. Whatever fonts you are using, make sure the paths are correct for the name and location of your own font files.</p>
<p>Font locations should always be loaded, and referenced, as relative to the <strong>/resources/theme/default/style</strong> folder.</p>
<pre>
@font-face {
  font-family: 'Advent Pro';
  font-style: normal;
  font-weight: 400;
  src: url('./fonts/advent-pro-v4-latin-regular.eot'); /* IE9 Compat Modes */
  src: local('Advent Pro Regular'), local('AdventPro-Regular'),
  url('./fonts/advent-pro-v4-latin/advent-pro-v4-latin-regular.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
  url('./fonts/advent-pro-v4-latin/advent-pro-v4-latin-regular.woff2') format('woff2'), /* Super Modern Browsers */
  url('./fonts/advent-pro-v4-latin/advent-pro-v4-latin-regular.woff') format('woff'), /* Modern Browsers */
  url('./fonts/advent-pro-v4-latin/advent-pro-v4-latin-regular.ttf') format('truetype'), /* Safari, Android, iOS */
  url('./fonts/advent-pro-v4-latin/advent-pro-v4-latin-regular.svg#AdventPro') format('svg'); /* Legacy iOS */
}</pre>

<a name="custom_fonts_uploaded_step_3"></a>
<h5>Add or modify CSS rules to use the new font</h5>
<p>The final preparation step is to update the <strong>custom.less</strong> file so that specific CSS rules use the new font.</p>
<p><strong>Tip</strong>: If you're not sure which rules to change, use the browser developer tools to inspect the elements so you can identify the CSS rule names. There are also comments in the <strong>custom.less</strong> file to indicate how the various elements are used.</p>
<p>The example below uses the new font on all Header elements and left nav links.</p>
<pre>
.headerPanel{
  font-family: 'Advent Pro', sans-serif;
}
.soa-ui-cm-leftnav-item{
  font-family: 'Advent Pro', sans-serif;
}</pre>
<p>The next step is to upload the revised file to the developer portal and see the results: see <a href="#upload_modified_custom_less">How do I upload the custom.less file after I've updated it?</a></p>


<h4>Custom fonts: Additional information</h4>
<p>Many fonts are available, free or for purchase, online. Below are a couple of suggestions for free fonts:</p>
<ul>
  <li>Fonts hosted by Google: <a href="https://www.google.com/fonts" target="_blank">https://wwhttps://www.google.com/fontsw.google.com/fonts</a>.</li>
  <li>Sample fonts that you can download and host locally: <a href="https://google-webfonts-helper.herokuapp.com/fonts" target="_blank">https://google-webfonts-helper.herokuapp.com/fonts</a> (Google Webfonts Helper).</li>
</ul>
<p><a href="#top">Back to top</a></p>



<a name="diff_page_after_login"></a><h3>How do I customize so that users are taken to a different page after login?</h3>
<p>You can customize the API Platform user interface so that after logging in, rather than being taken to the Dashboard which is the usual behavior, users are taken to a different page that you specify.</p>
<p>To set this up, you'll need to perform these high-level tasks (see procedures below):</p>
<ol>
  <li><a href="#diff_page_after_login_1">Determine the page you want users to be taken to</a></li>
  <li><a href="#diff_page_after_login_2">Set up a <strong><strong>custom_en-us.json</strong></strong> file</a></li>
  <li><a href="#diff_page_after_login_3">Upload the custom_en-us.json file to the developer portal </a></li>
  <li><a href="#diff_page_after_login_4">Test</a></li>
</ol>

<a name="diff_page_after_login_1"></a>
<h4>1: Determine the page you want users to be taken to</h4>
<p>You might decide that you want users to be taken to the My Apps page, or the My APIs page, or the Support page.</p>
<p>Decide which page you want users to be taken to, and note the URL.</p>
<p>The example below takes users to the My Apps page after login.</p>


<a name="diff_page_after_login_2"></a>
<h4>2: Set up a custom_en-us.json file</h4>
<p>You'll need to create a <strong>custom_en-us.json</strong> file; if this file exists, it overrides platform defaults. </p>
<p>In this file, you can set up some custom code so that users are taken to a different page after login, rather than the default /home/landing page.</p>
<p>As an example, let's say you want users to be directed to the My Apps page. The example below modifies the platform to direct users to this page after login.</p>
<pre>{
"errors": {},
"labels":
{ "customLoginPage": "/home/myapps" }

,
"messages": {},
"validator": {
"errors": {}
}
}</pre>
<p>Save the file, which you'll upload to the platform in Step 3.</p>
<p>Platform location for this file: <strong>/resources/theme/{your_theme_name}/locales/custom_en-us.json</strong>.</p>
<p><strong>Additional examples</strong></p>
<p>Some other examples of how the login page entry could look are shown below.</p>
<pre>//"labels": { },    -> No custom login
//"labels": {"customLoginPage": "/home/customdashboard" }, ->  Login takes user to a custom page (required adding new page)
//"labels": {"customLoginPage": "/home/landing" }, ->  Login takes user to landing page
//&quot;labels&quot;: {&quot;customLoginPage&quot;: &quot;/home/apis&quot; }, -&gt;  Login takes user to My APIs</pre>


<h4><a name="diff_page_after_login_3"></a>3: Upload the custom_en-us.json file to the developer portal</h4>
<p>In the developer portal, go to <strong>Administration</strong> &gt; <strong>Config</strong> &gt; <strong>Resources</strong> &gt; Resources File Manager.</p>
<p>Make sure you know the name of the theme you're customizing. If your platform version doesn't have customized theme names, the main developer portal theme name is <strong>default</strong>. If you're not sure of the theme name, see <a href="#determine_theme_name">How can I determine the theme name?</a></p>
<p>Upload the <strong>custom_en-us.json</strong> file to /resources/theme/{your_theme_name}/locales. </p>
<p><strong>Note</strong>: If you haven't customized before, you'll have to create the <strong>theme</strong> folder, change to that folder, create the <strong>default</strong> (or other theme name) folder, change to that folder, create the <strong>locales</strong> folder, change to that folder, and then upload the <strong>custom_en-us.json</strong> file.</p>


<a name="diff_page_after_login_4"></a>
<h4>4: Test</h4>
<p>Once you've uploaded the files, it's time to test.</p>
<h5>To test the custom login</h5>
<ol>
  <li>Log out.</li>
  <li>Clear the browser cache.</li>
  <li>Refresh the browser page.</li>
  <li>Log in. Upon login, you are taken to the new page.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<div class = "divider1"></div>
<h3 style="color: gray;"><a name="h_cookies">Cookies:</a></h3>




<a name="does_the_developer_portal_use_cookies_siteadmin"></a><h3>Does the developer portal use cookies?</h3>
<p>Yes. The developer portal uses two main  cookies:</p>
<ol>
  <li><strong>Session authorization cookie (AtmoAuthToken)</strong>
    <p>When a user logs in, an authorization cookie is sent, and is stored in the browser for the duration of the user's session. The session cookie is renewed as long as the session remains active, and is refreshed if the information stored in the cookie, such as the user's permission information, changes. It is removed when the user logs out. If the user does not log out, it expires after 30 minutes of inactivity. If the user closes the browser, the cookie remains valid until the 30-minute expiration time; if the user opens the browser again within this time, and resumes the session, the cookie remains valid. If the browser is closed for 30 minutes the cookie expires.</p></li>
  <li><strong>CSRF prevention cookie (Csrf-Token)</strong>
<p>Like the AtmoAuthToken cookie, the CSRF prevention cookie is set at login. It is used only if the CSRF prevention feature is in use. The platform provides this cookie as an additional safeguard against CSRF attacks. Like the authorization cookie, it is stored in the browser for the duration of the user's session. It is renewed if the AtmoAuthToken cookie is renewed. The CSRF prevention cookie has the same expiration time as the AtmoAuthToken cookie. For more information, see <a href="#what_is_the_csrf_prevention_feature">What is the CSRF prevention feature?</a></p>
  </li>
</ol>
<p>A key difference between these two cookies is that the AuthToken cookie is set with the HttpOnly option, meaning that JavaScript cannot read this cookie; the CSRF token cookie does not use the HttpOnly option, because the JavaScript must be able to read this cookie when making <a href="basics_glossary.htm#gl_ajax">Ajax</a> calls from the browser.</p>
<p><strong>Local browser storage</strong></p>
<p>In addition,  the developer portal uses a local storage field in the browser, <strong>touch</strong>, to store the timestamp that's used to manage the inactive session timeout feature in scenarios where the user might have two browser tabs open at the same time. This is true for the following browser versions:</p>
<ul>
  <li>Internet Explorer version 8 and later</li>
  <li>Chrome</li>
  <li>Mozilla Firefox</li>
</ul>
<p>There are other cookies that are used in different parts of the developer portal user interface very briefly as a way to pass information from one page to another. For more information, see <a href="#does_the_developer_portal_use_any_other_cookies">Does the developer portal use any cookies other than the session and CSRF cookies?</a> below.</p>
<p><a href="#top">Back to top</a></p>



<a name="will_the_portal_work_properly_if_cookies_are_disabled"></a><h3>Will the developer portal work properly if cookies are disabled?</h3>
<p>If cookies are disabled, anonymous users can still access the portal, but none of the functionality that is available only to users who are logged in will be available. This includes activities such as adding, modifying, and deleting apps and APIs, creating contracts, creating or joining groups, and commenting on discussions.</p>
<p>The session cookie  (AtmoAuthToken) includes information on the user's roles, and the resources the user has access to, so it is necessary for the full functionality of the developer portal.</p>
<p>The Site Admin can turn off the CSRF prevention feature in the security settings (Administration &gt; Settings &gt; Security); in this case, the Csrf-Token cookie is not used. However, turning off this security feature is not recommended.</p>
<p><a href="#top">Back to top</a></p>



<a name="what_information_is_in_the_cookies"></a><h3>What information is contained in the cookies and what is it used for?</h3>
<p>The session cookie includes information on the roles and permissions that have been granted to the user. This includes:</p>
<ul>
  <li>Whether the user is a Site Admin or Business Admin.</li>
  <li>Whether the user is an API Admin for one or more APIs, and if so which ones.</li>
  <li>Whether the user is an app team member for one or more apps, and if so which ones.</li>
  <li>Groups the user is a member of, and the membership role if applicable (Admin, Leader, or Member, for independent platform groups).</li>
  <li>Resources the user is following.</li>
</ul>
<p>The session cookie determines which resources the user can see and can modify, based on the user's role and permissions as above.</p>
<p>The Csrf-Token cookie is used only as an additional mechanism that can be used to help prevent a CSRF attack. When adding, changing, or deleting platform resources, the CSRF-header is needed; the CSRF-Token is used in composing the CSRF header. For more information, see <a href="#what_is_the_csrf_prevention_feature">What is the CSRF prevention feature?</a> The CSRF settings can be turned off; in this case, the Csrf-Token cookie is not used.</p>
<p><a href="#top">Back to top</a></p>



<a name="does_the_developer_portal_store_peristent_cookies_in_the_browser"></a><h3>Does the developer portal store persistent cookies in the browser?</h3>
<p>No. Both the cookies that the developer portal uses are session cookies. They are removed when the session ends or times out.</p>
<p><a href="#top">Back to top</a></p>



<a name="does_the_developer_portal_send_cookies_to_other_sites"></a><h3>Does the developer portal send cookies to other sites?</h3>
<p>No. The developer portal uses its own cookies, as covered in <a href="#does_the_developer_portal_use_cookies_siteadmin">Does the developer portal use cookies?</a> above. It does not send cookies to other sites.</p>
<p><a href="#top">Back to top</a></p>



<a name="does_the_developer_portal_use_any_other_cookies"></a><h3>Does the developer portal use any cookies other than the session and CSRF cookies?</h3>
<p>The main cookies that the developer portal uses are the session and CSRF cookies, as covered in <a href="#does_the_developer_portal_use_cookies_siteadmin">Does the developer portal use cookies?</a> above.</p>
<p>However, the portal also uses cookies very briefly with certain features, in the following scenarios:</p>
<ol>
  <li><strong>Test Client with OAuth Policy</strong>
    <p>If you are using <a href="basics_glossary.htm#gl_testclient">Test Client</a> with OAuth policy, there is a cookie used in the Test Client feature that is set in the main page of the user interface so that it can be read in a popup window. It is deleted as soon as it has been read in the popup window. The platform does this to work around browser-enforced security, since the OAuth provider is usually from a different URL than the developer portal URL. This cookie is live in Test Client only for a very short time, probably a few milliseconds. The cookie name is <strong>oauthRedirectInfoCookie</strong>.</p></li>
  <li><strong>Third-Party Login with Google and Facebook (not LDAP)</strong>
    <p>If you are using a third party such as Google or Facebook for login (not LDAP login), when the  user logs into the portal for the first time, the portal uses a transient cookie to exchange information between the SSO login page and the signup page, in order to complete the signup page. This cookie stays live only for a very short time, probably a few milliseconds.</p>
  </li>
</ol>
<p class="apidoc_note"><strong>Note</strong>: If the platform is configured for Google Analytics integration, there will be additional cookies that are used by Google Analytics. Google Analytics integration is configured in the database. To turn it on: in the <strong>TENANTS</strong> table, set the value of the <strong>ANALYTICSACCOUNTID</strong> column to your Google Analytics account ID. To turn it off: set this value to <strong>null</strong>. Google Analytics cookies are prefixed with __utm.</p>
<p><a href="#top">Back to top</a></p>


<!--<a name="hermosa_custom_labels_text"></a><h3>How do I customize labels and text for Hermosa theme?</h3>
<p>For Hermosa theme, to overwrite labels and text you'll need to create customization files and place them in this location:</p>
<pre>resources/theme/hermosa/i18n/CustomApplicationResources_en-US.properties
resources/theme/hermosa/i18n/CustomApplicationResources.properties</pre>
<p>started 7/26/16 based on AB presentation of 7/21. But need more info.</p>
<p><a href="#top">Back to top</a></p>
-->


<div class = "divider1"></div>



<h3 id="relatedtopics">Related Topics</h3>
<table width="98%" border="0" cellspacing="0" cellpadding="2" class="doctable">
  <tr>
    <td width="33%"><ul>
      <li><a href="site_admin_.htm">Site Admin Summary Page</a></li>
      <li><a href="site_admin_overview.htm">Site Admin Responsibilities</a></li>
      <li><a href="site_admin_users.htm">Managing User Accounts</a></li>
      <li><a href="site_admin_site_admins.htm">Managing Site Admins</a></li>
      <li><a href="business_admin_business_adm.htm">Managing Business Admins</a></li>
      <li><a href="bus_site_admin_dzs.htm">Managing Deployment Zones</a></li>
    </ul>
</td>
    <td width="33%"><ul>
      <li><a href="bus_site_api_admin_forum.htm">Forum Moderation</a></li>
      <li><a href="site_admin_domains.htm"> Domains</a></li>
      <li><a href="site_admin_domains_eoap.htm">External OAuth Provider Domain</a></li>
      <li><a href="site_admin_domains_oidc.htm">OpenID Connect Support</a></li>
      <li><a href="site_admin_ov_pf_endtoend.htm">PingFederate Setup</a></li>
    </ul></td>
    <td width="33%"><ul>
      <!--<li><a href="site_admin_config.htm"> Configuration</a></li>-->
      <li><a href="site_admin_settings.htm"> Settings</a></li>
      <li><a href="site_admin_workflows.htm"> Workflows</a></li>
      <li><a href="site_admin_tc.htm"> Test Client</a></li>
      <li><a href="site_admin_es.htm"> Search Configuration</a></li>
      <li><a href="site_admin_content_guidelines_sd.htm">Content Development Guidelines for Simple Dev Theme</a></li>
    </ul>
</td>
  </tr>
</table>
<hr />
