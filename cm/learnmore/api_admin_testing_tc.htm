---
layout: page
title: API Testing | API Admin | Akana API Platform Help
description: Test your API in Test Client.
product: cm
category: learn
sub-nav-class: API Testing
weight: 2614
type: page
nav-title: API Testing
---
<h1 id="top">API Testing with Test Client</h1>
<p>Test your API in Test Client.</p>
<hr class="divide_hr" />


<h2 style="color: gray;">Table of Contents</h2>
<ol class="table_of_contents">
	<li><a href="#what_is_test_client">What is Test Client?</a></li>
	<li><a href="#how_do_i_access_test_client">How do I access Test Client?</a></li>
	<li><a href="#tc_test_api">How do I test my API in Test Client?</a></li>
	<li><a href="#how_do_i_test_my_api_with_different_apps">How do I test my API with different apps in Test Client?</a></li>
	<li><a href="#tc_policies_supported">What policies are supported in Test Client?</a></li>
	<li><a href="#policies_effect_on_ux">How do the policies I choose affect the user experience in Test Client?</a>
		<ul>
			<li><a href="#tc_configsettings_atmoappsecuritypolicy">Test Client security settings: AtmosphereApplicationSecurityPolicy</a></li>
			<li><a href="#tc_configsettings_josepolicy">Test Client security settings: Jose Security Policy v2</a></li>
			<li><a href="#tc_configsettings_oauthpolicy">Test Client security settings: OAuth Policy</a></li>
			<li><a href="#tc_configsettings_oauthpolicy_add_parms">Test Client security settings: OAuth Policy: Additional Parameters</a> (2018.0.5 and later)</li>
			<li><a href="#tc_configsettings_oauthpolicy_multiple_oap">Test Client security settings: OAuth Policy: Multiple OAuth Providers</a> (2019.1.0 and later)</li>
			<li><a href="#tc_configsettings_sameoriginpolicy">Test Client security settings: SameOriginPolicy</a></li>
			<li><a href="#tc_configsettings_httpsecuritypolicy">Test Client security settings: HTTP Security Policy</a></li>
			<li><a href="#tc_configsettings_aggregatepolicy">Test Client security settings: Aggregate Policy</a> (2019.1.0 and later)</li>
		</ul>
		</li>
	<li><a href="#tc_forward_proxy">How does Test Client support APIs that don't allow cross-origin API calls (don't support CORS)?</a></li>
	<li><a href="#tc_test_cors">How can I use the API Supports CORS check box for testing?</a></li>
	<li><a href="#tc_test_http_sec_policy">My API uses the HTTP Security policy. Can people still test it in Test Client?</a></li>
	<li><a href="#tc_options_request">Why does Test Client send an HTTP OPTIONS request before the call to the API endpoint?</a></li>
	<li><a href="#troubleshooting_tc_api">Troubleshooting in Test Client</a></li>
</ol>
<hr class="divide_hr" />



<h2 id="what_is_test_client">What is Test Client?</h2>
<p>The platform includes an API testing interface, Test Client, that acts as an easy-to-use testing tool for any API that is set up in the developer portal. This test tool allows developers to thoroughly test all capabilities of the API.</p>
<p>It can be used for prototyping, testing, and troubleshooting apps against an API. It includes OAuth support for retrieving the OAuth token in order to process the message.</p>
<p>As an API admin, it's a good idea to try your API out in Test Client before you publish, so you can see what experience app developers will have when trying out your API.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="how_do_i_access_test_client">How do I access Test Client?</h2>
<p>Test Client is available in the context of either an app or an API:</p>
<ul>
	<li>For app developers: From the app's <strong>Details</strong> page, on the left menu bar, choose <strong>Test Client</strong>.</li>
	<li>For API Admins: From the API's <strong>Details</strong> page, on the left menu bar, choose <strong>Test Client</strong>.
		<p>For Simple Dev theme, you'll need to construct the URL. See below.</p></li>
</ul>
<h4>To construct the Simple Developer URL for an API Test Client:</h4>
<ol>
	<li>Take your Simple Developer platform URL, up to and including the #! in the URL, but delete everything after that.</li>
	<li>Get your APIID and APIVersionID. If necessary, you can get these from <!-- #BeginLibraryItem "/Library/_themename.lbi" -->Default Theme/Hermosa Theme<!-- #EndLibraryItem --> by going to the API's <strong>Details</strong> page (APIID is shown in the URL) and clicking Edit (APIVersionID is added to the URL).</li>
	<li>Construct the URL by adding the following after the portion of the URL that you already have:
		<p><strong>apis/{APIID}/versions/{APIVersionID}/testclient</strong></p>
	<p>For example, the URL might be:</p>
	<p><strong>http://{hostname}/#!apis/9add5c43-d9c8-443c-b13f-5388eaf95df8.acmepaymentscorp/versions/f9c0846f-c4b5-4a42-b759-2f92de62aaa4.acmepaymentscorp/testclient</strong></p>
</li>
	<li>Paste the URL in the address bar and click <strong>Enter</strong> to go to the Test Client page for your API in Simple Developer theme. You can now put in sample values to test your API.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="tc_test_api">How do I test my API in Test Client?</h2>
<p>To test your API in Test Client, you can access it as an app developer or as an API admin. For instructions, see <a href="#how_do_i_access_test_client">How do I access Test Client?</a> above.</p>
<p>As an API admin, it's a good idea to test:</p>
<ul>
	<li>With a few different operations</li>
	<li>With different parameters and headers</li>
	<li>With each of the security mechanisms your API supports</li>
	<li>With each OAuth version, and grant type, your API supports</li>
	<li>With each token type your API support.</li>
</ul>
<p>For general info on the settings available, and where different values are set up, refer to the app developer help, reference section: <a href="app_testing_tc.htm#tc_options">What are the options in Test Client?</a></p>
<p><strong>Operations List</strong>: for additional information about the list of operations displayed in Test Client, see <a href="app_testing_tc.htm#note_tc_operationslist">Note: Operations List in Test Client</a>.</p>
<p><strong>CORS policy</strong>: The Site Admin can configure the platform to enable or disable the CORS policy for the purposes of testing APIs against apps in the Test Client testing tool. If you need this, ask the Site Admin. More information about this option is available in the Site Admin documentation: <a href="site_admin_config.htm#can_test_client_use_cors_to_send_requests_directly">Can Test Client use CORS to send the requests to the API endpoint directly without using the Forward Proxy?</a></p>
<p><a href="#top">Back to top</a></p>



<h2 id="how_do_i_test_my_api_with_different_apps">How do I test my API with different apps in Test Client?</h2>
<p>When you're testing you API in Test Client, you can test it in these contexts:</p>
<ul>
	<li><strong>Specific app</strong>&#8212;In the context of any app that you have visibility of. This includes any apps you might have set up yourself, and any apps that have an existing contract with your API.</li>
	<li><strong>Anonymous</strong>&#8212;without specifying any app</li>
	<li><strong>Custom</strong>&#8212;by defining values yourself</li>
</ul>
<p>Below is an example of how this might look:</p>
<p><img src="assets/tc_setup_contextapi.jpg" alt="Test Client, Setup, Apps drop-down" /></p>
<p><strong>Note</strong>: To use all the features of Test Client, you'll need to enable popups on your browser.</p>
<p><strong>Note</strong>: Display of the shared secret is governed by the platform's settings for apps. If the shared secret is encrypted, it is not displayed. For more information on how to use Test Client when the shared secret is encrypted, see <a href="app_testing_tc.htm#tc_ss_not_displayed">The app's shared secret is not displayed, or is encrypted. How do I use Test Client?</a></p>
<p>For general information about viewing the shared secret, see <a href="app_create_app_security.htm#ss_view">How do I view a shared secret?</a></p>

<h4>To test your app against a specific API, or in an anonymous or custom context</h4>
<ol>
	<li>From the app's <strong>Details</strong> page, on the left menu bar, choose <strong>Test Client</strong>.</li>
	<li>Choose the environment, operation, and any other available settings you want to test (available choices depend on the API setup).</li>
	<li>Click the <strong>Setup</strong> button. The top field, Apps, is a drop-down list and includes all available choices: all the apps you have access to, and also the Anonymous and Custom options (see above). For more information about the fields in this dialog, see <a href="app_testing_tc.htm#tc_settings_security">Test Client: Setup (Authentication Settings)</a> (app developer help).</li>
	<li>Click the <strong>Security</strong> button, choose options for the policies associated with the API, and save. For more information about the fields in this dialog, see <a href="app_testing_tc.htm#tc_configsettings">Test Client: Security Settings</a> (app developer help).</li>
	<li>Click <strong>Invoke</strong>.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="tc_policies_supported">What policies are supported in Test Client?</h2>
<p>Key popular policies are supported in Test Client, but not the whole set.</p>
<p>Test Client supports:</p>
<ul>
	<li>AtmosphereApplicationSecurityPolicy</li>
	<li>JOSE Security Policy v2</li>
	<li>OAuth Policy</li>
	<li>Same Origin Policy</li>
	<li>HTTP Security Policy</li>
	<li>Aggregate Policy (with any of the above policies)</li>
</ul>
<p>For illustrations and usage examples, see <a href="#policies_effect_on_ux">How do the policies I choose for my API affect the user experience in Test Client?</a> below.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="policies_effect_on_ux">How do the policies I choose for my API affect the user experience in Test Client?</h2>
<p>The policies you choose for your API, on the API Implementation page, affect the options available to developers when using the Test Client tool to try out your API.</p>
<p>The policies you'll need/want to implement will depend on your specific needs; however, it's a good idea to test out the user experience and make sure everything looks good in Test Client for your users.</p>
<p><strong>Note</strong>: The specific list of policies available to you for selection is determined by the System Administrator in Policy Manager. If you have questions or concerns about the policies available, or the options within those policies, contact the Site Admin or System Administrator.</p>
<p>Below are example of policies you might choose and the security options that will be available to your users in Test Client:</p>
<ul>
	<li><a href="#tc_configsettings_atmoappsecuritypolicy">Test Client security settings: AtmosphereApplicationSecurityPolicy</a></li>
	<li><a href="#tc_configsettings_josepolicy">Test Client security settings: JOSE Security Policy v2</a></li>
	<li><a href="#tc_configsettings_oauthpolicy">Test Client security settings: OAuth Policy</a></li>
	<li><a href="#tc_configsettings_oauthpolicy_add_parms">Test Client security settings: OAuth Policy: Additional Parameters</a> (2018.0.5 and later)</li>
	<li><a href="#tc_configsettings_oauthpolicy_multiple_oap">Test Client security settings: OAuth Policy: Multiple OAuth Providers</a> (2019.1.0 and later)</li>
	<li><a href="#tc_configsettings_sameoriginpolicy">Test Client security settings: SameOriginPolicy</a></li>
	<li><a href="#tc_configsettings_httpsecuritypolicy">Test Client security settings: HTTP Security Policy</a></li>
	<li><a href="#tc_configsettings_aggregatepolicy">Test Client security settings: Aggregate Policy</a> (2019.1.0 and later)</li>
</ul>

<h4 id="tc_configsettings_atmoappsecuritypolicy">Test Client security settings: AtmosphereApplicationSecurityPolicy</h4>
<p>The <strong>AtmosphereApplicationSecurityPolicy</strong> is the basic policy for authentication; most APIs use it. If this policy is assigned, Test Client users have access to some or all of the security options shown below (via the <strong>Security</strong> button).</p>
<p>The token algorithms appearing on the list below are determined by the policy definition in Policy Manager. If token algorithms are not supported, users see only the <strong>Token Location</strong> drop-down.</p>
<p><img src="assets/tc_security_1_aasp.jpg" alt="Test Client security settings, page 1" /></p>
<p>For more information about this policy, see <a href="api_admin_policy_list.htm#pl_AtmosphereApplicationSecurityPolicy">Policy List</a>.</p>
<p>For more information about the policy settings, if you are an authorized Site Admin, see <a href="site_admin_tc.htm#what_are_the_aasp_settings_and_how_do_they_affect_tc">What are the AtmosphereApplicationSecurityPolicy settings and how do they affect Test Client?</a></p>

<h4 id="tc_configsettings_josepolicy">Test Client security settings: Jose Security Policy v2</h4>
<p><strong>Note</strong>: If the API requires JOSE policy, you can only use Test Client to test POST or PUT operations.</p>
<p>In Test Client, if the API uses JOSE policy, when you click <strong>Setup</strong> you must click <strong>Upload Keystore</strong> and upload the keystore; see <a href="app_testing_tc.htm#tc_settings_security">Test Client: Setup (Authentication Settings)</a>.</p>
<p>Then, click <strong>Security Settings</strong>. On the Security Policy page for the JOSE policy:</p>
<ol>
	<li>Choose a signature/MAC algorithm.</li>
	<li>As needed, specify one or more private headers.</li>
	<li>As needed, specify one or more claim headers.</li>
</ol>
<p>The illustrations below show the empty page on the left, and an example with headers added on the right.</p>
<p><img src="assets/tc_security_2_jose_01.jpg" alt="Test Client security settings for Jose Security Policy v2: empty page" /> <img src="assets/tc_security_2_jose_02.jpg" alt="Test Client security settings for Jose Security Policy v2: sample values" /></p>
<p>The table below shows the configuration values in the <strong>Security</strong> window if the <strong>JOSE Security v2 policy</strong> is applied to the API.</p>
<table class="doctable">
	<thead>
		<tr>
			<th>Field...</th>
			<th>Values...</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>Signature/MAC Algorithm</td>
			<td>Choose from the list of supported algorithms; for example, RS256.</td>
		</tr>
		<tr>
			<td>Private Headers</td>
			<td><p>A private header is any header other than the registered headers defined by the specification; see <a href="https://tools.ietf.org/html/rfc7515#section-4.3">Private Header Parameter Names</a> section of RFC 7515.</p>
				<p>You can specify one or more private headers; check the box and specify the header name and value. You can also add or delete existing private headers as needed.</p></td>
		</tr>
		<tr>
			<td>Claim Headers</td>
			<td><p>You can specify one or more additional headers for the claim.</p></td>
		</tr>
	</tbody>
</table>

<h4 id="tc_configsettings_oauthpolicy">Test Client security settings: OAuth Policy</h4>
<p><img src="assets/tc_security_2_oauth_client_secret_jwt.jpg" alt="Test Client security settings for OAuth Policy with Client Secret JWT selected" /></p>

<h4 id="tc_configsettings_oauthpolicy_fieldvalues">OAuth Policy: Field Values</h4>
<p>The table below shows the configuration values in the <strong>Security</strong> window if the <strong>OAuth Policy</strong> is applied to the API.</p>
<table class="doctable">
	<thead>
		<tr>
			<th>Field...</th>
			<th>Values...</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td><p>Provider Name / Provider Scope</p>
				<p>(2019.1.0 and later)</p></td>
			<td><p>Choose the OAuth provider you want to test against. Scopes supported by the selected provider, and supported by the API/current operation being tested, are checked by default.</p>
				<p>For details and an example, see <a href="#tc_configsettings_oauthpolicy_multiple_oap">Test Client security settings: OAuth Policy: Multiple OAuth Providers</a> below.</p></td>
		</tr>
		<tr>
			<td>OAuth Version</td>
			<td>Choose from OAuth versions supported by the API.</td>
		</tr>
		<tr>
			<td>Grant Type</td>
			<td>OAuth 2.0 defines four grant types (security scenarios, or use cases). Choose from the list of grant types supported by the API. For more information, refer to the spec: http://oauth.net/2/.</td>
		</tr>
		<tr>
			<td>Authentication Method</td>
			<td><p>Choose from authentication methods supported by the API. The full selection list of authentication methods, if all are supported by the API:</p>
				<ul>
					<li>Secret</li>
					<li>HTTP Form-Based Authentication</li>
					<li>HTTP Basic Authentication</li>
					<li>Client Secret JWT (2019.0.0 and later)</li>
					<li>Private Key JWT (2019.0.0 and later)</li>
					<li>None</li>
				</ul></td>
		</tr>
		<tr>
			<td><p>Additional Parameter / Add Additional Parameter</p>
				<p>(2018.0.5 and later)</p></td>
			<td><p>If additional parameters are needed, provide the parameter names and values.</p>
				For details and an example, see <a href="#tc_configsettings_oauthpolicy_add_parms">Test Client security settings: OAuth Policy: Additional Parameters</a> below.</td>
		</tr>
		<tr>
			<td><p>kid</p>
				<p>Signature/MAC Algorithm</p></td>
			<td><p>If you choose <strong>Client Secret JWT</strong> or <strong>Private Key JWT</strong>, specify these additional values (2019.0.0 and later):</p>
				<ul>
					<li>Optional: <a href="basics_glossary.htm#gl_kid">kid</a>: The kid (Key Identifier) of the signing key sent in the message header. This tells the verifier which key to use to validate the <a href="basics_glossary.htm#gl_jsonwebsignature">JWS</a> (signature). If there are multiple keys identified in the signing party's <a href="basics_glossary.htm#gl_jsonwebkeyset">JWK Set</a> document, the <strong>kid</strong> identifies which key to use. If there's only one key, there's no need to specify.</li>
					<li><a href="basics_glossary.htm#gl_signaturemacalgorithm">Signature/MAC Algorithm</a>: Indicates the algorithm used to secure the message. Choose from the drop-down list of algorithms that the API supports.</li>
					</ul></td>
			</tr>
		<tr>
			<td>Get Token button</td>
			<td>Click to get an access token from the API's identity provider, so your app can access the API. Test Client will add the access token to each request. You might need to log in to the identity provider.</td>
			</tr>
		<tr>
			<td>Renew Token button</td>
			<td>If the token has expired, click to get a renew token from the API's identity provider, so your app can access the API. You might need to log in to the identity provider.</td>
		</tr>
	</tbody>
</table>
<p>The examples below show the <strong>OAuth Security</strong> page. In the first example, the <strong>Client Credentials</strong> grant type is selected; in the second, the user has clicked <strong>Get Token</strong> and the token is returned.</p>
<p><img src="assets/tc_security_2_oauth_client_example_01.jpg" alt="Test Client security settings for OAuth Policy: choose grant type" /> <img src="assets/tc_security_2_oauth_client_example_02.jpg" alt="Test Client security settings for OAuth Policy: token is returned" /></p>

<h4 id="tc_configsettings_oauthpolicy_add_parms">Test Client security settings: OAuth Policy: Additional Parameters</h4>
<p><strong>Valid in version: 2018.0.5 and later</strong></p>
<p> If additional parameters are needed, provide the parameter names and values and then click <strong>Get Token</strong>.</p>
<p><strong>Note</strong>: In most cases, additional parameters are not needed.</p>
<p>In the example below: on the left, Microsoft Azure, showing an additional parameter required, of name resource, and a value, beginning with 00000002. On the right, the fields in Test Client for adding the parameter name and value.</p>
<p><img src="assets/tc_security_2_oauth_client_add_parms_azure.jpg" alt="Test Client security settings for OAuth Policy with Client Secret JWT selected" /> <img src="assets/tc_security_2_oauth_client_add_parms.jpg" alt="Test Client security settings for OAuth Policy with Client Secret JWT selected" /></p>
<p>The table below shows the configuration values in the first page of the <strong>Security</strong> wizard if additional parameters are needed to get the token.</p>
<table class="doctable">
	<thead>
		<tr>
			<th>Field...</th>
			<th>Values...</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>Additional Parameter (required to get the token)</td>
			<td><p>Name and value of any additional parameters that might be required by the OAuth Provider, to get the token. For example, with Microsoft Azure OAuth Provider, using the Implicit grant type, you might need to add the <strong>resource</strong> parameter, with the applicable value, as shown above (on the right). If your OAuth Provider requires additional parameters, you can get the parameter name and value from the configuration values in your OAuth Provider account, as shown above (on the left).</p></td>
		</tr>
		<tr>
			<td>Add Additional Parameter</td>
			<td>Click the button to add another parameter and its value. You can also modify existing parameters, or click <strong>Delete</strong> to delete a parameter/value.</td>
		</tr>
	</tbody>
</table>
<p>For more information about this policy, see <a href="api_admin_policy_list.htm#pl_oauthsecurity">Policy List</a>.</p>
<p>For more information about the policy settings, if you are an authorized Site Admin, see <a href="site_admin_tc.htm#what_are_the_aasp_settings_and_how_do_they_affect_tc">What are the AtmosphereApplicationSecurityPolicy settings and how do they affect Test Client?</a><a href="site_admin_tc.htm#what_are_the_aasp_settings_and_how_do_they_affect_tc"></a></p>
<p>For information about the other fields on this popup, see <a href="#tc_configsettings_oauthpolicy_fieldvalues">OAuth Policy: Field Values</a> above.</p>

<h4 id="tc_configsettings_oauthpolicy_multiple_oap">Test Client security settings: OAuth Policy: Multiple OAuth Providers</h4>
<p><strong>Valid in version: 2019.1.0 and later</strong></p>
<p>If the API supports multiple OAuth providers, you can choose the provider you want to test against. When you choose a different provider from the drop-down list, Test Client updates the list of scopes to show the scopes the provider supports. The scopes that the current API uses, and that are valid for the current operation being tested, are selected by default. </p>
<p>If the API scope configuration includes operation-specific scopes, Test Client matches the scopes displayed to the current use case scenario. For example, if the API has separate scopes for GET, POST, and PUT operations, as in the example below, and you select a GET operation and then click the <strong>Security</strong> button, the scopes for the POST and PUT operations are not displayed.</p>
<p>In the example below, the selected provider supports five scopes displayed with check boxes. Of those, the current API/current operation supports one, selected by default. The other scopes are available for negative testing scenarios.</p>
<p>Choose the provider, specify the other values such as OAuth version and grant type, and then click <strong>Get Token</strong>.</p>
<p>For information about the other fields on this page, see <a href="#tc_configsettings_oauthpolicy_fieldvalues">OAuth Policy: Field Values</a> above.</p>
<p><img src="assets/tc_security_oauth_multiple.png" alt="Test Client security settings for OAuth Policy with multiple OAuth Providers" /></p>
<p><strong>Note</strong>: If the API supports only one OAuth provider, the scopes are still displayed as above.</p>

<h4 id="tc_configsettings_sameoriginpolicy">Test Client security settings: SameOriginPolicy</h4>
<p>If the endpoint URL is on a host that is not the user interface host, same-origin policy prevents the browser from accepting the response unless the API can send the CORS headers. </p>
<p>Test Client includes the SameOriginPolicy option by default, because Test Client is capable of supporting cross-origin resource sharing (<a href="basics_glossary.htm#gl_cors">CORS</a>) as well as sending the message via the platform's <a href="basics_glossary.htm#gl_forwardproxy">forward proxy</a> server. The page for this policy is the last page of the <strong>Security</strong> wizard. Depending on the API setup, it might be the only page. </p>
<p>If the API supports CORS, check the box. Otherwise, leave it cleared, or the request will fail.</p>
<p>In Test Client, when you click <strong>Invoke</strong>, the request is sent directly from the browser to the API endpoint. If the endpoint supports receiving requests from a different domain, the API supports CORS. If it does not, the call will not be successful, and there will be an error, since the API call is sent from the developer portal to the API endpoint.</p>
<p>If you want your API to support CORS, add the <strong>CorsAllowAll</strong> policy to the proxy API implementation (<strong>API</strong> &gt; <strong>Details</strong> &gt; <strong>Edit</strong> &gt; CorsAllowAll policy). </p>
<p class="apidoc_note"><strong>Note</strong>: In some cases, the Site Admin might have modified the developer portal setup so that the SameOriginPolicy option is set in the background, either enabled or disabled, and doesn't display to users. If you don't see this page, and have questions about CORS support, contact the Site Admin.</p>
<p><img src="assets/tc_security_3_cors.jpg" alt="Test Client security settings for SameOriginPolicy" /></p>

<h4 id="tc_configsettings_httpsecuritypolicy">Test Client security settings: HTTP Security Policy</h4>
<p>If the API has the HTTP Security Policy attached, the Test Client user must upload a certificate, in the Authentication Settings, in order to test the API. For details and instructions, see <a href="app_testing_tc.htm#tc_settings_security">Test Client: Setup (Authentication Settings)</a> (app developer help).</p>

<h4 id="tc_configsettings_aggregatepolicy">Test Client security settings: Aggregate Policy</h4>
<p><strong>Valid in version: 2019.1.0 and later</strong></p>
<p>The <a href="basics_glossary.htm#gl_aggregatepolicy">Aggregate Policy</a> offers a lot of flexibility. Adding an Aggregate Policy to an API allows the API Admin to set up a scenario where multiple policies are combined into one, with either of the following conditions specified:</p>
	<ul>
		<li><strong>AND</strong>: messages must meet the requirements of <strong>all</strong> the policies defined in the Aggregate Policy</li>
		<li><strong>OR</strong>: messages must meet the requirements of <strong>at least one</strong> of the policies defined in the Aggregate Policy</li>
	</ul>
<p>For example, the API Admin might set up a scenario where an Aggregate Policy includes the AtmosphereApplicationSecurityPolicy and also the OAuth Policy, with AND configured. In this scenario, adding only one policy to the API, the Aggregate Policy, provides the security features of both policies.</p>
<p>Test Client supports the Aggregate Policy for testing purposes if the API is configured with one or more of the following:</p>
<ul>
	<li>AtmosphereApplicationSecurityPolicy</li>
	<li>HTTP Security Policy with Client Certificate option only (requires Authentication Policy, also supported)</li>
	<li>OAuth Security Policy</li>
</ul>
<p><strong>Note</strong>: The developer portal itself supports many additional policies on APIs. However, Test Client supports only the policies listed in <a href="#tc_policies_supported">What policies are supported in Test Client?</a> (earlier in this document), and the Aggregate Policy can only include the policies listed above. If an API has policies attached that are not supported in Test Client, results might not be as expected. In this scenario, you'll see a message warning you that the policy is not supported and results might be unexpected.</p>
<p>In the example below, the API has an Aggregate Policy which includes the AtmosphereApplicationSecurityPolicy, with an enforcement requirement of AND. This means that the Aggregate Policy includes at least one other policy, and must enforce both of them (or all of them). In this scenario, the <strong>Apply Policy to Request</strong> check box is checked by default, because the Aggregate Policy is configured with an AND condition.</p>
<p><img src="assets/tc_security_aggregate.png" alt="Test Client security: Aggregate Policy" /></p>
<p>By default, this check box inherits the policy configuration, and Test Client enforces the conditions of the policy, or not, depending on the setting. If you change the setting, it doesn't change the behavior of the API that you're sending a test message to. It only changes the way that Test Client composes the request. For example, if there is an Aggregate Policy on the API, and it includes an OAuth Policy with an enforcement requirement of AND, Test Client sends an OAuth token with the request. If you clear the check box, the API still requires an OAuth token, but Test Client doesn't send it with the request. You can use this for test scenarios, including negative testing.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="tc_forward_proxy">How does Test Client support APIs that don't allow cross-origin API calls (don't support CORS)?</h2>
<p>If an API doesn't support <a href="basics_glossary.htm#gl_cors">CORS</a>, by default any calls to the API from Test Client, on the developer portal's URL, would be refused.</p>
<p>As a workaround to support testing these APIs in Test Client, Test Client employs a proxy server, which sends the request to the Network Director, so that the domain is the same.</p>
<p>By default, when you're using Test Client, if the sending and receiving domains are different the browser sends a pre-flight request (see <a href="#tc_options_request">Why does Test Client send an HTTP OPTIONS request before the call to the API endpoint?</a> below). Based on the results, if the API doesn't support CORS, Test Client sends the request, with special headers, to the proxy server set up for the purpose. The proxy server forwards the request to the underlying infrastructure (Network Director); the request is relayed to the API and the response returned to Test Client.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="tc_test_cors">How can I use the API Supports CORS check box for testing?</h2>
<p>Test Client includes a check box in the Security settings <strong>API Supports CORS</strong>, that you can use to check that your API's <a href="basics_glossary.htm#gl_cors">CORS</a> support is working properly.</p>
<p>For information on how to access this setting, see <a href="#tc_configsettings_sameoriginpolicy">Test Client security settings: SameOriginPolicy</a> above.</p>
<p>By default, Test Client sends calls to the target API endpoint via a <a href="basics_glossary.htm#gl_forwardproxy">forward proxy</a>, which then forwards the call to the underlying infrastructure, so that API calls from Test Client don't violate the API's CORS policy.</p>
<p>If you check the <strong>API Supports CORS</strong> check box, Test Client doesn't route calls via the forward proxy. Instead, API calls are routed directly to the underlying infrastructure.</p>
<p>You can use this to test your API; for example, in a scenario where there is an issue and you want to narrow down where the issue is occurring.</p>
<p>If your API does not support CORS, you could also use this check box to test that CORS limitations are working correctly. If you check the box, and the API does not support CORS, the API call from Test Client will fail.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="tc_test_http_sec_policy">My API uses the HTTP Security policy. Can people still test it in Test Client?</h2>
<p>Yes. If an API has the HTTP Security Policy attached, Test Client sends an additional header in the request, the Atmo-Client-Token header, as shown below.</p>
<p><img src="assets/tc_http_security_policy.jpg" alt="atmo-client-token header added for HTTP Security Policy" /></p>
<p>This allows app developers to test their apps with APIs that use the HTTP Security policy.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="tc_options_request">Why does Test Client send an HTTP OPTIONS request before the call to the API endpoint?</h2>
<p>When you're sending an API call in Test Client, Test Client performs an extra step in the background in order to support testing of APIs even if the API doesn't support <a href="basics_glossary.htm#gl_cors">CORS</a> (cross-origin resource sharing). Here's what happens:</p>
<ol>
	<li>When the API request is initiated, Test Client sends a preflight request, using the HTTP OPTIONS method, to the proxy endpoint. This request essentially says: will you accept this request, with these headers? The specific headers for this type of message are: <strong>Access-Control-Request-Method</strong> and <strong>Access-Control-Request-Headers</strong>.</li>
	<li>If the response message indicates that the message will be accepted, Test Client then sends the message, via the browser.</li>
</ol>
<p>For this reason, you'll sometimes see an HTTP OPTIONS request message in the Trace tab of Test Client.</p>
<p>For more information about how CORS support works, see <a href="http://www.w3.org/TR/access-control/#resource-preflight-requests" target="_blank">http://www.w3.org/TR/access-control/#resource-preflight-requests</a> (external link to applicable section of CORS specification).</p>
<p>If you want your API to support CORS, add the <strong>CorsAllowAll</strong> policy to the API implementation (<strong>API</strong> &gt; <strong>Details</strong> &gt; <strong>Edit</strong> &gt; at bottom left of page, CorsAllowAll policy).</p>
<p><a href="#top">Back to top</a></p>



<h2 id="troubleshooting_tc_api">Troubleshooting in Test Client</h2>
<p>This section provides information on some of the issues you might encounter when testing your API in Test Client.</p>
<p>Specific errors are listed in the table below. However, there are many variables associated with API setup and any of these variable factors might influence the way things work in Test Client. If you find that test calls aren't working when you think they should, here are some of the things you could check:</p>
<p><strong>API setup</strong>:</p>
<ul>
	<li>Make sure the target URL is correctly defined.</li>
	<li>Make sure the proxy endpoint is correctly defined.</li>
	<li>Make sure that if media types are specified they are correct.</li>
	<li>Check that access is set appropriately: public, private, or registered users; allow anonymous access yes or no for each endpoint you've defined.</li>
	<li>Make sure each operation is defined correctly.</li>
	<li>Make sure there are no spaces in the operation definitions, including trailing spaces.</li>
	<li>Make sure the correct policies are assigned to the API.</li>
	<li>Does the API have the same endpoint in both Sandbox and <!-- #BeginLibraryItem "/Library/environ_live.lbi" -->Live<!-- #EndLibraryItem --> implementations? If so, Network Director cannot differentiate between the two endpoints with API calls, so you might get unexpected results. You can change the proxy endpoint so that there is a difference between the two environments; for example, append /<strong>prod</strong> and /<strong>sbox</strong> in the second field.</li>
	<li>Remember that if the API uses the out-of-box AtmosphereApplicationSecurityPolicy, security is disabled by default, so the Shared Secret value is not validated.</li>
	<li>Remember that if the API allows anonymous access, neither the App ID nor the Shared Secret is validated.</li>
	<li>The API might be set up so that anonymous access is allowed with some scopes, but that if the developer provides the App ID additional licenses become available. In this scenario, some capabilities are available with anonymous access, and additional capabilities are available by sending the App ID and Shared Secret.
</li>
	</ul>
<p><strong>OAuth setup</strong>:</p>
<ul>
	<li>If the API uses OAuth, make sure the OAuth Policy is assigned (API setup, Tab 3, at the bottom).</li>
	<li>Make sure the OAuth options are correctly set up (API Details &gt; OAuth Options).</li>
</ul>
<p><strong>App setup</strong>:</p>
<p>Make sure the app has a contract with the API in the environment you're testing.</p>
<p><strong>Policy setup</strong>:</p>
<p>If you want to support different security options for OAuth, such as SHA1, SHA 256, or HMAC, you'll need to make sure the AtmosphereApplicationSecurityPolicy supports those options (in Policy Manager). By default, it does not. If needed, coordinate with an Administrator with regard to the settings for this policy.</p>
<table class="doctable">
	<thead>
		<tr>
			<th>Error message or scenario</th>
			<th>Possible reason</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>400 Bad Request</td>
			<td><p>Any discrepancy between the actual API definition and the API definition in the platform or the values provided in Test Client might cause this error. For example:</p>
				<ul>
					<li>Extra space in the operation definition</li>
					<li>Invalid Accept or Content-Type header</li>
				</ul>
				<p>You will also see this error if you didn't specify an app, or specified Anonymous, when the API doesn't support anonymous access.</p></td>
		</tr>
		<tr>
			<td>Authorization Failed</td>
			<td><p>The app doesn't have a contract with your API, and the API is not available for anonymous users (therefore valid authorization is required which the app doesn't have).</p>
				<p>The API uses the OAuth Policy and you changed some of the values without generating a new token.</p></td>
		</tr>
		<tr>
			<td>Binding failure</td>
			<td>The media type specified for the Accept header isn't supported by the operation. For example, the operation returns application/json only, but the Accept header field specifies a media type of application/xml.</td>
		</tr>
		<tr>
			<td>&quot;Missing domain. The service may not have been assigned a provider.&quot;</td>
			<td>The API definition includes the <strong>OAuthSecurity</strong> policy, but the API's OAuth setup was not complete (<strong>API</strong> &gt; <strong>Details</strong> &gt; from the drop-down on the right, <strong>OAuth Details</strong>).</td>
		</tr>
		<tr>
			<td>TokenKey does not have Policy Type (OAuth 1.0a or OAuth 2.0)</td>
			<td>The API definition includes the <strong>OAuthSecurity</strong> policy, but you didn't click the <strong>Security</strong> button, choose OAuth settings, and generate the token.</td>
		</tr>
		<tr>
			<td>API definition allows anonymous access, but the API call fails if Anonymous is specified for the app.</td>
			<td>The API has a security policy assigned: either the <strong>AtmosphereApplicationSecurityPolicy</strong> policy or the <strong>OAuthSecurity</strong> policy. Both these policies require credentials; so even if you specified that the API allows anonymous access, the security policies will reject anonymous calls to the API.</td>
		</tr>
		<tr>
			<td>&quot;1010714-Invalid consumer key. The value [APIRuntimeID] in the oauth_consumer_key field is invalid or missing.&quot;</td>
			<td>An invalid value was provided for oauth_consumer_key.</td>
		</tr>
		<tr>
			<td>OAuth token generation fails</td>
			<td>The platform includes a security setting, <a href="site_admin_site.htm#limit_forward_proxy">Limit forward proxy feature to allow only these hosts</a> (Site Admin help). If only specific hosts are listed, OAuth requests to a host that is not on the trusted list will fail.</td>
		</tr>
		<tr>
			<td>Security button does not appear in Test Client</td>
			<td>The implementation for the API is not correctly set up with a valid Deployment Zone enabled. See <a href="apiadmin_implementations.htm">Managing API Implementations</a>.</td>
		</tr>
		<tr>
			<td>Operations do not appear for the API</td>
			<td>The implementation for the API is not correctly set up with a valid Deployment Zone enabled. See <a href="apiadmin_implementations.htm">Managing API Implementations</a>.</td>
		</tr>
		<tr>
			<td>&quot;Error encountered executing {service/operation}. Cause: Cannot establish connection to {API_endpoint} because it cannot be trusted.&quot;</td>
			<td>The OAuth token is missing or invalid. In Test Client, be sure to click the <strong>Security</strong> button, and then click the <strong>Setup</strong> button. On the page for the OAuth Security policy, make sure the values are correct, and click<strong> Get Token</strong>. The token is required for a successful call to the API endpoint.</td>
		</tr>
		<tr>
			<td><p>&quot;This security policy is not supported by Test Client. On &quot;Invoke&quot; you might see errors.&quot;</p></td>
			<td><p>There is a policy included in an Aggregate Policy attached to the API, which is valid at runtime, but not supported for testing as part of an Aggregate Policy in Test Client. The platform includes a large number of policies, and a popular subset is supported in Test Client. An example of this error is shown below.</p>
				<p><img src="assets/tc_security_policy_not_supported.png" alt="Test Client: Policy not supported" /></p>
				<p>For information about which policies are supported for testing purposes, see <a href="#tc_policies_supported">What policies are supported in Test Client?</a></p></td>
		</tr>
		<tr>
			<td><p>With Okta as the OAuth Provider: on clicking <strong>Get Token</strong>, this error:</p>
				<p>{ &quot;HttpStatus&quot;: 403, &quot;ErrorCode&quot;: &quot;access_denied&quot;, &quot;ErrorDescr&quot;: &quot;Policy evaluation failed for this request, please check the policy configurations.&quot;}</p></td>
			<td><p>A default policy is not set up for the Okta Authorization Server. See <a href="uc_tc_okta.htm#uc_okta_okta_authserver">Setting up the authorization server in Okta</a> (use case for API testing in Test Client with Okta).</p></td>
		</tr>
	</tbody>
</table>
<p><a href="#top">Back to top</a></p>



<hr class="divide_hr" />



<h2 id="related_topics">Related Topics</h2>
<div class="relatedlinks" id="api_admin"><!-- #BeginLibraryItem "/Library/relatedtopics_api_admin.lbi" -->
<ul>
	<li><a href="apiadmin_getting_started.htm">Getting Started for API Developers</a></li>
	<li><a href="apiadmin_overview.htm">API Administration: Overview</a></li>
	<li><a href="api_admin_tutorial.htm">Tutorial (API Provider)</a></li>
	<li><a href="api_admin_management.htm">API Admin Management</a></li>
	<li><a href="bus_api_admin_forum.htm">Forum Moderation</a></li>
	<li><a href="apiadmin_promotion.htm">Promoting an API</a></li>
</ul>
<ul>
	<li><a href="apiadmin_api_add.htm">Adding an API</a></li>
	<li><a href="apiadmin_api_design.htm">Add or Modify an API Using API Designer</a></li>
	<li><a href="apiadmin_a_d_d_support.htm">API Description Language Support</a></li>
	<li><a href="apiadmin_implementations.htm">Manage API Implementations</a></li>
	<li><a href="api_admin_testing_tc.htm">API Testing with Test Client</a></li>
	<li><a href="uc_tc_okta.htm">Use Case: API testing in Test Client with Okta</a></li>
	<li><a href="api_admin_managing_contracts.htm">Managing Contracts for your API</a></li>
	<li><a href="apiadmin_monitoring.htm">Monitoring API Analytics</a></li>
</ul>
<ul>
	<li><a href="api_admin_api_publishing.htm">API Visibility, Licenses, and Settings</a></li>
	<li><a href="apiadmin_api_phys_svc.htm">Working with Physical Services</a></li>
	<li><a href="api_admin_oauth_support.htm">OAuth Support</a></li>
	<li><a href="api_admin_content_guidelines.htm">Content Development Guidelines</a></li>
	<li><a href="api_admin_documentation_maintenance.htm">API Documentation Maintenance</a></li>
	<li><a href="api_admin_documentation_tagging.htm">API Documentation Tagging</a></li>
	<li><a href="api_admin_legal_agreement_maintenance.htm">Legal Agreement Maintenance</a></li>
	<li><a href="basics_glossary.htm">Glossary of Terms</a></li>
</ul><!-- #EndLibraryItem --></div>