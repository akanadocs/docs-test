---
layout: page
title: API Testing | API Administration | Akana API Platform Help
description: Test your API.
product: cm
category: learn
sub-nav-class: API Testing
weight: 2614
type: page
nav-title: API Testing
---
<h2 id="top">API Testing with Test Client</h2>
<p>Test your API in Test Client.</p>
<div class = "divider1"></div>


<h3 style="color: gray;">Table of Contents</h3>
<ol class="table_of_contents">
  <li><a href="#what_is_test_client">What is Test Client?</a></li>
  <li><a href="#how_do_i_access_test_client">How do I access Test Client?</a></li>
  <li><a href="#how_do_i_test_my_api_in_test_client">How do I test my API in Test Client?</a></li>
  <li><a href="#how_do_i_test_my_api_with_different_apps">How do I test my API with different apps in Test Client?</a></li>
  <li><a href="#how_do_the_policies_i_choose_affect_the_user_experience">How do the policies I choose affect the user experience in Test Client?</a></li>
  <li><a href="#why_does_tc_send_an_options_request">Why does Test Client send an Options request before the call to the API endpoint?</a></li>
  <li><a href="#troubleshooting_tc_api">Troubleshooting in Test Client</a></li>
</ol>
<div class = "divider1"></div>



<a name="what_is_test_client"></a><h3>What is Test Client?</h3>
<p>The platform includes an API testing interface that acts as an easy-to-use test client for any API that is fully integrated, with an API definition in the platform. This test tool allows developers to thoroughly test all capabilities of the API.</p>
<p>It can be used  for prototyping, testing, and troubleshooting apps against an API. It includes OAuth support for retrieving the OAuth token in order to process the message.</p>
<p>As an API admin, it's a good idea to try your API out in Test Client before you publish, so you can see what experience app developers will have when trying out your API.</p>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_access_test_client"></a><h3>How do I access Test Client?</h3>
<p>Test Client is available in two places, one for app developers and one for API admins:</p>
<ul>
  <li>For app developers: From the App Details page, choose Test Client.</li>
  <li>For API Admins: From the API Details page, choose Test Client.<br />
    For Simple Dev theme, you'll need to construct the URL. See below.</li>
</ul>
<h5>To construct the Simple Developer URL for an API Test Client:</h5>
<ol>
  <li>Take your Simple Developer platform URL, up to and including the #! in the URL, but delete everything after that.</li>
  <li>Get your APIID and APIVersionID. If necessary, you can get these from Default Theme by going to the API Details page (APIID is shown in the URL) and clicking Edit (APIVersionID is added to the URL).</li>
  <li>Construct the URL by adding the following after the portion of the URL that you already have:
    <p>apis/&lt;APIID&gt;/versions/&lt;APIVersionID&gt;/testclient</p>
  <p>For example, the URL might be:</p>
  <p><strong>http://{hostname}/#!apis/9add5c43-d9c8-443c-b13f-5388eaf95df8.acmepaymentscorp/versions/f9c0846f-c4b5-4a42-b759-2f92de62aaa4.acmepaymentscorp/testclient</strong></p>
</li>
  <li>Paste the URL in the address bar and click <strong>Enter</strong> to go to the Test Client page for your API in Simple Developer theme. You can now put in sample values to test your API.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_test_my_api_in_test_client"></a><h3>How do I test my API in Test Client?</h3>
<p>To test your API in Test Client, you can access it as an app developer or as an API admin. For instructions, see <a href="#how_do_i_access_test_client">How do I access Test Client?</a> above.</p>
<p>As an API admin, it's a good idea to test:</p>
<ul>
  <li>With a few different operations</li>
  <li>With different parameters and headers</li>
  <li>With each of the security mechanisms your API supports</li>
  <li>With each OAuth version, and grant type, your API supports</li>
  <li>With each token type your API support.</li>
</ul>
<p>For general info on the settings available, and where different values are set up, refer to the app developer help, reference section: <a href="app_testing_tc.htm#what_are_the_options_in_test_client">What are the options in Test Client?</a></p>
<p><strong>Note</strong>: The Site Admin can configure the platform to enable or disable the CORS policy for the purposes of testing APIs against apps in the Test Client testing tool. If you need this, ask the Site Admin. More information about this option is available in the Site Admin documentation: <a href="site_admin_config.htm#can_test_client_use_cors_to_send_requests_directly">Can Test Client use CORS to send the requests to the API endpoint directly without using the Forward Proxy?</a></p>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_test_my_api_with_different_apps"></a><h3>How do I test my API with different apps in Test Client?</h3>
<p>When you're testing you API in Test Client, you can test it in these contexts:</p>
<ul>
  <li><strong>Specific app</strong>&#8212;In the context of any app that you have visibility of. This includes any apps you might have set up yourself, and any apps that have an existing contract with your API.</li>
  <li>  <strong>Anonymous</strong>&#8212;without specifying any app
  </li>
  <li><strong>Custom</strong>&#8212;by defining values yourself</li>
</ul>
<p>Below is an example of how this might look:</p>
<p><img src="assets/tc_security_multipleapps.jpg" alt="Test Client, Credentials, Apps drop-down" /></p>
<h5>To test your app against a specific API, or in an anonymous or custom context</h5>
<ol>
  <li>From the App Details page, on the left menubar, choose Test Client.</li>
  <li>Choose the environment, operation, and any other available settings you want to test (available choices depend on the API setup).</li>
  <li>Click the <strong>Security</strong> button. The top field, Apps, is a drop-down list and includes all available choices; all the apps you have access to, and also the Anonymous and Custom options (see above). For more information about the fields in this overlay, see <a href="app_testing_tc.htm#tc_configsettings">Test Client: Config Settings</a> (app developer help).</li>
  <li>Click the <strong>Config</strong> button, choose options, and save.</li>
  <li>Click <strong>Run</strong>.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="how_do_the_policies_i_choose_affect_the_user_experience"></a><h3>How do the policies I choose for my API affect the user experience in Test Client?</h3>
<p>The policies you choose for your API, in the API setup (Tab 3, Proxy, bottom left) affect the options available to developers when using the Test Client tool to try out your API.</p>
<p>The policies you'll need/want to implement will depend on your specific needs; however, it's a good idea to test out the user experience and make sure everything looks good in Test Client for your users.</p>
<p><strong>Note</strong>: The specific list of policies available to you for selection is determined by the System Administrator in Policy Manager. If you have questions or concerns about the policies available, or the options within those policies, contact the Site Admin or System Administrator.</p>
<p>Below are some examples of the policies you might choose and the security options that will be available to your users in Test Client.</p>

<h5>AtmosphereApplicationSecurityPolicy</h5>
<p>This is the basic policy for authentication; most APIs use it. If this policy is assigned, Test Client users have access to some or all of the security options shown below (via the <strong>Config</strong> button).</p>
<p>The token algorithms appearing on the list below are determined by the policy definition in Policy Manager. If token algorithms are not supported, users see only the <strong>Token Location</strong> drop-down.</p>
<p><img src="assets/tc_config_1_aasp.jpg" alt="Test Client security settings, 1 of 2" /></p>
<p>For more information about this policy, see <a href="api_admin_policy_list.htm#pl_AtmosphereApplicationSecurityPolicy">Policy List</a>.</p>
<p>For more information about the policy settings, if you are an authorized Site Admin, see <a href="site_admin_tc.htm#what_are_the_aasp_settings_and_how_do_they_affect_tc">What are the AtmosphereApplicationSecurityPolicy settings and how do they affect Test Client?</a></p>

<h5>OAuth Policy</h5>
<p>If the API supports OAuth, Test Client users will see some or all of the settings shown below (via the <strong>Config</strong> button).</p>
<p>The specific options displayed for <strong>OAuth Version</strong>, <strong>Grant Type</strong>, and <strong>Authentication Method</strong> are determined by the settings specified in the API's <strong>OAuth Options</strong> overlay (API Details &gt; OAuth Options) and by the app (<strong>Security</strong> button):</p>
<ul>
  <li><strong>OAuth Version</strong>: Only versions supported by the API are displayed.</li>
  <li><strong>Grant Type</strong>: Only grant types supported by the API are displayed. If the API only supports OAuth 1.0a, the Grant Type drop-down is not displayed at all.</li>
  <li><strong>Authentication Method</strong>: If the app developer uploaded a certificate for the app, via the Security button, the Authentication Method drop-down would include a PKI option.</li>
</ul>

<p><img src="assets/tc_config_2_oauth.jpg" width="654" height="456" alt="Test Client config settings for OAuth policy" /></p>

<p>For more information about this policy, see <a href="api_admin_policy_list.htm#pl_AtmosphereApplicationSecurityPolicy">Policy List</a>.</p>
<p>For more information about the policy settings, if you are an authorized Site Admin, see <a href="site_admin_tc.htm#what_are_the_aasp_settings_and_how_do_they_affect_tc">What are the AtmosphereApplicationSecurityPolicy settings and how do they affect Test Client?</a><a href="site_admin_tc.htm#what_are_the_aasp_settings_and_how_do_they_affect_tc"></a></p>

<h5>Same Origin Policy</h5>
<p>If the endpoint URL is on a host that is not the user interface host, same-origin policy prevents the browser from accepting the response unless the API can send the CORS headers. </p>
<p>Test Client includes the SameOriginPolicy option by default, because Test Client is capable of supporting cross-origin resource sharing (<a href="basics_glossary.htm#gl_cors">CORS</a>) as well as sending the message via the platform's proxy server. The page for this policy is the last page of the Security Settings wizard. </p>
<p>If the API supports CORS, check the box. Otherwise, leave it cleared, or the request will fail.</p>
<p>In Test Console, when you click <strong>Run</strong>, the request is sent directly from the browser to the API endpoint. If the endpoint supports receiving requests from a different domain, the API supports CORS. If it does not, the call will not be successful, and there will be an error, since the API call is sent from the developer portal to the API endpoint.</p>
<p>If you want your API to support CORS, add the <strong>CorsAllowAll</strong> policy to the proxy API implementation (API &gt; Details &gt; Edit &gt; CorsAllowAll policy). </p>
<p class="apidoc_note"><strong>Note</strong>: In some cases, the Site Admin might have modified the developer portal setup so that the SameOriginPolicy option is set in the background, either enabled or disabled, and doesn't display to users. If you don't see this page, and have questions about CORS support, contact the Site Admin.</p>

<p><img src="assets/tc_config_3_sameorigin.jpg" width="650" height="454" alt="Test Client config settings for SameOriginPolicy" /></p>
<p><a href="#top">Back to top</a></p>



<a name="why_does_tc_send_an_options_request"></a><h3>Why does Test Client send an Options request before the call to the API endpoint?</h3>
<p>If your API is set up to support <a href="basics_glossary.htm#gl_cors">CORS</a>, Test Client performs an extra step in the background in order to provide CORS support. Here's what happens:</p>
<ol>
  <li>When the API request is initiated, Test Client sends a preflight request, also called an options request, to the proxy endpoint. This request essentially says: will you accept this request, with these headers? The specific headers for this type of message are: <strong>Access-Control-Request-Method</strong> and <strong>Access-Control-Request-Headers</strong>.</li>
  <li>If the response message indicates that the message will be accepted, Test Client then sends the message, via the browser.</li>
</ol>
<p>For this reason, if your API includes CORS support, you'll see an options request message in the Trace tab of Test Client.</p>
<p>For more information about how CORS support works, see <a href="http://www.w3.org/TR/access-control/#resource-preflight-requests" target="_blank">http://www.w3.org/TR/access-control/#resource-preflight-requests</a> (external link to applicable section of CORS specification).</p>
<p>If you want your API to support CORS, add the <strong>CorsAllowAll</strong> policy to the proxy API implementation (API &gt; Details &gt; Edit &gt; at bottom left of page, CorsAllowAll policy).</p>
<p><a href="#top">Back to top</a></p>



<a name="troubleshooting_tc_api"></a><h3>Troubleshooting in Test Client</h3>
<p>This section provides information on some of the issues you might encounter when testing your API in Test Client.</p>
<p>Specific errors are listed in the table below. However, there are many variables associated with API setup and any of these variable factors might influence the way things work in Test Client. If you find that test calls aren't working when you think they should, here are some of the things you could check:</p>
<p><strong>API setup</strong>:</p>
<ul>
  <li>Make sure the target URL is correctly defined.</li>
  <li>Make sure the proxy endpoint is correctly defined.</li>
  <li>Make sure that if media types are specified they are correct.</li>
  <li>Check that access is set appropriately: public, private, or registered users; allow anonymous access yes or no for each endpoint you've defined.</li>
  <li>Make sure each operation is defined correctly.</li>
  <li>Make sure there are no spaces in the operation definitions, including trailing spaces.</li>
  <li>Make sure the correct policies are assigned to the API.</li>
  <li>Does the API have the same endpoint in both sandbox and production environments? If so, Network Director cannot differentiate between the two endpoints with API calls, so you might get unexpected results. You can change the proxy endpoint so that there is a difference between the two environments; for example, append /<strong>prod</strong> and /<strong>sbox</strong> in the second field.</li>
  <li>Remember that if the API uses the out-of-box AtmosphereApplicationSecurityPolicy, security is disabled by default, so the Shared Secret value is not validated.</li>
  <li>Remember that if the API allows anonymous access, neither the App ID nor the Shared Secret is validated.</li>
  <li>The API might be set up so that anonymous access is allowed with some scopes, but that if the developer provides the App ID additional licenses become available. In this scenario, some capabilities are available with anonymous access, and additional capabilities are available by sending the App ID and Shared Secret.
</li>
  </ul>
<p><strong>OAuth setup</strong>:</p>
<ul>
  <li>If the API uses OAuth, make sure the OAuth policy is assigned (API setup, Tab 3, at the bottom).</li>
  <li>Make sure the OAuth options are correctly set up (API Details &gt; OAuth Options).</li>
</ul>
<p><strong>App setup</strong>:</p>
<p>Make sure the app has a contract with the API in the environment you're testing.</p>
<p><strong>Policy setup</strong>:</p>
<p>If you want to support different security options for OAuth, such as SHA1, SHA 256, or HMAC, you'll need to make sure the AtmosphereApplicationSecurityPolicy supports those options (in Policy Manager). By default it does not. If needed, coordinate with an Administrator with regard to the settings for this policy.</p>
<table cellspacing="0px" class="doctable" style="width: 98%;">
  <thead>
    <tr>
      <th width="40%">Error message or scenario</th>
      <th width="60%">Possible reason</th>
    </tr>
  </thead>
  <tbody>
    <tr class="t2row">
      <td>400 Bad Request</td>
      <td><p>Any discrepancy between the actual API definition and the API definition in the platform or the values provided in Test Client might cause this error. For example:</p><ul>
        <li>Extra space in the operation definition</li>
        <li>Invalid Accept or Content-Type header</li>
        </ul>
        <p>You will also see this error if you didn't specify an app, or specified Anonymous, when the API doesn't support anonymous access.</p></td>
    </tr>
    <tr class="t1row">
      <td>Authorization Failed</td>
      <td><p>The app doesn't have a contract with your API, and the API is not available for anonymous users (therefore valid authorization is required which the app doesn't have).</p>
        <p>The API uses the OAuth policy and you changed some of the values without generating a new token.</p></td>
    </tr>
    <tr class="t2row">
      <td>Binding failure</td>
      <td>The media type specified  for the Accept header isn't supported by the operation. For example, the operation returns application/json only, but the Accept header field specifies a media type of application/xml.</td>
    </tr>
    <tr class="t1row">
      <td>Missing domain. The service may not have been assigned a provider.</td>
      <td>The API definition includes the <strong>OAuthSecurity</strong> policy, but the API's OAuth setup was not complete (<strong>API Details</strong> page &gt; <strong>OAuth Details</strong> button).</td>
    </tr>
    <tr class="t2row">
      <td>TokenKey does not have Policy Type (OAuth 1.0a or OAuth 2.0)</td>
      <td>The API definition includes the <strong>OAuthSecurity</strong> policy, but you didn't click the <strong>Config</strong> button, choose OAuth settings, and generate the token.</td>
    </tr>
    <tr class="t1row">
      <td>API definition allows anonymous access, but the API call fails if Anonymous is specified for the app.</td>
      <td>The API has a security policy assigned: either the <strong>AtmosphereApplicationSecurityPolicy</strong> policy or the <strong>OAuthSecurity</strong> policy. Both these policies require credentials; so even if you specified that the API allows anonymous access, the security policies will reject anonymous calls to the API.</td>
    </tr>
    <tr class="t2row">
      <td>1010714-Invalid consumer key. The value [APIRuntimeID] in the oauth_consumer_key field is invalid or missing.</td>
      <td>An invalid value was provided for oauth_consumer_key.</td>
    </tr>
  </tbody>
</table>
<p><a href="#top">Back to top</a></p>



