---
layout: page
title: Configuring Elasticsearch | Site Administration | Akana API Platform Help
description: Plan and manage the configuration and deployment of Elasticsearch, the platform's search/indexing tool.
product: cm
category: learn
sub-nav-class: Site Administration
weight: 3218
type: page
nav-title: Configuring Elasticsearch
---
<h2 id="top">Elasticsearch: Information for Site Admins</h2>

<p>Plan and manage the configuration and deployment of Elasticsearch, the platform's search/indexing tool.</p>
<h5 class="stamp">API Platform Version: 8.1 and later</h5>
<div class = "divider1"></div>

<h3 style="color: gray;">Table of Contents</h3>


<h5 style="color: gray;"><a href="#h_es_feature_info">Elasticsearch feature overview:</a></h5>


<ol class="table_of_contents">
  <li><a href="#what_is_es">What is Elasticsearch?</a></li>
  <li><a href="#why_transition_to_es">Why transition to Elasticsearch?</a></li>
  <li><a href="#es_available_configuration_modes">What configuration modes are available for Elasticsearch?</a></li>
  <li><a href="#es_mode_standalone_define">What is standalone mode?</a></li>
  <li><a href="#es_mode_embedded_define">What is embedded mode?</a></li>
  <li><a href="#es_define_data_node">In Elasticsearch, what is a data node?</a></li>
  <li><a href="#es_data_nodes_how_many">How many Elasticsearch data nodes should I configure?</a></li>
  <li><a href="#es_define_me_node">In Elasticsearch, what is a master eligible node?</a></li>
  <li><a href="#es_define_me_node_why_not">Why would I configure a node so that it is not master eligible?</a></li>
  <li><a href="#es_define_client_node">In Elasticsearch, what is a client node?</a></li>
  <li><a href="#es_default_configuration_mode">What is the default configuration mode for Elasticsearch?</a></li>
  <li><a href="#es_mode_s_deployment_options_available">What deployment options are available for Elasticsearch in standalone mode?</a></li>
  <li><a href="#es_mode_e_deployment_options_available">What deployment options are available for Elasticsearch in embedded mode?</a></li>
  <li><a href="#es_limitations">Elasticsearch limitations: reserved characters</a></li>
</ol>


<h5 style="color: gray;"><a href="#h_es_configuring">Installing and Configuring Elasticsearch:</a></h5>


<ol class="table_of_contents">
  <li><a href="#es_upgrade_options">I'm upgrading; what are my options?</a></li>
  <li><a href="#es_out_of_box_config">What is the basic configuration needed to get Elasticsearch working out of the box with the API Platform?</a></li>
  <li><a href="#es_what_need">What do I need to use Elasticsearch?</a></li>
  <li><a href="#es_mode_s_how_transition">How do I transition from Compass to Elasticsearch standalone mode?</a></li>
  <li><a href="#es_mode_e_how_transition">How do I transition from Compass to Elasticsearch embedded mode?</a></li>
  <li><a href="#how_do_i_install_elastic_search_in_pm">How do I install the Elasticsearch feature?</a></li>
  <li><a href="#how_do_i_configure_elastic_search_in_pm">How do I configure Elasticsearch?</a></li>
  <li><a href="#es_default_ports">What are the default ports for Elasticsearch configuration?</a></li>
  <li><a href="#fv_es_global">Elasticsearch Global Configuration: Field Values</a></li>
  <li><a href="#fv_es_embedded">Configuring an Elasticsearch Embedded Node: Field Values</a></li>
  <li><a href="#es_delete_index">How do I delete an Elasticsearch search index?</a></li>
  <li><a href="#es_force_rebuild">How do I force a rebuild of an Elasticsearch search index?</a></li>
  <li><a href="#es_configure_embed_single_container">How do I configure Elasticsearch in embedded mode with a single CM container?</a></li>
  <li><a href="#es_configure_embed_multiple_containers">How do I configure Elasticsearch in embedded mode with multiple CM containers (two or more)?</a></li>
  <li><a href="#es_config_settings">How do I configure the number of nodes and shards?</a></li>
</ol>



<h5 style="color: gray;"><a href="#h_es_troubleshooting">Troubleshooting Elasticsearch:</a></h5>


<ol class="table_of_contents">
  <li><a href="#es_ts_pre_upgrade_results_showing">Pre-upgrade search results are showing even though the index folder is populated with the Elasticsearch index: what do I do?</a></li>
  <li><a href="#related_topics">Related Topics</a></li>
</ol>




<div class = "divider1"></div>
<h3><a name="h_es_feature_info"></a>Elasticsearch feature information:</h3>




<a name="what_is_es"></a><h3>What is Elasticsearch?</h3>
<p>In version 8.0, the Akana API Platform moved from Compass to Elasticsearch for managing the search feature.</p>
<p>Elasticsearch is a search engine based on Apache Lucene. It is more robust and extensible tool than Compass, which the platform used previously, and allows faster indexing and more responsive updating. It's an extremely popular tool in very broad use.</p>
<p>The platform provides several options for implementation flexibility: Elasticsearch can start in an embedded mode, or remotely to the Java process in a distributed mode or a single node mode.</p>
<p>If you have an Elasticsearch server that's used for other applications, and administrators are trained to manage the standalone Elasticsearch server, use the standalone Elasticsearch server. Otherwise, it's best to use embedded mode.</p>
<p>With the Embedded Elasticsearch Container feature, Elasticsearch runs within the container process. It supports all the features that a standalone Elasticsearch process would support. Customers should install this feature in every container where API Platform feature or API Platform Schedule Jobs Add-On is installed. In this scenario, the Administrator's activities to start and stop the process are the usual container management processes. Administration of Elasticsearch is done with the configuration wizard in the Akana Administration Console.</p>
<p>For more information on Elasticsearch terminology, refer to the Elasticsearch glossary: <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/glossary.html" title="Elasticsearch glossary of terms" target="_blank">https://www.elastic.co/guide/en/elasticsearch/reference/current/glossary.html</a>.</p>
<p><a href="#top">Back to top</a></p>



<a name="why_transition_to_es"></a><h3>Why transition to Elasticsearch?</h3>
<p>Elasticsearch is more robust and extensible than the previous implementation of Compass.</p>
<p>The platform supports both standalone and embedded modes. In embedded mode, Elasticsearch is integrated and run within an individual container. The container opens new TCP ports for receiving Elasticsearch requests to do the search and receive the results. Elasticsearch supports TCP requests and REST API requests at separate ports. The API Platform uses TCP requests for searching and indexing. An HTTP port for REST API is needed only if external clients need the REST Elasticsearch interface.</p>
<p>However, there is a deployment impact. Sys admins must make deployment decisions; at minimum, they must determine where to save the index in the filesystem of each node and how to configure Elasticsearch in a cluster.</p>
<p><a href="#top">Back to top</a></p>



<a name="es_available_configuration_modes"></a><h3>What configuration modes are available for Elasticsearch?</h3>
<p>Elasticsearch performance is very efficient and extensible. However, it requires implementation decisions and configuration tasks.</p>
<p>You can set up your installation to run Elasticsearch in these modes:</p>
<ul>
  <li><strong>Standalone</strong>: In standalone mode, Elasticsearch works like a database server. It requires separate installation and is run as a different process, like an LDAP server. Standalone mode uses Transport Client. If you use Standalone mode, embedded mode is not needed. For more information, see <a href="#es_mode_standalone_define">What is standalone mode?</a> below.</li>
  <li><strong>Embedded</strong>: In embedded mode, all you need to do is install the Embedded Elasticsearch feature in all containers. For more information, see <a href="#es_mode_embedded_define">What is embedded mode?</a> below.</li>
</ul>
<p>You can use a shared filesystem, or you can have a local filesystem on each machine. If you choose to use a separate filesystem for each machine, you don't need to do anything for replication of the index. If you're using a shared filesystem, be aware that if the shared filesystem were to go down it would be a single point of failure. you should only use a shared filesystem if it gives better IO performance with little to no compromise in reliability.</p>
<p>There are other options in a multi-tenant installation. For example, you can choose to have different indexes for different tenants. You might have ten small tenants sharing one index, and another large tenant with its own dedicated index.</p>
<p>Elasticsearch configuration is supported in the Akana Administration Console, with UI for global settings and also for configuration of each node.</p>
<p><a href="#top">Back to top</a></p>



<a name="es_mode_standalone_define"></a><h3>What is standalone mode?</h3>
<p>With standalone mode, your installation will need to include a standalone external Elasticsearch server. Just as with a relational database, you'll need to provide the software and hardware required.</p>
<p>If you choose to run Elasticsearch in standalone mode, like a database server, all containers running the Akana API Platform can use it. In this scenario, it's important to provide a cluster capability to help prevent outage.</p>
<p>Generally, in this scenario, all containers are working as client nodes. There is no master eligible node or data node within the product.</p>
<p><a href="#top">Back to top</a></p>



<a name="es_mode_embedded_define"></a><h3>What is embedded mode?</h3>
<p>In embedded mode, all you need to do is install the embedded feature in one or more containers. In this mode, there is no external software needed. Elasticsearch runs within each container it's installed in.</p>
<p><a href="#top">Back to top</a></p>



<a name="es_define_data_node"></a><h3>In Elasticsearch, what is a data node?</h3>
<p>A data node is where the index data resides.</p>
<p>Regardless of where the API platform feature is running, when an object is indexed, the data for that index is in the data node.</p>
<p>When a user is searching, the data is accessed from the data node. For example, let's say the API platform feature is running in Container 1, but when the user performs a search, Container 1 doesn&rsquo;t have the data. The request is sent to Container 2, where the data is, and Container 2 returns the results back to Container 1, which in turn returns the results to the caller.</p>
<p><a href="#top">Back to top</a></p>



<a name="es_data_nodes_how_many"></a><h3>How many Elasticsearch data nodes should I configure?</h3>
<p>It's best to configure as many nodes as possible as data nodes, because if the data node goes down and there are no other data nodes, the search feature goes down. If there are no data nodes available, the data is inaccessible, so the index fails and the search feature fails entirely.</p>
<p>When you configure multiple data nodes, the internal logic of the Elasticsearch feature determines which data nodes will hold which data. Generally, all data is available in all data nodes.</p>
<p>Another scenario is that the Elasticsearch feature might be configured to use multiple index partitions, called <a href="basics_glossary.htm#gl_es_shard">shards</a>. Each data node could contain certain shards.</p>
<p><a href="#top">Back to top</a></p>



<a name="es_define_me_node"></a><h3>In Elasticsearch, what is a master eligible node?</h3>
<p>A master eligible node is one that <strong>can</strong> become a master of the cluster.</p>
<p>There is always a cluster, even if there is only one node, so a single node will always be master eligible. </p>
<p>The master nodes of the cluster manage the cluster, including such tasks as:</p>
<ul>
  <li>Keeping track of all containers that are part of the cluster, and updating as needed when nodes join or leave the cluster</li>
  <li>Keeping track of which nodes are master eligible</li>
  <li>Keeping track of which shards are in which data node.</li>
</ul>
<p>There can be more than one master node inside a cluster.</p>
<p>Here are some scenarios:</p>
<p><strong>Four containers, four master eligible nodes, two master nodes</strong></p>
<p>If the Elasticsearch feature is installed in four containers, with each container being configured as master eligible, but the Elasticsearch settings are such that only two containers are <strong>required</strong> to be masters, the cluster uses the Elasticsearch logic to determine which two will act as master. In this scenario, the additional nodes are master eligible, but not master nodes.</p>
<p>If one of the master nodes goes down, one of the additional master eligible nodes will become a master.</p>
<p><strong>Two containers, one master eligible node, one master node</strong></p>
<p>There must always be a master node; so, if only one node is configured as master eligible, that node is always the master node. Note that this scenario doesn't have any accommodation for redundancy.</p>
<p>For additional information, see <a href="#es_define_me_node_why_not">Why would I configure a node so that it is not master eligible?</a> below.</p>
<p><a href="#top">Back to top</a></p>



<a name="es_define_me_node_why_not"></a><h3>Why would I configure a node so that it is not master eligible?</h3>
<p>It might be that a specific container already has a processing burden and you don't want to add the cluster management task. In this scenario, it would be better to configure that node so that it is <strong>not</strong> master eligible.</p>
<p>In this scenario, you could install the Elasticsearch embedded feature in a dedicated container and set that to be a master node, taking on the extra processing work associated with managing the Elasticsearch index. The Elasticsearch node manages the cluster, and other nodes process the normal traffic for the installation.</p>
<p>However, in most cases, customers will choose to make every node a master eligible node. Additional master eligible nodes will only become the master node if other nodes go down. Unless the installation is very large, managing the cluster is not a very great overhead.</p>
<p><a href="#top">Back to top</a></p>



<a name="es_define_client_node"></a><h3>In Elasticsearch, what is a client node?</h3>
<p>The client node is the node that makes the search or indexing request. All nodes can be client nodes.</p>
<p>Any container, even if it isn't configured to be a master eligible node or a data node, is at least a client node. If it is a data node, it does the local searches; if it isn't a data node, it is still a client node. As such, it sends a search request or index request to a remote data node and receives the results.</p>
<p>The client node makes the call to the platform's Search API, which in turn requests the search results from the data node.</p>
<p><a href="#top">Back to top</a></p>



<a name="es_default_configuration_mode"></a><h3>What is the default configuration mode for Elasticsearch?</h3>
<p>The default configuration mode is embedded mode.</p>
<p><a href="#top">Back to top</a></p>



<a name="es_mode_s_deployment_options_available"></a><h3>What deployment options are available for Elasticsearch in standalone mode?</h3>
<p>The Elasticsearch server is run outside the API Platform, in the same way as a database server. If you choose to run Elasticsearch in standalone mode, it's important to provide a cluster capability to prevent outage. In this scenario, all API Platform containers run in Client mode; in this mode, they send both search and index requests to the standalone Elasticsearch server.</p>
<p><a href="#top">Back to top</a></p>



<a name="es_mode_e_deployment_options_available"></a><h3>What deployment options are available for Elasticsearch in embedded mode?</h3>
<p>If you choose to run ElasticSearch in embedded mode, you can deploy multiple containers for this feature. This feature can run along with the Akana API Platform in the same container, or it can run in a completely different container by itself. In this scenario, you'll have to configure each container separately. See <a href="#proc_es_embedded">To configure an Elasticsearch embedded node in the Akana Administration Console</a>.</p>
<p><strong>Note</strong>: If you're using an external Elasticsearch server with Transport Client mode, you do not need to install embedded Elasticsearch on your containers.</p>
<p><a href="#top">Back to top</a></p>



<a name="es_limitations"></a><h3>Elasticsearch limitations: reserved characters</h3>
<p>Elasticsearch has certain characters that are reserved. If any of these characters are included in search terms, they'll need to be escaped, or the search feature will not work as expected.</p>
<p>The reserved characters are:</p>
<p><strong>+ - = &amp;&amp; || &gt; &lt; ! ( ) { } [ ] ^ &quot; ~ * ? : \ /</strong></p>
<p>To use one of these characters in search results, users must escape them with a leading backslash.</p>
<p>For example, to search for <strong>(123)app</strong>, a user would have to write this query: <strong>\(123\)app</strong>.</p>
<p>It's best if users steer clear of special characters in naming platform resources such as apps and APIs.</p>
<p>This information is documented for platform users here: <a href="basics_search.htm#search_special_characters">How do I use special characters in search?</a></p>
<p><a href="#top">Back to top</a></p>



<div class = "divider1"></div>
<h3><a name="h_es_configuring"></a>Installing and Configuring Elasticsearch:</h3>



<a name="es_upgrade_options"></a>
<h3>I'm upgrading; what are my options?</h3>
<p>In setting  up the Elasticsearch feature, there are three possible scenarios; follow the applicable set of steps as listed below.</p>
<p><strong>Elasticsearch, embedded mode</strong> (most likely scenario): If you are using Elasticsearch (recommended) in embedded mode (you don't have a standalone Elasticsearch server) you'll need to:</p>
<ul>
  <li>Install the feature: See <a href="#proc_install_es_embedded">Installing the Akana Embedded Elasticsearch Node feature</a>.</li>
  <li>Configure the feature. Refer to these tasks:
    <ul>
      <li><a href="#proc_es_global_config">Elasticsearch configuration: global settings</a></li>
      <li><a href="#es_available_configuration_modes">Elasticsearch embedded node settings</a></li>
    </ul>
  </li>
  <li>Run database queries: see <a href="#proc_es_database_queries_switch_index">Database queries to switch the search index to Elasticsearch</a></li>
</ul>
<p><strong>Elasticsearch, standalone mode</strong>: If you are using Elasticsearch (recommended) in standalone mode (you have a standalone Elasticsearch server) you don't need to install the feature. You'll need to:</p>
<ul>
  <li>Configure global settings. See <a href="#proc_es_global_config">Elasticsearch configuration: global settings</a></li>
  <li>Run database queries: see <a href="#proc_es_database_queries_switch_index">Database queries to switch the search index to Elasticsearch</a></li>
</ul>
<p><strong>No Elasticsearch</strong>: If you do <strong>not</strong> want to use Elasticsearch, you'll just need to do a database update: </p>
<ul>
  <li><a href="#proc_es_use_compass">Steps to follow if you want to continue using Compass for search</a></li>
</ul>


<h5><a name="proc_install_es_embedded"></a>Installing the Akana Embedded Elasticsearch Node feature</h5>
<ol>
  <li>Log in to the Akana Administration Console.</li>
  <li>Click the <strong>Available Features</strong> tab.
  <p><img src="assets/03_install_es.jpg" alt="" /></p></li>
  <li>Choose <strong>Akana Embedded Elasticsearch Node</strong> and click <strong>Install Feature</strong>.</li>
  <li>When installation is complete, at the prompt, restart the system.</li>
</ol>


<h5><a name="proc_es_global_config"></a>Elasticsearch configuration: global settings </h5>
<p>When you install the Elasticsearch feature, the product runs in embedded mode by just accepting the default settings. You don't need to change anything. Follow the applicable procedure below:</p>
<ul>
  <li>Information for embedded mode</li>
  <li>Information for standalone mode</li>
</ul>


<h5><a name="proc_es_global_config_embedded"></a>Embedded mode: Global configuration</h5>
<ol>
  <li>In the Akana Administration Console, on the <strong>Configuration</strong> tab, under <strong>Configuration Actions</strong>, choose <strong>Configure Elasticsearch Global Configuration</strong>. The wizard opens.</li>
  <li>Make sure the Deployment Mode is set to <strong>Embedded</strong>, as shown below.
  <p><img src="assets/02_06_configure_es.jpg" alt="" /></p></li>
</ol>


<h5><a name="proc_es_global_config_standalone"></a>Standalone mode: Global configuration</h5>
<p>If you choose to run in standalone mode, you don't need to install the Akana Embedded Elasticsearch Node feature. However, you must configure Elasticsearch.</p>
<ol>
  <li>In the Akana Administration Console, on the <strong>Configuration</strong> tab, under <strong>Configuration Actions</strong>, choose <strong>Configure Elasticsearch Global Configuration</strong>. The wizard opens.</li>
  <li>Make sure the Deployment Mode is set to <strong>Transport Client</strong>.</li>
  <li>Provide the ES Server URL (see <a href="#fv_es_global">Elasticsearch Global Configuration: Field Values</a> below).</li>
</ol>


<h5><a name="proc_es_embed_node_settings"></a>Elasticsearch embedded node settings</h5>
<p>If you're using Elasticsearch in embedded mode, the platform automatically configures. You don't need to do anything to configure the embedded node settings.</p>
<p class="apidoc_note"><strong>Note</strong>: If you are using Embedded Node configuration, the developer portal must be available on the default port or whichever port you configure in the Admin Console.</p>


<h5><a name="proc_es_database_queries_switch_index"></a>Database queries to switch the search index to Elasticsearch</h5>
<p>Run the following queries to switch the search index to Elasticsearch and to trigger the index.</p>
<ol>
  <li>Change the index target to Elasticsearch only:
    <pre>update TENANTS set INDEX_TARGET='elastic', LASTMODIFIEDDTS=&lt;current-timestamp&gt;;</pre>
    <p> current-timestamp above is: </p>
    <ul>
      <li> utc_timestamp() for MySQL</li>
      <li> sys_extract_utc(current_timestamp) for Oracle</li>
      <li> getutcdate() for MSSQL</li>
      <li> current_timestamp – current_timezone for DB2</li>
      </ul>
  </li>
  <li>Note down the number of records in the INDEX_STATUS table, then delete the index metadata so the platform can trigger the indexing again, this time with Elasticsearch:
    <pre>delete from INDEX_STATUS;</pre></li>
  <li>Wait for a few minutes to see that the INDEX_STATUS table is populated to as many records as it had before emptying the table, and that the INDEX_QUEUE table is empty. This indicates that indexing is complete.</li>
  <li>Now, run the query below to change the platform so that it uses the Elasticsearch index. Until you complete this step, the platform continues to service the search results with the Compass index that was built before the upgrade.
    <pre>update TENANTS set SEARCH_SOURCE='elastic', LASTMODIFIEDDTS= &lt;current-timestamp&gt;;</pre>    <p>current-timestamp above is: </p>
    <ul>
      <li> utc_timestamp() for MySQL</li>
      <li> sys_extract_utc(current_timestamp) for Oracle</li>
      <li> getutcdate() for MSSQL</li>
      <li> current_timestamp – current_timezone for DB2</li>
      </ul>
  </li>
</ol>
<p><strong>Example: database queries for MySQL database</strong></p>
<p>For a MySQL database, the above database queries are as follows:</p>
<pre>update TENANTS set INDEX_TARGET='elastic', LASTMODIFIEDDTS=utc_timestamp();
delete from INDEX_STATUS;
update TENANTS set SEARCH_SOURCE='elastic', LASTMODIFIEDDTS=utc_timestamp();</pre>


<h5><a name="proc_es_use_compass"></a>Steps to follow if you want to continue using Compass for search</h5>
<p>If you don't want to move to Elasticsearch, but prefer to stay with the older Compass search feature, you'll need to check some values in the database and make changes if needed.</p>
<p>Make sure that the TENANTS table has these two fields set to <strong>compass</strong>:</p>
<ul>
  <li><strong>INDEX_TARGET</strong> field: value must be <strong>compass</strong> (post-upgrade default value is <strong>compass,elastic</strong>; remove <strong>elastic</strong>)</li>
  <li><strong>SEARCH_SOURCE</strong> field, value must be <strong>compass</strong> (post-upgrade default value is <strong>elastic</strong>; change it)</li>
</ul>
<p><a href="#top">Back to top</a></p>



<a name="es_out_of_box_config"></a><h3>What is the basic configuration needed to get Elasticsearch working out of the box with the API Platform?</h3>
<p>When you install the Elasticsearch feature (see <a href="#how_do_i_install_elastic_search_in_pm">How do I install the Elasticsearch feature?</a>), the product runs in embedded mode by just accepting the default settings.</p>
<p>All containers need to have the embedded Elasticsearch feature installed. In this scenario, the container fulfills two roles:</p>
<ul>
  <li>Data node</li>
  <li>Master eligible node</li>
</ul>
<p><strong>I</strong>f you want to run in standalone mode, or want to customize your installation, you'll need to specify values; if you just want to accept the default settings, no additional configuration is needed.</p>
<p><a href="#top">Back to top</a></p>



<a name="es_what_need"></a><h3>What do I need to use Elasticsearch?</h3>
<p>If you want to run Elasticsearch in embedded mode (see <a href="#es_mode_embedded_define">What is embedded mode?</a>), you'll need to install the Elasticsearch feature once you've installed or upgraded to version 8.0 or later. See <a href="#how_do_i_install_elastic_search_in_pm">How do I install the Elasticsearch feature?</a></p>
<p>If you are using standalone mode (see <a href="#es_mode_standalone_define">What is standalone mode?</a>), you don't need to install the <strong>Akana Embedded Elasticsearch Node</strong> feature.</p>
<p><a href="#top">Back to top</a></p>



<a name="es_mode_s_how_transition"></a><h3>How do I transition from Compass to Elasticsearch standalone mode?</h3>
<p>After installing an upgrade from a version before 8.0 to version 8.0 or later, you'll need to complete some post-upgrade tasks.</p>
<ol>
  <li>Install the Embedded Elasticsearch Container feature on all containers that have either the API Platform APIs installed or the API Platform Scheduled Jobs feature installed. See <a href="#how_do_i_install_elastic_search_in_pm">How do I install the Elasticsearch feature?</a></li>
  <li>Configure the global settings. See <a href="#proc_es_global">To set up global configuration of Elasticsearch in the Akana Administration Console</a>.</li>
  <li>Review the settings for each node to run in client mode. You should not need to change the settings.</li>
  <li>Change the INDEX_TARGET for all tenants to either just <strong>elastic</strong> (to index using only Elasticsearch) or <strong>elastic,compass</strong> (to index using both Elasticsearch and Compass).</li>
  <li>Empty the INDEX_STATUS table so that all entries are indexed again.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="es_mode_e_how_transition"></a><h3>How do I transition from Compass to Elasticsearch embedded mode?</h3>
<p>After installing the upgrade, you'll need to complete some post-upgrade tasks.</p>
<ol>
  <li>Install the Embedded Elasticsearch Container feature on all containers that have either the API Platform APIs installed or the API Platform Scheduled Jobs feature installed. See <a href="#how_do_i_install_elastic_search_in_pm">How do I install the Elasticsearch feature?</a></li>
  <li>Configure the global settings. See <a href="#proc_es_global">To set up global configuration of Elasticsearch in the Akana Administration Console</a>.</li>
  <li>Configure the settings for each node, with some nodes configured as a <a href="basics_glossary.htm#gl_es_data_node">data node</a>, some nodes configured as a <a href="basics_glossary.htm#gl_master_node">master node</a>, and some nodes configured as a <a href="basics_glossary.htm#gl_es_client_node">client node</a>. See <a href="#proc_es_embedded">To configure an Elasticsearch embedded node in the Akana Administration Console</a>.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_install_elastic_search_in_pm"></a><h3>How do I install the Elasticsearch feature?</h3>
<p>Installation of the Elasticsearch feature is done in the the Akana Administration Console. If you don't have access, get this step completed by the Administrator, following the procedure below.</p>
<p>This feature must be installed on every container that's running the Akana API Platform and also on the containers where the Community Manager Scheduled Jobs feature is installed.</p>


<h5><a name="proc_se_install"></a>To install the Elasticsearch feature</h5>
<ol>
  <li>Log in to the Akana Administration Console.</li>
  <li>Click the <strong>Available Features</strong> tab.</li>
  <li>Choose <strong>Akana Embedded Elasticsearch Node</strong> and click <strong>Install Feature</strong>.</li>
  <li>When installation is complete, at the prompt, restart the system.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_configure_elastic_search_in_pm"></a><h3>How do I configure Elasticsearch?</h3>
<p>In some cases, if you are using Elasticsearch in embedded mode, you won't even need to do any configuration, just leave the default settings. See <a href="#es_configure_embed_single_container">How do I configure Elasticsearch in embedded mode with a single CM container?</a> below. However, you might have multiple containers or special requirements and want to configure Elasticsearch a certain way.</p>
<p>First, review the information above and determine your deployment strategy.</p>
<p>Then, when you've installed, or installed an upgrade, you're ready to configure Elasticsearch. Depending on the configuration you choose, you might have to follow one or both of the procedures listed below. If you do them both, complete the tasks in the order given below.</p>
<ol>
  <li>Set up Elasticsearch global configuration.</li>
  <li>Configure Elasticsearch in embedded mode.</li>
</ol>


<h5><a name="proc_es_global"></a>To set up global configuration of Elasticsearch in the Akana Administration Console</h5>
<ol>
  <li>In the Akana Administration Console, on the <strong>Configuration</strong> tab, under Configuration Actions, choose <strong>Configure Elasticsearch Global Configuration</strong>. The wizard opens.</li>
  <li>Specify the deployment mode and then set up values that will apply to all containers running Elasticsearch:
    <ul>
      <li><strong>Embedded</strong> (the default): specify cluster name and minimum number of master nodes, and indicate whether it is a multicast scenario.</li>
      <li><strong>Transport Client</strong>: The node will not be in a cluster, but will communicate with a cluster. Specify cluster name and Elasticsearch server URL. Transport Client mode is used when the container uses a TCP port to connect to a standalone Elasticsearch server.</li>
      <li><strong>Client Only</strong>: The node will be in the cluster, but will not be a master node. Specify cluster name and master host URL, and indicate whether it is a multicast scenario. Client-only mode is used when a container running the embedded Elasticsearch feature becomes a node as part of an external standalone Elasticsearch server</li>
    </ul>
      <p>For more information, refer to <a href="#fv_es_global">Elasticsearch Global Configuration: Field Values</a> below.</p>
  </li>
  <li>Click <strong>Save</strong>.</li>
  <li>Restart.</li>
</ol>


<h5><a name="proc_es_embedded"></a>To configure an Elasticsearch embedded node in the Akana Administration Console</h5>
<p><strong>Note</strong>: Run the steps below on every container that has an Elasticsearch embedded node.</p>
<ol>
  <li>In the Akana Administration Console, on the <strong>Configuration</strong> tab, under Configuration Actions, choose <strong>Configure Elasticsearch Embedded Mode</strong>. The wizard opens.</li>
  <li>Set up values that will apply to Elasticsearch in embedded mode. For more information, refer to <a href="#fv_es_embedded">Configuring an Elasticsearch Embedded Node: Field Values</a> below.
  <p><strong>Note</strong>: Check that the default value for Network Publish Address is correct for your installation, and modify if needed.</p></li>
  <li>Click <strong>Save</strong>.</li>
  <li>Restart the container.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="es_default_ports"></a><h3>What are the default ports for Elasticsearch configuration?</h3>
<p>The default ports for Elasticsearch configuration are as follows:</p>
<ul>
  <li><strong>HTTP</strong>: Default is 9200, default range is 9200&#8211;9299</li>
  <li><strong>TCP</strong>: Default is 9300, default range is TCP is 9300&#8211;9399</li>
</ul>
<p>Range implies that if the first port is busy, the platform tries the next one and so on.</p>
<p><a href="#top">Back to top</a></p>



<a name="fv_es_global"></a><h3>Elasticsearch Global Configuration: Field Values</h3>
<p>Information about the field values is given below.</p>
<dl class="apidoc_dl">
  <dt>Deployment Mode</dt>
  <dd>Choose from the available options:
<ul>
  <li><strong>Embedded</strong>: Only the embedded Elasticsearch feature is in use; no external software is required.</li>
  <li><strong>Transport Client</strong> (external with transport client interface): This setting indicates that the platform is integrating with an external Elasticsearch server. In this scenario, the Elasticsearch feature uses the TCP interface to get the search data or get the index requests. In that case, the request always goes from the container to the standalone Elasticsearch server. In this mode, there is no local node. There are only API calls to the external Elasticsearch server. 
    <p>If you are using Transport Client mode, you don't need to configure any of the embedded node features, because all requests go to the standalone external master node.</p></li>
  <li><strong>Client Only</strong> (external with client-only node interface): In this scenario, the platform starts a node locally, but the node is a client node. The client node can connect directly to the external Elasticsearch server's data node. In this model, the request always goes directly to the data node. This deployment mode performs better than Transport Client mode.</li>
</ul>
</dd>
  <dt>Cluster Name (all modes)</dt>
  <dd>Name of the cluster for the Elasticsearch feature. Required for all deployment modes. Default for embedded mode: <strong>default_xxxxxx</strong>. When you install the feature, a value is defaulted in this field.</dd>  <dt>ES Server URL (Transport Client deployment mode only)</dt>
  <dd>The transport address for the Elasticsearch server (one or more, separated by commas), in the format: {hostname}:{port}. For example, <strong>10.12.121.116:9300</strong> or <strong>10.12.121.116:9300,10.12.122.140:9300</strong>.</dd>
  <dt>Master Host URL (Client-Only deployment mode only)</dt>
  <dd>The URL for the master host that this is a client for.</dd>
  <dt>Minimum Master Nodes (Embedded mode only)</dt>
  <dd>The minimum number of master nodes. Default: 2. Example: let's say there are five master eligible nodes, but <strong>Minimum Master Nodes</strong> is set to 2. In this scenario, two nodes are master nodes. If there is a specific need, such as increased load, an additional node might be used as a master node; if there is an outage, an additional node will replace the one that is down. However, if the minimum number is configured to be a smaller number, such as 1, only one master node might be used (depending on the Elasticsearch logic).</dd>
  <dt>Multicast (Embedded or Client Only modes)</dt>
  <dd>If this is a <a href="basics_glossary.htm#gl_multicast">multicast</a> scenario, check the box. In this scenario, the cluster name is defaulted.</dd>
</dl>

<p><strong>Transport Client versus Client Only mode</strong></p>
<p>Here is an example to illustrate the difference between these Transport Client and Client Only modes, both of which reference an external Elasticsearch server. Let's say there are two shards; one shard is on one node and the other shard is on a different node.</p>
<p>In the Transport Client scenario, the request is sent to the master node. The master node then sends the request to both data nodes, receives the responses, merges the data, and sends back the merged data as the response to the query.</p>
<p>In the Client Only scenario, the node has the information regarding which two data nodes are needed. It sends the request to both data nodes, receives the responses, and merges locally. The request is fulfilled with a smaller number of hops. Client-only mode is more efficient than transport client model.</p>
<p>Transport Client mode is used when the container uses a TCP port to connect to a standalone Elasticsearch server.</p>
<p>Client-only mode is used when a container running the embedded Elasticsearch feature becomes a node as part of an external standalone Elasticsearch server.</p>
<p><a href="#top">Back to top</a></p>



<a name="fv_es_embedded"></a><h3>Configuring an Elasticsearch Embedded Node: Field Values</h3>
<p>Information about the field values is given below.</p>
<dl class="apidoc_dl">
  <dt>Name</dt>
  <dd>The name of the node; for example, <strong>ES_Data01</strong>. Each embedded Elasticsearch node uses the container key for the name.</dd>
  <dt>Index Location</dt>
  <dd>The path to the folder where index data for this node is stored.</dd>
  <dd><strong>Note</strong>: if the location changes after the indexes are built, all the indexes must be rebuilt.</dd>
  <dt>Bind to all</dt>
  <dd>Check the box to bind to all.</dd>
  <dt>Network Bind Address</dt>
  <dd>The address that the server is binding the TCP port to; the address that is used to access the REST API on an HTTP port if an HTTP port is enabled. If <strong>Bind to all</strong> is selected, the Elasticsearch feature binds itself to the value 0.0.0.0, which indicates all addresses of the machine; it's not necessary to specify a network bind address.</dd>
  <dd>If the machine has multiple network interfaces, it can bind to all or to a specific IP address. To bind to a specific address of the machine, provide the address in this field.</dd>
  <dt>Network Publish Address</dt>
  <dd>The address that other nodes will use to communicate with this node. It can be the machine host name or a valid IP address for the machine. If not specified, the address is automatically derived.</dd>
  <dt>Transport Port</dt>
  <dd>The port used for node-to-node communication, if there are multiple nodes. Default: 9300. For more information, see <a href="#es_default_ports">What are the default ports for Elasticsearch configuration?</a></dd>
  <dt>HTTP Port</dt>
  <dd>The port used for the REST API. Default: 9200. For more information, see <a href="#es_default_ports">What are the default ports for Elasticsearch configuration?</a></dd>
  <dt>HTTP Enabled</dt>
  <dd>Indicates that the Elasticsearch node is HTTP-enabled.</dd>
  <dd>There are two ways that the data node or master node receives the Elasticsearch search request; TCP or HTTP. TCP is always enabled for all nodes, but HTTP is a higher level protocol and is optional. To enable it, check the box.</dd>
  <dd>The product does not depend on the HTTP port of any container. The <strong>HTTP enabled</strong> option really only comes into play to facilitate using some other interface, from outside the product, with HTTP interfaces. For example, you might want to use the HTTP interface of the Elasticsearch node for a third-party client, or for troubleshooting purposes. Internally, the platform does not depend on the HTTP port.</dd>
  <dt>Master Eligible</dt>
  <dd>Indicates whether the current node could be the master node.</dd>
  <dd>There must be at least one master eligible node in a cluster.</dd>
  <dt>Data Node</dt>
  <dd>Indicates whether the current node is a <a href="basics_glossary.htm#gl_es_data_node">data node</a> only. The data node is where the index is stored.</dd>
  <dd>There must be at least one data node in a cluster.</dd>
  <dd>Index location is required only for data nodes. It's vital because if the node doesn't hold the data, there is no storage of index location. Index location is where the index is saved, and the index is only saved on the data nodes. Therefore, for a data node, the index location needs to be provided.</dd>
  <dd>The default index location is a subfolder to the installation folder, <strong>/index</strong>, at the same level in the folder structure as the <strong>/lib</strong> and <strong>/bin</strong> folders. Index data is stored in this folder.</dd>
  <dd>If the node is not a data node, index location is not needed.</dd>
</dl>
<p><a href="#top">Back to top</a></p>




<a name="es_delete_index"></a><h3>How do I delete an embedded Elasticsearch search index I'm no longer using?</h3>
<p>You might need to delete an Elasticsearch index that you previously created; for example, if you configure an index and then change to use an index with a different name. If you have a search index that you no longer want to use, you'll need to delete it using the Akana Administrative Console. For instructions, see below.</p>
<p><strong>Note</strong>: This is only applicable to embedded Elasticsearch nodes. If you're using external Elasticsearch nodes, you'll need to delete redundant indexes using the Elasticsearch commands or user interface provided by your external Elasticsearch engine.</p>


<h5><a name="proc_es_delete_index"></a>To delete an Elasticsearch index in the Akana Administration Console</h5>
<ol>
  <li>In the Akana Administration Console, on the <strong>Configuration</strong> tab, under <strong>Configuration Actions</strong>, choose <strong>Delete Elasticsearch Index</strong>. The wizard opens.</li>
  <li>From the <strong>Available Index</strong> drop-down list, choose the index you want to delete.</li>
  <li>Click the <strong>Delete</strong> check box, and then click <strong>Finish</strong>. The index is deleted.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="es_force_rebuild"></a><h3>How do I force a rebuild of an Elasticsearch search index?</h3>
<p>If you're working with the Elasticsearch index and want to force a rebuild, you can delete everything from the INDEX_STATUS table. This will force a reindex of all the objects in the index.</p>
<p><a href="#top">Back to top</a></p>



<a name="es_configure_embed_single_container"></a><h3>How do I configure Elasticsearch in embedded mode with a single CM container?</h3>
<p>To run Elasticsearch in embedded mode, you don't need to change any configuration settings at all. Just go with the default settings and Elasticsearch takes care of everything in the background.</p>
<p><a href="#top">Back to top</a></p>



<a name="es_configure_embed_multiple_containers"></a><h3>How do I configure Elasticsearch in embedded mode with multiple CM containers (two or more)?</h3>
<p>If there are two CM containers in your installation, you'll need to install the embedded Elasticsearch feature in both containers, and then configure the feature in both containers.</p>
<p>In this scenario, you'll need to decide whether you want to replicate the index in both containers or have it in only one container. Akana recommends configuring both containers, so that you have a failover for the index data.</p>
<p>To configure both containers, follow the steps below.</p>


<h5>To configure two containers so that the index is replicated in both containers</h5>
<ol>
  <li>For <strong>each</strong> container, choose <strong>Configure Elasticsearch Embedded Node</strong> and configure the settings below:
    <ul>
      <li><strong>Name</strong>: Enter any unique name for the node name in the cluster.</li>
      <li><strong>Index Location</strong>: Either leave blank or enter a folder path.</li>
      <li><strong>Bind to All</strong>: Check the check box, but leave the <strong>Network Bind Address</strong> blank.</li>
      <li><strong>Network Publish Address</strong>: Enter the hostname/ipaddress.</li>
      <li><strong>Transport Port</strong>: Enter an unused port. The default is 9300. For more information, see <a href="#es_default_ports">What are the default ports for Elasticsearch configuration?</a></li>
      <li><strong>Http Port</strong>: Leave blank.</li>
      <li><strong>Http Enabled</strong>: Cleared.</li>
      <li><strong>Master Eligible</strong>: Checked.</li>
      <li><strong>Data Node</strong>: Checked.</li>
    </ul>
  </li>
  <li>Click <strong>Finish</strong> to save the configuration.</li>
  <li>Restart the containers. This replicates the index in both containers.</li>
</ol>


<p>In case there is an issue with search working in one container but not the other, follow the additional steps below:</p>
<ol>
  <li>Delete the index folder on both instances.</li>
  <li>Restart both containers.</li>
  <li>Empty the INDEX_STATUS table.</li>
</ol>
<p>In some cases, you might find that the index is built with the earlier Compass feature as well as the new Elasticsearch feature. To avoid building the index with Compass unnecessarily, follow the steps below.</p>


<h5>To ensure the search index is only Elasticsearch, not Compass</h5>
<ol>
  <li>In the TENANTS table, change the INDEX_TARGET field to <strong>elastic</strong>.</li>
  <li>Empty the index_objects table.</li>
  <li>Restart both containers.</li>
  <li>Empty the INDEX_STATUS table.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="es_config_settings"></a>
<h3>How do I configure the number of nodes and shards?</h3>
<h5 class="stamp">New in version: 8.0.3</h5>
<p>The platform includes configuration settings that you can use to manage your Elasticsearch setup. These are controlled by the Administrator for the Akana Admin Console; if you don't have access, coordinate as needed to get the settings modified if needed.</p>
<p>In the Akana Administration Console, the configuration category is: <strong>com.akana.elasticsearch</strong>.</p>
<p>In the default configuration, shown below, there are two shards and one replica. Let's say there are two nodes in the cluster. One shard, approximately half the index, is stored on each node. The one replica includes a replica of each shard:</p>
<ul>
  <li>Node 1 has Shard 1 and the replica of Shard 2</li>
  <li>Node 2 has Shard 2 and the replica of Shard 1</li>
</ul>
<p>In this scenario, if one node goes down, the other node has the full search index. Additional nodes add additional safety.</p>
<p>There are two settings, as shown below.</p>

<dl class="apidoc_dl">
<dt>elastic.config.index.number.of.replicas</dt>
  <dd>The number of replicas (additional copies) of the Elasticsearch index. Each replica includes a replica of each shard, so one replica might be distributed across multiple nodes, just as the index itself is split into shards which are distributed across nodes.</dd>
  <dd>Default: 1</dd>
<dt>elastic.config.index.number.of.shards</dt>
  <dd>The number of <a href="basics_glossary.htm#gl_es_shard">shards</a> (splits) for the Elasticsearch index. </dd>
  <dd><strong>Note</strong>: This is a one-time setting. An Elasticsearch index cannot be re-sharded; if you want to change the number of shards, after changing the setting you'll need to delete the /index folder that the search index is stored in and then rebuild the index.</dd>
  <dd>Default: 2</dd>
</dl>

<p>For additional information about configuration settings in the Akana Administration Console, see <a href="site_admin_admin_console_settings.htm">Admin Console Settings</a></p>
<p><a href="#top">Back to top</a></p>







<div class = "divider1"></div>
<h3><a name="h_es_troubleshooting"></a>Troubleshooting Elasticsearch:</h3>




<a name="es_ts_pre_upgrade_results_showing"></a><h3>Pre-upgrade search results are showing even though the index folder is populated with the Elasticsearch index: what do I do?</h3>
<p>If you upgrade to Elasticsearch from a previous version of the product, and the index folder is populated with Elasticsearch results after upgrading, but Compass search results are still showing up, check these two fields in the TENANTS table in the database:</p>
<ul>
  <li><strong>INDEX_TARGET</strong>: This determines what the platform uses for search indexing. To use Elasticsearch, make sure INDEX_TARGET is set to <strong>elastic</strong>.</li>
  <li><strong>SEARCH_SOURCE</strong>: This determines which search index the platform uses to deliver search results. It can have either of these values: <strong>elastic</strong> or <strong>compass</strong>. If the value is <strong>compass</strong>, the platform uses the Compass index even if there is an Elasticsearch index available also. To use Elasticsearch, make sure SEARCH_SOURCE is set to <strong>elastic</strong>.</li>
</ul>
<p><a href="#top">Back to top</a></p>



<div class = "divider1"></div>



<h3 id="related_topics">Related Topics</h3>
<table width="98%" border="0" cellspacing="0" cellpadding="2" class="doctable">
  <tr>
    <td width="33%"><ul>
      <li><a href="site_admin_.htm">Site Admin Summary Page</a></li>
      <li><a href="site_admin_overview.htm">Site Admin Responsibilities</a></li>
      <li><a href="site_admin_agreements.htm">Platform Legal Agreement</a></li>
      <li><a href="site_admin_config.htm">Configuration</a></li>
      <li><a href="site_admin_settings.htm">Settings</a></li>
    </ul>
    </td>
    <td width="33%"><ul>
      <li><a href="site_admin_site.htm">Site Settings</a></li>
      <li><a href="site_admin_site_admins.htm">Managing Site Admins</a></li>
      <li><a href="site_admin_users.htm">Managing User Accounts</a></li>
      <li><a href="site_admin_workflows.htm">Workflows</a></li>
    </ul>
    </td>
    <td width="33%"><ul>

      <li><a href="site_admin_tc.htm">Test Client</a></li>
<!--      <li><a href="site_admin_es.htm">Elasticsearch Configuration</a></li>-->
      <li><a href="site_admin_content_guidelines_sd.htm">Content Development Guidelines for Simple Dev Theme</a></li>
      <li><a href="basics_glossary.htm">Glossary of Terms</a></li>
    </ul>
    </td>
  </tr>
</table>


