---
layout: page
title: Custom Metadata (LM) | Site Admin | Akana API Platform Help
description: Manage custom metadata on the developer portal.
product: cm
category: learn
sub-nav-class: Site Administration
weight: 3224
type: page
nav-title: Custom Metadata (LM)
---
<h2 id="top">Using Custom Metadata on the Developer Portal</h2>

<p>Use integration with Lifecycle Manager to add and manage custom metadata on the developer portal</p>
<h5 class="stamp">API Platform Version: 8.4 and later</h5>
<div class = "divider1"></div>



<h3 style="color: gray;">Table of Contents</h3>
<ol class="table_of_contents">
	<li><a href="#lm_define">What is Lifecycle Manager?</a></li>
	<li><a href="#custom_metadata_define">What is custom metadata?</a></li>
	<li><a href="#custom_metadata_resources">What resources can I add custom metadata for?</a></li>
	<li><a href="#custom_metadata_types">What types of custom metadata can I add?</a></li>
	<li><a href="#custom_metadata_add">How do I add custom metadata?</a></li>
	<li><a href="#lm_templates_about">About the Lifecycle Manager templates</a></li>
</ol>




<div class = "divider1"></div>




<h3 id="lm_define">What is Lifecycle Manager?</h3>
<p>Lifecycle Manager, an Akana product, is a metadata repository and SDLC management product that enables enterprises to effectively collaborate between business, developers, and IT operations, resulting in rapid development and deployment cycles while increasing reliability, stability, and availability of their APIs and supporting assets.</p>
<p>Lifecycle Manager provides an intelligent inventory of assets and includes their relationships to each other, to the technical infrastructure, and to the company's business architecture. Using Lifecycle Manager, organizations can accelerate reuse and SOA initiatives, as well as improve the governance over production and consumption of services and other reusable assets. Application developers, business analysts, and technical and business architects can search the repository for the company's SDAs, to identify those that best match business and technical requirements for application development and integration.</p>
	<p>When integration between the developer portal and Lifecycle Manager is set up, the developer portal supports custom properties for certain resources in the developer portal (apps, APIs, and users).</p>
<p><a href="#top">Back to top</a></p>



<h3 id="custom_metadata_define">What is custom metadata?</h3>
<p>In the context of the developer portal, custom metadata is information about a resource that isn't part of the standard data on the platform.</p>
<p>For example, standard data about users includes first name, last name, UserID, and password. Using Lifecycle Manager integration, you could modify the platform to collect additional data such as company or job title, and to send that information to Lifecycle Manager.</p>
<p><a href="#top">Back to top</a></p>



<h3 id="custom_metadata_resources">What resources can I add custom metadata for?</h3>
<p>You can add custom metadata for these types of resources:</p>
<ul>
	<li><a href="#custom_metadata_apis">APIs</a></li>
	<li><a href="#custom_metadata_apps">Apps</a></li>
	<li><a href="#custom_metadata_users">Users</a>; for example, you could add a Company or Notes field on the user profile.</li>
	</ul>

<h5 id="custom_metadata_apis">Custom metadata for APIs</h5>
<p>For APIs, you can define custom metadata that will appear in the user interface in the following pages:</p>
<ul>
	<li><strong>Add an API</strong>. See <a href="apiadmin_api_add.htm#how_do_i_add_an_api">How do I add an API?</a></li>
	<li><strong>Add an API version</strong>. See <a href="apiadmin_api_add.htm#api_version_add">How do I add an API version?</a></li>
	<li><strong>Edit an API or API version</strong>.</li>
</ul>

<h5 id="custom_metadata_apps">Custom metadata for apps</h5>
<p>For apps, you can define custom metadata that will appear in the user interface in the following pages:</p>
<ul>
	<li><strong>Add an app</strong>. See <a href="app_create_app_add.htm#add_app">How do I add an app?</a></li>
	<li><strong>Add an app version</strong>. See <a href="app_create_app_add.htm#add_app_version">How do I add an app version?</a></li>
	<li><strong>Edit an app version</strong>. See <a href="app_create_app_add.htm#how_do_i_edit_app_version_information">How do I edit an app version?</a></li>
	<li><strong>View app details</strong>.  See <a href="app_create_app_view_apps.htm#app_details_page">What information is available on the app's Details page?</a></li>
</ul>
<p>The example below shows the extension to the <strong>Add App</strong> page when custom properties are added. The user sees these additional values when adding an app. Some of the values are required.</p>
<p><img src="assets/custom_properties_app_add.jpg" alt="Custom properties example for an app" /></p>

<h5 id="custom_metadata_users">Custom metadata for users</h5>
<p>For users, you can define custom metadata that will appear in the user interface in the following pages:</p>
<ul>
	<li><strong>Self-signup page</strong>: Only required extensible fields are displayed.</li>
	<li><strong>Signup Activation link</strong>: Only required extensible fields are displayed.</li>
	<li><strong>Update Profile page</strong>: All extensible fields are displayed.</li>
	<li><strong>Invite User</strong>: Only required extensible fields are displayed on the Signup Activation page, which the invitation code links to.</li>
	<li><strong>Add User when user is added by the Administrator</strong>: All extensible fields are displayed.</li>
	<li><strong>Log in as LDAP user</strong>: Only required extensible fields are displayed on the Signup page, which the LDAP signup invitation code links to.</li>
	<li><strong>Log in as Google/Facebook user</strong>: Only required extensible fields are displayed on the Signup page, which the Google/Facebook signup invitation code links to.</li>
</ul>
<p><a href="#top">Back to top</a></p>



<h3 id="custom_metadata_types">What types of custom metadata can I add?</h3>
<p>The platform supports many data types for extension properties, including Boolean, date, string, taxonomy, and others.</p>
<p>Extension templates support several types of fields, such as text field, check boxes, radio buttons, and drop-down lists, for extension properties. Field types are:</p>
<ul>
	<li>Boolean</li>
	<li> date</li>
	<li>string</li>
	<li>taxonomy</li>
	<li>by-ref</li>
</ul>
<p>Fields can be required, optional, or read-only.</p>
<p><a href="#top">Back to top</a></p>



<h3 id="custom_metadata_add">How do I add custom metadata?</h3>
<p>Support for this feature requires that these steps be in place:</p>
<ul>
	<li>The implementation must include the integrated <a href="basics_glossary.htm#gl_lm">Lifecycle Manager</a> product, configured to use the same database as the developer portal.</li>
	<li>  The applicable site setting (in <strong>Administration</strong> &gt; <strong>Site</strong> &gt; <strong>Extended Properties and Workflow</strong>) must be enabled.</li>
</ul>
<p>When this setting is enabled, properties defined for assets in the developer portal, such as apps and APIs, can be extended by modifying <a href="basics_glossary.htm#gl_template_lm">templates</a> in an integrated Lifecycle Manager.</p>
<p><a href="#top">Back to top</a></p>


<h3 id="lm_templates_about">About the Lifecycle Manager templates</h3>
<p>When a tenant is created with the Extended Properties and Workflow flag set (or the flag is later enabled) a corresponding library of assets is created in Lifecycle Manager.  The default configuration for this library includes templates already in place that represent the fields for Users, APIs, and Apps. However, the templates do not include any custom fields.</p>
<p>There are two  Lifecycle Manager templates for each resource type supported in the developer portal:</p>
<ul>
	<li>API&#8212;Initial</li>
	<li>API&#8212;Specified</li>
	<li>App&#8212;Initial</li>
	<li>App&#8212;Specified</li>
	<li>User&#8212;Initial</li>
	<li>User&#8212;Specified</li>
</ul>
<p>Additional information about the templates:</p>
<ul>
	<li><strong>Initial</strong> templates: Use these to define custom optional and required fields that are presented in the developer portal user interface when a resource is created. In the <strong>Initial</strong> template, you can also indicate that a field is read-only. This locks it down after the resource has been created.</li>
	<li><strong>Specified</strong> templates: Use these for additional custom fields that appear in the edit properties in addition to the fields defined in the <strong>Initial</strong> templates. </li>
</ul>
<p><a href="#top">Back to top</a></p>



<div class = "divider1"></div>



<h3 id="related_topics">Related Topics</h3>
<div class="relatedlinks" id="cmhelp_site_admin">
<!-- #BeginLibraryItem "/Library/relatedtopics_site_admin.lbi" -->
	<ul>
		<li><a href="site_admin_.htm">Site Admin Summary Page</a></li>
		<li><a href="site_admin_overview.htm">Site Admin Responsibilities</a></li>
		<li><a href="site_admin_agreements.htm">Platform Legal Agreement</a></li>
		<li><a href="site_admin_config.htm">Configuration</a></li>
		<li><a href="site_admin_settings.htm">Settings</a></li>
	</ul>
	<ul>
		<li><a href="site_admin_site.htm">Site Settings</a></li>
		<li><a href="site_admin_site_admins.htm">Managing Site Admins</a></li>
		<li><a href="site_admin_users.htm">Managing User Accounts</a></li>
		<li><a href="site_admin_workflows.htm">Workflows</a></li>
		<li><a href="site_admin_promotion.htm">Promotion Feature</a></li>
	</ul>
	<ul>
		<li><a href="site_admin_tc.htm">Test Client</a></li>
		<li><a href="site_admin_es.htm">Elasticsearch Configuration</a></li>
		<li><a href="site_admin_content_guidelines_sd.htm">Content Development Guidelines for Simple Dev Theme</a></li>
		<li><a href="basics_glossary.htm">Glossary of Terms</a></li>
	</ul>
	<!-- #EndLibraryItem -->
</div>