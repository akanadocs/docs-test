---
layout: page
title: Use Case - OAuth with LDAP and JWT | API Admin | Akana API Platform Help
description: A step-by-step example to demonstrate setting up an OAuth domain to support JWT tokens. This example uses an LDAP domain for authentication.
product: cm
category: learn
sub-nav-class: API Testing
weight: 2622
type: page
nav-title: Use Case - OAuth with LDAP and JWT
---
<h1 id="top">Tutorial: OAuth Setup for JWT Support</h1>
<p>A step-by-step example to demonstrate setting up an OAuth domain to support JWT tokens. This example uses an LDAP domain for authentication.</p>
<hr class="divide_hr" />



<h2 style="color: gray;">Table of Contents</h2>
<ol class="table_of_contents">
	<li><a href="#s01_prereq">Prerequisite steps in Policy Manager</a>
		<ol>
			<li><a href="#s01_prereq_pm_01">Create an LDAP domain</a></li>
			<li><a href="#s01_prereq_pm_02">Create a JWT user</a></li>
			<li><a href="#s01_prereq_pm_03">Set up the JWT user as an organization identity for your developer portal</a></li>
		</ol>
</li>
	<li><a href="#s02_domain_oauth">Set up the Akana OAuth/OIDC Provider domain</a></li>
	<li><a href="#s03_domain_eoap">Set up the External OAuth Provider domain</a></li>
	<li><a href="#s04_app">Set up the app</a></li>
	<li><a href="#s05_api">Set up the API</a></li>
	<li><a href="#s06_contract">Create the contract</a></li>
	<li><a href="#s07_test">Test in Test Client</a></li>
	<li><a href="#s08_decode">Optional: decode the JWT token</a></li>
</ol>
<hr class="divide_hr" />



<h2 id="s01_prereq">Prerequisite steps in Policy Manager</h2>
<p>There are some prerequisite steps that need to be done in the underlying infrastructure, Policy Manager. You can ask the Administrator to do these steps for you:</p>
<ol>
<li><a href="#s01_prereq_pm_01">Create an LDAP domain</a></li>
<li><a href="#s01_prereq_pm_02">Create a JWT user</a></li>
<li><a href="#s01_prereq_pm_03">Set up the JWT user as an organization identity for your developer portal</a></li>
</ol>


<h4 id="s01_prereq_pm_01">Create an LDAP domain</h4>
<ol>
	<li>In the Policy Manager Management Console: <strong>Configure</strong> &gt; <strong>Security</strong> &gt; <strong>Identity Systems</strong> &gt; <strong>Add Identity System</strong>.</li>
	<li>Follow the steps of the <strong>Add Identity System</strong> wizard. For documentation, see <a href="../../ag/security_config/identity_systems.htm">Identity Systems Overview</a>.</li>
</ol>


<h4 id="s01_prereq_pm_02">Create a JWT user</h4>
<ol>
	<li>In the Policy Manager Management Console: <strong>Security</strong> &gt; <strong>Users</strong> &gt; <strong>Add User</strong>. This example uses <strong>akanajwtuser</strong> as shown below.
		<p><img src="assets_tutorial_jwt/tutorial_jwt_01.png" alt="Policy Manager -- Define User Information page" /></p>
	</li>
	<li>Click <strong>Finish</strong> and then, at the <strong>Summary</strong>, click <strong>Manage PKI Keys</strong>.</li>
	<li>In the <strong>Select Key Management Option</strong> page for the user, generate the PKI keys for the user. This example uses the <strong>Generate PKI Keys and X.509 Certificate</strong> option, as shown below. Click <strong>Next</strong>.
		<p><img src="assets_tutorial_jwt/tutorial_jwt_02_pki_keys.png" alt="Policy Manager -- Select Key Management Option page" /></p></li>
	<li>In the <strong>Generate PKI Keys &amp; X.509 Certificate</strong> page, enter values for the certificate. An example is shown below. Click <strong>Finish</strong> and then click <strong>Close</strong>.
		<p><img src="assets_tutorial_jwt/tutorial_jwt_03_pki_keys_cert.png" alt="Policy Manager -- Generate PKI Keys &amp; X.509 Certificate page" /></p></li>
</ol>


<h4 id="s01_prereq_pm_03">Set up the JWT user as an organization identity for your developer portal</h4>
<ol>
	<li>In the Policy Manager Management Console: Go to <strong>Workbench</strong> and, on the left, choose your organization. If there are multiple organizations, be sure to choose the correct organization where you will create your OAuth domain. On the right, under <strong>Actions</strong>, choose <strong>Manage Organization Identities</strong>, as shown below.
<table width="200" border="0">
<tbody>
<tr>
<td style="vertical-align:top;"><img src="assets_tutorial_jwt/tutorial_jwt_03_pm_registry.png" alt="Policy Manager -- Organization Tree" /></td>
<td style="vertical-align:top;"><p><img src="assets_tutorial_jwt/tutorial_jwt_04_pm_manage_organization_identities.png" alt="Policy Manager -- Manage Organization Identities option" /></p></td>
</tr>
</tbody>
</table>
</li>
	<li>Use the Search tools to find the <strong>akanajwtuser</strong> user and add it to your organization, as shown below.
<p><img src="assets_tutorial_jwt/tutorial_jwt_05_pm_manage_organization_identities_add_jwt.png" alt="Organization -- Manage Identities page" /></p></li>
	<li>Click <strong>Apply</strong>.</li>
</ol>
<p>That completes the Prerequisite steps in Policy Manager. All other steps in this use case are performed in the developer portal.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="s02_domain_oauth">Set up the Akana OAuth/OIDC Provider domain</h2>
<p>In this step, you will set up the OAuth Provider domain in the developer portal, and configure it to use JWT.</p>


<h4 id="proc_domain_oauth_oidc">To set up an Akana OAuth/OIDC Provider domain</h4>
<ol>
<li>Log in to the developer portal as a Business Admin.</li>
<li>Go to <strong>More</strong> &gt; <strong>Admin</strong> &gt; <strong>Domains</strong>.
</li>
<li>Click <strong>Add Domain</strong>, and choose <strong>Akana OAuth/OIDC Provider</strong>, as shown below.
<p><img src="assets_tutorial_jwt/tutorial_jwt_10_add_domain.png" alt="Developer Portal -- Select Domain Type overlay" /></p>
</li>
<li>In <strong>Tab 1, Details</strong>, provide a name for the domain. In this example: <strong>Akana JWT Provider</strong>.</li>
<li>In <strong>Tab 2, Grant Types</strong>, choose all four grant types. In the <strong>Resource Owner Authentication Domain</strong> field, choose the LDAP domain that you set up. An example is shown below.
<p><img src="assets_tutorial_jwt/tutorial_jwt_11_oauth_domain_tab2_grant_types.png" alt="Developer Portal -- Akana OAuth/OIDC Provider domain setup, Tab 2, Grant Types" /></p>
</li>
<li>In <strong>Tab 3, Token</strong>, click <strong>JWT Bearer Access Token</strong>. Specify the following values, as shown in the example:
<ul>
<li>Issuer: <strong>akana</strong></li>
<li>Reference Signing Key from Platform: <strong>akanajwtuser</strong>.</li>
</ul>
<p><img src="assets_tutorial_jwt/tutorial_jwt_12_oauth_domain_tab3_token.png" alt="Developer Portal -- Akana OAuth/OIDC Provider domain setup, Tab 3, Token" /></p></li>
<li>In <strong>Tab 4, OpenID Connect</strong>, check the box to enable OpenID Connect, as shown below:
<p><img src="assets_tutorial_jwt/tutorial_jwt_13_oauth_domain_tab4_openidconnect.png" alt="Developer Portal  -- Akana OAuth/OIDC Provider domain setup, Tab 4, OpenID Connect" /></p></li>
<li>In <strong>Tab 5, Scopes</strong>, no changes are needed. Make sure <strong>User Authorization required</strong> is checked. It is the default.</li>
<li>In <strong>Tab 6, Properties</strong>, no changes are needed.</li>
<li>In <strong>Tab 7, Branding</strong>, type in the full Authorization Server URL, including the port number, as shown below. In this example: <strong>http://opencloud2019-1-ubuntu1804-oracle12c.aws.akana.roguewave.com:7900</strong>.
<p><img src="assets_tutorial_jwt/tutorial_jwt_14_oauth_domain_tab7_branding.png" alt="Developer Portal -- Akana OAuth/OIDC Provider domain setup, Tab 7, Branding" /></p></li>
<li>Click <strong>Save</strong>.</li>
</ol>
<p>The next step is to add an External OAuth Provider domain.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="s03_domain_eoap">Set up the External OAuth Provider domain</h2>
<p>In this step, you will set up the OAuth Domain in the developer portal, and configure it to use JWT.</p><h4 id="proc_domain_eoap">To set up an External OAuth Provider domain</h4>
<ol>
<li>Log in to the developer portal as a Business Admin.</li>
<li>Go to <strong>More</strong> &gt; <strong>Admin</strong> &gt; <strong>Domains</strong>.</li>
<li>Click <strong>Add Domain</strong>, and choose <strong>External OAuth Provider</strong>.</li>
<li>In <strong>Tab 1, Details</strong>, provide a name for the domain. In this example: <strong>Akana External</strong>.</li>
<li>In <strong>Tab 2, Configure</strong>:
<ol>
<li>In the <strong>Provider Type</strong> field, choose <strong>Akana</strong>.</li>
<li>Specify the well-known configuration URL for your provider, in the format <strong>{hostname:port}/.well-known/openid-configuration</strong>, and click <strong>Load</strong>. In this example: <strong>http://opencloud2019-1-ubuntu1804-oracle12c.aws.akana.roguewave.com:7900/.well-known/openid-configuration</strong>, as shown below:
<p><img src="assets_tutorial_jwt/tutorial_jwt_21_eoap_domain_tab2_configure.png" alt="Developer Portal -- External OAuth Provider domain setup, Tab 2, Configure" /></p>
</li>
</ol>
</li>
<li>In <strong>Tab 3, Provider</strong>:
<ol>
<li>In the top section, the values should be loaded from the OAuth Provider well-known configuration URL. If they are not, you can specify the issuer and the endpoints. The example below shows the values loaded from the well-known configuration URL above. In this example, Client Registration Endpoint is not needed. Text values, with placeholder hostname, are also included below.
<p><img src="assets_tutorial_jwt/tutorial_jwt_22_eoap_domain_tab3_provider_01.png" alt="Developer Portal -- External OAuth Provider domain setup, Tab 3, Provider" /></p>
<p>Issuer: <strong>Auth Server IP:Port</strong></p>
<p>Authorization Server URL: <strong>Auth Server IP:Port/oauth/auz/authorize</strong></p>
<p>Token Endpoint URL: <strong>Auth Server IP:Port/oauth/oauth20/token</strong></p>
<p>JWK Set URL: <strong>Auth Server IP:Port/oauth/jwks</strong></p>
<p>Userinfo Endpoint URL: <strong>Auth Server IP:Port/oauth/userinfo</strong></p>
</li>
<li>In the bottom section, if you are setting values manually, choose the features that you want. Again, these values should be read from the OAuth Provider's well-known configuration URL. You cannot choose to support options that the provider does not support.</li>
</ol>
</li>
<li>In <strong>Tab 4, Access Token Validation</strong>:
<ul>
<li>Check the <strong>JWT Bearer Access Token</strong> box.</li>
<li>For <strong>ClientID Claim Name</strong>, enter <strong>client_id</strong>.</li>
<li>For <strong>Scope Claim Name</strong>, enter <strong>scope</strong>.</li>
<li>Make sure <strong>Reference signing keys from an existing platform identity</strong> is selected.</li>
<li>In the <strong>Identity</strong> field below it, specify the platform identity that you created in Policy Manager. In this example: <strong>akanajwtuser</strong>.
<p><img src="assets_tutorial_jwt/tutorial_jwt_23_eoap_domain_tab4_accesstokenvalidation.png" alt="Developer Portal -- External OAuth Provider domain setup, Tab 4, Access Token Validation" /></p>
</li>
</ul>
</li>
<li>In <strong>Tab 5, Extensions</strong>, no changes are needed.</li>
<li>Click <strong>Finish</strong>.</li>
</ol>

<p>Now that you have the two domains set up, you are ready to create the app and API and test.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="s04_app">Set up the app</h2>
<p>Create the app and then configure the App OAuth Profile.</p>

<h4>To create an app</h4>
<ol>
<li>Log in to the developer portal.</li>
<li>Create an app. In this example, <strong>JWKS_test_app</strong>.
<ul>
<li><strong>Apps</strong> &gt; <strong>Add App</strong>.</li>
<li>Provide a version number, and save.
<p>For detailed instructions, see <a href="app_create_app_add.htm#add_app">How do I add an app?</a></p></li>
</ul>
</li>
<li>To configure the app to work with OAuth, go to the <strong>App Details</strong> page and click <strong>OAuth Profile</strong>:
<p><img src="assets_tutorial_jwt/tutorial_jwt_24_app_oauth_profile.png" alt="Developer Portal -- Developer Portal -- App OAuth Profile button" /></p>
</li>
<li>In the <strong>App OAuth Profile</strong> page:
<ul>
<li>Provide some value in the <strong>Description</strong> and <strong>Legal Disclaimer</strong> fields, since these fields are required.</li>
<li>Under<strong> JWKS URL</strong>, add your JWKS endpoint. This is the JWKS Set URL from the External OAuth Provider domain, Tab 3, Provider. In this example it is <strong>http://opencloud2019-1-ubuntu1804-oracle12c.aws.akana.roguewave.com:7900/oauth/jwks</strong>:
<p><img src="assets_tutorial_jwt/tutorial_jwt_25_app_oauth_jwks_url.png" alt="Developer Portal -- App OAuth Profile page" /></p></li>
	<li>Save.</li>
</ul>
</li>
</ol>
<p>Now, create the API.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="s05_api">Set up the API</h2>
<p>There are a few settings you have to choose to get the API ready to use OAuth. Follow the steps below.</p>
<h4>To create an API</h4>
<ol>
<li>Log in to the developer portal.</li>
<li>Create an API:
<ul>
<li><strong>APIs</strong> &gt; <strong>Add API</strong>.</li>
<li>For detailed instructions, see <a href="apiadmin_api_add.htm#add_api">How do I add an API?</a> This examples uploads <a href="assets_tutorial_jwt/Petstore_SwaggerV2.json">a version of the Swagger Petstore JSON file</a>.</li>
<li>For this example, after uploading the Swagger JSON, we have renamed the API to <strong>Swagger_Petstore_JWKS_Test</strong>.</li>
</ul>
</li>
<li>Modify the API implementation to use the OAuth Security Policy:
<ul>
<li><strong>Implementations</strong> &gt; choose implementation &gt; on <strong>Policies</strong> section, click <strong>Edit</strong> and add the policy.
<p><img src="assets_tutorial_jwt/tutorial_jwt_pdf_19.png" alt="Developer Portal -- Implementation page, adding the policy" /></p>
</li>
</ul>
</li>

<li>Set up the API OAuth Details to use the OAuth Provider domain you set up:
<ul>
<li>From the API's <strong>Details</strong> page, from the drop-down on the right, choose <strong>OAuth Details</strong>:
<p><img src="assets_tutorial_jwt/tutorial_jwt_31_cm_api_oauth_01.png" alt="Developer Portal -- accessing the OAuth Details page" /></p></li>
<li>In the <strong>API OAuth Settings</strong> wizard, <strong>Tab 1, Provider</strong>, choose the OAuth Provider created earlier, and then click <strong>Add Provider</strong>. In this example: <strong>Akana JWT Provider</strong>:
<p><img src="assets_tutorial_jwt/tutorial_jwt_32_cm_api_oauth_02.png" alt="Developer Portal -- API OAuth Settings page" /></p>
</li>
<li>In <strong>Tab 2, Scope Mapping</strong>, choose <strong>API-Wide Scope Mapping</strong>, then click <strong>Edit</strong> and choose both <strong>openid</strong> and <strong>scope</strong>:
<p><img src="assets_tutorial_jwt/tutorial_jwt_33_cm_api_oauth_03.png" alt="Developer Portal -- API OAuth Settings, Tab 2, Scope Mapping" /></p>
</li>
</ul>
</li>
<li>Click <strong>Finish</strong>.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="s06_contract">Create the contract</h2>
<p>There must be a contract between the app and the API so that you can see OAuth and JWKS in action. The app developer requests a contract with the API, and the API developer approves it.</p>
<h4>To create the contract</h4>
<ol>
<li>In the developer portal, go to<!-- #BeginLibraryItem "/Library/hdr_myapis_nav_all.lbi" -->&nbsp;<strong>APIs</strong> &gt; <strong>My APIs</strong> &gt; choose API &gt;&nbsp;<!-- #EndLibraryItem --><strong>Overview</strong>.</li>
<li>At the top right, click <strong>Access</strong>:
<p><img src="assets_tutorial_jwt/tutorial_jwt_pdf_23.png" alt="Developer Portal -- API Access button for creating the contract" /></p>
</li>
<li>In <strong>Tab 1, Select App</strong>, specify the app/app version. In this example, <strong>Swagger_Petstore_JWKS_Test</strong>.</li>
<li>Click <strong>Next</strong>.</li>
<li>In <strong>Tab 2, Endpoint</strong>, choose the endpoint. Since you just created the API, there is only one endpoint.</li>
<li>Click <strong>Save</strong>.</li>
<li>As the API Admin, go to your Action Dashboard and activate the access request via the Dashboard notification.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="s07_test">Test in Test Client</h2>
<p>Once everything is set up, you can test in Test Client, get the OAuth token, and get the API response.</p>
<h4>To test in Test Client</h4>
<ol>
<li>In the developer portal, go to <strong>Apps</strong> &gt; <strong>My Apps</strong>, choose the app (in this example, <strong>JWKS_test_app</strong>), and then go to <strong>Test Client</strong>.</li>
<li>Make sure the correct API is selected. In this example, it is the only API that the app is connected to.</li>
<li>Choose the operation. This example uses the getPetById operation (GET: /pet/{petid}) in the Swagger Petstore API.
<p><strong>Note</strong>: to follow along with this example, you will need to add a pet at <a href="https://petstore.swagger.io/#/pet/addPet" title="Link to Swagger Petstore API testing URL" target="_blank">https://petstore.swagger.io/#/pet/addPet</a>, so that you have a valid Pet ID for testing.</p></li>
<li>Click the <strong>Security</strong> button. You'll see the OAuth Security Policy page.</li>
<li>Click <strong>Get Token</strong>. You will see the Authorization page:
<p><img src="assets_tutorial_jwt/tutorial_jwt_41_cm_tc_01.png" alt="Developer Portal -- Test Client -- OAuth Security Policy page with Authorization page" /></p>
</li>
<li>Put in the username and password for the LDAP user, and click <strong>Authorize</strong>, and the token is generated:
<p><img src="assets_tutorial_jwt/tutorial_jwt_42_cm_tc_02.png" alt="Developer Portal -- Test Client -- Token is generated" /></p>
</li>
	<li>Click <strong>Next</strong>, and then, at the SameOriginPolicy page, click <strong>Finish</strong>.</li>
<li>For the Swagger Petstore API, put the valid PetID in the <strong>Value</strong> field, and then click <strong>Invoke</strong> to call the API.
<p><img src="assets_tutorial_jwt/tutorial_jwt_43_cm_tc_result.png" alt="Developer Portal -- Test Client -- invoking the API, with a 200 response" /></p>
</li>
</ol>
<p>For general documentation about using Test Client, see <a href="api_admin_testing_tc.htm">API Testing with Test Client</a>.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="s08_decode">Optional: decode the JWT token</h2>
<p>When you get the token in Test Client, you can also copy it to the clipboard and then parse the token on <a href="https://jwt.io/" title="https://jwt.io/" target="_blank">https://jwt.io/</a> to see the details. The token from the example above is shown below.</p>
<p><strong>Note</strong>: If you copy the token using the <strong>Copy to Clipboard</strong> option, you'll need to remove the <strong>accesstoken=</strong> at the beginning. Just use the token value, as shown below.</p>
<p><img src="assets_tutorial_jwt/tutorial_jwt_44_jwtio_token_decode.png" alt="Decoding the token at https://jwt.io/" /></p>
<p><a href="#top">Back to top</a></p>