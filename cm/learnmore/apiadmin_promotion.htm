---
layout: page
title: API Promotion | API Admin | Akana API Platform Help
description: Learn about promoting an API to the next environment.
product: cm
category: learn
sub-nav-class: API Admin
weight: 2616
type: page
nav-title: API Promotion
---
<h2 id="top">Promoting an API to the Next Environment</h2>

<p>Learn about promoting an API to the next environment.</p>
<h5 class="stamp">API Platform Version: 8.4 and later</h5>
<div class = "divider1"></div>



<h3 style="color: gray;">Table of Contents</h3>
<ol class="table_of_contents">
	<li><a href="#promotion_overview">What is the promotion feature?</a></li>
	<li><a href="#promotion_installed">How do I know if the promotion feature is available for my API?</a></li>
	<li><a href="#api_promote">How do I promote my API?</a></li>
	<li><a href="#api_promote_setup">I promoted my API to the next environment. What else do I need to do?</a></li>
	<li><a href="#promotion_states">What are the different promotion states?</a></li>
	<li><a href="#promote_fanout">What is promotion fanout?</a> (8.4.19 and later)</li>
</ol>



<div class = "divider1"></div>



<h3 id="promotion_overview">What is the promotion feature?</h3>
<p>The platform includes an add-on feature, Lifecycle Coordinator, which allows the Administrator to define a one-way topology that includes a chain of environments reflecting the development lifecycle. For example, the topology chain could be from <strong>Development</strong> to <strong>Testing</strong> to <strong>Staging</strong> to <strong>Production</strong>. Each environment is a separate installation of the developer portal.</p>
<p>Lifecycle Coordinator is a standalone user interface that's installed separately. This feature also includes modifications to the developer portal user interface to allow the API Admin to promote an API to the next environment.</p>
<h5>Lifecycle Coordinator</h5>
<p>Within the Lifecycle Coordinator, the authorized user can:</p>
<ul>
<li>Define and manage the environment topology (two or more environments in a unidirectional chain).</li>
<li>Set up processing rules that are executed when an app or API is promoted from one specific environment to the next. For example:
	<ul>
		<li>A rule might change the target URL host for the physical services when an app or API is promoted from Staging to Production.</li>
		<li>A rule might deploy an app or API to different deployment zones in the Production environment depending on the PCI compatibility of the resource.</li>
		<li>A rule might define an approval required for the resource to be promoted to the next environment. If approval is required, the resource will be in a <strong>Promotion Pending</strong> state until the promotion is approved.</li>
	</ul>
</li>
</ul>
<p>This feature includes a user permission specifically for the user who manages the Lifecycle Coordinator.</p>
<p>For more detailed information about the Lifecycle Coordinator feature, refer to the <a href="../promotion/promotion_users_guide.htm">Lifecycle Coordinator Promotion Guide</a>.</p>
<h5>Developer Portal</h5>
<p>Within the developer portal user interface, the new feature allows the API Admin or Business Admin to promote an API from the current environment to the next step in the environment topology.</p>
<p>When the user in the developer portal promotes the app or API, it is passed to the Lifecycle Coordinator. The next steps are governed by the process set up in the Lifecycle Coordinator. For example, if a manual approval is required, approval is requested. If processing rules are in place, the rules are applied to the data before it is promoted to the next environment. The status of the promotion request is reflected in the developer portal user interface; for example, <strong>Promoted</strong> or <strong>Promotion Pending</strong>.</p>


<h5 id="promotion_iterations">Iterations</h5>
<p>A resource can be promoted to the next lifecycle stage multiple times, each time being an iteration of the resource, to accommodate a development scenario where multiple changes are made before it is fully mature and ready to move to the next stage.</p>
<p>For example, an app or API might be promoted from Development to Testing, and some errors found in Testing. It can then be updated in the Development environment and promoted to Testing again, possibly multiple times until it fully passes Testing and is ready to be promoted to the next lifecycle stage in the next environment.</p>
<p>In the Lifecycle Coordinator, each of these iterations is stored, for historical tracking and non-repudiation.</p>
<h5>Deployment</h5>
<p>In terms of deployment, the Lifecycle Coordinator can be co-located with any one of the tenants, or it can stand alone and communicate remotely with any of them.</p>
<p><a href="#top">Back to top</a></p>



<h3 id="promotion_installed">How do I know if the promotion feature is available for my API?</h3>
<p>If the promotion feature is available for your API, you'll see extra sections in the developer portal, showing the current state of the API, as shown in the examples below.</p>

<h5>API Overview page</h5>
<p>You'll see an extra section to the right of your API <strong>Overview</strong> page, as shown below.</p>
<p><strong>Note</strong>: In the example below, the Promotion feature is enabled for API Admins, so the <strong>Promote</strong> button is available. If you see the right pane, but you don't see the <strong>Promote</strong> button, the feature is available but disabled in the developer portal settings. See <a href="#api_promote">How do I promote my API?</a></p>
<p><img src="assets/promotion_api_overview.jpg" alt="Promotion feature for an API; Overview page" /></p>
<p>The extra section shows:</p>
<ul>
	<li>Current environment / status in current environment</li>
	<li>Environment chain / status in each environment</li>
	<li><strong>Promote</strong> button</li>
</ul>

<h5>API Designer</h5>
<p>You'll see additional information at the bottom of the API Designer page, as shown below (Hermosa theme).</p>
<p><img src="assets/promotion_api_designer.jpg" alt="Promotion feature for an API; API Designer page, Hermosa Theme" /></p>
<p>The display is a little bit different in Default Theme, as shown below:</p>
<p><img src="assets/promotion_api_designer_default.jpg" alt="Promotion feature for an API; API Designer page, Default Theme" /></p>
<p><a href="#top">Back to top</a></p>



<h3 id="api_promote">How do I promote my API?</h3>
<p>When your API is ready to be promoted, just click the <strong>Promote</strong> button, as shown below.</p>
<p><img src="assets/promotion_api_enabled.jpg" alt="Promotion feature with Promote button enabled" /></p>
<p><strong>Notes:</strong></p>
<ul>
	<li>If you promote the API, and then find you need to make further changes, you can just make the changes and then promote it again. You can promote your API from one environment to the next as many times as you need to. See <a href="#promotion_iterations">Iterations</a> above.</li>
	<li>What happens to the API after you click the <strong>Promote</strong> button is determined by the workflow in place in the <a href="basics_glossary.htm#gl_promotion_coordinator">Promotion Coordinator</a>. For example, if approval is required, the resource isn't actually promoted until approval is granted.</li>
</ul>
<p>In some cases, you might see the promotion feature in the right pane, but there is no <strong>Promote</strong> button, as shown below:</p>
<p><img src="assets/promotion_api_disabled.jpg" alt="Promotion feature with Promote button disabled" /></p>
<p>In this scenario, the promotion feature is available, but the API Admin cannot control the promotion process. This is controlled by the Site Admin in the site settings; see <a href="site_admin_settings.htm#settings_api_promotion">General API Settings: API Promotion</a>. If you need help or have questions about your API promotion, contact a Site Admin for assistance.</p>
<p><a href="#top">Back to top</a></p>



<h3 id="api_promote_setup">I promoted my API to the next environment. What else do I need to do?</h3>
<p>Once you've promoted your API to the next environment, there are a few steps you'll need to take to make sure that the API is fully set up in the new environment. If the deployment zone wasn't assigned automatically, you'll need to specify it, and make sure that the developer portal's endpoint for the API is set up correctly.</p>
<h5>In the target environment:</h5>
<ol>
	<li>Go to API &gt; <strong>Implementations</strong> &gt; choose implementation &gt; in the Deployment section, click <strong>Edit</strong>.</li>
	<li>Make sure the correct deployment zone is enabled. If it isn't, choose the deployment zone and click <strong>Enable Zone</strong>.</li>
	<li>Edit the context path as needed. The <strong>Calculated Endpoint</strong> for the API is displayed.</li>
	<li>Click <strong>Save</strong>.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h3 id="promotion_states">What are the different promotion states?</h3>
<p>The basic lifecycle of an API goes from <strong>Not Promoted</strong> to <strong>Promoted</strong> in each environment. In some cases, approval of a promotion request might be required.</p>
<p>For details of the promotion states and their sequence, see <a href="site_admin_lc.htm#lc_promotion_request_status">What are the valid statuses and lifecycle for a promotion request?</a> (Site Admin help).</p>
<p><a href="#top">Back to top</a></p>



<h3 id="promote_fanout">What is promotion fanout?</h3>
<h5 class="stamp">API Platform Version: 8.4.19 and later</h5>
<p>The basic structure of an environment topology is linear; for example, from development to testing to production. However, in some cases a topology might include two or more environments at the same level. Perhaps there are two testing environments, for testing under different criteria sets; or there might be three production environments, each at a different global location.</p>
<p>When the topology includes more than one environment at the same level, this is called fanout. When an app or API is promoted from one environment to the next level, which includes two or more environments, the fanout behavior can be either of the following:</p>
<ul>
	<li>It is promoted simultaneously to all environments that are at the next level.</li>
	<li>It is promoted to multiple target environments based on custom properties of the app or API. For example, asset-filters might be set up based on one or more custom properties</li>
</ul>
<p>The fanout behavior is determined by the topology definition in Akana Lifecycle Manager.</p>
<p>In the developer portal user interface, fanout is shown by indentation. In the example below, there is one development environment and one staging environment, and there are two production environments.</p>
<p><img src="assets/promotion_fanout.jpg" alt="Promotion fanout" /></p>
<p>An example of promotion based on custom properties:</p>
<ol>
	<li>In the topology definition, you could set up asset-filters based on a Boolean property called <strong>external</strong>, with <strong>external</strong> and <strong>internal</strong> filters defined based on that property.</li>
	<li>Different <strong>production</strong> environments for internal and external APIs.</li>
	<li>Assuming the environment prior to production is <strong>acceptance</strong>, you could define two promotion profiles on the acceptance environment: one that specifies the <strong>internal</strong> filter and points to the internal production environment, while the other specified the <strong>external</strong> filter and points to the external production environment.</li>
</ol>
<p>With the above configuration, the APIs are effectively routed based on the value of the <strong>external</strong> property.</p>
<p><a href="#top">Back to top</a></p>



<div class = "divider1"></div>



<h3 id="related_topics">Related Topics</h3>
<div class="relatedlinks" id="api_admin">
<!-- #BeginLibraryItem "/Library/relatedtopics_api_admin.lbi" -->
<ul>
	<li><a href="apiadmin_getting_started.htm">Getting Started for API Developers</a></li>
	<li><a href="apiadmin_overview.htm">API Administration: Overview</a></li>
	<li><a href="api_admin_tutorial.htm">Tutorial (API Provider)</a></li>
	<li><a href="api_admin_management.htm">API Admin Management</a></li>
	<li><a href="bus_api_admin_forum.htm">Forum Moderation</a></li>
	<li><a href="apiadmin_promotion.htm">Promoting an API</a></li>
</ul>
<ul>
	<li><a href="apiadmin_api_add.htm">Adding an API</a></li>
	<li><a href="apiadmin_api_design.htm">Add or Modify an API Using API Designer</a></li>
	<li><a href="apiadmin_a_d_d_support.htm">API Description Language Support</a></li>
	<li><a href="apiadmin_implementations.htm">Manage API Implementations</a></li>
	<li><a href="api_admin_testing_tc.htm">API Testing with Test Client</a></li>
	<li><a href="api_admin_managing_contracts.htm">Managing Contracts for your API</a></li>
	<li><a href="api_admin_monitoring.htm">Monitoring API Analytics</a></li>
</ul>
<ul>
	<li><a href="api_admin_api_publishing.htm">API Visibility, Licenses, and Settings</a></li>
	<li><a href="apiadmin_api_phys_svc.htm">Working with Physical Services</a></li>
	<li><a href="api_admin_oauth_support.htm">OAuth Support</a></li>
	<li><a href="api_admin_content_guidelines.htm">Content Development Guidelines</a></li>
	<li><a href="api_admin_documentation_maintenance.htm">API Documentation Maintenance</a></li>
	<li><a href="api_admin_documentation_tagging.htm">API Documentation Tagging</a></li>
	<li><a href="api_admin_legal_agreement_maintenance.htm">Legal Agreement Maintenance</a></li>
	<li><a href="basics_glossary.htm">Glossary of Terms</a></li>
</ul><!-- #EndLibraryItem -->
</div>