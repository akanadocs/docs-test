---
layout: page
title: Policy List | API Administration | Community Manager Help
description: A list of operational and service-level policies.
product: cm
category: ref
subcategory: 
weight: 60
type: page
nav-title: Policy List
---
<h2 id="top">Policy List</h2>

<p>Includes information about the following policies:</p>
<ol>
  <li><a href="#policies_fulllist">Basic Policies Available in Add/Edit API</a></li>
  <li><a href="#policies_operational">Additional Operational Policies Available in Policy Manager</a></li>
  <li><a href="#policies_service_level">Additional Service-Level Policies Available in Policy Manager</a></li>
</ol>
<div class = "divider1"></div>



<a name="policies_fulllist"></a>
<h5>Default List of Policies Available in Add/Edit API</h5>
<p>If you don't have additional policies enabled in Policy Manager, the policies below are available in Community Manager in the Add/Edit API wizard.</p>
<table width="100%" cellspacing="0px" class="doctable" style="width: 98%;">
<thead>
  <tr>
    <th width="20%">Policy Name</th>
    <th width="80%">Type/Link</th>
  </tr>
</thead>
<tbody>
  <tr class="t2row">
    <td>AtmosphereApplicationSecurityPolicy</td>
    <td><p>Security policy for apps on the platform.</p>
      <p>For more information, see <a href="http://docs.soa.com/ag/cm_policies/using_api_consumer_app_sec_policy.htm" target="_blank">Using the API Consumer Application Security Policy</a>.</p></td>
  </tr>
  <tr class="t1row">
    <td><a name="pol_basicauditing" id="pol_basicauditing"></a>BasicAuditing</td>
    <td><p>Provides basic auditing of messages. Message metrics will be recorded in the <a href="basics_glossary.htm#gl_policy_manager">Policy Manager</a> Usage Logs Monitoring tab. The messages themselves will not be audited. If auditing of individual messages is needed, use the <a href="#pol_detailedauditing">DetailedAuditing</a> policy.</p>
      <p><em>Category:</em> Auditing</p></td>
  </tr>
  <tr class="t2row">
    <td><a name="pol_detailedauditing" id="pol_detailedauditing"></a>DetailedAuditing</td>
    <td><p>Provides detailed auditing of messages. Message metrics will be recorded in the Policy Manager Usage Logs Monitoring tab as well as the entire messages of each exchange.</p>
      <p><em>Category:</em> Auditing</p></td>
  </tr>
  <tr class="t1row">
    <td>OAuthSecurity</td>
    <td><p>A Community Manager policy that enables API authorization using OAuth 2.0. It uses the OAuth configuration assigned to an API when enforcing OAuth tokens in a received request.</p>
      <p>For more information, see <a href="http://docs.soa.com/ag/cm_policies/using_oauth_security_policy.htm" target="_blank">Using the OAuth Security Policy</a>.</p>
      <p>There is an additional sub-policy to the OAuth Security policy, TokenTransformation, which you can use to ensure that the the OAuth bearer token is relayed to the downstream service, rather than being stripped off from the request message after validation by the API Gateway. You can use this for scenarios where the target endpoint needs access to the original OAuth token that the API Gateway validated. The <strong>transform</strong> attribute of this policy determines whether to strip the headers or pass them through to the next hop. The possible values of this attribute are <strong>strip</strong> and <strong>pass-through</strong>.</p>
<p>An example of the  policy configuration with the nested sub-policy tag is shown below.</p>
<pre>
&lt;wsp:Policy Name=&quot;OAuthSecurity&quot; Description=&quot;OAuthSecurity policy uses OAuth
configuration assigned to an API when enforcing OAuth tokens in the received request.&quot;
xmlns:wsp=&quot;http://schemas.xmlsoap.org/ws/2004/09/policy&quot;&gt;
  &lt;goap:OAuthSecurity xmlns:goap=&quot;http://federatedgovernance.org/policy/oauth&quot;&gt;
    &lt;wsp:Policy&gt;
      &lt;goap:TokenTransformation transform=&quot;strip&quot;/&gt;
    &lt;/wsp:Policy&gt;
  &lt;/goap:OAuthSecurity&gt;
&lt;/wsp:Policy&gt; </pre></td>
</tr>
</tbody>
</table>
<p><a href="#top">Back to top</a></p>



<a name="policies_operational"></a>
<h5>Additional Operational Policies Available in Policy Manager</h5>
<table cellspacing="0px" class="doctable" style="width: 98%;">
<thead>
  <tr>
    <th width="20%">Policy Name</th>
    <th width="80%">Description</th>
  </tr>
</thead>
<tbody>
  <tr class="t2row">
    <td>CORSAllowAll</td>
    <td><p>CORS (cross-origin resource scripting) enables users to access resources from within the browser serving a web page, and defines a way in which the browser and the server can interact to determine whether or not to allow the cross-origin request.</p>
      <p>The CORSAllowAll policy allows all cross-origin requests.</p></td>
  </tr>
  <tr class="t1row">
    <td>Cross-Site Scripting Detection policy</td>
    <td><p>The Cross Site Scripting Detection Policy is an Operational policy that  allows you to block potentially malicious HTML tags in the request message body using what is called a <em>white</em> list of tags. </p>
      <p>For more information, see <a href="http://docs.soa.com/ag/policies/using_the_cross_site_scripting_policy.htm" target="_blank">Using the Cross-Site Scripting Detection Policy</a>.</p></td>
  </tr>
  <tr class="t2row">
    <td>HTTP Malicious Patterns Detection policy</td>
    <td><p>Used to inspect the HTTP messages for content that could be considered  dangerous to an API or web service, and to reject the message returning a fault if any of the defined expressions match the content.</p>
      <p>For more information, see <a href="http://docs.soa.com/ag/policies/using_http_malicious_pattern_detection_policy.htm" target="_blank">Using the HTTP Malicious Patterns Detection Policy</a>.</p></td>
  </tr>
  <tr class="t1row">
    <td>Metrics policy</td>
    <td><p>The Metrics Policy is an Operational policy that allows you to collect roll-up data for selected services/operations that the policy is attached to.</p>
<p>For more information, see <a href="http://docs.soa.com/ag/policies/using_the_metrics_policy.htm" target="_blank">Using the Metrics Policy</a>.</p></td>
  </tr>
  <tr class="t2row">
    <td>Paging policy</td>
    <td><p>The Paging Policy is designed to allow a client to only get a subset of a list based response. For example, if an operation is returning a list of books, and the full list is 1000 books, the client may wish to only have 100 books be returned at a time.</p>
      <p>For more information, see <a href="http://docs.soa.com/ag/policies/using_the_paging_policy.htm" target="_blank">Using the Paging Policy</a>.</p></td>
  </tr>
  <tr class="t1row">
    <td>Schema Validation policy</td>
    <td><p>Performs schema validation. A common integration problem in a service-oriented architecture occurs when consumers send messages to services that don&rsquo;t conform to the services' message schemas. Typically this is caused by the versioning of a service&rsquo;s schema, and a consumer sending a message that conforms to a prior schema version. It can also be a consumer&rsquo;s malicious attempt to cause a denial of service by sending invalid messages to a service. An SOA Container can aid by validating the messages exchanged between the consumers and services against the service&rsquo;s published schema. </p>
      <p>For more information, see <a href="http://docs.soa.com/ag/policies/using_the_schema_validation_policy.htm" target="_blank">Using the Schema Validation Policy</a>.</p></td>
  </tr>
  <tr class="t2row">
    <td>WS-Schema Validation policy</td>
    <td><p>Schema validation policy for WS-Schema.</p>
      <p>For more information, see <a href="http://docs.soa.com/ag/policies/using_the_ws_schema_validation_policy.htm" target="_blank">Using the WS-Schema Validation Policy</a>.</p></td>
  </tr>
  <tr class="t1row">
    <td>API Consumer Application Security Policy</td>
    <td><p>Used to identify (authenticate) the application that is attempting to consume an API to determine if it is authorized or not. This policy type supports multiple mechanisms for the app to present its identity, including App ID, signed header with x.509 certificate or shared secret, or OAuth (1.0a or 2.0).</p>
      <p><em>Category:</em> Security</p>
      <p>For more information, see <a href="http://docs.soa.com/ag/cm_policies/using_api_consumer_app_sec_policy.htm" target="_blank">Using the API Consumer Application Security Policy</a>.</p></td>
  </tr>
  <tr class="t2row">
    <td>API User Security Policy</td>
    <td><p>The default security policy for Community Manager services and controls who can perform administrative actions on the Community Manager portal.</p>
<p><em>Category:</em> Security</p>
      <p>For more information, see <a href="http://docs.soa.com/ag/cm_policies/using_api_user_sec_policy.htm" target="_blank">Using the API User Security Policy</a>.</p></td>
  </tr>
  <tr class="t1row">
    <td>OAuth 1.0a Trusted Token Policy</td>
    <td><p>A Community Manager security policy that provides OAuth Pass-thru support when OAuth 1.0a is used to perform API authorization. </p>
      <p><em>Category:</em> Security</p>
      <p>For more information, see <a href="http://docs.soa.com/ag/cm_policies/using_oauth1a_security_policy.htm" target="_blank">Using the OAuth 1.0a Security Policy</a>.</p></td>
  </tr>
  <tr class="t2row">
    <td>OAuthSecurity</td>
    <td><p>A Community Manager policy that enables API authorization using OAuth 2.0. It uses the OAuth configuration assigned to an API when enforcing OAuth tokens in a received request.</p>
      <p><em>Category:</em> Security</p>
      <p>For more information, see <a href="http://docs.soa.com/ag/cm_policies/using_oauth_security_policy.htm" target="_blank">Using the OAuth Security Policy</a>.</p></td>
  </tr>
  <tr class="t1row">
    <td>WS-Auditing Message Policy</td>
    <td><p>Used to audit service operations and binding operations.</p>
      <p><em>Category:</em> Auditing</p></td>
  </tr>
  <tr class="t2row">
    <td>WS-Auditing SOAP Message Policy</td>
    <td><p>Used to audit service operations and binding operations.</p>
<p><em>Category:</em> Auditing</p></td>
  </tr>
  <tr class="t1row">
    <td>WS-Auditing SOAP Service Policy</td>
    <td><p>Used to audit SOAP binding operations.</p>
    <p><em>Category:</em> Auditing</p></td>
  </tr>
  <tr class="t2row">
    <td>WS-Auditing Service Policy</td>
    <td><p>Used to audit Services, Bindings, Operations, and Access Points.</p>
<p><em>Category:</em> Auditing</p></td>
  </tr>
  <tr class="t1row">
    <td>WS-Auditing Transaction Tracking Policy</td>
    <td><p>Supports Transaction Tracking functionality that correlates related web service events within a single activity or transaction. For example, if a service in a Container uses the SOA Software Delegate to call another service in a different container that is managed by the SOA Software Agent, it will automatically insert correlation information into the message that is collected and used by Policy Manager to collect tracking and log information.</p>
<p><em>Category:</em> Auditing</p></td>
  </tr>
</tbody>
</table>
<p><a href="#top">Back to top</a></p>



<a name="policies_service_level"></a>
<h5>Additional Service-Level Policies Available in Policy Manager</h5>
<p>Defines conditions for measuring and reporting performance of a specific contract. Each policy is composed of a &quot;Rule&quot; and &quot;Access Interval.&quot; Rules represent the conditions you define to measure and report performance of a service contract. When a defined system condition matches a defined rule, an alert is raised.</p>
<table cellspacing="0px" class="doctable" style="width: 98%;">
<thead>
  <tr>
    <th width="20%">Policy Name</th>
    <th width="80%">Description</th>
  </tr>
</thead>
<tbody>
  <tr class="t2row">
    <td>Bandwidth Quota Policy</td>
    <td><p>Allows you to configure the bandwidth cap (i.e, quota) that a consumer can upload or download at any given time. The bandwidth cap can be specified as kilobytes or megabytes per second. If the quota is exceeded, the runtime will throttle the traffic to conform to the quota policy. The quota is also assigned to either the request (upload) or response (download). No alerts are generated for this policy since the bandwidth consumed is a function of the network speed and capabilities of the service provider, not the consumer.</p>
  <p><em>Category: </em>QoS (Quality of Service Policy)</p></td>
  </tr>
  <tr class="t1row">
    <td>Script Policy</td>
    <td><p>Allows you to update a policy defined using BeanShell or Jython script languages. A series of predefined functions and variables are provided that allow you to build a custom policy expression that is evaluated at runtime. Several sample scripts are also provided that illustrate common quota management activities.</p>
    <p><em>Category: </em>QoS (Quality of Service Policy)</p></td>
  </tr>
  <tr class="t2row">
    <td>Service Level Enforcement</td>
    <td><p>The Service Level Enforcement Policy is a Quality of Service (QoS) policy that allows you to enable and configure the error message returned to the consumer when their SLA is violated.</p>
<p>This policy works in conjunction with a Service-Level Policy and only applies to the following Service-Level rules: &quot;Usage Count,&quot; &quot;Total Request Message Size,&quot; and &quot;Total Response Message Size.&quot;</p>
<p>You define a Service-Level Policy and specify each service level condition and alert code, then you define a Service Level Enforcement Policy and specify the error message you would like displayed when a specified service level condition is violated.</p>
<p><em>Category:</em> QoS (Quality of Service Policy)</p></td>
  </tr>
  <tr class="t1row">
    <td>Throughput Quota Policy</td>
    <td><p>Allows you to monitor web service throughput performance by specifying a throughput limit (i.e., quota), queue size, and configuring fault and alert notifications.</p>
<p>If the quota is exceeded, a consumer fault message will be returned to the service consumer and an alert will be logged.</p>
<p><em>Category:</em> QoS (Quality of Service Policy)</p></td>
  </tr>
  <tr class="t2row">
    <td>Timeout Policy</td>
    <td><p>Allows you to configure the timeout for each request and specify a custom fault error message that is returned to the client.</p>
<p><em>Category:</em> QoS (Quality of Service Policy)</p></td>
  </tr>
  <tr class="t1row">
    <td>Concurrency Quota Policy</td>
    <td><p>Allows you to monitor the web service concurrency performance by specifying a concurrency limit (i.e., quota) that represents the maximum number of concurrency connections, and configuring fault and alert notifications.</p>
<p>If the specified concurrency limit is exceeded, Policy Manager will return a fault and send an alert.</p>
<p><em>Category:</em> QoS (Quality of Service Policy)</p></td>
  </tr>
</tbody>
</table>
<p><a href="#top">Back to top</a></p>



</div>
