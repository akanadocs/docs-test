---
layout: page
title: Promotion Feature | Basics | Akana API Platform Help
description: Learn about the promotion feature, which allows promoting APIs and apps to the next environment.
product: cm
category: learn
sub-nav-class: Site Administration
weight: 3210
type: page
nav-title: Promotion Feature
---
<h2 id="top">Promotion Feature</h2>
<p>Learn about the promotion feature, which allows promoting APIs and apps to the next environment.</p>
<h5 class="stamp">API Platform Version: 8.4 and later</h5>

<div class = "divider1"></div>

<h3 style="color: gray;">Table of Contents</h3>
<ol class="table_of_contents">
	<li><a href="#promotion_overview">What is the promotion feature?</a></li>
	<li><a href="#promotion_resources">What resources can the promotion feature be used with?</a></li>
	<li><a href="#promotion_enable">How is the promotion feature enabled?</a></li>
	<li><a href="#promotion_setup_configure">How is the promotion feature set up and configured?</a></li>
	<li><a href="#promotion_states">What are the different promotion states?</a></li>
	<li><a href="#promote_fanout">What is promotion fanout?</a> (8.4.19 and later)</li>
	<li><a href="#promotion_join">How can I define different paths through the promotion hierarchy ("join" feature)?</a> (2018.0.0 and later)</li>
</ol>
<div class = "divider1"></div>



<h3 id="promotion_overview">What is the promotion feature?</h3>
<p>The platform includes an add-on feature, Lifecycle Coordinator, which allows the Administrator to define a one-way topology that includes a chain of environments reflecting the development lifecycle. For example, the topology chain could be from <strong>Development</strong> to <strong>Testing</strong> to <strong>Staging</strong> to <strong>Production</strong>. Each environment is a separate installation of the developer portal.</p>
<p>Lifecycle Coordinator is a standalone user interface that's installed separately. This feature also includes modifications to the developer portal user interface to allow the API Admin or app developer to promote the app or API to the next environment.</p>
<h5>Lifecycle Coordinator</h5>
<p>Within the Lifecycle Coordinator, the authorized user can:</p>
<ul>
	<li>Define and manage the environment topology (two or more environments in a unidirectional chain).</li>
	<li>Set up processing rules that are executed when an app or API is promoted from one specific environment to the next. For example:
		<ul>
			<li>A rule might change the target URL host for the physical services when an app or API is promoted from Staging to Production.</li>
			<li>A rule might deploy an app or API to different deployment zones in the Production environment depending on the PCI compatibility of the resource.</li>
			<li>A rule might define an approval required for the resource to be promoted to the next environment. If approval is required, the resource will be in a <strong>Promotion Pending</strong> state until the promotion is approved.</li>
		</ul>
	</li>
</ul>
<p>This feature includes a user permission specifically for the user who manages the Lifecycle Coordinator.</p>
<p>For more detailed information about the Lifecycle Coordinator feature, refer to the <a href="http://docs.akana.com/cm/promotion/promotion_users_guide.htm">Lifecycle Coordinator Promotion Guide</a>.</p>
<h5>Developer Portal</h5>
<p>Within the developer portal user interface, the new feature allows the API Admin or Business Admin to promote an API from the current environment to the next step in the environment topology.</p>
<p>When the user in the developer portal promotes the app or API, it is passed to the Lifecycle Coordinator. The next steps are governed by the process set up in the Lifecycle Coordinator. For example, if a manual approval is required, approval is requested. If processing rules are in place, the rules are applied to the data before it is promoted to the next environment. The status of the promotion request is reflected in the developer portal user interface; for example, <strong>Promoted</strong> or <strong>Promotion Pending</strong>.</p>
<h5 id="promotion_iterations">Iterations</h5>
<p>A resource can be promoted to the next lifecycle stage multiple times, each time being an iteration of the resource, to accommodate a development scenario where multiple changes are made before it is fully mature and ready to move to the next stage.</p>
<p>For example, an app or API might be promoted from Development to Testing, and some errors found in Testing. It can then be updated in the Development environment and promoted to Testing again, possibly multiple times until it fully passes Testing and is ready to be promoted to the next lifecycle stage in the next environment.</p>
<p>In the Lifecycle Coordinator, each of these iterations is stored, for historical tracking and non-repudiation.</p>
<h5>Deployment</h5>
<p>In terms of deployment, the Lifecycle Coordinator can be co-located with any one of the tenants, or it can stand alone and communicate remotely with any of them.</p>
<p><a href="#top">Back to top</a></p>



<h3 id="promotion_resources">What resources can the promotion feature be used with?</h3>
<p>The promotion feature is available for the following resources:</p>
<ul>
	<li><strong>Apps</strong>. For more information about how it works from the app developer perspective, see <a href="app_promotion.htm">Promoting an App to the Next Environment</a>.</li>
	<li><strong>APIs</strong>. For more information about how it works from the API admin perspective, see <a href="apiadmin_promotion.htm">Promoting an API to the Next Environment</a>.</li>
</ul>
<p><a href="#top">Back to top</a></p>



<h3 id="promotion_enable">How is the promotion feature enabled?</h3>
<p>The promotion feature required some feature installation and configuration outside the developer portal. This is all done by an Administrator.</p>
<p>When the feature is set up and configured, the Site Admin can enable it for the developer portal in the configuration settings (<strong>Admin</strong> &gt; <strong>Config</strong>):</p>
<ul>
	<li><strong>Apps</strong>: See <a href="site_admin_settings.htm#settings_config_apps_01">General App Settings</a> (App Promotion).</li>
	<li><strong>APIs</strong>: See <a href="site_admin_settings.htm#settings_api_general">General API Settings</a> (API Promotion).</li>
</ul>
<p><a href="#top">Back to top</a></p>



<h3 id="promotion_setup_configure">How is the promotion feature set up and configured?</h3>
<p>If you're a Site Admin and want more detailed information about installing the Lifecycle Coordinator feature and setting up the promotion hierarchy, refer to the <a href="../promotion/promotion_users_guide.htm">Lifecycle Coordinator Promotion Guide</a>.</p>
<p><a href="#top">Back to top</a></p>



<h3 id="promotion_states">What are the different promotion states?</h3>
<p>The basic lifecycle of an API goes from <strong>Not Promoted</strong> to <strong>Promoted</strong> in each environment. In some cases, approval of a promotion request might be required.</p>
<p>For details of the promotion states and their sequence, see <a href="site_admin_lc.htm#lc_promotion_request_status">What are the valid statuses and lifecycle for a promotion request?</a> (Lifecycle Coordinator help).</p>
<p><a href="#top">Back to top</a></p>



<h3 id="promote_fanout">What is promotion fanout?</h3>
<h5 class="stamp">API Platform Version: 8.4.19 and later</h5>
<p>The basic structure of an environment topology is linear; for example, from development to testing to production. However, in some cases a topology might include two or more environments at the same level. Perhaps there are two testing environments, for testing under different criteria sets; or there might be three production environments, each at a different global location.</p>
<p>The diagram below shows a very simple example of a fanout, where one environment can be promoted to two production environments:</p>
<p><img src="assets/promotion_fanout_diagram.jpg" alt="Promotion fanout diagram" /></p>
<p>When the topology includes more than one environment at the same level, this is called fanout. When an app or API is promoted from one environment to the next level, which includes two or more environments, the fanout behavior can be either of the following:</p>
<ul>
	<li>It is promoted simultaneously to all environments that are at the next level.</li>
	<li>It is promoted to multiple target environments based on custom properties of the app or API. For example, asset-filters might be set up based on one or more custom properties</li>
</ul>
<p>The fanout behavior is determined by the topology definition in Akana Lifecycle Manager.</p>
<p>In the developer portal user interface, fanout is shown by indentation. In the example below, there is one development environment, and one staging environment and there are two production environments.</p>
<p><img src="assets/promotion_fanout.jpg" alt="Promotion fanout" /></p>
<p>An example of promotion based on custom properties:</p>
<ol>
	<li>In the topology definition, you could set up asset-filters based on a Boolean property called <strong>external</strong>, with <strong>external</strong> and <strong>internal</strong> filters defined based on that property.</li>
	<li>Different <strong>production</strong> environments for internal and external APIs.</li>
	<li>Assuming the environment prior to production is <strong>acceptance</strong>, you could define two promotion profiles on the acceptance environment: one that specifies the <strong>internal</strong> filter and points to the internal production environment, while the other specified the <strong>external</strong> filter and points to the external production environment.</li>
</ol>
<p>With the above configuration, the APIs are effectively routed based on the value of the <strong>external</strong> property.</p>
<p><a href="#top">Back to top</a></p>



<h3 id="promotion_join">How can I define different paths through the promotion hierarchy ("join" feature)?</h3>
<h5 class="stamp">API Platform Version: 2018.0.0 and later</h5>
<p>You might encounter a scenario where you want to be able to set conditions to determine which environment resources will be promoed to, depending on certain circumstances.</p>
<p>For example, let's take the very simple two-tier fanout hierarchy shown in <a href="#promote_fanout">What is promotion fanout?</a> above. You might want to be able to conditionally determine which of the below will apply:</p>
<ul>
	<li>Promote to a test environment and then to an external production environment.</li>
	<li>Promote to an internal production environment speedily, without going through the testing stage first.</li>
</ul>
<p>You can implement this by using conditional properties on your resource, and setting up the promotion profile to filter based on the values of the conditional properties.</p>
<p>The diagram below shows a very simple example of this hierarchy.</p>
<p><img src="assets/promotion_join_diagram.jpg" alt="Promotion fanout diagram" /></p>
<p>In the example shown below, a property was defined on APIs, with a filter in the relationship between the environments, which is a property defined in the Promotion Profile. This allows filtering on the property.</p>
<p>At runtime, the <strong>Internal</strong> property appears as a selection field on the <strong>API Details</strong> page, as shown below.</p>
<p><img src="assets/promotion_join_propertyfield.jpg" alt="Promotion join: conditional field determining hierarchy" /></p>
<p>In this example, there are three choices:</p>
<ul>
	<li><a href="#join_select_true">True</a></li>
	<li><a href="#join_select_false">False</a></li>
	<li><a href="#join_select_none">Select (meaning, no selection made yet)</a></li>
</ul>

<h5 id="join_select_true">Results if user selects True</h5>
<p>If the user selects <strong>True</strong> in the <strong>Internal</strong> field, meaning that the production environment is internal, the resource can be promoted from the development environment to the production environmen, as shown below.</p>
<p><img src="assets/promotion_join_internal.jpg" alt="Promotion join: user selects Internal=True" /></p>

<h5 id="join_select_false">Results if user selects False</h5>
<p>If the user selects <strong>False</strong> in the <strong>Internal</strong> field, meaning that the production environment is not internal, the resource can be promoted from the development environment to the test environment, and then to the production environment, as shown below.</p>
<p><img src="assets/promotion_join_external.jpg" alt="Promotion join: user selects Internal=True" /></p>

<h5 id="join_select_none">Results if user doesn't make a selection</h5>
<p>If the user doesn't make a selection the <strong>Internal</strong> field, and the field is not marked as required, the platform cannot determine which environment is next. In this case, no promotion environment is available. The <strong>Promote</strong> button is grayed out in the user interface, as shown below, until the user makes a selection.</p>
<p><img src="assets/promotion_join_unset.jpg" alt="Promotion join: user selects Internal=True" /></p>


<p>This approach enables you to set up a conditional promotion hierarchy.</p>
<p>The example above shows implementation for an API. It works in exactly the same way for an app.</p>
<p><strong>Note</strong>: For details about how to set up the promotion profile, including details about setting up filters, refer to the <a href="../promotion/promotion_users_guide.htm">Lifecycle Coordinator Promotion Guide</a>.</p>
<p><a href="#top">Back to top</a></p>



<div class = "divider1"></div>



<h3 id="related_topics">Related Topics</h3>
<div class="relatedlinks" id="cmhelp_siteadmin">
<ul>
	<li><a href="site_admin_.htm">Site Admin Summary Page</a></li>
	<li><a href="site_admin_overview.htm">Site Admin Responsibilities</a></li>
	<li><a href="site_admin_agreements.htm">Platform Legal Agreement</a></li>
	<li><a href="site_admin_config.htm">Configuration</a></li>
	<li><a href="site_admin_settings.htm">Settings</a></li>
</ul>
<ul>
	<li><a href="site_admin_site.htm">Site Settings</a></li>
	<li><a href="site_admin_site_admins.htm">Managing Site Admins</a></li>
	<li><a href="site_admin_users.htm">Managing User Accounts</a></li>
	<li><a href="site_admin_workflows.htm">Workflows</a></li>
	<li><a href="site_admin_promotion.htm">Promotion Feature</a></li>
</ul>
<ul>

	<li><a href="site_admin_tc.htm">Test Client</a></li>
	<li><a href="site_admin_es.htm">Elasticsearch Configuration</a></li>
	<li><a href="site_admin_content_guidelines_sd.htm">Content Development Guidelines for Simple Dev Theme</a></li>
	<li><a href="basics_glossary.htm">Glossary of Terms</a></li>
</ul>
</div>