---
layout: page
title: Working with Physical Services | API Admin | Akana API Platform Help
description: Add and manage physical services on the Akana API Platform.
product: cm
category: learn
sub-nav-class: API Admin
weight: 2616
type: page
nav-title: Working with Physical Services
---
<h1 id="top">Working with Physical Services</h1>
<p>Add and manage physical services on the Akana API Platform.</p>
<h4 class="stamp">Valid in Version: 2018.0.0 and later</h4>
<hr class="divide_hr" />



<h2 style="color: gray;">Table of Contents</h2>
<ol class="table_of_contents">
	<li><a href="#phys_svc_define">What is a physical service?</a></li>
	<li><a href="#phys_svc_add">How do I add a physical service?</a></li>
	<li><a href="#phys_svc_differences">What are the differences between a physical service and a proxied API?</a></li>
	<li><a href="#phys_svc_functions">What functions can I perform with a physical service?</a></li>
	<li><a href="#phys_svc_see">Where can I see my physical services in the developer portal?</a></li>
	<li><a href="#phys_svc_edit">How do I modify a physical service?</a></li>
	<li><a href="#phys_svc_endpoints">How do I manage endpoints for a physical service?</a></li>
	<li><a href="#phys_svc_policies">How do I manage policies for a physical service?</a></li>
	<li><a href="#phys_svc_certs">How do I manage certificates for a physical service?</a></li>
	<li><a href="#phys_svc_new_version">How do I add a new version for a physical service?</a></li>
	<li><a href="#phys_svc_delete">How do I delete a physical service?</a></li>
	<li><a href="#phys_svc_api_doc">How do I manage documentation for my physical service?</a></li>
	<li><a href="#phys_svc_admins">How do I manage Admins for my physical service?</a></li>
</ol>



<hr class="divide_hr" />




<h2 id="phys_svc_define">What is a physical service?</h2>
<p>A physical service is an API service external to the platform which is not hosted on the platform, but which is set up so that platform APIs can reference it.</p>
<p>In some cases, you might want to reference an external API that isn't hosted on the developer portal. For example, you might want one of your hosted APIs to use an external API to gather information used in one of its processes.</p>
<p>You might want to create an API that uses <a href="basics_glossary.htm#gl_orchestration">orchestration</a>. Then, within Process Editor, you can use scripting to build a scenario where information is gathered from one or more external APIs, and then manipulated or combined with additional data to produce the desired end result.</p>
<p>When you reference one or more external APIs, you must first set each one up as a physical service.</p>
<p><strong>Note</strong>: You can also set up an external API in the normal way, as an API proxied on the platform, and just reference the physical endpoint in your scripts/processes. However, there's no need to do that when you can add it as a physical service.</p>
<p>In the developer portal, adding a physical service follows the same basic process as adding an API, although there are some important differences in terms of how the physical service is managed. See <a href="#phys_svc_add">How do I add a physical service?</a> and <a href="#phys_svc_differences">What are the differences between a physical service and a proxied API?</a> below.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="phys_svc_add">How do I add a physical service?</h2>
<p>Adding a physical service is very similar to adding an API, but you must choose the <strong>Advanced Options</strong> and then, in the <strong>Pattern</strong> field, choose <strong>Physical Service</strong>. See below.</p>
<h4>To add a physical service</h4>
<ol>
	<li>Log in to the Akana API Platform.</li>
	<li>Click the plus <strong>(+)</strong> icon in the top menu bar, and choose <strong>Add API</strong>.</li>
	<li>Choose how you want to create your API. For detailed instructions, see <a href="apiadmin_api_add.htm#how_do_i_add_an_api">How do I add an API?</a> You must provide at minimum a name. </li>
	<li>On the right, click the <strong>Advanced Options</strong> swipe button, as shown below.
		<p><img src="assets/api_add_pattern.jpg" alt="API pattern options" /></p></li>
	<li>Choose <strong>Physical Service</strong>.</li>
	<li>Click <strong>Save</strong>. The physical service is created, and the <strong>Design</strong> page is displayed.</li>
</ol>
<p>From here you can perform all the functions associated with managing a physical service. See <a href="#phys_svc_functions">What functions can I perform with a physical service?</a></p>
<p><a href="#top">Back to top</a></p>



<h2 id="phys_svc_differences">What are the differences between a physical service and a proxied API?</h2>
<p><strong>Proxy API</strong>: When you add an API on the platform as a proxy, which is the default, the API is hosted on the platform. This offers several significant benefits, including:</p>
<ul>
	<li>The platform acts as a gateway, allowing you to apply policies and other restrictions and security measures to your API.</li>
	<li>App developers can connect to your API via the platform.</li>
	<li>You can track the metrics for your API through the Analytics functions.</li>
	<li>App developers can access your API documentation via the platform.</li>
	<li>App developers can test your API via Test Client.</li>
	<li>You can give users the platform's proxy URL for your API, and keep the actual URL private.</li>
	<li>You can manage community for your API, including forum, discussions, tickets, ratings, and reviews.</li>
	<li>You can manage the API Admin team for your API.</li>
</ul>
<p><strong>Physical Service</strong>: When you add an API as a physical service, the API isn't hosted on the platform. It's just there so that you can reference it in scripts and/or processes associated with another API.</p>
<p>Because it isn't hosted, many of the functions and activities associated with managing a proxied API aren't applicable to a physical service. For example, for a physical service, app developers don't see an Overview page and cannot request API access. They can't rate or review the API, or try it out with Test Client.</p>
<p>The table below shows the differences in the user interface, and corresponding access to features and activities, between a physical service and a proxied API.</p>
<table class="doctable">
	<tr>
		<td><strong>Left menu options for a physical service:</strong></td>
		<td><strong>Left menu options for a proxied API:</strong></td>
	</tr>
	<tr>
		<td><p><img src="assets/menu_apis_physical.jpg" alt="Physical service: left menu" /></p></td>
		<td><p><img src="assets/menu_apis_proxy.jpg" alt="Proxied API service: left menu" /></p></td>
	</tr>
</table>
<p>A physical service is referenced by another API; it isn't used directly by app developers. Because of this, there is no need for the following functions that are key to a proxied API:</p>
<ul>
	<li><strong>Overview</strong> page: This is the page that provides overview information for app developers, and allows contract requests as well as reviews and ratings. All these functions are inapplicable to a physical service.</li>
	<li><strong>Implementations</strong>: Key information that's generally specified for the implementation is set up on the <strong>Design</strong> page. This includes:
		<ul>
			<li>Endpoints</li>
			<li>Policies</li>
			<li>Certificates</li>
		</ul>
	</li>
	<li><strong>Analytics</strong>: the physical service is invoked indirectly via orchestration of another API, so the Analytics pages for the physical service are unnecessary. Any activity to and from the physical service is recorded under the metrics for the API that's referencing the physical service.</li>
	<li>These additional functions are not applicable since app developers are not using a physical service:
		<ul>
			<li><strong>Forum</strong></li>
			<li><strong>Test Client</strong></li>
			<li><strong>Agreements</strong></li>
			<li><strong>Visibility</strong></li>
			<li><strong>App</strong><strong>s</strong></li>
			<li><strong>Followers</strong></li>
		</ul>
	</li>
	</ul>
<p><a href="#top">Back to top</a></p>



<h2 id="phys_svc_functions">What functions can I perform with a physical service?</h2>
<p>When you set up an API as a physical service, you can manage the following functions associated with the service:</p>
<ul>
	<li>Modify the API design, including resources, model objects, tags, settings, and default media types.</li>
	<li>Modify the API description.</li>
	<li>Set up documentation for the physical service.</li>
	<li>Manage versions for the physical service.</li>
	<li>Set up and manage one or more endpoints for the physical service.</li>
	<li>Add, modify, or delete one or more policies associated with the physical service.</li>
	<li>Add or update certificates for the physical service.</li>
</ul>
<p>To use the physical service, you can:</p>
<ul>
	<li>Reference it in a script used by another API.</li>
	<li>Reference it in a process used by another API.</li>
	<li>Use it in defining orchestration for another API.</li>
</ul>
<p><a href="#top">Back to top</a></p>



<h2 id="phys_svc_see">Where can I see my physical services in the developer portal?</h2>
<p>You can view your APIs in the developer portal on the <strong>APIs</strong> &gt; <strong>My APIs</strong> page.</p>
<p>Physical services, which are essentially APIs, are listed with your APIs on the <strong>APIs</strong> &gt; <strong>My APIs</strong> page. When you click through you'll see the streamlined feature set associated with a physical service, including the reduced selection of items on the left menu.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="phys_svc_edit">How do I modify a physical service?</h2>
<p>Once you've added a physical service, you might need to modify one or more aspects of the physical service. In general, the user interface for a physical service mirrors how you manage an API, though many functions relating to an API are not applicable to a physical service. Aspects you might need to modify include:</p>
<ul>
	<li>Basic data about the physical service such as name, description, avatar, tags, and the privacy setting for the API: refer to <a href="#proc_phys_serv_edit">To edit basic data about a physical service</a> below.</li>
	<li>Design information: see <a href="apiadmin_api_design.htm">Add or Modify an API using API Designer</a>. The API Designer for a physical service works the same as for an API.</li>
	<li><strong>Endpoints</strong>: see <a href="#phys_svc_endpoints">How do I manage endpoints for a physical service?</a></li>
	<li><strong>Policies</strong>: see <a href="#phys_svc_policies">How do I manage policies for a physical service?</a></li>
	<li><strong>Certificates</strong>: see <a href="#phys_svc_certs">How do I manage certificates for a physical service?</a></li>
</ul>
<p>An example of the <strong>Details</strong> page for a physical service is shown below.</p>
<p><img src="assets/api_add_phys_svc.jpg" alt="Physical Service" /></p>


<h4 id="proc_phys_serv_edit">To edit basic data about a physical service</h4>
<ol>
	<li>Log in to the Akana API Platform and go to the <strong>Details</strong> page for your physical service.</li>
	<li>In the top section, click <strong>Edit</strong>.</li>
	<li>Optional: on the left, modify any of these fields:
		<ul>
			<li><strong>API name</strong>: A short and clear name to distinguish the physical service.</li>
			<li><strong>Summary</strong>: A short, plain-text field for internal display.</li>
			<li><strong>API Description</strong>: A concise description of the physical service. Supports <a href="basics_glossary.htm#gl_markdown">Markdown</a>.</li>
			</ul>
		</li>
	<li>Optional: on the right:
		<ul>
			<li>Change the parent organization by providing the new value in the <strong>Parent Organization Name</strong> field. Start typing the new organization name in the field. After the first three characters, the platform displays a list of matching organizations for you to choose from. For more information about organizations on the platform, see <a href="bus_admin_organizations.htm">Organizations</a>.</li>
			<li>Click the blue dot to display advanced options and modify version number, version name, notes, tags, and/or visibility.</li>
		</ul>
		</li>
	<li>Click <strong>Save</strong>.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="phys_svc_endpoints">How do I manage endpoints for a physical service?</h2>
<p>You can have one or more endpoints for your physical service. You can add, edit, or delete endpoints.</p>

<h4 id="proc_phys_serv_endpoint_add">To add an endpoint for a physical service</h4>
<ol>
	<li>Log in to the Akana API Platform and go to the <strong>Details</strong> page for your physical service.</li>
	<li>In the <strong>Endpoints</strong> section, click <strong>Edit</strong>. The Endpoints page appears, and any current endpoints are displayed.</li>
	<li>Click <strong>Add Endpoint</strong>.</li>
	<li>In the <strong>Add Endpoint</strong> overlay, enter information about the endpoint:
<ul>
			<li><strong>Location</strong>: a valid URL, the endpoint for the service.</li>
			<li><strong>Protocol Version</strong>: choose from valid values.</li>
			<li><strong>Require Content-Length Header</strong>: if the service requires this header, check the box.</li>
		</ul>
		</li>
	<li>Click <strong>Finish</strong>.</li>
	<li>In the Endpoints overlay, click <strong>Finish</strong>. The new endpoint is saved.</li>
</ol>

<h4 id="proc_phys_serv_endpoint_edit">To edit an existing endpoint for a physical service</h4>
<ol>
	<li>Log in to the Akana API Platform and go to the <strong>Details</strong> page for your physical service.</li>
	<li>In the <strong>Endpoints</strong> section, click <strong>Edit</strong>. The <strong>Endpoints</strong> page appears, and any current endpoints are displayed.</li>
	<li>Find the endpoint on the list, and click to the right of the line to expand.</li>
	<li>Click <strong>Edit</strong> (pencil icon) to access the <strong>Edit Endpoint</strong> overlay.</li>
	<li>Modify the endpoint values as needed, and then click <strong>Finish</strong>.</li>
	<li>At the Endpoints page, click <strong>Finish</strong>. The changes are saved.</li>
</ol>

<h4 id="proc_phys_serv_endpoint_delete">To delete an endpoint for a physical service</h4>
<ol>
	<li>Log in to the Akana API Platform and go to the <strong>Details</strong> page for your physical service.</li>
	<li>In the <strong>Endpoints</strong> section, click <strong>Edit</strong>. The Endpoints page appears, and any current endpoints are displayed.</li>
	<li>Find the endpoint on the list, and click to the right of the line to expand.</li>
	<li>Click <strong>Delete</strong> (X icon) to delete the endpoint.</li>
	<li>At the confirmation message, click <strong>OK</strong>.</li>
	<li>At the Endpoints page, click <strong>Finish</strong>.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="phys_svc_policies">How do I manage policies for a physical service?</h2>
<p>Managing <a href="basics_glossary.htm#gl_policy">policies</a> for a physical service works in the same way as managing policies for an API implementation. You can add, view, and remove policies. For instructions, see <a href="apiadmin_implementations.htm#h_policies">Managing Policies for an API Implementation</a>.</p>
<p>For a physical service, policies are in the API Designer: navigate to your physical service &gt; <strong>Details</strong> page &gt; <strong>Policies</strong> section &gt; click <strong>Edit</strong>.</p>
<p><strong>Note</strong>: For general information about all policies, see <a href="../../ag/policies/about_policies_view.htm">About Policies</a> (Policy Manager help).</p>
<p><a href="#top">Back to top</a></p>



<h2 id="phys_svc_certs">How do I manage certificates for a physical service?</h2>
<p>Managing certificates for a physical service works in the same way as managing certificates for an API implementation. For instructions, see <a href="apiadmin_implementations.htm#api_impl_keys_certs">How do I manage keys and certificates for my API?</a></p>
<p>For a physical service, certificates are in the API Designer: navigate to your physical service &gt; <strong>Details</strong> page &gt; <strong>Certificates</strong> section &gt; click <strong>Edit</strong>.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="phys_svc_new_version">How do I add a new version for a physical service?</h2>
<p>You can add a new version for a physical service, just as you can for an API. It works in the same way.</p>
<p>For detailed instructions, see <a href="apiadmin_api_add.htm#api_version_add">How do I add an API version?</a></p>
<p><a href="#top">Back to top</a></p>



<h2 id="phys_svc_delete">How do I delete a physical service?</h2>
<p>Deleting a physical service works in the same way as deleting an API.</p>
<p>It's important to make sure that the physical service isn't referenced in an orchestration, script, or process, before deleting it.<a href="apiadmin_implementations.htm#h_policies"></a></p>
<p>When you delete a physical service that has only one version, the physical service is deleted.</p>
<h4 id="proc_phys_serv_delete">To delete a physical service</h4>
<ol>
	<li>Log in to the Akana API Platform and go to the <strong>Details</strong> page for your physical service.</li>
	<li>At the top right, click <strong>Delete</strong>.</li>
	<li>At the confirmation prompt, click <strong>OK</strong>. The physical service is deleted.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="phys_svc_api_doc">How do I manage documentation for my physical service?</h2>
<p>Managing documentation for a physical service is the same as managing documentation for an API that's hosted on the platform. </p>
<p>If you upload an <a href="basics_glossary.htm#gl_api_description_document">API description document</a>, or use API Designer to define the physical service, API documentation will be automatically generated and displayed. You can also upload authored documentation if you need to.</p>
<p>For information relating to managing API documentation, see <a href="api_admin_documentation_maintenance.htm">API Documentation Maintenance</a>.</p>
<p><a href="#top">Back to top</a></p>




<h2 id="phys_svc_admins">How do I manage Admins for my physical service?</h2>
<p>Managing the Administrator team for an API is exactly the same as managing the Admin team for an API that's hosted on the platform.</p>
<p>the user who creates the physical service becomes the first Admin. A current Admin can invite other users to be Admins, and can remove an existing Admin from the team.</p>
<p>For information relating to managing API Admins, see <a href="api_admin_management.htm">API Admin Management</a>.</p>
<p><a href="#top">Back to top</a></p>



<hr class="divide_hr" />



<h2 id="related_topics">Related Topics</h2>
<div class="relatedlinks" id="api_admin"><!-- #BeginLibraryItem "/Library/relatedtopics_api_admin.lbi" -->
<ul>
	<li><a href="apiadmin_getting_started.htm">Getting Started for API Developers</a></li>
	<li><a href="apiadmin_overview.htm">API Administration: Overview</a></li>
	<li><a href="api_admin_tutorial.htm">Tutorial (API Provider)</a></li>
	<li><a href="api_admin_management.htm">API Admin Management</a></li>
	<li><a href="bus_api_admin_forum.htm">Forum Moderation</a></li>
	<li><a href="apiadmin_promotion.htm">Promoting an API</a></li>
	<li><a href="apiadmin_api_add.htm">Adding an API</a></li>
	<li><a href="apiadmin_api_design.htm">Add or Modify an API Using API Designer</a></li>
</ul>
<ul>
	<li><a href="apiadmin_a_d_d_support.htm">API Description Language Support</a></li>
	<li><a href="apiadmin_implementations.htm">Manage API Implementations</a></li>
	<li><a href="api_admin_testing_tc.htm">API Testing with Test Client</a></li>
	<li><a href="uc_tc_okta.htm">Use Case: API testing in Test Client with Okta</a></li>
	<li><a href="api_admin_managing_contracts.htm">Managing Contracts for your API</a></li>
	<li><a href="apiadmin_monitoring.htm">Monitoring API Analytics</a></li>
	<li><a href="apiadmin_mydashboard.htm">Monitoring Top APIs with the My Dashboard Feature</a></li>
</ul>
<ul>
	<li><a href="api_admin_api_publishing.htm">API Visibility, Licenses, and Settings</a></li>
	<li><a href="apiadmin_api_phys_svc.htm">Working with Physical Services</a></li>
	<li><a href="api_admin_oauth_support.htm">OAuth Support</a></li>
	<li><a href="api_admin_content_guidelines.htm">Content Development Guidelines</a></li>
	<li><a href="api_admin_documentation_maintenance.htm">API Documentation Maintenance</a></li>
	<li><a href="api_admin_documentation_tagging.htm">API Documentation Tagging</a></li>
	<li><a href="api_admin_legal_agreement_maintenance.htm">Legal Agreement Maintenance</a></li>
	<li><a href="basics_glossary.htm">Glossary of Terms</a></li>
</ul><!-- #EndLibraryItem --></div>