---
layout: page
title: LaaS UI Elements | Site Admin | Akana API Platform Help
description: Examples of user interface elements available for lifecycle integration.
product: cm
category: learn
sub-nav-class: Site Admin
weight: 07
type: page
nav-title: LaaS UI Elements
---
<h1 id="top">LaaS UI Elements</h1>
<p>An overview of the types of user interface elements you can create in the developer portal with lifecycle integration, with illustrations.</p>
<p><strong>Note</strong>: The illustrations in this document are taken from the customization ZIP file, available for download within the developer portal. Information about LaaS UI elements is in the customization ZIP file in version xxx and later. For instructions for downloading the customization ZIP file, refer to <a href="site_admin_customization.htm##customization_files_download">How do I download customization files?</a></p>
<hr class="divide_hr" />



<h2 style="color: gray;">Table of Contents</h2>
<ol class="table_of_contents">
	<li><a href="#lr_datatypes_overview">Overview</a></li>
	<li><a href="#lr_datatypes_laas_boolean">Boolean fields</a></li>
	<li><a href="#lr_datatypes_laas_date">Date fields</a></li>
	<li><a href="#lr_datatypes_laas_number">Decimal (number) fields</a></li>
	<li><a href="#lr_datatypes_laas_string">String fields</a>:
		<ul>
			<li><a href="#lr_datatypes_laas_closed_enum">Closed enumerated fields (string)</a></li>
			<li><a href="#lr_datatypes_laas_dynamicselect">Dynamic select fields (string)</a></li>
			<li><a href="#lr_datatypes_laas_open_string_multi_value">Open string multi-value fields (string)</a></li>
			<li><a href="#lr_datatypes_laas_taxonomy">Taxonomy fields (string)</a></li>
			<li><a href="#lr_datatypes_laas_text">Text fields (string)</a></li>
			<li><a href="#lr_datatypes_laas_url">URL fields (string)</a></li>
		</ul>
	</li>
	</ol>
<hr class="divide_hr" />



<h2 id="lr_datatypes_overview">Overview</h2>
<p>In Repository Client, in the Global Definition Template, you choose the classifier type as part of defining the classifier, as shown below.</p>
<p><img src="assets_laas_ui_elements/laas_rm_classifier_define.png" alt="Defining a classifier in Repository Client" /></p>
<p>Use the table below to help choose data types in Repository Client so that you can create the fields that you want to add in the Community Manager developer portal.</p>
<table class="doctable">
	<thead>
		<tr>
			<th>To create this type of field in CM</th>
			<th>Choose this type of data in LC</th>
			<th>Can be multi-valued?</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>Text field</td>
			<td>string</td>
			<td>Yes</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>Examples: (add links here)</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>Drop-down list</td>
			<td>string</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>boolean</td>
			<td>No</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>decimal</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>date</td>
			<td>&nbsp;</td>
		</tr>
	</tbody>
</table>
<p><a href="#top">Back to top</a></p>



<h2 id="lr_datatypes_laas_boolean">Boolean fields</h2>
<p>For Boolean data you can:</p>
<ul>
	<li>Make it required</li>
	<li>Make it optional</li>
	<li>Prepopulate a value which is not editable by the user</li>
</ul>
<p>An example of the use of Boolean to define an extension properties field in the developer portal is shown below. This example defines the <strong>Allow Anonymous Access</strong> field, usually the user's choice, as a read-only field set to No as a security measure.</p>
<pre>&lt;define-classifier display-name="Approval Required" help-text="Require approval for access to this implementation. Note that this classifier is only relevant when anonymous access is not allowed." include-in-search-filter="false" max-occurs="1" name="access-approval-required" type="boolean" /&gt;</pre>
<p>An example of the use of Boolean in the developer portal is shown below. 
<p><img src="assets_laas_ui_elements/laas-boolean.png" alt="Boolean field examples" /></p>
<p><a href="#top">Back to top</a></p>



<h2 id="lr_datatypes_laas_date">Date fields</h2>
<p>For date fields you can:</p>
<ul>
	<li>Make it required for the user to choose a single date</li>
	<li>Make it optional for the user to choose a single date</li>
	<li>Prepopulate a single value not editable by the user</li>
	<li>Make it required for the user to choose multiple dates (not shown)</li>
	<li>Make it optional for the user to choose multiple dates (not shown)</li>
	<li>Prepopulate multiple values not editable by the user</li>
</ul>
<p><img src="assets_laas_ui_elements/laas-date.png" alt="Date fields" /></p>
<p><a href="#top">Back to top</a></p>



<h2 id="lr_datatypes_laas_number">Decimal (number) fields</h2>
<p>If you want to create a numeric field in the Community Manager developer portal, use the <strong>decimal</strong> classifier type in Repository Client.</p>
<p>xxx</p>
<p>The resulting field in the Community Manager developer portal might look something like the below.</p>
<p><img src="assets_laas_ui_elements/laas-number.png" alt="Number data type, field examples" /></p>
<p><a href="#top">Back to top</a></p>



<h2 id="lr_datatypes_laas_string">String fields</h2>
<p>There are a lot of different types of fields you can create in the Community Manager developer portal with string fields. The sections below define these types of fields, with illustrations from the customization ZIP file:</p>
<ul>
	<li><a href="#lr_datatypes_laas_closed_enum">Closed enumerated fields (string)</a></li>
	<li><a href="#lr_datatypes_laas_dynamicselect">Dynamic select fields (string)</a></li>
	<li><a href="#lr_datatypes_laas_open_string_multi_value">Open string multi-value fields (string)</a></li>
	<li><a href="#lr_datatypes_laas_taxonomy">Taxonomy fields (string)</a></li>
	<li><a href="#lr_datatypes_laas_text">Text fields (string)</a></li>
	<li><a href="#lr_datatypes_laas_url">URL fields (string)</a></li>
</ul>
<p><img src="assets_laas_ui_elements/laas-closed-enum.png" alt="Closed enumerated field examples" /></p>
<p><a href="#top">Back to top</a></p>



<h3 id="lr_datatypes_laas_closed_enum">Closed enumerated fields (string)</h3>
<p>For closed enum you can create the following types of fields:</p>
<ul>
	<li>Make it required for the user to choose a single value from the closed list</li>
	<li>Make it optional for the user to choose a single value from the closed list</li>
	<li>Prepopulate a single value which is not editable by the user</li>
	<li>Make it required for the user to choose multiple values from the closed list</li>
	<li>Make it optional for the user to choose multiple values from from the closed list</li>
	<li>Prepopulate multiple values which is not editable by the user</li>
</ul>
<p><img src="assets_laas_ui_elements/laas-closed-enum.png" alt="Closed enumerated field examples" /></p>
<p><a href="#top">Back to top</a></p>



<h3 id="lr_datatypes_laas_dynamicselect">Dynamic select fields (string)</h3>
<p>xxx{<strong>still really need to clarify what this is and how it shoudl work. Not sure from looking at the image and Samir wasn't sure either.}</strong></p>
<p><img src="assets_laas_ui_elements/laas-dynamicselect.png" alt="Dynamic select field examples" /></p>
<p><a href="#top">Back to top</a></p>



<h3 id="lr_datatypes_laas_open_string_multi_value">Open string multi-value fields (string)</h3>
<p>The example below shows a string xxx, open (xxx), supporting multiple values.</p>
<p><img src="assets_laas_ui_elements/laas-open-string-multi-value.png" alt="Open string multi-value field examples" /></p>
<p><a href="#top">Back to top</a></p>



<h3 id="lr_datatypes_laas_taxonomy">Taxonomy fields (string)</h3>
<p>xxx</p>
<p><img src="assets_laas_ui_elements/laas-taxonomy.png" alt="Taxonomy field examples" /></p>
<p><a href="#top">Back to top</a></p>



<h3 id="lr_datatypes_laas_text">Text fields (string)</h3>
<p>xxx</p>
<p><img src="assets_laas_ui_elements/laas-text.png" alt="Text field examples" /></p>
<p><a href="#top">Back to top</a></p>



<h3 id="lr_datatypes_laas_url">URL fields (string)</h3>
<p>xxx</p>
<p><img src="assets_laas_ui_elements/laas-url.png" alt="URL field examples" /></p>
<p><a href="#top">Back to top</a></p>