---
layout: page
title: LaaS UI Elements | Site Admin | Akana API Platform Help
description: Examples of user interface elements available for lifecycle integration.
product: cm
category: learn
sub-nav-class: Site Admin
weight: 07
type: page
nav-title: LaaS UI Elements
---
<h1 id="top">LaaS UI Elements</h1>
<p>An overview of the types of user interface elements you can create in the developer portal with lifecycle integration, with illustrations.</p>
<p><strong>Note</strong>: The illustrations in this document are taken from the customization ZIP file, available for download within the developer portal. Information about LaaS UI elements is in the customization ZIP file in version {<span class="apidoc_red">Question_01 release version for this add to the customization zip?</span>} and later. For instructions for downloading the customization ZIP file, refer to <a href="site_admin_customization.htm##customization_files_download">How do I download customization files?</a></p>
<hr class="divide_hr" />



<h2 style="color: gray;">Table of Contents</h2>
<ol class="table_of_contents">
	<li><a href="#lr_datatypes_overview">Overview</a></li>
	<li><a href="#lr_datatypes_laas_boolean">Boolean fields</a></li>
	<li><a href="#lr_datatypes_laas_date">Date fields</a></li>
	<li><a href="#lr_datatypes_laas_number">Decimal (number) fields</a></li>
	<li><a href="#lr_datatypes_laas_string">String fields</a>:
		<ul>
			<li><a href="#lr_datatypes_laas_text">Text fields (string)</a></li>
			<li><a href="#lr_datatypes_laas_open_string_multi_value">Open string multi-value fields</a></li>
			<li><a href="#lr_datatypes_laas_closed_enum">Closed enumerated fields (string)</a></li>
			<li><a href="#lr_datatypes_laas_dynamicselect">Dynamic select fields (string)</a></li>
			<li><a href="#lr_datatypes_laas_taxonomy">Taxonomy fields (string)</a></li>
		</ul>
	</li>
	<li><a href="#lr_datatypes_laas_url">URL fields</a></li>
	</ol>
<hr class="divide_hr" />



<h2 id="lr_datatypes_overview">Overview</h2>
<p>In Repository Client, in the Global Definition Template, you choose the classifier type as part of defining the classifier, as shown below.</p>
<p><img src="assets_laas_ui_elements/laas_rm_classifier_define.png" alt="Defining a classifier in Repository Client" /></p>
<p>Use the table below to help choose data types in Repository Client so that you can create the fields that you want to add in the Community Manager developer portal.</p>
<table class="doctable">
	<thead>
		<tr>
			<th>Choose this type of data in LC</th>
			<th>To create this type of field in CM</th>
			<th>Can be multi-valued?</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>boolean classifier</td>
			<td><p>A field that offers, or enforces, a Boolean value, such as yes/no or on/off.</p>
				<p>Examples:</p>
					<ul>
						<li><a href="#lr_datatypes_laas_boolean">Boolean fields</a></li>
		</ul>
			</td>
			<td>No</td>
		</tr>
		<tr>
			<td>date classifier</td>
			<td><p>Date field. Examples:</p>
					<ul>
						<li><a href="#lr_datatypes_laas_date">Date fields</a></li>
		</ul>
			</td>
			<td>Yes</td>
		</tr>
		<tr>
			<td>decimal classifier</td>
			<td><p>Any sort of numeric field, such as integer, decimal, or date.</p>
				<p>Examples:</p>
					<ul>
						<li><a href="#lr_datatypes_laas_number">Decimal (number) fields</a></li>
		</ul>
			</td>
			<td>Yes</td>
		</tr>
		<tr>
			<td>string classifier</td>
			<td><p>Text field including single value or multi-value, simple text or drop-down list.</p>
				<p>Examples:</p>
		<ul>
			<li><a href="#lr_datatypes_laas_text">Text fields (string)</a></li>
			<li><a href="#lr_datatypes_laas_open_string_multi_value">Open string multi-value fields</a></li>
			<li><a href="#lr_datatypes_laas_closed_enum">Closed enumerated fields (string)</a></li>
			<li><a href="#lr_datatypes_laas_dynamicselect">Dynamic select fields (string)</a></li>
			<li><a href="#lr_datatypes_laas_taxonomy">Taxonomy fields (string)</a></li>
		</ul>
			</td>
			<td>Yes</td>
		</tr>
		<tr>
			<td>By-reference artifact</td>
			<td><p>URL. Examples:</p>
					<ul>
						<li><a href="#lr_datatypes_laas_url">URL fields</a></li>
		</ul>
			</td>
			<td>{<span class="apidoc_red">Question_02</span>} Yes?</td>
		</tr>
	</tbody>
</table>
<p><a href="#top">Back to top</a></p>



<h2 id="lr_datatypes_laas_boolean">Boolean fields</h2>
<p>If you want to create a Boolean field in the Community Manager developer portal, use the <strong>boolean</strong> classifier type in Repository Client. A sample snippet defining a boolean field in the <strong>gdt.xml</strong> file is shown below. This classifier defines whether licensing is required to use an API.</p>
<pre>&lt;define-classifier display-name="Licensing Required" help-text="Indicates if licensing is required to use the asset" include-in-search-filter="false" max-occurs="1" name="licensing-required" type="boolean" /&gt;</pre>
<p>For Boolean fields you can:</p>
<ul>
	<li>Make it required</li>
	<li>Make it optional</li>
	<li>Prepopulate a value that is not editable by the user</li>
</ul>
<p>An example of the use of Boolean to define an extension properties field in the developer portal is shown below. This example defines the <strong>Allow Anonymous Access</strong> field, usually the user's choice, as a read-only field set to No as a security measure.</p>
<pre>&lt;define-classifier display-name="Approval Required" help-text="Require approval for access to this implementation. Note that this classifier is only relevant when anonymous access is not allowed." include-in-search-filter="false" max-occurs="1" name="access-approval-required" type="boolean" /&gt;</pre>
<p>An example of the use of Boolean in the developer portal is shown below.</p>
<p><img src="assets_laas_ui_elements/laas-boolean.png" alt="Boolean field examples" /></p>
<p><a href="#top">Back to top</a></p>



<h2 id="lr_datatypes_laas_date">Date fields</h2>
<p>If you want to create a date field in the Community Manager developer portal, use the <strong>date</strong> classifier type in Repository Client. A sample snippet defining a date field in the <strong>gdt.xml</strong> file is shown below. This example defines the date the asset went into production, as an additional piece of metadata about the asset.</p>
<pre>&lt;define-classifier display-name="Production Date" help-text="Date this asset entered production" include-in-arv-filter="true" include-in-search-filter="true" max-occurs="1" name="production-date" type="date"&gt;</pre>
<p>For date fields you can:</p>
<ul>
	<li>Make it required for the user to choose a single date</li>
	<li>Make it optional for the user to choose a single date</li>
	<li>Prepopulate a single value not editable by the user</li>
	<li>Make it required for the user to choose multiple dates (not shown)</li>
	<li>Make it optional for the user to choose multiple dates (not shown)</li>
	<li>Prepopulate multiple values not editable by the user (not shown)</li>
</ul>
<p><img src="assets_laas_ui_elements/laas-date.png" alt="Date fields" /></p>
<p><a href="#top">Back to top</a></p>



<h2 id="lr_datatypes_laas_number">Decimal (number) fields</h2>
<p>If you want to create a numeric field in the Community Manager developer portal, use the <strong>decimal</strong> classifier type in Repository Client.</p>
<p>The example below defines a classifier for information about the cost of developing an asset. In this example, the field could be constrained to take two decimal places for a monetary value. {DT: how would they make it do that? uptohere}</p>
<pre>&lt;define-classifier display-name="Developer License Cost" help-text="Per developer/seat license cost or equivalent for the asset" include-in-search-filter="false" max-occurs="1" name="developer-license-cost" type="decimal" /&gt;</pre>
<p>The example below defines a classifier for information about the number of working days to create an asset. In this example, the field could be constrained to take only an integer. {DT: how would they make it do that? uptohere}</p>
<pre>&lt;define-classifier display-name="Creation Level of Effort" help-text="Creation level of effort to develop this asset in Person Days" include-in-search-filter="false" max-occurs="1" name="creation-level-of-effort" type="decimal" /&gt;</pre>
<p>The resulting field in the Community Manager developer portal might look something like the below.</p>
<p><img src="assets_laas_ui_elements/laas-number.png" alt="Number data type, field examples" /></p>
<p><a href="#top">Back to top</a></p>



<h2 id="lr_datatypes_laas_string">String fields</h2>
<p>If you want to create a string field in the Community Manager developer portal, use the <strong>string</strong> classifier type in Repository Client.</p>
<p>There are a lot of different types of fields you can create in the Community Manager developer portal with string values. The sections below define these types of fields, with illustrations from the customization ZIP file:</p>
<ul>
	<li><a href="#lr_datatypes_laas_text">Text fields (string)</a></li>
	<li><a href="#lr_datatypes_laas_open_string_multi_value">Open string multi-value fields</a></li>
	<li><a href="#lr_datatypes_laas_closed_enum">Closed enumerated fields (string)</a></li>
	<li><a href="#lr_datatypes_laas_dynamicselect">Dynamic select fields (string)</a></li>
	<li><a href="#lr_datatypes_laas_taxonomy">Taxonomy fields (string)</a></li>
</ul>


<h3 id="lr_datatypes_laas_text">Text fields (string)</h3>
<p>For a simple text field you can create the following variations:</p>
<ul>
	<li>Open string required on create: make it required for the user to provide a single value.</li>
	<li>Open string optional on create: make it optional for the user to provide a single value.</li>
	<li>Open string read-only on create: Prepopulate a single value that is not editable by the user</li>
</ul>
<p>You can also configure the fields as multi-value fields. For examples, see <a href="#lr_datatypes_laas_open_string_multi_value">Open string multi-value fields</a> below.</p>
<p><img src="assets_laas_ui_elements/laas-text.png" alt="Text field examples" /></p>
<p><a href="#top">Back to top</a></p>



<h3 id="lr_datatypes_laas_open_string_multi_value">Open string multi-value fields</h3>
<p>You can define an open text field so that the user can provide multiple values, as shown in the example below.</p>
<p><img src="assets_laas_ui_elements/laas-open-string-multi-value.png" alt="Open string multi-value field examples" /></p>
<p><a href="#top">Back to top</a></p>



<h3 id="lr_datatypes_laas_closed_enum">Closed enumerated fields (string)</h3>
<p>For closed enum you can:</p>
<ul>
	<li>Make it required for the user to choose a single value from the closed list.</li>
	<li>Make it optional for the user to choose a single value from the closed list.</li>
	<li>Prepopulate a single value that is not editable by the user.</li>
	<li>Make it required for the user to choose multiple values from the closed list.</li>
	<li>Make it optional for the user to choose multiple values from from the closed list.</li>
	<li>Prepopulate multiple values that are not editable by the user.</li>
</ul>
<p><img src="assets_laas_ui_elements/laas-closed-enum.png" alt="Closed enumerated field examples" /></p>
<p><a href="#top">Back to top</a></p>



<h3 id="lr_datatypes_laas_dynamicselect">Dynamic select fields (string)</h3>
<p>{<span class="apidoc_red">Question_03: still really need to clarify what this is and how it should work. Not sure from looking at the image and SU wasn't sure either.</span>}</p>
<p><img src="assets_laas_ui_elements/laas-dynamicselect.png" alt="Dynamic select field examples" /></p>
<p><a href="#top">Back to top</a></p>



<h3 id="lr_datatypes_laas_taxonomy">Taxonomy fields (string)</h3>
<p>{<span class="apidoc_red">Question_04: need to clarify this field type also.</span>}</p>
<p><img src="assets_laas_ui_elements/laas-taxonomy.png" alt="Taxonomy field examples" /></p>
<p><a href="#top">Back to top</a></p>



<h3 id="lr_datatypes_laas_url">URL fields</h3>
<p>If you want to create a URL field in the Community Manager developer portal to reference an artifact, such as upload of an API description document, use the <strong>by-reference</strong> artifact type in Repository Client.</p>
<p>{<span class="apidoc_red">Question_05: can this be used for regular URL fields? Or, is it only for by-reference artifacts?</span>}</p>
<p>If you define a by-reference artifact, you can collect the URL for the artifact in the Community Manager developer portal via a URL field.</p>
<p>An example of what this might look like in Repository Client:</p>
<pre>&lt;define-artifact category="swagger-api-definition" containment="by-value|by-reference" display-name="Swagger API Definition" governed="true" help-text="Swagger document defining the API" mandatory-public="false" primary="true" queryable="true" validation-trigger="true" versioned="true" /&gt;</pre>
<p>An example of the resulting URL field in the Community Manager developer portal:</p>
<p><img src="assets_laas_ui_elements/laas-url.png" alt="URL field examples" /></p>
<p><a href="#top">Back to top</a></p>