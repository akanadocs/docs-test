---
layout: page
title: Configuration Tasks | Site Administration | Community Manager Help
description: Site configuration tasks&#8212;Configure custom color schemes, define a platform login, and upload documentation files and style sheets.
product: cm
category: learn
subcategory: Site Administration
weight: 20
type: page
nav-title: 
no-nav: true
---
<h2 id="top">Config</h2>

<p>Configure basic settings for alerts, apps, APIs, connections, comments, discussions, groups, tickets, users, reviews, and business security; set up custom color schemes, define a platform login, and upload documentation files and style sheets.</p>
<p>Note: this section contains information about the configuration settings defined within Community Manager, which apply to the entire developer portal.</p>
<p>For information about the configuration settings defined in the Akana Administration Console, which apply only to the specific container, refer to <a href="site_admin_admin_console_settings.htm">Admin Console Settings</a>.</p>
<div class = "divider1"></div>

<h3 style="color: gray;">Table of Contents</h3>



<ol class="table_of_contents">
  <li><a href="#how_do_i_configure_a_custom_stamp_in_the_forum">How do I configure a custom stamp in the Forum?</a></li>
</ol>


<h5 style="color: gray;">&nbsp;</h5>



<div class = "divider1"></div>



<a name="how_do_i_configure_a_custom_stamp_in_the_forum"></a><h3>How do I configure a custom stamp in the Forum?</h3>
<p>The Forum includes stamp icons; for example, the Pending stamp for forum content awaiting approval for publication. The stamp is actually not an image, but is constructed via the platform's CSS.</p>
<p>It is possible to introduce custom stamps for additional actions you might choose to define in a custom workflow. For example, you might decide to have an Approved stamp. The stamp is formatted with CSS, but must be associated with a valid workflow item in a custom workflow.</p>
<p>To introduce a custom stamp, you will need to complete three main actions:</p>
<ul>
  <li>Determine the workflow action for which you want a custom stamp. If it's an existing workflow action, no other action is needed; if it's a custom workflow action, you will need to upload the modified workflow, and make that workflow the default for the resource type (such as, Discussions or Reviews).</li>
  <li>Write and upload a customized <strong>custom_en-us.json</strong> file. This is the link between the workflow action name and the user-friendly name that is used on the custom stamp.</li>
  <li>Set up some custom CSS. You cannot modify the platform's CSS, but you can download the custom.less file, modify it, and upload the modification.</li>
</ul>
<p>This topic provides reference material to help you accomplish both of the above. Because this is custom work, the exact specifics will depend on the scenario. Existing platform procedures are not repeated here, but are referenced.</p>
<p>As an example in the below, let's say you want to customize the Discussions workflow to include an Approved stamp which is green. Since Approved is already a valid workflow action for the Discussions default workflow, in this example you do not need to write and implement a custom workflow.</p>
<h5>Step One: Define an action in the custom workflow for Reviews to include a Published stamp</h5>
<ol>
  <li>Download the current workflow: Administration &gt; Workflows. Find Review on the list and click <strong>View</strong>, then click <strong>Download</strong>.</li>
  <li>Rename and then customize the workflow. See <strong>Customizing the Workflow</strong> below.</li>
  <li>Upload the revised workflow: Administration &gt; Workflows &gt; <strong>Add Workflow</strong>. Provide Name and Description, select <strong>Review</strong> as the object type, and upload the file. Click <strong>Finish</strong>.</li>
  <li>Get the Site Admin to specify the new workflow as the default in Administration &gt; Settings &gt; Reviews.</li>
</ol>
<h6>Customizing the Workflow</h6>
<p>xxx</p>
<h6>Workflow Action Transformation Rules</h6>
<p>If a workflow action name includes certain characters, such as spaces or dots, this causes problems when it is used in the xxx file and in the custom.less file. For this reason, the platform transforms the workflow action name, using these rules:</p>
<ul>
  <li>Spaces, underscores, and dots are converted to hyphens</li>
  <li>Case is converted to all lowercase</li>
</ul>
<p>Some examples are shown below.</p>
<table cellspacing="0px" class="doctable" style="width: 98%;">
<thead>
  <tr>
    <th width="40%">This workflow action name...</th>
    <th width="60%">Is transformed to this...</th>
  </tr>
</thead>
<tbody>
  <tr class="t2row">
    <td>com.acmepayments.workflowaction</td>
    <td>com-acmepayments-workflowaction</td>
  </tr>
  <tr class="t1row">
    <td>Resubmitted</td>
    <td>resubmitted</td>
  </tr>
  <tr class="t2row">
    <td>Pending_Second_Approval</td>
    <td>pending-second-approval</td>
  </tr>
</tbody>
</table>

<p class="apidoc_note"><strong>Tip</strong>: If you are adding custom workflow actions, it is best to choose clear, simple, and consistent names. Stay well within the naming conventions given above.</p>
<h6>Customizing the custom_en-us.json File</h6>
<p>If you customize UI elements, you will need to create a custom_en-us.json file, add code for your new elements, and upload it to the correct location in the user interface.</p>
<p>First, create a file of that name with the following contents:</p>

<pre>{
  "errors": {},
  "labels": {},
  "messages": {},
  "tooltips": {},
  "placeholders": {},
  "helpers": {},
  "validator": {
  "errors": {}
}
</pre>
<p>Let's say you want to define a a new <strong>published</strong> state that will appear in the user interface with the text <strong>APPROVED</strong>. You would modify the default contents of the <strong>custom_en-us.json</strong> file as follows:</p>
<pre>{
  "errors": {},
  "labels": {},
  "messages": {
    "forumItemStates": {
      "published": "PUBLISHED"
    }
  },
  "tooltips": {},
  "placeholders": {},
  "helpers": {},
  "validator": {
    "errors": {}
  }
}
</pre>
<p>Then, you must upload the customized file to the platform: Log in as the Site Admin. Go to Administration &gt; Config &gt; Resources. Under Resources, click File Manager. Upload the file to the following folder: <strong>/resources/{theme default path}locales/custom_en-us.json</strong>.</p>
<p><strong>Note</strong>: It is best to first upload the customized custom.less file and rebuild the styles. When the styles are rebuilt, the platform creates the {theme default path} shown above. You can then just create the locales folder, go into it, and upload the json file from there.</p>
<h5>Step Two: Define custom CSS that will draw the Approved stamp in green when a forum entry is approved</h5>
<ol>
  <li>xxx</li>
  <li>xxx</li>
  <li>xxx</li>
</ol>
<h6>Customizing the CSS</h6>
<p>xxx</p><p>xxx</p>
<p><a href="#top">Back to top</a></p>



<div class = "divider1"></div>



