---
layout: page
title: Managing Contracts | API Administration | Akana API Platform Help
description: Learn how to set up and manage your API on the platform.
product: cm
category: learn
sub-nav-class: API Admin
weight: 2628
type: page
nav-title: Managing Contracts
---
<h2 id="top">Managing Contracts for your API</h2>

<p>Manage contracts for apps that are connected to your API.</p>
<h5 class="stamp">API Platform Version: 8.1</h5>

<div class = "divider1"></div>

<h3 style="color: gray;">Table of Contents</h3>



<ol class="table_of_contents">
  <li><a href="#how_do_i_see_the_status_of_my_apis_contracts_with_apps">How do I see the status of my API's contracts with apps?</a></li>
  <li><a href="#how_do_i_revise_a_contract">How do I revise a contract?</a></li>
  <li><a href="#api_access_suspend">How do I suspend an app's access to my API?</a></li>
  <li><a href="#api_access_resume">How do I resume an app's access to my API after I suspend it?</a></li>
  <li><a href="#how_do_i_export_a_specific_contract_for_my_api">How do I export a specific contract for my API?</a></li>
  <li><a href="#what_are_the_contents_of_the_api_contract_export_file">What are the contents of the API contract export file?</a></li>
  <li><a href="#why_is_there_a_separate_activate_step_for_production_contracts">Why is there a separate Activate step for contracts in the Live implementation?</a></li>
</ol>



<div class = "divider1"></div>



<a name="how_do_i_see_the_status_of_my_apis_contracts_with_apps"></a><h3>How do I see the status of my API's contracts with apps?</h3>
<p>You can review the status of your API's connections, including pending and active API access requests, in the <strong>My APIs</strong> &gt; API &gt; <strong>Apps</strong> page. This page provides a high level summary of workflow status for apps with current API access contracts or pending API access requests for the current API.</p>
<p>Each listing includes:</p>
<ul>
  <li><strong>Apps</strong>&#8212;The App Name. This link clicks through to the app's <strong>Details</strong> page.</li>
  <li><strong>Legals</strong>&#8212;A column that indicates whether the Legal Agreements have been accepted (Check = Accepted, No Check = No Accepted).</li>
  <li><strong>Sandbox / Live</strong>&#8212;Represent the two environments that an API Access Request can be submitted for. Each column displays the current status of the API Access Request and available API management functions (for example, Cancel, Suspend, Resume). The valid actions for a specific contract are determined by the current state of the contract; for example, only a contract that is currently in a state of Suspended can be resumed, and only a contract in a state of Activated can be cancelled. For more information on API access states and valid actions, see <a href="site_admin_workflows.htm#what_is_the_default_workflow_for_api_contracts">What is the default workflow for API contracts?</a></li>
</ul>
<p>The following tables provide explanations for information you might see on this page.</p>
<table cellspacing="0px" class="doctable" style="width: 98%;">
  <thead>
  <tr>
    <th width="30%">Contract Status</th>
    <th width="70%">Description</th>
  </tr>
  </thead>
  <tbody>
    <tr class="t2row">
      <td>Access Requested</td>
      <td>An App has requested access to an API but the request has not been approved and activated in the Sandbox or Live environment.</td>
    </tr>
    <tr class="t1row">
      <td>Approved</td>
      <td>A contract in the Live environment has been approved but not yet activated.</td>
    </tr>
  <tr class="t2row">
    <td>Active</td>
    <td>API Access has been approved and activated.</td>
  </tr>
  <tr class="t1row">
    <td>Inactive</td>
    <td>API access has not yet been requested.</td>
  </tr>
  <tr class="t2row">
    <td>Rejected</td>
    <td>The API Access Request has been rejected.</td>
  </tr>
  <tr class="t1row">
    <td>Suspended</td>
    <td>API Access that was previously active has been suspended.</td>
  </tr>
  </tbody>
</table>
<p>&nbsp;</p>
<table cellspacing="0px" class="doctable" style="width: 98%;">
  <thead>
  <tr>
    <th width="30%">App Management Task</th>
    <th width="70%">Description</th>
</tr>
</thead>
<tbody>
    <tr class="t2row">
      <td>Cancel</td>
      <td>Cancels an API Access Request. Listing is removed from the <strong>API Connections</strong> page. Requestor must submit another request to initiate the process again.</td>
    </tr>
  <tr class="t1row">
    <td>Suspend</td>
    <td>Suspends the API Access Request. This action can only be performed when the request status is Active.</td>
  </tr>
  <tr class="t2row">
    <td>Resume</td>
    <td>Resumes the API Access Request and changes the request status to <em>Active</em> after it has been suspended.</td>
  </tr>
</tbody>
  </table>
<p>&nbsp;</p>
<table cellspacing="0px" class="doctable" style="width: 98%;">
  <thead>
  <tr>
    <th width="30%">API Access Request Task</th>
    <th width="70%">Description</th>
  </tr>
  </thead>
  <tbody>
    <tr class="t2row">
      <td>Approve</td>
      <td>Approves the API Access Request. In the sandbox environment, a contract that's in an Approved state is fully available for testing. In the Live environment, a contract in an Approved state must be activated before the app can use it at runtime or in Test Client.</td>
    </tr>
  <tr class="t1row">
    <td>Reject</td>
    <td>Rejects the API Access Request.</td>
  </tr>
  <tr class="t2row">
    <td>Cancel</td>
    <td>Cancels the API Access Request. The app developer must submit another request to initiate the process again.</td>
  </tr>
  <tr class="t1row">
    <td>Activate</td>
    <td>Activate a contract in the Live environment. The contract must already be in an Approved state. Once a contract has been activated, the app can use it in the Live environment.</td>
  </tr>
  <tr class="t2row">
    <td>Suspend</td>
    <td>Suspends the API Access Request and is performed after the request has been activated.</td>
  </tr>
    <tr class="t1row">
    <td>Resume</td>
    <td>Resumes the API Access Request and puts it into an activated state after it has been suspended.</td>
  </tr>
</tbody>
  </table>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_revise_a_contract"></a><h3>How do I revise a contract?</h3>
<p>When a contract that an app has with your API is approved and/or activated, you can still revise the contract to modify the licenses or make other changes as needed.</p>
<p>When you revise an active contract, the platform creates a new contract based on the existing one. You can then modify the properties as needed. When the new contract is activated, the original version is automatically cancelled, and the new contract becomes the active contract. There is no interruption of traffic for the contract, and the metrics for the contract continue to increment.</p>
<h5>To revise a contract:</h5>
<ol>
  <li>Navigate to My APIs, choose the API, and then, in the left navigation, click Apps.</li>
  <li>Locate the contract on the list.</li>
  <li>To the right of the entry, click the icon to view the list of options for the contract, and choose <strong>Revise</strong>.</li>
  <li>Revise the contract as needed.</li>
  <li>Save changes.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="api_access_suspend"></a><h3>How do I suspend an app's access to my API?</h3>
<p>You can temporarily suspend an app's access to your API. You can resume access later by clicking <strong>Resume</strong>.</p>
<p><strong>Note</strong>: Suspend and Resume actions are available only to the API Admin; the app developer cannot suspend/resume a contract.</p>
<h5>To suspend an app's access to your API:</h5>
<ol>
  <li>Log in to the platform and go to your API's <strong>Details</strong> page.</li>
  <li>On the left menu bar, choose <strong>Apps</strong>.</li>
  <li>Find the app/contract on the list. On the right, click the arrow to see what actions are available.</li>
  <li>Click <strong>Suspend</strong>. At the prompt, enter a comment and click <strong>Confirm</strong>. The contract is suspended and the <strong>Resume</strong> button displays.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="api_access_resume"></a><h3>How do I resume an app's access to my API after I suspend it?</h3>
<p>If you have previously suspended an app's access to your API, you can reinstate it using the <strong>Resume</strong> function.</p>
<p><strong>Note</strong>: Suspend and Resume actions are available only to the API Admin; the app developer cannot suspend/resume a contract.</p>
<h5>To resume an app's access to your API:</h5>
<ol>
  <li>Log in to the platform and go to your API's <strong>Details</strong> page.</li>
  <li>On the left menu bar, choose <strong>Apps</strong>.</li>
  <li>Find the app/contract on the list. On the right, click the arrow to see what actions are available.</li>
  <li>Click <strong>Resume</strong>. At the prompt, enter a comment and click <strong>Confirm</strong>.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_export_a_specific_contract_for_my_api"></a><h3>How do I export a specific contract for my API?</h3>
<p>You can export all the API contracts for your API when you export the API (see <a href="apiadmin_api_add.htm#api_export">How do I export an API?</a>).</p>
<p>However, you might want to export a specific contract. You can do that via the My APIs &gt; API &gt; Apps page, where you can view the contracts for all apps that are connected to your API.</p>
<h5>To export an individual contract for an API:</h5>
<ol>
  <li>Navigate to My APIs, choose the API, and then, in the left navigation, click <strong>Apps</strong>.</li>
  <li>Locate the contract on the list.</li>
  <li>To the right of the entry, click the icon to view the list of options for the contract, and choose <strong>Export</strong>.</li>
  <li>On the Export dialog, check the boxes to include the following in the export file:
    <ul>
      <li>API</li>
      <li>Application</li>
      <li>License</li>
      <li>Policies</li>
    </ul>
    </li>
  
  <li>Click <strong>Export</strong>.</li>
  <li>Choose to save or open the export file (apicontract-export.zip).</li>
</ol>
<p><a href="#top">Back to top</a></p>





<a name="what_are_the_contents_of_the_api_contract_export_file"></a><h3>What are the contents of the API contract export file?</h3>
<p>The API contract export file includes all the core information about the API/app contract, as well as any of the optional additional information you specified.</p>
<p>The export file will generally include the following:</p>
<ul>
  <li>Files at root level: 
    <ul>
      <li><strong>objectgraph.xml</strong>: An XML file that shows the relationships between resources.</li>
      <li><strong>objectdata.xml</strong>: An XML-based  summary of all the data in the export file.</li>
      <li><strong>exportproperties.properties</strong>: a properties file showing which options were included in the export file.</li>
     </ul>
  </li>
  <li><strong>bpels</strong>: a folder containing XML business process files (<a href="basics_glossary.htm#gl_bpel_file">bpel files</a>). One for each operation, for each environment. So, for example, if the API has five operations, and runs in Sandbox and Live environments, there are 10 bpel files.</li>
  <li><strong>services</strong>: a folder containing a subfolder for each environment, each subfolder containing a bpel.xml file for the applicable service/environment.</li>
  <li><strong>wsdls</strong>: a folder containing WSDL files for the service.</li>
</ul>
<p><a href="#top">Back to top</a></p>



<a name="why_is_there_a_separate_activate_step_for_production_contracts"></a>
<h3>Why is there a separate Activate step for contracts in the Live implementation?</h3>
<p>The lifecycle of a contract between an app and an API is controlled by several factors.</p>
<p>The first factor is the API definition (Tab 3, Proxy), where you can determine whether contract requests are auto-approved or require manual approval. This setting is specific to each API environment. If auto-approval is set to Yes, when the app developer requests a contract it is approved immediately. Results depend on the environment:</p>
<ul>
  <li><strong>Sandbox</strong>: Auto-approval means that the app developer can use it right away, and the endpoint is available in Test Client for testing.</li>
  <li><strong>Live</strong>: When the contract is manually approved or auto-approved, there is an extra step, <strong>Activate</strong>, that must be completed before the app can access the API in the Live environment. If auto-approval is turned off, the API Admin must first approve the request, at which point the contract status changes from <strong>Pending</strong> to <strong>Approved</strong>; and must then activate. If auto-approval is turned on, the API Admin must activate, at which point the status changes from <strong>Approved</strong> to <strong>Activated</strong>. </li>
</ul>
<p>The contract must be in an <strong>Activated</strong> state before it can be used at runtime. Network Director  rejects the request if the contract is in an <strong>Approved</strong> state.</p>
<p>The <strong>Approve</strong> and <strong>Activate</strong> actions can be performed by the API Admin or the Business Admin.</p>
<p>So, why is there a separate activation step for production contracts?</p>
<p>Essentially, the Approved state indicates approval from the business side. The Activated state indicates that all is ready from the operations side.</p>
<p>By default, the API Admin (or Business Admin) performs both actions. However, making it into two actions:</p>
<ul>
  <li>Adds an extra layer of approval before access is granted to the Live implementation.</li>
  <li>Adds flexibility, opening  the door to possible customization.</li>
</ul>
<p>The approval process can be customized by implementing a custom workflow. For example, a custom workflow could be implemented that would not allow <em>all</em> API admins to activate contracts, but rather would limit those rights to a subset of API Admins who have an additional role.</p>
<p><a href="#top">Back to top</a></p>
