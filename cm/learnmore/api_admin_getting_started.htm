---
layout: page
title: Getting Started | API Administration | Community Manager Help
description: Start using Community Manager to publish and manage APIs in a matter of minutes.
product: cm
category: gs
subcategory: 
weight: 10
type: page
nav-title: API Developers
---
<h2 id="top">Getting Started for API Developers</h2>
<p>Learn how to add an API and test it.</p>
<div class = "divider1"></div>


<h3 style="color: gray;">Table of Contents</h3>
<ol class="table_of_contents">
  <li><a href="#sign_up">Step 1: Sign up</a></li>
  <li><a href="#add_an_api">Step 2: Add an API</a></li>
  <li><a href="#test_your_api">Step 3: Test your API</a></li>
  <li><a href="#whats_next">Step 4: What's next?</a></li>
</ol>
<div class = "divider1"></div><p></p>



<p>SOA Software&rsquo;s Enterprise API Platform is an API Management Platform that brings API providers and App developers together.&nbsp; It provides easy access to powerful API Management capabilities combined with a social community allowing developers to collaborate to build innovative Apps with scalable APIs.</p>
<p>Let&rsquo;s get going.</p><br />



<a name="sign_up"></a><h3>Step 1: Sign up</h3>
<p>Sign up for an account if you don&rsquo;t already have one. You can register locally, or use your favorite social networking account. From the homepage, click <strong>Sign Up</strong>.</p>



<a name="add_an_api"></a><h3>Step 2: Add an API</h3>
<p>Use the <em>Plus Menu</em> to add a new API.</p>
<p>On the first page you&rsquo;ll provide the information that the system will show users when they view the API. All of this information will be indexed, so try and use names, tags and descriptions that will match the types of things you think users might search for when looking for an API like yours. The first page will also ask you to choose <a href="api_admin_api_publishing.htm#how_do_i_manage_api_visibility">privacy</a> settings for your API, when you first add an API it&rsquo;s a good idea to set it to private so that you can make sure it works. You can always make it public later.</p>
<p>You&rsquo;ll then describe your target API on the second page. The target is the actual service or API that you built and now want to manage, often through a <a href="api_admin_api_publishing.htm#what_is_a_proxy_api">proxy</a> (if you use a proxy, then your target API information will be hidden from developers). Defining a target can be as simple as specifying the URL where the target is hosted. You may also want to specify both <a href="api_admin_api_publishing.htm#what_is_the_difference_between_sandbox_and_production_environments">sandbox</a> and <a href="api_admin_api_publishing.htm#what_is_the_difference_between_sandbox_and_production_environments">production</a> URLs, but you don&rsquo;t have to. You can simply use the URL(s) to describe your target, but we recommend that you use the advanced settings to provide a bit more information about the structure of your API interface â€“ this will give you a better experience later on for monitoring and documentation, as well as giving you more options for access control.</p>
<p>Describing the API interface is pretty easy; you describe API operations as a combination of http verb and resource location (uri), optionally choosing additional settings for <a href="api_admin_api_publishing.htm#what_are_the_supported_methods_and_content_types_for_requests">media types</a>. The interface definition for our sample customer API looks like this:</p>
<p><img src="images/add_api_example.jpg" width="576" height="211" alt="" /></p>
<p>You can also describe SOAP services and can set additional transport details if you need to.</p>
<p>The 3rd page of the wizard is where you&rsquo;ll define your API proxy (if you want to). An API proxy will allow you to add security, monitoring and QoS management amongst other things, and will help you get the most out of your API and our platform.</p>
<p>The API proxy is the endpoint the system will present to App developers for use in their Apps. If you have control of your own DNS server, you can use your own CNAME for your API, if not you can define an API domain subordinate to one of the brokers. You can also choose to add a context prefix if you expect to have multiple APIs on the same CNAME, or just want to add a more descriptive path.</p>
<p>Once you&rsquo;ve defined your sandbox and production API proxy endpoints you&rsquo;re done. You can choose to adjust <a href="api_admin_visibility.htm#how_do_i_edit_the_api_visibility_scope_for_a_group_api_administrator">visibility of your API</a> and <a href="api_admin_managing_contracts.htm#how_do_i_see_the_status_of_my_apis_contracts_with_apps">can monitor API access requests and contracts</a>, and you can use the advanced tab to change the proxy interface or override the default <a href="api_admin_api_publishing.htm#what_security_and_monitoring_policies_are_supported">security and monitoring policies</a>.</p>



<a name="test_your_api"></a><h3>Step 3: Test your API</h3>
<p>Ok, so you&rsquo;ve added an API. At this point you should probably make sure it works before you go too much further. To test your API you&rsquo;ll need to create an App, connect to your API and send some test messages. See the App Developer <a href="app_getting_started_for_app_developers.htm">getting started</a> guide for help.</p>




<a name="whats_next"></a><h3>Step 4: What's next?</h3>

<p>Ok, you&rsquo;ve created and tested your API. You&rsquo;re good to go, but there are a few more things you should do to help developers make the most of it. You should consider things like: <a href="api_admin_documentation_maintenance.htm">documentation</a>, <a href="api_admin_legal_agreement_maintenance.htm">legal agreements</a>, <a href="api_admin_oauth_support.htm">OAuth</a>, API <a href="api_admin_api_publishing.htm#how_do_i_manage_api_visibility">privacy</a> and <a href="app_collaborate_groups.htm">group</a> management, <a href="api_admin_monitoring.htm">monitoring</a>, and <a href="app_access_apis_versioning.htm">versioning</a>.</p>
<p><a href="#top">Back to top</a></p>



