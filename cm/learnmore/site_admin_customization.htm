---
layout: page
title: Customization and Branding | Site Admin | Akana API Platform Help
description: Learn how to manage platform customization styles and templates.
product: cm
category: learn
sub-nav-class: Site Administration
weight: 3224
type: page
nav-title: Customization and Branding
---
<h1 id="top">Community Manager developer portal Customization and Branding</h1>
<p>Learn how to manage platform customization styles and templates.</p>
<p class="Note"><strong>Note</strong>: For detailed information and procedures for customizing the user interface, refer to <a href="../customization/cm_customization_202020.htm">Detailed Customization Document</a>.</p>
<hr class="divide_hr" />



<h2 style="color: gray;">Table of Contents</h2>


<h4 style="color: gray;"><a href="#h_customization_basics">Customization Basics:</a></h4>
<ol class="table_of_contents">
	<li><a href="#customization_best_practices">Site customization best practices</a></li>
	<li><a href="#customization_files_overview">I want to customize site pages&#8212;where do I start?</a> (2020.1.0 and later)</li>
	<li><a href="#site_admin_customization_overview">What functions are available to the Site Administrator on the Customization page?</a> (2020.1.0 and later)</li>
</ol>


<h4 style="color: gray;"><a href="#h_customization_files">Customization Files:</a></h4>
<ol class="table_of_contents">
	<li><a href="#customization_files_download">How do I download customization files?</a> (2020.1.0 and later)</li>
	<li><a href="#customization_file_structure">What is the file structure for the customization files?</a> (2020.1.0 and later)</li>
	<li><a href="#customization_files_details">What does each of the customization files do?</a></li>
</ol>


<h4 style="color: gray;"><a href="#h_customization_samples">Customization Samples:</a></h4>
<ol class="table_of_contents">
	<li><a href="#customization_samples_about">What are the customization samples?</a> (2020.2.0 and later)</li>
	<li><a href="#customization_samples_download">How do I get the customization samples?</a> (2020.2.0 and later)</li>
	<li><a href="#customization_samples_use">How do I use the customization samples?</a> (2020.2.0 and later)</li>
</ol>


<h4 style="color: gray;"><a href="#h_custom_styles">Customizing Site Styles:</a></h4>
<ol class="table_of_contents">
	<li><a href="#file_less_js_about">What is less.js and what are the benefits?</a></li>
	<li><a href="#platform_styles_customize">I want to customize platform styles. What do I do?</a></li>
	<li><a href="#which_css_should_i_update">Which platform CSS file should I update?</a></li>
	<li><a href="#how_do_i_customize_how_markdown_looks_in_the_developer_portal">How do I customize how Markdown looks in the Community Manager developer portal?</a></li>
	<li><a href="#what_color_scheme_changes_are_supported_on_my_platform_deployment">What color scheme changes are supported on my platform deployment?</a></li>
	<li><a href="#what_style_sheets_do_i_use_to_update_the_color_scheme_on_my_platform_deployment">What style sheets do I use to update the color scheme of my platform deployment?</a></li>
	<li><a href="#how_do_i_download_platform_css">How do I download the platform CSS?</a></li>
	<li><a href="#upload_modified_custom_less">How do I upload the custom.less file after I've updated it?</a></li>
	<li><a href="#after_i_update_my_customless_file_how_do_i_apply_the_changes_to_my_platform_deployment">After I update my custom.less file, how do I apply the changes to my platform deployment?</a></li>
	<li><a href="#how_do_i_rebuild_my_color_scheme_styles_after_i_have_uploaded_the_customless_file">How do I rebuild my color scheme styles after I have uploaded the custom.less file?</a></li>
	<li><a href="#what_is_a_sprite">What is a sprite?</a></li>
	<li><a href="#how_do_i_modify_sprite_colors">How do I modify sprite colors?</a></li>
	<li><a href="#howto_sprite_file_upload">How do I upload sprite files to the Community Manager developer portal?</a></li>
	<li><a href="#sprite_style_update_changes">How do I make my style and sprite file changes visible on my platform deployment after I regenerate styles?</a></li>
	<li><a href="#determine_theme_name">How can I determine the theme name?</a></li>
	<li><a href="#customization_hermosa_files">Where do I store customization files for Hermosa theme?</a></li>
	<li><a href="#howto_upload_css">How do I upload style sheets to the Community Manager developer portal?</a></li>
	<li><a href="#css_upload">How do I upload the API and Online Help content style sheet to the Community Manager developer portal?</a></li>
	<li><a href="#custom_fonts_overview">How do I customize fonts in the Community Manager developer portal?</a></li>
	<li><a href="#custom_fonts_reference_external">How do I customize fonts by referencing an external font?</a></li>
	<li><a href="#custom_fonts_uploaded">How do I customize fonts by uploading font files?</a></li>
</ol>




<h4 style="color: gray;"><a href="#h_branding">Branding the Community Manager developer portal:</a></h4>


<ol class="table_of_contents">
	<li><a href="#how_do_i_configure_a_custom_logo">How do I configure a custom logo?</a></li>
	<li><a href="#custom_header">How do I customize the page header?</a></li>
	<li><a href="#custom_footer">How do I customize the page footer?</a></li>
	<li><a href="#how_do_i_modify_the_default_icon_for_apps_or_apis">How do I modify the default icon for apps, APIs, or other resources?</a></li>
	<li><a href="#howto_favicon_modify">How do I modify the favicon for the Community Manager developer portal?</a></li>
</ol>


<h4 style="color: gray;"><a href="#h_page_customization">Customizing Site Pages:</a></h4>


<ol class="table_of_contents">
	<li><a href="#custom_left_menubar">How do I customize the left menu bar?</a></li>
	<li><a href="#howto_portal_landing_page_modify">How do I modify the landing page for the Community Manager developer portal?</a></li>
	<li><a href="#diff_page_after_login">How do I customize so that users are taken to a different page after login?</a></li>
	<li><a href="#custom_support_page">How do I customize the Support page?</a></li>
	<li><a href="#tc_cors_init_js_send_requests_directly">Can Test Client use CORS to send the requests to the API endpoint directly without using the Forward Proxy?</a></li>
	<li><a href="#where_download_metadata_json">What are the metadata.json and widget_factory.json files, and how do I use them for customization?</a></li>
	<li><a href="#howto_resources_upload">How do I upload resources to the Community Manager developer portal?</a></li>
</ol>



<hr class="divide_hr" />
<h2 id="h_customization_basics">Customization Basics:</h2>



<h2 id="customization_best_practices">Site customization best practices</h2>
<p>Here are some tips to help you be successful in site customization:</p>
<ul>
	<li><strong>Have a base theme without customization</strong>&#8212;Keep a base theme version for Admin access, without customization. If you apply customization to your base theme, it will apply to all themes based on that one. It's better to clone the theme to a new theme and make the customizations in the clone. That way, if anything goes seriously wrong, you can log in on the base theme to fix it.</li>
	<li><strong>Plan first</strong>&#8212;Review the options before you start, to make sure you've chosen the correct path. For example, if there is already customization in place, and you want to modify it, choose <strong>Download Custom Styles</strong> rather than <strong>Download Custom Style Template</strong>. See <a href="#platform_styles_customize">I want to customize platform styles. What do I do?</a></li>
	<li><strong>Back up</strong>&#8212;It's a good idea to keep a backup copy of the original file and any customization versions that you implement, as a manual version control. If you're not happy with the results when you upload the new customizations, you can revert to the previous version before troubleshooting.</li>
	<li><strong>Use change tracking</strong>&#8212;Use change tracking on modifications to your offline customization assets. This gives you the history of points where specific changes were made.</li>
	<li><strong>Test</strong>&#8212;Always review the modifications you've made and make sure the results are as expected.</li>
	<li><strong>Have a reversion plan</strong>&#8212;Always have a reversion path so that if something is not as expected, you can go back to the previous version.</li>
</ul>
<p><a href="#top">Back to top</a></p>



<h2 id="customization_files_overview">I want to customize site pages&#8212;where do I start?</h2>
<h4 class="stamp">Valid in Version: 2020.1.0 and later</h4>
<p>In versions prior to 2020.1.0, when customizing files, the Site Admin  had to create an exact folder structure within the Community Manager developer portal, in File Manager, and create and upload the customization files.</p>
<p>In 2020.1.0 and later, you can provision your Community Manager developer portal instance with a theme-specific set of starter files for customization in the <strong>More</strong> &gt; <strong>Admin</strong> &gt;<strong>Customization</strong> page, via these two options:</p>
<ul>
	<li><strong>Generate customization files</strong>&#8212;Generates a set of files for the specified theme.</li>
	<li><strong>Download customization files</strong>&#8212;Downloads a ZIP file of the customization files for the specified theme. Users can then customize the files offline and upload the updated files.</li>
</ul>
<p class="Note"><strong>Note</strong>: If customization files are already in place, they are not overwritten.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="site_admin_customization_overview">What functions are available to the Site Administrator on the Customization page?</h2>
<h4 class="stamp">Valid in Version: 2020.1.0 and later</h4>
<p>to get to the Customization page, choose <strong>More</strong> &gt; <strong>Admin</strong> &gt;<strong>Customization</strong>.</p>
<p>On this page, the Site Admin can perform several key tasks relating to provisioning, downloading, and uploading customization files for one or more platform <a href="basics_glossary.htm#gl_theme">themes</a>. For an overview of themes, see <a href="site_admin_site.htm#theme_platform_define">What is a platform theme?</a></p>
<p>You can create a set of basic files from the platform defaults, download the default files, customize offline, and then upload the new files. And then, of course, test.</p>
<p>The table below shows the basic functions available on the <strong>Customization</strong> page. Click through for more information as needed.</p>
<table class="doctable">
	<thead>
		<tr>
			<th>Use this element...</th>
			<th>To...</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>Themes drop-down list</td>
			<td><p>Choose the theme that you're working with.</p>
				<p class="Note"><strong>Note</strong>: Make sure you've picked the correct theme. It's particularly important not to upload customization files to the wrong theme.</p>
				<p>For information about the available themes, see <a href="site_admin_site.htm#settings_theme_options">What themes are available?</a></p></td>
		</tr>
		<tr>
			<td>File Manager</td>
			<td><p>To access the customization files structure at the /resources folder, click the <strong>File Manager</strong> button.</p>
				<p>This is the same action as going to <strong>More</strong> &gt; <strong>File Manager</strong> &gt; <strong>Resources File Manager</strong>. Direct access to the File Manager resources folder is provided on the <strong>Customization</strong> page for your convenience.</p>
				<p>For information about using File Manager, see <a href="site_admin_file_manager.htm">File Manager</a>.</p></td>
		</tr>
		<tr>
			<td>Download Custom Style Template</td>
			<td><p>Allows you to download the default style customization file template (custom_template.less), to use as a starting point in customizing platform styles.</p>
				<p>If you want to customize, and you don't have any customization already in place, download these files as a starting point.</p>
				<p>For instructions, see <a href="#proc_customize_styles">To customize platform styles</a>. In Step 4, choose the first option.</p>
				<p>Essentially you will download the file, rename it to custom.less, then apply customization such as custom colors, sprite URLs, and the site logo, and then upload the revised custom.less file in <strong>Upload Custom Styles</strong>. The styles and the /resources folder are automatically regenerated as part of the upload process. </p></td>
		</tr>
		<tr>
			<td>Download Custom Styles</td>
			<td><p>Download the latest version of the style customization file (custom.less).</p>
				<p>You can then make any additional customization changes needed, and then upload the revised file using the <strong>Upload Custom Styles</strong> option.</p></td>
		</tr>
		<tr>
			<td>Rebuild Styles</td>
			<td>Initiates a rebuild of the platform style sheets. Primarily used when a platform update is installed that includes style sheet changes.</td>
		</tr>
		<tr>
			<td>Upload Custom Styles</td>
			<td><p>Allows you to download the set of style customization files currently in place in the specified theme.</p>
				<p>If you already have customization in place, and want to apply additional customization, download these files so that you know you're starting with the latest files.</p>
				<p>For instructions, see <a href="#proc_customize_styles">To customize platform styles</a>. In Step 4, choose the second option.</p></td>
		</tr>
		<tr>
			<td>Generate Customization Files</td>
			<td><p>Create the folder structure for the specified theme, and populate it with all the default resources needed to customize the theme. Any customization files already in place are not modified.</p>
				<p>Use this option to generate the default file set in the Community Manager developer portal.</p>
				<p>One advantage of generating the default files (sometimes called scaffolding since with this action the platform creates the framework, or skeleton, for customization) is that the platform builds the folder structure that you'll need. For example, you might want to modify only one or two of the files. When the default files are in place, you won't have to manually create the folder structure and you can be certain that the file paths are correct.</p></td>
		</tr>
		<tr>
			<td>Download Customization Files</td>
			<td><p>Download the default set of resources required for customizing the theme. You can customize offline and then upload via File Manager.</p>
				For more information, see <a href="#customization_files_download">How do I download customization files?</a></td>
		</tr>
		<tr>
			<td><p>Download Customization Samples</p>
				<p><strong>Version: 2020.2.0 and later</strong></p></td>
			<td><p>Download a ZIP file containing customization samples, and instructions, for customizing the Community Manager developer portal user interface.</p>
				<p>For more information, see <a href="#h_customization_samples">Customization Samples</a>.</p></td>
		</tr>
	</tbody>
</table>
<p><a href="#top">Back to top</a></p>



<hr class="divide_hr" />
<h2 id="h_customization_files">Customization Files:</h2>



<h2 id="customization_files_download">How do I download customization files?</h2>
<h4 class="stamp">Valid in Version: 2020.1.0 and later</h4>
<p>You can download all the customization files, in ZIP file format, to an external location.</p>
<p>The set of customization files is different for each theme. Make sure you choose the correct theme before downloading.</p>
<h4 id="proc_customize_styles">To download customization files</h4>
<ol>
	<li>Log in as a Site Admin and <a href="site_admin_overview.htm#admin_menu_siteadmin">go to the Admin section</a>.</li>
	<li>Go to <strong>Customization</strong>.</li>
	<li>From the <strong>Theme</strong> drop-down list, choose the theme. For more information, see <a href="site_admin_site.htm#theme_platform_define">What is a platform theme?</a> and <a href="basics_navigation.htm#platform_ui_overview">Platform user interface &quot;theme&quot;</a>.</li>
	<li>Click <strong>Download Customization Files</strong>, navigate to the download folder, and save the file (<strong>scaffolding.zip</strong>).
	<p class="Note"><strong>Note</strong>: If you have multiple themes, it's a good idea to rename the ZIP file to include the theme name; for example, <strong>scaffolding_hermosa.zip</strong>.</p></li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="customization_file_structure">What is the file structure for the customization files?</h2>
<h4 class="stamp">Valid in Version: 2020.1.0 and later</h4>
<p>The customization files are different for each theme:</p>
<ul>
	<li><a href="#customization_files_bonita">Bonita theme</a></li>
	<li><a href="#customization_files_devops">DevOps theme</a></li>
	<li><a href="#customization_files_hermosa">Hermosa theme</a></li>
	<li><a href="#customization_files_simpledev">SimpleDev theme</a></li>
</ul>


<h3 id="customization_files_bonita">Customization files: Bonita theme</h3>
<p>For information about the files in the customization ZIP file, see <a href="../customization/cm_customization_202020.htm#s12">Bonita Custom File Structure</a> (detailed customization document).</p>


<h3 id="customization_files_devops">Customization files: DevOps theme</h3>
<p>The customization ZIP file for DevOps theme includes these folders and files:</p>
<ul>
	<li>less\<a href="#files_custom_less">custom.less</a></li>
	<li>locales\<a href="#files_custom_en_us_json">custom_en-us.json</a></li>
	<li>SOA\LCC\extensions\<a href="#files_init_js">init.js</a></li>
	<li>SOA\LCC\extensions\<a href="#files_nav_extensions_ejs">nav_extensions.ejs</a></li>
	<li>SOA\LCC\extensions\<a href="#files_quick_links_extensions_js">quick_links_extensions.ejs</a></li>
	<li>SOA\LCC\extensions\<a href="#files_widget_factory_js">widget_factory.js</a></li>
	<li>SOA\LCC\footer\views\\<a href="#files_footer_ejs">footer.ejs</a></li>
	<li>style\images\<a href="#files_logo_png">logo.png</a></li>
</ul>
<p>For details about each file, see <a href="#customization_files_details">What does each of the customization files do?</a></p>


<h3 id="customization_files_hermosa">Customization files: Hermosa theme</h3>
<p>For information about the files in the customization ZIP file, see <a href="../customization/cm_customization_202020.htm#s11">Hermosa Custom File Structure</a> (detailed customization document).</p>


<h3 id="customization_files_simpledev">Customization files: SimpleDev theme</h3>
<p>The customization ZIP file for SimpleDev includes these folders and files:</p>
<ul>
	<li>less\<a href="#files_custom_less">custom.less</a></li>
	<li>locales\<a href="#files_custom_en_us_json">custom_en-us.json</a></li>
	<li>SOA\Dev\app_page\views\<a href="#files_app_sub_nav_ejs">app_sub_nav.ejs</a></li>
	<li>SOA\Dev\extensions\<a href="#files_init_js">init.js</a></li>
	<li>SOA\Dev\extensions\<a href="#files_nav_extensions_ejs">nav_extensions.ejs</a></li>
	<li>SOA\Dev\extensions\<a href="#files_quick_links_extensions_js">quick_links_extensions.ejs</a></li>
	<li>SOA\Dev\extensions\<a href="#files_widget_factory_js">widget_factory.js</a></li>
	<li>SOA\Dev\footer\views\<a href="#files_footer_ejs">footer.ejs</a></li>
	<li>SOA\Dev\nav\views\<a href="#files_nav_ejs">nav.ejs</a></li>
	<li>SOA\Dev\quick_links\views\<a href="#files_quick_links_ejs">quick_links.ejs</a></li>
	<li>SOA\Dev\user_profile_page\views\<a href="#files_user_profile_sub_nav_ejs">user_profile_sub_nav.ejs</a></li>
	<li>style\images\<a href="#files_logo_png">logo.png</a></li>
</ul>
<p>For details about each file, see <a href="#customization_files_details">What does each of the customization files do?</a></p>
<p><a href="#top">Back to top</a></p>



<h2 id="customization_files_details">What does each of the customization files do?</h2>
<p>Below is a summary of what each of the customization files does, for DevOps and SimpleDev themes.</p>
<p>For information about the files for Hermosa and Bonita themes, refer to the links above.</p>
<table class="doctable">
	<thead>
		<tr>
			<th>This folder/file...</th>
			<th>Performs this function...</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td id="files_app_sub_nav_ejs">app_sub_nav.ejs</td>
			<td>Allows you to customize the left menu items for app pages.</td>
		</tr>
		<tr>
			<td id="files_custom_less">custom.less</td>
			<td><p>Allows you to customize the styles in the site, in LESS pre-compiler format.<a href="site_admin_site.htm#settings_theme_options"></a></p>
				<p>For more information, see <a href="#file_less_js_about">What is less.js and what are the benefits?</a></p></td>
		</tr>
		<tr>
			<td id="files_custom_en_us_json">custom_en-us.json</td>
			<td>Overrides default actions (that is, default page after login), as well as labels and messages in the Community Manager developer portal pages.</td>
		</tr>
		<tr>
			<td id="files_footer_ejs">footer.ejs</td>
			<td>Allows you to customize the footer content of the Community Manager developer portal pages.</td>
		</tr>
		<tr>
			<td id="files_init_js">init.js</td>
			<td><p>The initialization file for customization. All custom JavaScript files that are used for customization must be loaded in init.js.</p>
				<p>For an example of how you can use the <strong>init.js</strong> file for customization, see <a href="#tc_cors_init_js_send_requests_directly">Can Test Client use CORS to send the requests to the API endpoint directly without using the Forward Proxy?</a></p></td>
		</tr>
		<tr>
			<td id="files_logo_png">logo.png</td>
			<td>The logo that is displayed on site pages. By default, logo.png is an Akana logo. Change it to your own logo, using the same file name.</td>
		</tr>
		<tr>
			<td id="files_nav_ejs">nav.ejs</td>
			<td>The original content of the top menu items in the header. Can be updated to modify/remove items from the original top menu items in the header.</td>
		</tr>
		<tr>
			<td id="files_nav_extensions_ejs">nav_extensions.ejs</td>
			<td><p>Allows you to add items to the top menu in the <a href="basics_glossary.htm#gl_header_ui">header</a>.</p></td>
		</tr>
		<tr>
			<td id="files_quick_links_ejs">quick_links.ejs</td>
			<td>The original content of the user profile pull-down menu items in the header. Can be updated to modify/remove items from the original user profile pull-down menu items in the header.</td>
		</tr>
		<tr>
			<td id="files_quick_links_extensions_js">quick_links_extensions.ejs</td>
			<td><p>Allows you to add items to the user profile pull-down menu in the <a href="basics_glossary.htm#gl_header_ui">header</a>.</p></td>
		</tr>
		<tr>
			<td id="files_user_profile_sub_nav_ejs">user_profile_sub_nav.ejs</td>
			<td>Allows you to customize the left menu items for user profile pages.</td>
		</tr>
		<tr>
			<td id="files_widget_factory_js">widget_factory.js</td>
			<td><p>Allows you to configure any new pages that were added in <strong>metadata.json</strong>.</p>
				<p>(Bonita, DevOps, Simple Dev)</p></td>
		</tr>
	</tbody>
</table>
<p><a href="#top">Back to top</a></p>




<hr class="divide_hr" />
<h2 id="h_customization_samples">Customization Samples:</h2>




<h2 id="customization_samples_about">What are the customization samples?</h2>
<h4 class="stamp">Valid in Version: 2020.2.0 and later</h4>
<p>The Customization page offers an option to download customization samples that you can use to get started with customizing the Community Manager developer portal user interface. Each sample is a working example of a customization task, with a set of files and a readme with instructions.</p>
<p>The customization ZIP file includes examples for different themes. For example:</p>
<ul>
	<li>Advanced header customization</li>
	<li>Creating a custom login page.
	<p>For more information about using this customization example, see <a href="../customization/cm_customization_202020.htm#s04_02b">Login Entry Page</a> (valid in version: 2020.2.4 and later).</p></li>
	<li>Globalization</li>
	<li>Adding a new static page</li>
	<li>Implementing custom fonts</li>
</ul>
<p><a href="#top">Back to top</a></p>



<h2 id="customization_samples_download">How do I get the customization samples?</h2>
<h4 class="stamp">Valid in Version: 2020.2.0 and later</h4>
<p>You can download a ZIP file of customization samples, to an external location.</p>
<p>The ZIP file includes samples for different themes.</p>

<h4 id="proc_customize_samples">To download customization samples</h4>
<ol>
	<li>Log in as a Site Admin and <a href="site_admin_overview.htm#admin_menu_siteadmin">go to the Admin section</a>.</li>
	<li>Go to <strong>Customization</strong>.</li>
	<li>Click <strong>Download Customization Samples</strong>, navigate to the download folder, and save the file (<strong>customization_samples.zip</strong>).</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="customization_samples_use">How do I use the customization samples?</h2>
<p>When you've downloaded the customization ZIP file, unzip it and review the available samples. Each sample comes with a readme file with information about the sample files.</p>
<p>Use the sample to experiment with the feature, following the instructions in the readme. When your test files are ready, upload them to the Community Manager developer portal and review the results.</p>
<p class="Note"><strong>Note</strong>: Take a backup of any existing files before you overwrite them with a new version, so that you can easily revert if you find that you made a mistake.</p>
<p>For detailed information and procedures for customizing the user interface, refer to <a href="../customization/cm_customization_202020.htm">Detailed Customization Document</a>.</p>
<p><a href="#top">Back to top</a></p>




<hr class="divide_hr" />
<h2 id="h_custom_styles">Customizing Site Styles:</h2>




<h2 id="file_less_js_about">What is less.js and what are the benefits?</h2>
<p>The <strong>custom.less</strong> style sheet in the Community Manager developer portal is implemented with <a href="basics_glossary.htm#gl_less">LESS</a>, a dynamic stylesheet language that extends the static CSS by adding a dynamic behavior in the CSS.</p>
<ul>
	<li>LESS.JS is a CSS pre-processor that allows you to write your own styles using the LESS pre-processor language and save them in a .LESS file.</li>
	<li>LESS.JS will compile the file into pure CSS. LESS variables are defined with an @ sign and Variable assignment is done with a colon (:). After you update the <strong>custom.less</strong> style sheet and rebuild, the values of the variables are inserted into the output CSS document.</li>
	<li>LESS helps reduce the size of the CSS and allows you to quickly and easily make changes to the platform color scheme and sprite files by updating one <strong>custom.less</strong> file and then rebuilding the complete set of site stylesheets.</li>
</ul>
<p><a href="#top">Back to top</a></p>



<h2 id="platform_styles_customize">I want to customize platform styles. What do I do?</h2>
<p>The platform comes with a default look and feel, including styles, colors, navigation, logo, and so on. These platform default styles are stored in a stylesheet which is dynamically generated from a file named <strong>custom.less</strong>.</p>
<p>For detailed instructions on how to customize platform styles, refer to <a href="../customization/cm_customization_202020.htm#s06">Customizing Page Styles</a> in the customization doc.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="which_css_should_i_update">Which platform CSS file should I update?</h2>
<p>All customizations should be stored in <strong>custom.less</strong> as explained in <a href="#platform_styles_customize">I want to customize platform styles. What do I do?</a></p>
<p>The platform uses other stylesheets, such as <strong>style.css</strong> or <strong>supplement.css</strong>. Do not modify these stylesheets. Some of the benefits of storing your customizations in <strong>custom.less</strong>:</p>
<ul>
	<li>All customized styles are in one place.</li>
	<li>You can always revert back to the platform default if needed.</li>
	<li>Your custom styles will not be overridden by the platform's CSS hierarchy</li>
	<li>Your custom styles will not be overridden by platform updates</li>
</ul>
<p><a href="#top">Back to top</a></p>



<h2 id="how_do_i_customize_how_markdown_looks_in_the_developer_portal">How do I customize how Markdown looks in the Community Manager developer portal?</h2>
<p>The Community Manager developer portal includes a set of default style definitions for the styles supported for Markdown. These styles are defined in the platform's <strong>custom.less</strong> style file.</p>
<p>To find the Markdown styles:</p>
<ol>
	<li>Log in as a Site Admin and <a href="site_admin_overview.htm#admin_menu_siteadmin">go to the Admin section</a>.</li>
	<li>Go to <strong>Customization</strong>.</li>
	<li>From the <strong>Theme</strong> drop-down list, choose the theme. For more information, see <a href="site_admin_site.htm#theme_platform_define">What is a platform theme?</a> and <a href="basics_navigation.htm#platform_ui_overview">Platform user interface &quot;theme&quot;</a>.</li>
	<li>To download the customized style sheet, <strong>custom.less</strong>, click <strong>Download Custom Styles</strong>.</li>
	<li>Search for <strong>Markdown</strong>.</li>
</ol>
<p>You'll see the section that defines the Markdown styles. For example:</p>
<pre>// @markdown-preview-font-size-h1: 36px;</pre>
<p>The above defines the style that's rendered for the h1 Markdown:</p>
<pre># This is a Heading 1 in Markdown</pre>
<p>Modify the styles you want to change, remove the comment marks on any lines that you've changed (// at the beginning of the line), and then upload the revised <strong>custom.less</strong> file. The platform rebuilds the css based on the uploaded file, and the new styles are effective for both new and revised user-generated Forum entries that use Markdown.</p>
<p>For example, to change the default color for headings to red, find this line:</p>
<pre>// @markdown-preview-headings-color: inherit;</pre>
<p>and change it, as per the example below (you can also use any color values supported by standard CSS):</p>
<pre>@markdown-preview-headings-color: red;</pre>
<p>Then upload the modified file. See <a href="#upload_modified_custom_less">How do I upload the custom.less file after I've updated it?</a></p>
<p>To see the changes immediately, you'll need to clear cache. Active users do not see the changes immediately since the styles are cached for up to 30 minutes. After that point, everyone will see the revised styles.</p>
<p>For more information on modifying custom styles, see <a href="#platform_styles_customize">I want to customize platform styles. What do I do?</a></p>
<p>For more information on the use of Markdown for Forum items in the Community Manager developer portal, see <a href="basics_forums.htm#h_markdown">Using Markdown</a>.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="what_color_scheme_changes_are_supported_on_my_platform_deployment">What color scheme changes are supported on my platform deployment?</h2>
<p>You can change the color scheme for platform elements such as:</p>
<ul>
	<li>Site background color</li>
	<li>Left and top navigation</li>
	<li>Text content area</li>
	<li>Pop-up dialog elements</li>
	<li>Horizontal rules</li>
	<li>Text color of input fields</li>
	<li>Default link colors</li>
</ul>
<p>Color scheme updates are performed by updating the <strong>custom.less</strong> style sheet. For an overview of the process, and instructions, see <a href="#platform_styles_customize">I want to customize platform styles. What do I do?</a></p>
<p><a href="#top">Back to top</a></p>



<h2 id="what_style_sheets_do_i_use_to_update_the_color_scheme_on_my_platform_deployment">What style sheets do I use to update the color scheme of my platform deployment?</h2>
<p>The platform offers two options for downloading the platform style sheet, which is the starting point for customization of platform styles:</p>
<ul>
	<li><strong>Download the default style sheet template, custom_template.less</strong>.
	<p>If you make customizations, and later want to revert, you can do so. Download the template: <strong>More</strong> &gt; <strong>Admin</strong> &gt;<strong>Customization</strong>. Specify the theme, and then click <strong>Download Custom Style Template</strong>. Rename it to <strong>custom.less</strong>. Then upload it: <strong>More</strong> &gt; <strong>Admin</strong> &gt;<strong>Customization</strong>. Specify the theme, and then click <strong>Upload Custom Styles</strong>.</p></li>
	<li><strong>Download the custom style file currently in use</strong>.
	<p>If you haven't yet uploaded customizations, <strong>custom.less</strong> is the same as custom_template.less. If you've already uploaded customizations and are happy with them, but want to make further changes, you can download <strong>custom.less</strong> and build on that (but save a backup copy). In the Community Manager developer portal: <strong>More</strong> &gt; <strong>Admin</strong> &gt;<strong>Customization</strong>. Specify the theme, and then click <strong>Download Custom Styles</strong>.</p></li>
</ul>

<p>Some general points regarding the platform style sheet:</p>
<ul>
	<li>All of the variables and sprite file references in the custom_template.less file are configured with defaults that represent the look and feel of a default platform installation.</li>
	<li>All <strong>custom.less</strong> style sheet variables are commented out. For site elements you want to customize, remove the comment from the element and then customize the variable.</li>
	<li>Color management for icons is accomplished by modifying the Adobe Illustrator file that includes the sprite icons. <a href="assets/default_theme_sprites.zip">Download a ZIP containing the Adobe Illustrator files.</a></li>
</ul>
<p><a href="#top">Back to top</a></p>



<h2 id="how_do_i_download_platform_css">How do I download the platform CSS?</h2>
<p>The platform CSS rules are documented in a file called <strong>custom.less</strong>. To customize platform css, first download the <strong>custom.less</strong> file, then customize the file, and then upload the revised file.</p>
<p>When you upload the <strong>custom.less</strong> file, the platform automatically rebuilds the styles and uses the new rules.</p>
<h4 id="proc_download_custom_less">To download the latest version of the style customization file for the platform (custom.less file)</h4>
<ol>
	<li>Log in as a Site Admin and <a href="site_admin_overview.htm#admin_menu_siteadmin">go to the Admin section</a>.</li>
	<li>Go to <strong>Customization</strong>.</li>
	<li>From the <strong>Theme</strong> drop-down list, choose the theme. For more information, see <a href="site_admin_site.htm#theme_platform_define">What is a platform theme?</a> and <a href="basics_navigation.htm#platform_ui_overview">Platform user interface "theme"</a>.</li>
	<li>Click <strong>Download Custom Styles</strong> to download the customized style sheet, <strong>custom.less</strong>.</li>
	<li>Choose a save location to save the file.</li>
</ol>
<p class="apidoc_note"><strong>Note</strong>: It's a good idea to keep a backup copy of the original file and any customization versions that you implement, as a manual version control. If you're not happy with the results when you upload the new customizations, you can revert to the previous version before troubleshooting.</p>
<p><a href="#top">Back to top</a></p>


<h2 id="upload_modified_custom_less">How do I upload the custom.less file after I've updated it?</h2>
<p>The <strong>More</strong> &gt; <strong>Admin</strong> &gt;<strong>Customization</strong> section includes an <strong>Upload Custom Style</strong> button that allows you to upload the <strong>custom.less</strong> file after you've customized it.</p>
<h4 id="proc_upload_modified_custom_less">To upload the modified custom.less file</h4>
<ol>
	<li>Log in as a Site Admin and <a href="site_admin_overview.htm#admin_menu_siteadmin">go to the Admin section</a>.</li>
	<li>Go to <strong>Customization</strong>.</li>
	<li>From the <strong>Theme</strong> drop-down list, choose the theme. For more information, see <a href="site_admin_site.htm#theme_platform_define">What is a platform theme?</a> and <a href="basics_navigation.htm#platform_ui_overview">Platform user interface &quot;theme&quot;</a>.</li>
	<li>Click <strong>Upload Custom Styles</strong>. </li>
	<li>Go to the location of the modified file and upload it. When you upload the file, the platform styles are automatically rebuilt using the new file. When regeneration is complete a confirmation message is displayed. The <strong>custom.less</strong> file is stored in the \resources\less directory.</li>
	<li>Clear the browser cache and refresh the page to review the changes.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="after_i_update_my_customless_file_how_do_i_apply_the_changes_to_my_platform_deployment">After I update my custom.less file, how do I apply the changes to my platform deployment?</h2>
<p>After you update your <strong>custom.less</strong> file, you can apply the changes to the platform deployment by uploading the modified file. When you upload the file, the site automatically rebuilds the site style sheets and the changes are reflected on the site.
 See <a href="#upload_modified_custom_less">How do I upload the custom.less file after I've updated it?</a> for more information.</p>
<p>If the style sheet and sprite file changes are not visible immediately after the style sheet rebuild process is complete, clear the browser cache and then refresh.</p>
<p class="Note"><strong>Note</strong>: If you want to go back to the default styles at any point, you can always go back to the <strong>custom_template.less</strong> file. See <a href="../customization/cm_customization_202020.htm#s06">Customizing Page Styles</a>.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="how_do_i_rebuild_my_color_scheme_styles_after_i_have_uploaded_the_customless_file">How do I rebuild my color scheme styles after I have uploaded the custom.less file?</h2>
<p>The platform includes a <strong>Rebuild Styles</strong> option that allows you to initiate a rebuild of the platform style sheets. This is primarily used when a platform update is installed that includes style sheet changes.</p>
<p>For example, if an update was applied to the site and the update included new additions to the UI that required style sheet changes; this would mean that the style sheets were not active immediately after the update was completed. In this case, the <strong>Rebuild Styles</strong> option would complete update process by regenerating the style sheets.</p>

<h4 id="proc_rebuild_styles">To rebuild styles in the Community Manager developer portal</h4>
<ol>
	<li>In the Community Manager developer portal, log in as a Site Admin and <a href="site_admin_overview.htm#admin_menu_siteadmin">go to the Admin section</a>.</li>
	<li>Go to <strong>Customization</strong>.</li>
	<li>From the <strong>Theme</strong> drop-down, choose the theme, and then click <strong>Rebuild Styles</strong>.
		<p>It might take a little while for the styles to be rebuilt. When it's done, you'll see the message <strong>Platform style sheets have been successfully regenerated using custom.less.</strong> Clear cache and refresh the page.</p>
	</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="what_is_a_sprite">What is a sprite?</h2>
<p class="Note"><strong>Note</strong>: This content is applicable only to Default Theme (versions prior to 2020.2.0).</p>
<p>A sprite is a two-dimensional image used by the Community Manager developer portal CSS to control the colors in platform default icons and images.</p>
<p>The platform UI includes a series of standard icons that are used for standard components of the UI such as quick filters, help, menu navigation names, and window titles. Although the icons and images cannot themselves be changed, the colors can be changed, as part of UI customization.</p>
<p>In Default Theme, you can customize icons by changing the colors of the sprite files.</p>
<p>Hermosa Theme uses a different approach to customization of icons&#8212;Font Awesome. See <a href="http://fontawesome.io" title="Link to Font Awesome website" target="_blank">http://fontawesome.io</a> (external link).</p>
<p>Hermosa Theme uses sprites only for transaction logs.</p>
<p>When developing your UI customization design, in addition to deciding what colors you want to use on your site, you must also decide what icons and "contrasts" you want, before moving forward with the customization tasks. This task should be part of your site UI design process.</p>
<p>The platform provides a set of sprite files for Default Theme. You can view how the sprite files are specified, in the <strong>custom_template.less</strong> file. Each one is commented with " // path to the image file" and lists a URL that represents the path of the file.</p>
<p>Sprite files should always be uploaded <strong>after</strong> you have uploaded and regenerated your style sheets. For instructions, see <a href="#howto_sprite_file_upload">How do I upload sprite files to the Community Manager developer portal?</a></p>
<p><a href="#top">Back to top</a></p>



<h2 id="how_do_i_modify_sprite_colors">How do I modify sprite colors?</h2>
<p class="Note"><strong>Note</strong>: This content is applicable only to Default Theme (versions prior to 2020.2.0).</p>
<p>During the UI design phase of your platform deployment your brand standards and colors are selected. The site includes a series of icons. The icon design is fixed and part of the site design, but the icon color and contrast can be changed by modifying the sprite files used by the platform icons. The general process for modifying icon colors involves the following steps:</p>
<ul>
	<li>To change icon color and contrast, you'll need to update one or more of a series of sprite files that define the color contrast for platform icons, by modifying the applicable Adobe Illustrator file provided by Akana. <a href="assets/default_theme_sprites.zip">Download a ZIP containing the Adobe Illustrator files.</a></li>
	<li>The process involves selecting the Artboard that includes the icon you want to modify, changing the icon color, and saving the Artboard to a PNG file. The PNG file must then be uploaded to the /resources/theme/{theme_name}/styles/images folder via <strong>More</strong> &gt; <strong>Admin</strong> &gt;<strong>File Manager</strong>, Resources File Manager, to be updated in your platform UI.</li>
	<li>For detailed instructions on how to modify sprite files, see <a href="assets/modify_sprite_colors.pdf" target="_blank">Modifying Sprite Colors</a> (separate PDF file).</li>
	<li>If you save a sprite file to a filename that is not referenced in the custom_template.less file, edit the custom_template.less file and update the path to reflect the new filename. For example, if a particular icon was gray and you wanted it changed to orange, you might save your artwork to a new filename that reflected the color change or you could develop a naming convention using numbers, etc. The following example is an excerpt from a custom_template.less file that illustrates a sprite file URL reference:
		<pre>// path to the image file of 18px sprites of leftnav navigation items that reflect the current section of &quot;subject&quot; details
// @leftnav-active-icons: @icon-active-18px: url(&quot;images/sprites_18_color.png&quot;);
</pre>
</li>
	<li>If you updated a style sheet, use the <strong>Rebuild Styles</strong> option to regenerate the styles before uploading any new sprite files. Note that this function rebuilds all the folders in the /resources/theme/{theme_name}/styles directory. Because of this, new sprite files must be uploaded after the site styles are regenerated.</li>
	<li>If you add a new Artboard to the Adobe illustrator file, or save an existing Artboard with a different name, you must upload the updated sprite files to the platform via <strong>More</strong> &gt; <strong>Admin</strong> &gt;<strong>File Manager</strong>. In the <strong>Resources</strong> section, click <strong>File Manager</strong>. The File Manager window opens at the <strong>resources</strong> folder. Save them in the /resources/theme/{theme_name}/style/images folder. Perform this step after rebuilding styles (<strong>Rebuild Styles</strong> option).</li>
	<li>After styles are regenerated and sprite files are uploaded, clear the browser cache and refresh the page to view the changes.</li>
	<li>For information on uploading sprite files to the platform, see <a href="#howto_sprite_file_upload">How do I upload sprite files to the Community Manager developer portal?</a></li>
</ul>
<p><a href="#top">Back to top</a></p>



<h2 id="howto_sprite_file_upload">How do I upload sprite files to the Community Manager developer portal?</h2>
<p class="Note"><strong>Note</strong>: This content is applicable only to Default Theme (versions prior to 2020.2.0).</p>
<p>If you've updated one or more sprite files, you can create an /images folder in the /resources/theme/{theme_name}/style directory and upload them. Sprite files must be uploaded AFTER you have uploaded your <strong>custom.less</strong> file and have rebuilt the site styles (either automatically as part of the <strong>custom.less</strong> upload process, or manually by executing the <strong>Rebuild</strong> function).</p>

<h4>To upload sprite files to the Community Manager developer portal</h4>
<ol>
	
	<li>Log in as a Site Admin and <a href="site_admin_overview.htm#admin_menu_siteadmin">go to the Admin section.</a></li>
	<li>Go to <strong>File Manager</strong>.</li>
	<li>In the <strong>Resources</strong> section, click <strong>File Manager</strong>. The File Manager window opens at the <strong>resources</strong> folder. Go to the /resources/theme/{theme_name}/style directory. You will see the following default styles which were auto-generated as part of the <strong>custom.less</strong> upload process.
		<p><img src="assets/content_image_file.jpg" alt="" /></p></li>
	<li>Click <strong>New Directory</strong> and assign the name <strong>images</strong>.</li>
	<li>Go to the /images directory.</li>
	<li>Click <strong>Upload</strong>. The <strong>File Upload</strong> dialog box displays. Select the sprite file you would like to upload and click <strong>Open</strong>.</li>
	<li>Click <strong>Upload</strong> to upload the file to the selected directory. Repeat this process until all the sprite files are uploaded.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="sprite_style_update_changes">How do I make my style and sprite file changes visible on my platform deployment after I regenerate styles?</h2>
<p>In most cases, after you regenerate styles and upload your sprite files you must clear the browser cache and refresh the page to view the changes.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="determine_theme_name">How can I determine the theme name?</h2>
<p>For some customization tasks, where you're creating custom files and uploading them to the platform, you'll need to know the theme name for the version of the Community Manager developer portal you're using.</p>
<p>The theme name is determined when the platform is created, so you might not know what it is.</p>
<p>If you're not sure, follow the steps below to check the theme name for your installation.</p>
<h4>To determine the theme name for your installation</h4>
<ol>
	<li>Log in to the Community Manager developer portal as the Site Admin.</li>
	<li>Go to <strong>Customization</strong>.</li>
	<li>In the <strong>Theme</strong> drop-down at the top, click to see what options are available to you. Check the theme name on the list. For a full list of themes, see <a href="site_admin_site.htm#settings_theme_options">What themes are available?</a>
	<p class="Note"><strong>Note</strong>: the list of themes on the Customization page shows the themes that have been created for your installation. It might not include the full list of possible themes.</p></li>
</ol>
<p>Use the applicable value, exactly as it's represented on the list, in your customization tasks.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="customization_hermosa_files">Where do I store customization files for Hermosa theme?</h2>
<p>If you want to customize Hermosa theme, first create the default set of customization files. See <a href="#customization_files_download">How do I download customization files?</a></p>
<p>Note that it is best to keep a base theme version for Admin access, without customization&#8212;clone a theme before customizing. See <a href="#customization_best_practices">Site customization best practices</a>.</p>
<p>The customization files for a specific theme are in a subfolder, named for the theme, in the /resources/theme folder.</p>
<p>For example, for Hermosa theme:</p>
<ul>
	<li>/resources/theme/hermosa/locales/<a href="basics_glossary.htm#gl_custom_en_us_json">custom_en-us.json</a> (for custom code that affects page behavior)</li>
	<li>/resources/theme/hermosa/styles (for custom styles)</li>
	<li>/resources/theme/hermosa/styles/images (for custom images such as a favicon)</li>
</ul>
<p><a href="#top">Back to top</a></p>



<h2 id="howto_upload_css">How do I upload style sheets to the Community Manager developer portal?</h2>
<p>When you upload a new <strong>custom.less</strong> file in the <strong>Custom Styles</strong> section, the /resources/theme/{theme_name}/style directory is automatically created and includes the site default style sheets. Some points to note:</p>
<ul>
	<li>These style sheets cannot be updated using the upload process used for static content because the styles are regenerated each time a new <strong>custom.less</strong> style sheet is uploaded.</li>
	<li>If you want to add new styles to the platform, you must first download the template, custom_template.less, then rename it to <strong>custom.less</strong>, add the new styles to the custom.less file, and upload the modified file. When you upload the revised file in <strong>More</strong> &gt; <strong>Admin</strong> &gt;<strong>Customization</strong>, <strong>Upload Custom Styles</strong>, the new styles are added to the site as part of the rebuild process. For more information and detailed instructions, see <a href="../customization/cm_customization_202020.htm#s06">Customizing Page Styles</a>.</li>
	<li>Only a Site Administrator can update the platform style sheet.</li>
</ul>
<p><a href="#top">Back to top</a></p>



<h2 id="css_upload">How do I upload the API and Online Help content style sheet to the Community Manager developer portal?</h2>
<p>The document.css style sheet contains all the custom styles for both API and Online Help documentation. It is located in the /content/style directory. If you make changes to the document.css file, you can upload it directly to the /content/style directory.</p>
<p class="Note"><strong>Note</strong>: This style sheet is not affected by the <strong>custom.less</strong> style sheet regeneration process and will not be changed or overwritten when a new <strong>custom.less</strong> file is uploaded. </p>
<h4>To upload a modified document.css style sheet to the platform</h4>
<ol>
	
	<li>Log in as a Site Admin and <a href="site_admin_overview.htm#admin_menu_siteadmin">go to the Admin section.</a></li>
	<li>Go to <strong>File Manager</strong>.</li>
	<li>In the <strong>Content</strong> section, click <strong>File Manager.</strong></li>
	<li>Go to /content/style. You will see a directory similar to the following:
		<p><img src="assets/file_manager_document_style_sheet.jpg" alt="" /></p></li>
	<li>Click <strong>Upload</strong>. The <strong>File Upload</strong> dialog box displays. Select the document.css file and click <strong>Open</strong>.</li>
	<li>To upload the file to the selected directory, click <strong>Upload</strong>. If you receive an overwrite message click <strong>OK</strong>.
</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="custom_fonts_overview">How do I customize fonts in the Community Manager developer portal?</h2>
<p>You can customize any of the fonts used in the Community Manager developer portal user interface. You'll need to complete the high-level steps below.</p>
<h4 id="proc_custom_fonts">To customize fonts in the Community Manager developer portal: high-level steps</h4>
<ol>
	<li>Identify the specific CSS rules you want to customize, using developer tools in the user interface.</li>
	<li>Determine the fonts you want to use and whether you want to reference or upload the fonts.</li>
	<li>Download the platform style file. See <a href="#how_do_i_download_platform_css">How do I download the platform CSS?</a></li>
	<li>Update the <strong>custom.less</strong> file to use the new fonts, in one of two ways:
<ul>
			<li>Referencing an external font file: see <a href="#custom_fonts_reference_external">How do I customize fonts by referencing an external font?</a></li>
			<li>Uploading font files: see <a href="#custom_fonts_uploaded">How do I customize fonts by uploading font files?</a></li>
		</ul>
	</li>
	<li>Import the revised CSS. See <a href="#upload_modified_custom_less">How do I upload the custom.less file after I've updated it?</a></li>
	<li>Refresh your browser and review the results.</li>
</ol>
<p>The steps are essentially the same for Hermosa Theme and Simple Developer theme, with the exception of the file locations for uploading the revised files. For information on the file locations for customization of Hermosa theme, see <a href="#customization_hermosa_files">Where do I store customization files for Hermosa theme?</a></p>
<p><a href="#top">Back to top</a></p>



<h2 id="custom_fonts_reference_external">How do I customize fonts by referencing an external font?</h2>
<p class="Note"><strong>Note</strong>: this topic only covers the steps for referencing the external font in the <strong>custom.less</strong> file. For the full high-level font customization procedure, see <a href="#custom_fonts_overview">How do I customize fonts in the Community Manager developer portal?</a> above.</p>
<p>When you reference an external font, you have to add code in the downloaded <strong>custom.less</strong> file to do two things:</p>
<ol>
	<li><a href="#custom_fonts_referenced_step_1">Reference the external font file using an <strong>@import</strong> statement</a>.</li>
	<li><a href="#custom_fonts_referenced_step_2">Indicate which styles will use the new font</a>.</li>
</ol>
<p class="apidoc_note"><strong>Note</strong>: It's a good idea to keep a backup copy of the original file and any customization versions that you implement, as a manual version control. If you're not happy with the results when you upload the new customizations, you can revert to the previous version before troubleshooting.</p>

<h4 id="custom_fonts_referenced_step_1">Reference the external font file using an <strong>@import</strong> statement</h4>
<p>Locate your <strong>custom.less</strong> file and reference the custom font by providing the import URL, as shown below. This example references one of Google's cloud-hosted fonts, &quot;Nixie One.&quot; Add this statement at the top of the file:</p>
<pre>@import url(https://fonts.googleapis.com/css?family=Nixie+One);</pre>

<h4 id="custom_fonts_referenced_step_2">Indicate which styles will use the new font</h4>
<p>Modify the CSS rules in the <strong>custom.less</strong> file to use the new font. The examples below illustrate modifying the font in two different ways:</p>
<ol>
	<li>Replacing all platform styles with the new font.</li>
	<li>Using the new font on specific elements.</li>
</ol>
<p><strong>Example 1</strong>: Replacing all platform styles with the new font, including headings, menus, error messages, and all other copy elements in the Community Manager developer portal.</p>
<pre>@main-font: &quot;Nixie One&quot;, Arial, Helvetica, sans-serif;</pre>
<p><strong>Example 2</strong>: Using the new font on all Header elements and left navigation links.</p>

<pre>.headerPanel {
  font-family: 'Nixie One', cursive;
}
.soa-ui-cm-leftnav-item {
  font-family: 'Nixie One', cursive;
}</pre>

<p>When you've modified the file, the next step is to upload the revised file and review the results. For the full high-level font customization procedure, see <a href="#proc_custom_fonts">To customize fonts in the Community Manager developer portal: high-level steps</a> above.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="custom_fonts_uploaded">How do I customize fonts by uploading font files?</h2>
<p class="Note"><strong>Note</strong>: this topic only covers the steps for uploading the fonts and referencing the uploaded fonts in the <strong>custom.less</strong> file. For the full high-level font customization procedure, see <a href="#custom_fonts_overview">How do I customize fonts in the Community Manager developer portal?</a> above.</p>
<p>When you customize fonts by uploading font files, you have to do three things:</p>
<ol>
	<li><a href="#custom_fonts_uploaded_step_1">Upload the font files to the correct location</a>.</li>
	<li><a href="#custom_fonts_uploaded_step_2">Update the custom.less file to reference the new fonts in the location you uploaded them to, using <strong>@font-face</strong></a>.</li>
	<li><a href="#custom_fonts_uploaded_step_3">Add or modify CSS rules to use the new font</a>.</li>
</ol>


<h4 id="custom_fonts_uploaded_step_1">Upload the font files to the correct location</h4>
<p>The platform looks for the font files in a location relative to the <strong>supplement.css</strong> or <strong>style.css</strong> files, which are stored in the <strong>/resources/theme/{theme_name}/style</strong> folder.</p>
<p>It's important to upload the files in the right place, and then use the correct relative path when referencing the font files in the <strong>custom.less</strong> file. The examples below use a font named <strong>advent-pro-v4-latin</strong>, and the fonts are stored in a <strong>/fonts/advent-pro-v4-latin</strong> subfolder. To do this you'd need to complete these steps:</p>
<ol>
	<li>Prepare the font ZIP file externally. See <a href="#preparing_zip">Prepare the fonts ZIP file</a> below.</li>
	<li>Log in as a Site Admin and <a href="site_admin_overview.htm#admin_menu_siteadmin">go to the Admin section</a>.</li>
	<li>Go to <strong>File Manager</strong>.</li>
	<li>In the <strong>Resources</strong> section, click <strong>File Manager</strong>. The File Manager window opens at the <strong>resources</strong> folder.</li>
	<li>In the File Manager, click down to the <strong>/theme/{theme_name}/style</strong> folder.</li>
	<li>Create a <strong>fonts</strong> folder and navigate down into the folder.</li>
	<li>Choose <strong>Upload a ZIP Archive</strong> to upload the <strong>fonts.zip</strong> file that you prepared in Step 1. The fonts are uploaded and are immediately available.</li>
	<li>Next, update the <strong>custom.less</strong> file to use the new fonts. See <a href="#custom_fonts_uploaded_step_2">Update the custom.less file to reference the new fonts in the location you uploaded them to, using @font-face</a> below.</li>
</ol>


<h4 id="preparing_zip">Prepare the fonts ZIP file</h4>
<p>You can create folders and upload files individually, but you can also upload everything in one ZIP file, which is quicker.</p>
<p>For the example above, let's say that you are using one custom font, advent-pro-v4-latin, which includes five individual files for variations of the font.</p>
<p>On your local drive, create a folder that uses the font name, <strong>advent-pro-v4-latin</strong>, and download the files inside it.</p>
<p>Then, create a ZIP file named <strong>fonts.zip</strong> and copy the <strong>advent-pro-v4-latin folder</strong> and its contents into it. Then, you can upload the <strong>fonts.zip</strong> file in step 5 above.</p>

<h4 id="custom_fonts_uploaded_step_2">Update the custom.less file to reference the new fonts in the location you uploaded them to, using @font-face</h4>
<p>The next step is to use the css attribute of <strong>@font-face</strong> to use the new font. Use the example below as a guide.</p>
<p>In this example, you can see that the paths reference the /fonts/advent-pro-v4-latin font files that you uploaded in the previous step. Whatever fonts you are using, make sure the paths are correct for the name and location of your own font files.</p>
<p>Font locations should always be loaded, and referenced, as relative to the <strong>/resources/theme/{theme_name}/style</strong> folder.</p>
<pre>
@font-face {
  font-family: 'Advent Pro';
  font-style: normal;
  font-weight: 400;
  src: url('./fonts/advent-pro-v4-latin-regular.eot'); /* IE9 Compat Modes */
  src: local('Advent Pro Regular'), local('AdventPro-Regular'),
  url('./fonts/advent-pro-v4-latin/advent-pro-v4-latin-regular.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
  url('./fonts/advent-pro-v4-latin/advent-pro-v4-latin-regular.woff2') format('woff2'), /* Super Modern Browsers */
  url('./fonts/advent-pro-v4-latin/advent-pro-v4-latin-regular.woff') format('woff'), /* Modern Browsers */
  url('./fonts/advent-pro-v4-latin/advent-pro-v4-latin-regular.ttf') format('truetype'), /* Safari, Android, iOS */
  url('./fonts/advent-pro-v4-latin/advent-pro-v4-latin-regular.svg#AdventPro') format('svg'); /* Legacy iOS */
}</pre>


<h4 id="custom_fonts_uploaded_step_3">Add or modify CSS rules to use the new font</h4>
<p>The final preparation step is to update the <strong>custom.less</strong> file so that specific CSS rules use the new font.</p>
<p><strong>Tip</strong>: If you're not sure which rules to change, use the browser developer tools to inspect the elements so you can identify the CSS rule names. There are also comments in the <strong>custom.less</strong> file to indicate how the various elements are used.</p>
<p>The example below uses the new font on all Header elements and left navigation links.</p>
<pre>
.headerPanel{
  font-family: 'Advent Pro', sans-serif;
}
.soa-ui-cm-leftnav-item{
  font-family: 'Advent Pro', sans-serif;
}</pre>
<p>The next step is to upload the revised file to the Community Manager developer portal and see the results: see <a href="#upload_modified_custom_less">How do I upload the custom.less file after I've updated it?</a></p>


<h3>Custom fonts: Additional information</h3>
<p>Many fonts are available, free or for purchase, online. Below are a couple of suggestions for free fonts:</p>
<ul>
	<li>Fonts hosted by Google: <a href="https://www.google.com/fonts" target="_blank">https://wwhttps://www.google.com/fontsw.google.com/fonts</a>.</li>
	<li>Sample fonts that you can download and host locally: <a href="https://google-webfonts-helper.herokuapp.com/fonts" target="_blank">https://google-webfonts-helper.herokuapp.com/fonts</a> (Google Webfonts Helper).</li>
</ul>
<p><a href="#top">Back to top</a></p>



<hr class="divide_hr" />
<h2 id="h_branding">Branding the Community Manager developer portal:</h2>



<h2 id="how_do_i_configure_a_custom_logo">How do I configure a custom logo?</h2>
<p>The process of adding a custom logo to the platform includes configuring your logo to comply with the logo file requirements, specifying the logo filename in the template, and uploading it to the platform.</p>
<p>For logo file requirements and detailed instructions, refer to <a href="../customization/cm_customization_202020.htm#s05_01">Logo</a> in the customization doc.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="custom_header">How do I customize the page header?</h2>
<p>The page header shows at the top of every site page. By default, it includes links to main areas of the application: Dashboard, APIs, Apps, as well as the user's profile.</p>
<p>For detailed instructions on how to customize the page header, with examples, refer to <a href="../customization/cm_customization_202020.htm#s05_04">Header</a> in the customization doc.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="custom_footer">How do I customize the page footer?</h2>
<p>The page footer shows at the bottom of every site page. By default, it includes links to general information (About, Contact, Terms, Privacy) and a copyright statement. There is a thin line between the page and the footer.</p>
<p>For detailed instructions on how to customize the page footer, with examples, refer to <a href="../customization/cm_customization_202020.htm#s05_05">Footer</a> in the customization doc.</p>
<p>When you're done, upload the files into the Community Manager developer portal. Follow the steps below.</p>


<h3 id="custom_files_uploading">Uploading the customization files to the Community Manager developer portal</h3>
<p>When you have your customization files ready, the next step is to upload them into the Community Manager developer portal.</p>
<p>Some points to note:</p>
<ul>
	<li>The file must have the exact path, filename, and extension given here.</li>
	<li>Some of the folders in the path might not exist. If they are not there, create them in the File Manager. Create one folder, then go into it, then create the next, until the path exactly matches the path given. Then, upload the file.</li>
</ul>
<h4 id="proc_upload_customization_files">To upload the customization files to the Community Manager developer portal</h4>
<ol><li>Log in as a Site Admin and <a href="site_admin_overview.htm#admin_menu_siteadmin">go to the Admin section</a>.</li>
	<li>Go to <strong>File Manager</strong>.</li>
	<li>In the <strong>Resources</strong> section, click <strong>File Manager</strong>. The File Manager window opens at the <strong>resources</strong> folder.</li>
	<li>Go to the correct location in the file system, creating folders if needed. If you create a folder, make sure the name and capitalization are exactly as given here. Examples:
		<ul>
			<li>footer.htm: <strong>/resources/theme/default/templates/footer/footer.htm</strong>.</li>
			<li>CustomApplicationResources.properties: <strong>/resources/theme/default/i18n/CustomApplicationResources.properties</strong>.</li>
		</ul>
	</li>
	<li>Exit the File Manager by clicking on the page.</li>
	<li>Clear the cache and refresh the page to see the new footer.</li>
	<li>Test to make sure the links are accurate and everything looks right.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="how_do_i_modify_the_default_icon_for_apps_or_apis">How do I modify the default icon for apps, APIs, or other resources?</h2>
<p>The platform includes default icons for apps, APIs, and other resources. You can specify new defaults by uploading new icons of the same filename, size, and type to the folder where the default files are stored.</p>
<p>The folder structure is not visible unless custom assets have already been created. If you have to create the folder structure, make sure you use the exact naming and spelling given below. Essentially you are creating the following files, two sizes for each resource for which you want to customize the icon.</p>
<p>For detailed instructions on how to modify the default icons, refer to <a href="../customization/cm_customization_202020.htm#s05_06">Default Icons</a> in the customization doc.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="howto_favicon_modify">How do I modify the favicon for the Community Manager developer portal?</h2>
<p>The <a href="basics_glossary.htm#gl_favicon">favicon</a> is the small icon displayed on the browser tab and possibly in other parts of the browser. You can customize the icon that displays for your installation of the developer platform.</p>
<p>For detailed instructions on how to modify the favicon, refer to <a href="../customization/cm_customization_202020.htm#s05_02">Favicon</a> in the customization doc.</p>
<p><a href="#top">Back to top</a></p>




<hr class="divide_hr" />
<h2 id="h_page_customization">Customizing Site Pages:</h2>




<h2 id="custom_left_menubar">How do I customize the left menu bar?</h2>
<p>The left menu bar for all default pages in the API Platform user interface is controlled by the <strong>left_nav.json</strong> file.</p>
<p>For detailed instructions on how to customize the left menu bar for Bonita and Hermosa themes, refer to <a href="../customization/cm_customization_202020.htm#s05_02">Left Menu</a> in the customization doc.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="custom_support_page">How do I customize the Support page?</h2>
<p>In the Community Manager developer portal user interface, the help link to the right of the top navigation bar leads to the Support page. Here, you can add content that's specific to your version of the Community Manager developer portal. You can also include a link to basic information about the Community Manager developer portal, such as signup: <a href="basics__toc.htm" title="Basics" target="_blank">Basics</a>).</p>
<p>The URL for the Support page is:</p>
<pre>{hostname}/#/{tenantid}/home/support</pre>
<p>For detailed instructions on how to customize this page, refer to <a href="../customization/cm_customization_202020.htm#s04_03">Support Page</a> in the customization doc.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="howto_portal_landing_page_modify">How do I modify the landing page for the Community Manager developer portal?</h2>
<p>To modify the landing page, you must download it, modify it offline, and then upload it to the same location.</p>
<p>For detailed instructions, refer to <a href="../customization/cm_customization_202020.htm#s04_01">Landing Page</a> in the customization doc.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="diff_page_after_login">How do I customize so that users are taken to a different page after login?</h2>
<p>You can customize the API Platform user interface so that after logging in, rather than being taken to the Action Dashboard, which is the usual behavior, users are taken to a different page that you specify.</p>
<p>For detailed instructions, refer to <a href="../customization/cm_customization_202020.htm#s04_02">Login Entry Page</a> in the customization doc.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="tc_cors_init_js_send_requests_directly">Can Test Client use CORS to send the requests to the API endpoint directly without using the Forward Proxy?</h2>
<p>Yes. You can configure the platform to enable or disable the <a href="basics_glossary.htm#gl_cors">CORS</a> policy for the purposes of apps testing APIs in the Test Client testing tool.</p>
<p>Regardless of whether the CORS policy is attached to a specific API, this policy is always turned off for the purposes of testing with the Test Client tool.</p>
<p>If you want to turn the CORS policy on as a default in Test Client, you will need to create a file named <strong>init.js</strong> with some custom lines of code, as given below; if you already have a custom <strong>init.js</strong> file, add the lines of code at the end of the existing file.</p>

<h4>To override the default setting for Same Origin Policy (CORS Policy) in Test Client</h4>
<p><strong>Step 1: Check whether you have an existing init.js file</strong></p>
<ol>
	<li>Log in as a Site Admin and <a href="site_admin_overview.htm#admin_menu_siteadmin">go to the Admin section.</a></li>
	<li>Go to <strong>File Manager</strong>.</li>
	<li>In the <strong>Resources</strong> section, click <strong>File Manager</strong>. The File Manager window opens at the <strong>resources</strong> folder.</li>
	<li>Navigate down to <strong>resources/theme/{themename}/SOA/Dev/extensions</strong>. If the folder structure doesn't exist, click <strong>New Directory</strong> to create a new subfolder, name it, and then click the new folder name to change directories down one level into the new one. Then create the next one until the folder structure exists and you are in the <strong>extensions</strong> folder.
		<p class="Note"><strong>Note</strong>: Make sure the folder naming, including sequence and capitalization, is exactly as above.</p>
	</li>
	<li>If the folder structure already exists, and there is an <strong>init.js</strong> file in the <strong>extensions</strong> folder, download the file so you can modify it offline.</li>
</ol>
<p><strong>Step 2: Create or update the init.js file</strong></p>
<ol>
	<li>Do either of the following:
		<ul>
			<li><strong>If there is an existing init.js file</strong>: Modify the file you downloaded above, adding the lines of code given in <a href="#p_modifying_custom_file_init_js">Modifying the custom init.js file</a> below.</li>
			<li><strong>If there is no existing init.js file</strong>: Create the file and add the code as below.</li>
		</ul>
	</li>
	<li>Customize the <strong>init.js</strong> file to the required settings. For instructions, review the comments in the code.</li>
</ol>
<p><strong>Step 3: Upload the customized init.js file</strong></p>
<ol>
	<li>From the <strong>extensions</strong> folder, click <strong>Upload a File</strong>. Go to the location of your custom <strong>init.js</strong> file and upload the file. If you kept the theme name that is the default, it will look like this:
		<ul>
			<li> resources/theme/simpledev/SOA/Dev/extensions/init.js</li>
		</ul>
	</li>
	<li>To update the browser, clear the cache and refresh the page. You might even need to close the browser and re-open to see the update.</li>
</ol>
<p>The default setting for the CORS policy, and the default behavior of Test Client with regard to whether the message is sent to the proxy or directly to the API endpoint, changes according to the value you specified in the <strong>init.js</strong> file. The file itself includes inline documentation.</p>

<h4 id="p_modifying_custom_file_init_js">Modifying the custom init.js file</h4>
<p>If no customizations were already added in your installation, this file will not exist in your file structure. In that case, you can create the file using the contents below. If the file already exists, you'll need to add the lines of code given below, and then customize as needed.</p>
<p>The code for the default CORS settings for Test Client is shown below. Inline documentation explains the settings you can change. There are two settings:</p>
<ul>
	<li><strong>allowOverride</strong>: <strong>true</strong> by default. If you change it to <strong>false</strong>, Test Client will not display the security settings dialog relating to the same origin policy, and therefore developers will not be able to change the setting.</li>
	<li><strong>defaultOption</strong>: <strong>cmForwardProxy</strong> by default, indicating that the message is sent by Test Client to the proxy and then forwarded to the API endpoint. If you change this setting to <strong>cors</strong>, indicating that the API is expected to support cross-origin resource sharing, the message is sent directly to the API endpoint; the forward proxy is not used.</li>
</ul>
<pre>SOA.Framework.Common.Map.config({
  "testClientSettings" : {
    "policySettings" : {
      "sameOriginPolicy" : {
        // possible values true, false
        // true - will display dialog
        // false - will not display dialog
        // By default this is set to true
        "allowOverride" : true,
        "cors" : {
          // possible values "cors" and "cmForwardProxy"
          // cors - directly access endpoint
          // cmForwardProxy - proxy through Forward Proxy
          // By default this is set to "cmForwardProxy"
          "defaultOption" : "cmForwardProxy"
        }
      }
    }
  }
});</pre>
<p><a href="#top">Back to top</a></p>



<h2 id="where_download_metadata_json">What are the metadata.json and widget_factory.json files, and how do I use them for customization?</h2>
<p>If you're performing UI customization tasks, you'll need to modify these files:</p>
<ul>
	<li><strong>metadata.json</strong>: a file that describes the layout of the pages and the corresponding URL for each page. If there is no customization in place yet, <strong>metadata.json</strong> contains only a single pair of brackets: <strong>{}</strong>. For an example of customization, see <a href="../customization/cm_customization_202020.htm#s11_01_01" title="link to customization content on Akana docs site">Example 1: Creating a New Static View in Hermosa Theme</a>.</li>
	<li><strong>widget_factory.json</strong>: A JSON file that describes the CanJS view corresponding to each widget in <strong>metadata.json</strong>. If there is no customization in place yet, <strong>widget_factory.json</strong> contains only a single pair of brackets: <strong>{}</strong>. For an example of customization, see <a href="../customization/cm_customization_202020.htm#s11_01_02" title="link to customization content on Akana docs site">Example 2: Creating a New Dynamic View with a Controller in Hermosa Theme</a>.</li>
</ul>
<p>First create the files, and them upload them to the location shown below:</p>
<ul>
	<li>/resources/theme/{theme_name}/SOA/CM/extensions/metadata.json</li>
	<li>/resources/theme/{theme_name}/SOA/CM/extensions/metadata.json</li>
	<li>    /resources/theme/{theme_name}/SOA/CM/extensions/widget_factory.json</li>
</ul>
<h4>To upload the metadata.json and widget_factory.json files to the Community Manager developer portal</h4>
<ol>
	<li>Log in as a Site Admin and <a href="site_admin_overview.htm#admin_menu_siteadmin">go to the Admin section.</a></li>
	<li>Go to <strong>File Manager</strong>.</li>
	<li>In the <strong>Resources</strong> section, click <strong>File Manager</strong>. The File Manager window opens at the <strong>resources</strong> folder.</li>
	<li>Go to the /resources/theme/{theme_name}/SOA/CM/extensions directory. If the folder structure isn't there, create each folder in turn, go into it, and then create the next one until you have the structure. Make sure you get the capitalization exactly correct as shown here.</li>
	<li>In the /resources/theme/{theme_name}/SOA/CM/extensions folder, upload <strong>metadata.json</strong> and <strong>widget_factory.json</strong>.</li>
	<li>Exit out of File Manager.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="howto_resources_upload">How do I upload resources to the Community Manager developer portal?</h2>
<p>You can upload platform resources, such as avatars and other images, stylesheets, and custom pages, in the same way that you upload platform content. There is a different button to access the file structure for platform resources.</p>

<h4>To upload resources to the platform</h4>
<ol>
	
	<li>Log in as a Site Admin and <a href="site_admin_overview.htm#admin_menu_siteadmin">go to the Admin section.</a></li>
	<li>Go to <strong>File Manager</strong>.</li>
	<li>In the <strong>Content</strong> section, click <strong>File Manager</strong>.</li>
	<li>Go to the folder to which you want to upload resources. If you are modifying default platform files for the first time, you'll need to create the folder structure. To do this, go to Customization and choose Generate Customization Files. For more information, see <a href="#site_admin_customization_overview">What functions are available to the Site Administrator on the Customization page?</a>
<p class="Note"><strong>Note</strong>: You might get a message that the file exists. This is expected if you are replacing a default platform file. Click <strong>OK</strong>.</p></li>
</ol>
<p><a href="#top">Back to top</a></p>



<hr class="divide_hr" />



<h2 id="related_topics">Related Topics</h2>
<div class="relatedlinks" id="cmhelp_site_admin">
<ul>
	<li><a href="site_admin__toc.htm">Site Admin Summary Page</a></li>
	<li><a href="site_admin_overview.htm">Site Admin Responsibilities</a></li>
	<li><a href="site_admin_agreements.htm">Platform Legal Agreement</a></li>
	<li><a href="site_admin_challenges.htm">Challenges</a></li>
	<li><a href="site_admin_config.htm">Configuration</a></li>
	<li><a href="site_admin_country_codes.htm">Country Codes</a></li>
	<li><a href="site_admin_customization.htm">Customization and Branding</a></li>
</ul>
<ul>
	<li><a href="site_admin_file_manager.htm">File Manager</a></li>
	<li><a href="site_admin_logins.htm">Logins</a></li>
	<li><a href="site_admin_settings.htm">Settings</a></li>
<li><a href="site_admin_site.htm">Site Settings</a></li>
	<li><a href="site_admin_site_admins.htm">Managing Site Admins</a></li>
	<li><a href="site_admin_users.htm">Managing User Accounts</a></li>
	<li><a href="site_admin_workflows.htm">Workflows</a></li>
</ul>
<ul>
	<li><a href="site_admin_promotion.htm">Promotion Feature</a></li>
	<li><a href="site_admin_tc.htm">Test Client</a></li>
	<li><a href="site_admin_es.htm">Elasticsearch Configuration</a></li>
	<li><a href="basics_glossary.htm">Glossary of Terms</a></li>
</ul></div>