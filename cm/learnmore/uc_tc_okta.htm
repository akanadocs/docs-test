---
layout: page
title: Use Case - OAuth with Okta | API Admin | Akana API Platform Help
description: Step by step instructions, and illustrations, for configuring an Okta account, Okta OAuth Provider domain, and app and API, so that you can test your API in Test Client using Okta as the OAuth Provider.
product: cm
category: learn
sub-nav-class: API Admin
weight: 2621
type: page
nav-title: Use Case - API testing in Test Client with Okta
---
<h1 id="top">Use Case: API testing in Test Client with Okta</h1>
<p>This use case provides step by step instructions, and illustrations, for testing your API in Test Client with OAuth. It includes instructions for configuring the app and the authentication server in Okta, configuring the Okta OAuth Provider domain in the developer portal, and setting up the app and API, so that you can test your API in Test Client using Okta as the OAuth Provider.</p>
<p><strong>Note</strong>: This procedure uses version 2018.0.8 on the Akana SaaS platform.</p>
<hr class="divide_hr" />


<h2 style="color: gray;">Table of Contents</h2>
<ol class="table_of_contents">
	<li><a href="#uc_okta_overview">Overview</a></li>
	<li><a href="#uc_okta_okta_app">Setting up the application in Okta</a></li>
	<li><a href="#uc_okta_okta_authserver">Setting up the authorization server in Okta</a></li>
	<li><a href="#uc_okta_dp_domain">Setting up the domain in the developer portal</a></li>
	<li><a href="#uc_okta_dp_api">Setting up the API in the developer portal</a></li>
	<li><a href="#uc_okta_dp_api_policies">Adding the policies to the API</a></li>
	<li><a href="#uc_okta_dp_api_oauthdetails">Setting up the API OAuth Details</a></li>
	<li><a href="#uc_okta_dp_app">Setting up the app in the developer portal</a></li>
	<li><a href="#uc_okta_dp_contract">Creating the contract in the developer portal</a></li>
	<li><a href="#uc_okta_dp_tc_test">Testing in Test Client</a></li>
	<li><a href="#uc_okta_dp_api_metrics">Viewing the API metrics</a></li>
	<li><a href="#troubleshooting">Troubleshooting</a></li>
</ol>
<hr class="divide_hr" />



<h2 id="uc_okta_overview">Overview</h2>
<p>This use case provides end to end steps so that you can set up an application and an authorization server on Okta, set up a domain in the developer portal, create and configure an app and API, request and activate a contract, and then use Test Client to test the API. You'll see the OAuth token, generated by the authorization server.</p>
<p>This use case assumes the following:</p>
<ul>
	<li>You have an instance of the developer portal, with Business Admin permissions so that you can add a domain, an API, and an app.</li>
	<li>You have an Okta account. You can create a free account, for testing purposes, at <a href="https://developer.okta.com/" title="Link to sign-on page for an Okta developer account" target="_blank">https://developer.okta.com/</a>.</li>
	<li>The Okta certificate is trusted by the platform. If you're on the SaaS platform, Okta is trusted already. Otherwise, you'll need to get the Site Admin to upload the Okta certificate to the underlying infrastructure. See note in <a href="#uc_okta_dp_domain">Setting up the domain in the developer portal</a> below.</li>
</ul>
<p><a href="#top">Back to top</a></p>



<h2 id="uc_okta_okta_app">Setting up the application in Okta</h2>
<p>You must set up an application in Okta and set up an app in the developer portal. Okta generates credentials for the application; you can then assign those to your app in the developer portal. At runtime, Test Client sends the credentials to Okta to authenticate the app that is requesting access to the API. Okta authenticates and therefore trusts the app.</p>

<h4 id="proc_okta_okta_app">To set up the application in Okta</h4>
<ol>
	<li>Log in to your Okta account.</li>
	<li>From the top menu, choose <strong>Applications</strong>, and then click <strong>Add Application</strong>.
	<p><img src="uc_okta_assets/uc_okta_okta_addapp.png" alt="Adding an application in Okta" /></p></li>
	<li>Choose <strong>Web</strong> and then click <strong>Next</strong>.</li>
	<li>In <strong>Application Settings</strong>, set up the following values:
		<ul>
			<li>A unique name for your application. Example: <strong>acmepaymentscorp_okta_app</strong>.</li>
			<li><strong>Login redirect URI</strong>: The URL for your developer portal instance, up to the .com, and then the following for the platform OAuth login redirect URI: <strong>/api/devconsole/oauth/redirect</strong>. In this example, <strong>https://rcoaless.apiportal.akana.com/api/devconsole/oauth/redirect</strong>.</li>
			<li><strong>Grant Types Allowed</strong>: select them all.</li>
		</ul>
		</li>
	<li>Click <strong>Done</strong>.</li>
	<li>In the <strong>Client Credentials</strong> section (below General Settings), shown below, copy the <strong>Client ID</strong> and <strong>client secret</strong> values to a safe place. You'll use those to set up the app in the developer portal (see <a href="#uc_okta_dp_app">Setting up the app in the developer portal</a> below).
		<p><img src="uc_okta_assets/uc_okta_okta_credentials.png" alt="Save the credentials" /></p></li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="uc_okta_okta_authserver">Setting up the authorization server in Okta</h2>
<p>The next step is to set up an OAuth authorization server in Okta. When you set this up and then provide the resulting well-known configuration URL to your domain on the developer profile, APIs can use this domain to authenticate with the server and get a token. The developer portal can then use the token to call the API.</p>
<p>An example of authorization server settings in Okta is shown below.</p>
<p><img src="uc_okta_assets/uc_okta_okta_authserver.png" alt="Okta: Authorization Server settings" /></p>

<h4 id="proc_okta_okta_auth_server">To set up the authorization server in Okta</h4>
<ol>
	<li>Log in to your Okta account.</li>
	<li>From the top menu, choose <strong>API</strong>, and then choose <strong>Authorization Servers</strong>.</li>
	<li>Click <strong>Add Authorization Server</strong>.</li>
	<li>In the <strong>Add Authorization Server</strong> window, set up the following values:
		<ul>
			<li><strong>Name</strong>: A unique name for your authorization server. Example: <strong>acmepaymentsokta</strong>.</li>
			<li><strong>Audience</strong>: <strong>api://default</strong></li>
			<li><strong>Description (optional)</strong>: A short description. In this example: <strong>acmepaymentscorp Okta auth server</strong>.</li>
			</ul>
		</li>
	<li>Click <strong>Save</strong>.</li>
	<li>Copy the metadata URI. You'll use this to set up the API OAuth Details in the developer portal (see <a href="#uc_okta_dp_api_oauthdetails">Setting up the API OAuth Details</a> below).</li>
	<li>Click the <strong>Scopes</strong> tab.</li>
	<li>Click <strong>Add Scope</strong> to add a custom scope, and specify the following values:
		<ul>
			<li><strong>Name</strong>: all_get_methods</li>
			<li><strong>Description</strong>: all GET operations</li>
			<li><strong>Metadata</strong>: check the box.</li>
			</ul>
		<p>An example is shown below.</p>
		<p><img src="uc_okta_assets/uc_okta_okta_authserver_addscope.png" alt="Adding a scope" /></p>
		</li>
	<li>Click <strong>Create</strong>.</li>
	<li>Click <strong>Add Scope</strong> to add a second custom scope, and specify the following values:
		<ul>
			<li><strong>Name</strong>: all_methods</li>
			<li><strong>Description</strong>: all operations</li>
			<li><strong>Metadata</strong>: check the box. </li>
			</ul>
		</li>
	<li>Click <strong>Create</strong>.</li>
	<li>Conditional: If your Authorization Server is not the default for your Okta account&#8212;for example, if it's a second Authorization Server&#8212;you'll also need to add a policy. If you're using the default Authorization Server, the default policy is already there. Follow the steps below.
		<ul>
			<li>Click <strong>Access Policies</strong> as shown below. The example below is the default Authorization Server.
				<p><img src="uc_okta_assets/uc_okta_okta_authserver_policy.png" alt="In the Okta Authorization Server, checking the policies" /></p></li>
			<li>Check that the default rule is present as shown above. If it isn't, click <strong>Add Policy</strong> as shown below.
			<p><img src="uc_okta_assets/uc_okta_okta_authserver_policy_add.png" alt="In the Okta Authorization Server, adding a policy" /></p></li>
			<li>In the <strong>Add Policy</strong> window, provide values for <strong>Name</strong> and <strong>Policy</strong>. In the <strong>Assign to</strong> field, make sure <strong>Assign to All Clients</strong> is selected, and then click <strong>Create Policy</strong>.</li>
			<li>Click <strong>Add Rule</strong>.</li>
			<li>Assign a name; in this example, <strong>Default Rule</strong>. The default values are fine. Click <strong>Create Rule</strong>.</li>
		</ul>
		</li>
</ol>
<p>That completes the Okta setup. The next steps are in the developer portal.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="uc_okta_dp_domain">Setting up the domain in the developer portal</h2>
<p><strong>Note</strong>: domain setup is a Business Admin task.</p>
<p>For full instructions on setting up an External OAuth Provider domain, see <a href="bus_admin_domains_oidc.htm">External OAuth Provider Domain</a>.</p>
<p id="cert_upolad"><strong>Certificate Upload</strong>: This procedure requires that you upload information from the well-known configuration URL in Tab 3, <strong>Provider</strong>. The platform only allows upload if the URL is trusted. If you're working on the SaaS platform, the Okta URL is already trusted. If you're using an on-prem installation, the Okta certificate must be set up in the underlying infrastructure, Policy Manager. Ask your Site Admin to complete this step. For instructions, see <a href="../../ag/security_config/trusted_ca_certificates.html#trusted_ca_certificate_import">Import Trusted CA Certificates</a>.</p>
<h4 id="proc_okta_dp_domain">To set up the Okta domain</h4>
<ol>
	<li>Log into the developer portal as the Business Admin.</li>
	<li>Go to <strong>More</strong> &gt; <strong>Admin</strong> &gt; <strong>Domains</strong> and click <strong>Add</strong>.</li>
	<li>Choose <strong>External OAuth Provider domain</strong>.</li>
	<li>On Tab 1, <strong>Details</strong>, specify a name. In this example: <strong>rcoaless_eoap_okta</strong>.</li>
	<li>On Tab 2, <strong>Configure</strong>:
		<ul>
			<li>For <strong>Provider Type</strong>, choose <strong>Other</strong>.</li>
			<li>Put in the well-known configuration URL from the authorization server you configured in your Okta account, and click <strong>Load</strong>, as shown below. In this example: <strong>https://dev-964561.okta.com/oauth2/acmepaymentsokta/.well-known/oauth-authorization-server.</strong>
<p><img src="uc_okta_assets/uc_okta_dp_domain_tab2.png" alt="Domain setup: adding the configuration URL" /></p>
<p><strong>Note</strong>: If you see the error <strong>Loading Configuration Failed</strong>, first test the URL in the browser. If you see the well-known configuration values in the browser, the certificate must be uploaded before loading the configuration. See <a href="#cert_upolad">Certificate Upload</a> above. If you don't see the configuration in the browser, there is an error in the URL.</p></li>
			</ul>
		</li>
	
	<li>Click <strong>Next</strong>.</li>
	<li>On Tab 3, <strong>Provider</strong>, the values are pre-filled from the well-known configuration URL. In the <strong>Scopes Supported</strong> section, make sure that the custom scopes you set up in <a href="#proc_okta_okta_auth_server">To set up the authorization server in Okta</a> are there. An example is shown below.
	<p><img src="uc_okta_assets/uc_okta_dp_domain_tab3.png" alt="Domain setup: checking the scopes" /></p>
		</li>
	<li>Click <strong>Next</strong>.</li>
	<li>On Tab 4, <strong>Access Token Validation</strong>, check the <strong>JWT Bearer Access Token</strong> box.</li>
	<li>Provide the following values:
		<ul>
			<li><strong>Issuer</strong>: the value from your Okta account, Authorization Server settings, <strong>Issuer</strong> field. In this example: <strong>https://dev-964561.okta.com/oauth2/acmepaymentsokta</strong>.</li>
			<li><strong>Audience</strong>: the value from your Okta account, Authorization Server settings, Audience field. In this example: <strong>api://default</strong>.</li>
			<li><strong>ClientID Claim Name</strong>: cid</li>
			<li><strong>Scope Claim Name</strong>: scp</li>
			<li><strong>Resource Owner UID Claim Name</strong>: sub</li>
		</ul></li>
		<li>In the <strong>Signing Keys</strong> section, choose <strong>Asymmetric Key Inline</strong> and then choose <strong>JWK Set URL</strong>.</li>
		<li>Click <strong>Next</strong>, and then click <strong>Finish</strong>. For this provider, nothing is needed on the <strong>Extensions</strong> tab.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="uc_okta_dp_api">Setting up the API in the developer portal</h2>
<p>The next step is to create the API. You can then set up the API OAuth details, assign the policies, create a contract with an app, and test in Test Client.</p>
<p>For this use case, we're using the Swagger Petstore API, uploading the Swagger 2.0 API description document.</p>

<h4 id="proc_okta_dp_api">To create an API</h4>
<ol>
	<li>From the Plus menu, choose <strong>Add API</strong>.
		<p><strong>Note</strong>: In 2019.1.0, go to <strong>APIs</strong> &gt; <strong>Add API</strong>.</p>
	</li>
	<li>Click <strong>I have a Swagger/RAML/WSDL/WADL document</strong>, click <strong>File</strong>, and then click <strong>Browse</strong>.</li>
	<li>Browse to the location of the Swagger file, upload it, and then click <strong>Save</strong> to create the API.</li>
	<li>This example uses the <a href="uc_okta_assets/swagger_petstore.json">Petstore API Swagger 2.0 JSON</a>. You can use the same JSON file or another.</li>
	<li>In the top section, click Edit and modify the API name from the default. In this example: <strong>Swagger_Petstore_Okta_test</strong>.</li>
	<li>Click <strong>Save</strong>.</li>
</ol>
<p>For more information, see <a href="apiadmin_api_add.htm">Adding an API</a>.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="uc_okta_dp_api_policies">Adding the policies to the API</h2>
<p>Now that the API is created, it's time to add policies so that you can apply OAuth to the API. It's also a good idea, since this is a test scenario, to add detailed auditing so that you can view detailed transaction logs.</p>

<h4 id="proc_uc_okta_dp_api_policies">To add policies to the API</h4>
<ol>
	<li>In the developer portal, go to<!-- #BeginLibraryItem "/Library/hdr_myapis_nav_all.lbi" -->&nbsp;<strong>APIs</strong> &gt; <strong>My APIs</strong> &gt; choose API &gt;&nbsp;<!-- #EndLibraryItem --><strong>Implementations</strong>.</li>
	<li>Click through on the implementation (in this example, <!-- #BeginLibraryItem "/Library/environ_live.lbi" -->Live<!-- #EndLibraryItem -->) and go to the Policies section.</li>
	<li>Click <strong>Edit</strong>.</li>
	<li>Add the following policies, as shown below:
		<ul>
			<li>Detailed Auditing</li>
			<li>OAuth Security</li>
		</ul>
		<p><img src="uc_okta_assets/uc_okta_dp_api_policies.png" alt="Adding the policies to the API" /></p>
		</li>
	
	<li>Click <strong>Save</strong>.</li>
	<li>Click <strong>Go Back to Implementations</strong>.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="uc_okta_dp_api_oauthdetails">Setting up the API OAuth Details</h2>
<p>Now that the API is created, and you have the policies assigned, you can set up the specific details so that this API can use OAuth.</p>

<h4 id="proc_uc_okta_dp_api_oauthdetails">To set up the API OAuth details</h4>
<ol>
	<li>In the developer portal, go to<!-- #BeginLibraryItem "/Library/hdr_myapis_nav_all.lbi" -->&nbsp;<strong>APIs</strong> &gt; <strong>My APIs</strong> &gt; choose API &gt;&nbsp;<!-- #EndLibraryItem --><strong>Details</strong>.</li>
	<li>From the drop-down at the top right, choose <strong>OAuth Details</strong>, as shown below.
	<p><img src="uc_okta_assets/uc_okta_dp_api_dropdown_oauthdetails.png" alt="API OAuth Details: setting up the scopes" /></p></li>
	<li>On Tab 1, <strong>Provider</strong>, choose the OAuth provider domain. In this example: <strong>rcoaless_eoap_okta</strong>.</li>
	<li>Click <strong>Next</strong>.</li>
	<li>On Tab 2, <strong>Scope Mapping</strong>, choose <strong>API-Wide Scope Mapping</strong>.</li>
	<li>Click <strong>Select</strong>, and choose the two custom scopes that you added in Okta (see <a href="#uc_okta_okta_authserver">Setting up the authorization server in Okta</a> above). An example is shown below.
		<p><img src="uc_okta_assets/uc_okta_dp_api_oauthdetails.png" alt="API OAuth Details: setting up the scopes" /></p>
	</li>
	<li>Click <strong>Confirm</strong> and then click <strong>Save</strong>.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="uc_okta_dp_app">Setting up the app in the developer portal</h2>
<p>The next step is to create an app that you can use for testing the API in Test Client. You must assign the App ID and Shared Secret values that are assigned to your application in your Okta account, so that Okta can authenticate the app when you make the API call through Test Client.</p>

<h4 id="proc_uc_okta_dp_app">To create an app</h4>
<ol>
	<li>From the Plus menu, choose <strong>Add App</strong>.
	<p><strong>Note</strong>: In 2019.1.0, go to <strong>Apps</strong> &gt; <strong>Add App</strong>.</p></li>
	<li>Provide the following minimum values:
		<ul>
			<li><strong>App Name</strong>: In this example, <strong>acmepaymentscorp_Okta_test</strong></li>
			<li><strong>Version ID</strong>: In this example, <strong>v1</strong></li>
			<li><strong>App ID</strong>: The Client ID from your Okta account. See <a href="#uc_okta_okta_app">Setting up the application in Okta</a> Step 7.</li>
			<li><strong>Shared Secret</strong>: The Client Secret from your Okta account. See <a href="#uc_okta_okta_app">Setting up the application in Okta</a> Step 7.</li>
		</ul>
		</li>
	
	<li>Click <strong>Finish</strong>.</li>
</ol>
<p>For more information about adding an app, see <a href="app_create_app_add.htm">Creating and Managing Apps</a>.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="uc_okta_dp_contract">Creating the contract in the developer portal</h2>
<p>The app developer requests a contract with the API, and the API developer approves it. In this use case, as the Business Admin, you can perform both actions.</p>
<h4>To create the contract</h4>
<ol>
	<li>In the developer portal, go to<!-- #BeginLibraryItem "/Library/hdr_myapis_nav_all.lbi" -->&nbsp;<strong>APIs</strong> &gt; <strong>My APIs</strong> &gt; choose API &gt;&nbsp;<!-- #EndLibraryItem --><strong>Overview</strong>.</li>
	<li>At the top right, click <strong>Access</strong>.</li>
	<li>In Tab 1, <strong>Select App</strong>, click the button to choose the app. In this example, <strong>acmepaymentscorp_Okta_test</strong>. </li>
	<li>Click <strong>Next</strong>.</li>
	<li>In Tab 2, <strong>Endpoint</strong>, choose the endpoint. In this example, <strong>Live</strong> is the only endpoint.</li>
	<li>Click <strong>Save</strong>.</li>
</ol>

<h4>To activate the contract</h4>
<ol>
	<li>In the developer portal, go to<!-- #BeginLibraryItem "/Library/hdr_myapis_nav_all.lbi" -->&nbsp;<strong>APIs</strong> &gt; <strong>My APIs</strong> &gt; choose API &gt;&nbsp;<!-- #EndLibraryItem --><strong>Apps</strong>.</li>
	<li>Find the app, and at the right, click the drop-down arrow to see the list of valid actions, as shown below.
	<p><img src="uc_okta_assets/uc_okta_dp_api_activatecontract.png" alt="Activating the contract" /></p></li>
	<li>Choose <strong>Activate</strong>.</li>
	<li>Enter a comment (optional), and click <strong>Confirm</strong>.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="uc_okta_dp_tc_test">Testing in Test Client</h2>
<p>Once everything is set up, you can test in Test Client, get the OAuth token, and get the API response.</p>
<p>To test in Test Client</p>
<ol>
	<li>In the developer portal, go to<!-- #BeginLibraryItem "/Library/hdr_myapis_nav_all.lbi" -->&nbsp;<strong>APIs</strong> &gt; <strong>My APIs</strong> &gt; choose API &gt;&nbsp;<!-- #EndLibraryItem --><strong>Test Client</strong>.</li>
	<li>At the top right, under Operation, choose this operation: <strong>GET:/pet/{petid} - getPetById</strong>.</li>
	<li>In the <strong>Headers</strong> section, for the <strong>Accept</strong> header, change the value to <strong>application/json</strong> (optional so that the response is in JSON format rather than XML).</li>
	<li>In the <strong>Parameters</strong> section, for the <strong>tags</strong> parameter, provide a value in the <strong>Value</strong> column.
		<p><strong>Note</strong>: If you provide a valid value, you'll get an accurate response. If the API call is successful, but the ID is invalid, you'll get an HTTP 404 response. To get a valid response, you could set up a pet, with an ID, on the Swagger Petstore website: <a href="http://petstore.swagger.io/" title="Link to Swagger Petstore API page" target="_blank">http://petstore.swagger.io/</a>.</p></li>
	<li>Click the <strong>Setup</strong> button. You'll see the App ID and Shared Secret from your Okta account, that you set up on the <strong>Edit API</strong> page. An example is shown below.
		<p><img src="uc_okta_assets/uc_okta_dp_tc_setup.png" alt="Test Client: Setup" /></p>
	</li>
	<li>Click the <strong>Security</strong> button. You'll see the OAuth Security Policy page. Click <strong>Get Token</strong>. The token is returned. An example is shown below.
<p><img src="uc_okta_assets/uc_okta_dp_tc_security_oauth.png" alt="Test Client: getting the OAuth token" /></p>
	</li>
	<li>When you have the token, click <strong>Next</strong> and then, at the Same Origin Policy Page, click <strong>Finish</strong>.</li>
	<li>Click <strong>Invoke</strong>. The API response is returned. The example from this use case is shown below.
	<p><img src="uc_okta_assets/uc_okta_dp_tc_result.png" alt="Test Client: getting the OAuth token" /></p>
	</li>
</ol>
<p>That's the end of the use case. OAuth was applied to the API call, and the developer portal validated the app credentials, called the OAuth provider, got the OAuth token, and used the OAuth token to get the API response from the API endpoint.</p>
<p>You could invoke the API a few times and look at the resulting metrics; see <a href="#uc_okta_dp_api_metrics">Viewing the API metrics</a> below. When testing your API with Test Client, it's a good idea to have the Detailed Auditing policy attached to the API, as in this example, so that you can look at the logs. In a live environment, in most cases, a Detailed Auditing policy would not be used.</p>
<p>For general documentation about using Test Client, see <a href="api_admin_testing_tc.htm">API Testing with Test Client</a>.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="uc_okta_dp_api_metrics">Viewing the API metrics</h2>
<p>If you attached an auditing policy to the API in <a href="#uc_okta_dp_api_policies">Adding the policies to the API</a> above (Step 4), you can view additional information about the messages.</p>
<p>If you run into errors, looking at the logs is one way to view more information about what's happening.</p>
<p>From the API left menu, choose <strong>Analytics</strong> &gt; <strong>Logs</strong>. Find the transaction in the log, and click the arrow to the left to expand the information.</p>
<p>An example is shown below.</p>
<p><img src="uc_okta_assets/uc_okta_dp_metrics_info.png" alt="API analytics: Info tab" /></p>
<p>This example is a GET request, so there is no message body.</p>
<p>Click the Headers tab to view the message headers.</p>
<p><img src="uc_okta_assets/uc_okta_dp_metrics_headers.png" alt="API analytics: Headers tab" /></p>
<p>You can also click the magnifying glass on each part of the message image to view the outbound and inbound content. An example is shown below.</p>
<p><img src="uc_okta_assets/uc_okta_dp_metrics_message.png" alt="API analytics: Viewing the message content" /></p>
<p><a href="#top">Back to top</a></p>



<h2 id="troubleshooting">Troubleshooting</h2>
<p>If you get errors, you can:</p>
<ul>
	<li>Go carefully over the procedure, making sure you didn't miss any steps.</li>
	<li>Check the table below for specific errors.</li>
	<li>Review the Test Client troubleshooting section for help. See <a href="api_admin_testing_tc.htm#troubleshooting_tc_api">Troubleshooting in Test Client</a>.</li>
	<li>Look at the logs in API &gt; <strong>Analytics</strong> &gt; <strong>Logs</strong> in case you can see the error there: see <a href="#uc_okta_dp_api_metrics">Viewing the API metrics</a> above.</li>
</ul>
<table class="doctable">
	<thead>
		<tr>
			<th>Error message or scenario</th>
			<th>Possible reason</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>Token is not returned</td>
			<td><p>Mismatch of scopes. Steps you can check:</p>
				<ol>
					<li>Check that custom scopes are set up for the Okta Authorization Server (<a href="#uc_okta_okta_authserver">Setting up the authorization server in Okta</a> above, Step 8).</li>
					<li>Re-upload the domain configuration via the configuration URL, and check that the custom scopes are there (<a href="#uc_okta_dp_domain">Setting up the domain in the developer portal</a> above, Step 5).</li>
					<li>In the API OAuth Details, check that the custom scopes are selected (<a href="#uc_okta_dp_api_oauthdetails">Setting up the API OAuth Details</a> above, Step 6).</li>
				</ol></td>
		</tr>
		<tr>
			<td><p>On clicking <strong>Get Token</strong>, this error:</p>
				<p>{ "HttpStatus": 403, "ErrorCode": "access_denied", "ErrorDescr": "Policy evaluation failed for this request, please check the policy configurations."}</p></td>
			<td>A default policy is not set up for the Okta Authorization Server. See <a href="#uc_okta_okta_authserver">Setting up the authorization server in Okta</a> above, Step 12).</td>
		</tr>
	</tbody>
</table>
<p><a href="#top">Back to top</a></p>



<hr class="divide_hr" />



<h2 id="related_topics">Related Topics</h2>
<div class="relatedlinks" id="api_admin">
<!-- #BeginLibraryItem "/Library/relatedtopics_api_admin.lbi" -->
<ul>
	<li><a href="apiadmin_getting_started.htm">Getting Started for API Developers</a></li>
	<li><a href="apiadmin_overview.htm">API Administration: Overview</a></li>
	<li><a href="api_admin_tutorial.htm">Tutorial (API Provider)</a></li>
	<li><a href="api_admin_management.htm">API Admin Management</a></li>
	<li><a href="bus_api_admin_forum.htm">Forum Moderation</a></li>
	<li><a href="apiadmin_promotion.htm">Promoting an API</a></li>
</ul>
<ul>
	<li><a href="apiadmin_api_add.htm">Adding an API</a></li>
	<li><a href="apiadmin_api_design.htm">Add or Modify an API Using API Designer</a></li>
	<li><a href="apiadmin_a_d_d_support.htm">API Description Language Support</a></li>
	<li><a href="apiadmin_implementations.htm">Manage API Implementations</a></li>
	<li><a href="api_admin_testing_tc.htm">API Testing with Test Client</a></li>
	<li><a href="uc_tc_okta.htm">Use Case: API testing in Test Client with Okta</a></li>
	<li><a href="api_admin_managing_contracts.htm">Managing Contracts for your API</a></li>
	<li><a href="apiadmin_monitoring.htm">Monitoring API Analytics</a></li>
</ul>
<ul>
	<li><a href="api_admin_api_publishing.htm">API Visibility, Licenses, and Settings</a></li>
	<li><a href="apiadmin_api_phys_svc.htm">Working with Physical Services</a></li>
	<li><a href="api_admin_oauth_support.htm">OAuth Support</a></li>
	<li><a href="api_admin_content_guidelines.htm">Content Development Guidelines</a></li>
	<li><a href="api_admin_documentation_maintenance.htm">API Documentation Maintenance</a></li>
	<li><a href="api_admin_documentation_tagging.htm">API Documentation Tagging</a></li>
	<li><a href="api_admin_legal_agreement_maintenance.htm">Legal Agreement Maintenance</a></li>
	<li><a href="basics_glossary.htm">Glossary of Terms</a></li>
</ul>
<!-- #EndLibraryItem -->
</div>