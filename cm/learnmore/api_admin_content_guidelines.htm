---
layout: page
title: Content Development Guidelines | API Admin | Akana API Platform Help
description: Guidelines that API providers can use to manage API content such as API documentation and legal agreements.
product: cm
category: learn
sub-nav-class: API Admin
weight: 2622
type: page
nav-title: Content Development Guidelines
---
<h1 id="top">Content Development Guidelines</h1>
<p>Guidelines that API providers can use to manage API content such as API documentation and legal agreements.</p>
<p><strong>Note</strong>: For information about tagging API documentation for visibility by different audiences, see <a href="api_admin_documentation_tagging.htm">API Documentation Tagging</a>.</p>
<div class = "divider1"></div>



<h2 style="color: gray;">Table of Contents</h2>

<h4 style="color: gray;"><a href="#h_cm_general_info">Content Management General Information:</a></h4>
<ol class="table_of_contents">
	<li><a href="#what_document_management_tasks_can_i_perform_in_the_platform">What document management tasks can I perform in the platform?</a></li>
	<li><a href="#what_are_the_general_html_coding_guidelines">What are the general HTML coding guidelines?</a></li>
	<li><a href="#platform_reset_css">What are reset.css and base.css and why would I use them?</a></li>
	<li><a href="#does_the_platform_require_that_html_files_be_saved_in_a_specific_code_format">Does the platform require that HTML files be saved in a specific code format?</a></li>
</ol>


<h4 style="color: gray;"><a href="#h_api_documentation">API Documentation:</a></h4>
<ol class="table_of_contents">
	<li><a href="#what_api_documentation_publishing_options_does_the_platform_provide">What API documentation publishing options does the platform provide?</a></li>
	<li><a href="#what_document_styles_can_i_use_for_api_documentation">What document styles can I use for API documentation?</a></li>
	<li><a href="#can_i_add_other_types_of_content_to_my_api_documentation">Can I add other types of content to my API documentation?</a></li>
	<li><a href="#how_do_i_edit_html_page_content_for_api_doc">How do I edit HTML page content for API documentation?</a></li>
	<li><a href="#who_can_edit_api_and_legal_agreement_content">Who can edit API and legal agreement content?</a></li>
	<li><a href="#how_do_i_organize_my_api_and_legal_agreement_documentation_files">How do I organize my API and legal agreement documentation files?</a></li>
	<li><a href="#how_do_i_zip_my_api_documentation_files">How do I upload my API documentation in a ZIP file?</a></li>
	<li><a href="#can_i_link_to_external_site">Can I link to an external site?</a></li>
	<li><a href="#what_style_sheets_do_i_use_for_my_html_api_documentation">What style sheets do I use for my HTML API documentation?</a></li>
	<li><a href="#how_do_i_set_the_default_api_documentation_page_using_a_parameter_file">How do I set the default API documentation page using a parameter file?</a></li>
	<li><a href="#can_i_upload_existing_api_documentation_and_use_it_in_the_platform">Can I upload existing API documentation and use it in the platform?</a></li>
	<li><a href="#how_do_i_upload_my_api_documentation">How do I upload API documentation?</a></li>
	<li><a href="#how_do_i_update_api_and_legal_agreement_documentation">How do I update API and legal agreement documentation I've added to the platform?</a></li>
	<li><a href="#how_do_i_test_updated_api_documentation">How do I test updated API documentation?</a></li>
	<li><a href="#how_do_i_configure_my_api_documentation_so_its_searchable_in_the_platform">How do I configure my API documentation so it's searchable in the platform?</a></li>
</ol>



<h4 style="color: gray;"><a href="#h_linking_in_api_documentation">Linking in API Documentation:</a></h4>
<ol class="table_of_contents">
	<li><a href="#link_same_file_default">How do I link to another location in the same document in Default Theme/Hermosa Theme?</a></li>
	<li><a href="#link_another_file_same_folder_default">How do I link to a content file in the same folder in Default Theme/Hermosa Theme?</a></li>
	<li><a href="#link_another_file_subfolder_default">How do I link to a content file in a subfolder in Default Theme/Hermosa Theme?</a></li>
	<li><a href="#link_another_file_parent_folder_default">How do I link to a content file in a parent folder in Default Theme/Hermosa Theme?</a></li>
	<li><a href="#link_to_platform_page_default">How do I link to a platform content page in Default Theme/Hermosa Theme?</a></li>
	<li><a href="#link_to_subfolder_doc_page_default">How do I link to a content page in a platform subfolder in Default Theme/Hermosa Theme?</a></li>
	<li><a href="#external_link_default">How do I link to an external site or document in Default Theme/Hermosa Theme?</a></li>
	<li><a href="#another_api_doc_file_default">How do I link to another API documentation file in the documentation folder in Default Theme/Hermosa Theme?</a></li>
	<li><a href="#when_do_i_need_to_reference_taglibminjs">When do I need to reference the <strong>tag_lib.min.js</strong> file?</a></li>
	<li><a href="#how_do_i_reference_taglibminjs">How do I reference the <strong>tag_lib.min.js</strong> file?</a></li>
</ol>



<h4 style="color: gray;"><a href="#h_using_file_explorer">Using File Explorer:</a></h4>
<ol class="table_of_contents">
	<li><a href="#what_is_file_explorer_and_what_functionality_does_it_offer">What is File Explorer and what functionality does it offer?</a></li>
	<li><a href="#how_do_i_add_a_file_to_the_api_documentation_table_of_contents">How do I add a file to the API documentation table of contents?</a></li>
	<li><a href="#how_do_i_set_the_default_api_documentation_page_using_file_explorer">How do I set the default API documentation page using File Explorer?</a></li>
	<li><a href="#how_do_i_set_the_file_display_name_in_the_api_documentation_table_of_contents">How do I set the file display name in the API documentation table of contents?</a></li>
	<li><a href="#how_do_i_rename_a_file_in_file_explorer">How do I rename a file in File Explorer?</a></li>
	<li><a href="#how_do_i_view_a_file_in_file_explorer">How do I view a file in File Explorer?</a></li>
	<li><a href="#how_do_i_delete_a_file_using_file_explorer">How do I delete a file using File Explorer?</a></li>
</ol>


<h4 style="color: gray;"><a href="#h_using_swagger">Using Swagger:</a></h4>
<ol class="table_of_contents">
	<li><a href="#what_is_swagger_and_how_does_it_work">What is Swagger and how does it work?</a></li>
	<li><a href="#what_are_the_swagger_controls_and_how_do_i_edit_page_content">What are the Swagger controls and how do I edit page content?</a></li>
	<li><a href="#what_style_sheets_do_i_use_for_my_swagger_documentation">What style sheets do I use for my Swagger documentation?</a></li>
	<li><a href="#can_i_mix_swagger_and_html_files">Can I mix Swagger and HTML files in my API documentation?</a></li>
</ol>


<h4 style="color: gray;"><a href="#h_legal_agreements">Legal Agreements:</a></h4>
<ol class="table_of_contents">
	<li><a href="#how_do_i_upload_my_api_legal_agreements">How do I upload my API legal agreements?</a></li>
	<li><a href="#what_style_sheets_do_i_use_for_my_api_legal_agreements">What style sheets do I use for my API legal agreements?</a></li>
</ol>




<div class = "divider1"></div>
<h2 id="h_cm_general_info">Content Management General Information:</h2>




<h2 id="what_document_management_tasks_can_i_perform_in_the_platform">What document management tasks can I perform in the platform?</h2>
<p>Within the platform, editing of API and Legal Agreement content is limited to:</p>
<ul>
	<li>Uploading API and legal agreement documents via the <strong>File Explorer</strong>.</li>
	<li>Defining name and description of legal agreements.</li>
	<li>Activating / deactivating visibility of legal agreements in API wizards.</li>
	<li>Downloading legal agreement usage reports.</li>
</ul>
<p>Development of document content must be performed outside the platform, with the exception of Swagger API documentation which is entered directly into the templates in the <strong>Documentation</strong> page for your API.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="what_are_the_general_html_coding_guidelines">What are the general HTML coding guidelines?</h2>
<p>Following the guidelines below will help ensure your fileset is consistent in structure, with clean, well-formed HTML that will look correct when viewed under varying circumstances such as in different browsers and in search results.</p>
<p>Recommendations:</p>
<ul>
	<li>Use an HTML editor that doesn&rsquo;t add extra tags into your code. Working with HTML in a word processing program, for example, can result in complex HTML with many extra tags. This can be difficult to work with and to debug when needed. There are free HTML editors available for download, and there are more sophisticated tools available for purchase that provide a user interface and a WYSIWYG display without adding complexity to the HTML. Invest in a tool that delivers clean HTML.</li>
	<li>Use CSS for styling in your documents. Use a CSS file that's external to your documents, and upload it with them. Reference the platform's <strong>reset.css</strong> and <strong>base.css</strong> files. See <a href="#platform_reset_css">What are reset.css and base.css and why would I use them?</a> below.</li>
	<li>Include the &lt;head&gt; tag with links to the CSS. If you use reset.css (see below) and a custom css for your authored API documentation, the &lt;head&gt; tags in your documents would look something like the following:
<pre>
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Document Title&lt;/title&gt;
&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/resources/style/reset.css&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/resources/style/base.css&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;customapidoc.css&quot; /&gt;
&lt;/head&gt;

&lt;body&gt;
&lt;p&gt;{Your file content goes here}&lt;/p&gt;
&lt;/body&gt;

&lt;/html&gt;
</pre>
</li>
	<li>Include an appropriate page title tag (&lt;title&gt;) within the &lt;head&gt; tag in each file. Although the page title doesn&rsquo;t show up when the page is viewed in the platform, it&rsquo;s picked up by the Search feature and displayed with the search results. For example:
		<pre>&lt;title&gt;XXX API | Page Title&lt;/title&gt;</pre></li>
	<li>The main heading for any documentation page is &lt;h2&gt;. Use of &lt;h1&gt; is reserved by the platform; &lt;h2&gt; is the top heading level for API docs.</li>
	<li>If you need to make sure your content displays correctly for users of Internet Explorer version 9 or earlier, add the following three lines below the stylesheet links:
		<pre>&lt;!--[if lte IE 9]&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;/resources/style/ie.css&quot;&gt;
&lt;![endif]--&gt;</pre>
	<p>For more information, see <a href="api_admin_documentation_maintenance.htm#ie_9_compatibility">How do I make sure my API documentation is rendered correctly for users of Internet Explorer 9 and below?</a></p></li>
	</ul>
<p><a href="#top">Back to top</a></p>




<h2 id="platform_reset_css">What are reset.css and base.css and why would I use them?</h2>
<p>There are two reasons you might want to reference the platform <strong>reset.css</strong> and <strong>base.css</strong> stylesheets:</p>
<ol>
	<li><a href="#reset_best_pracices">Best practices</a>: <strong>Reset.css</strong> resets styles to a baseline that's consistent across browsers. It's a good practice to reset styles and then define styles, so that the user experience for users reading your API doc is consistent across browsers.</li>
	<li><a href="#reset_doc_tagging">Document tagging</a>: The various document tags used by the platform are defined in <strong>base.css</strong>. If you don't reference base.css, the doc tags will not work; if you don't use reset.css, they might not have a consistent appearance.</li>
</ol>

<h4 id="reset_best_pracices">Best practices</h4>
<p>When you're authoring your API documentation, it's a good idea to use consistent layout and styles so help ensure a good user experience.</p>
<p>You'll probably want to define your own styles. You can do that in a cascading style sheet (CSS) that's external to your files, and upload the CSS with your files, making sure that the relative location of the CSS is valid for the uploaded files. For example, you could store it in the same folder as the authored API doc content, or in a subfolder.</p>
<p>You can also reference the stylesheets already available on the platform. The platform's <strong>reset.css</strong> resets all styles to a consistent baseline. There are inconsistencies in the way that different browsers interpret basic styles; resetting to a consistent baseline, and building from there, helps ensure a consistent user experience across different browsers.</p>
<p>A second css file, <strong>base.css</strong>, adds some basic values, such as paragraph spacing and heading styles, as well as added functionality for platform documentation pages.</p>
<p>When you reference <strong>reset.css</strong>, some default styles such as the bulleted and numbered styles are also reset. If your documents include these elements, if you reference reset.css you'll need to define them in your API document CSS.</p>
<p>If you reference <strong>reset.css</strong> and your own custom css in your document files, the &lt;head&gt; tag of your files might look something like the below:</p>
<pre>
&lt;head&gt;
&lt;title&gt;Document Title&lt;/title&gt;
&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/resources/style/reset.css&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/resources/style/base.css&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;customapidoc.css&quot; /&gt;
&lt;/head&gt;</pre>
<p>If you use reset.css, you'll probably want to define basic styles in your own custom css. For example, your definitions for your ol (ordered list, numbered) and ul (unordered list, bulleted) might look something like the example below:</p>
<pre>ul {
    list-style: disc outside none;
}
ol {
    list-style: decimal outside none;
}

ul, ul li, ol, ol li {
    margin-left: 13px;
    padding-left: 8px;
}
</pre>
<p>If you need to add compatibility for users of IE9 and below, you can include a conditional comment to an additional stylesheet. For details and an example, see <a href="api_admin_documentation_maintenance.htm#ie_9_compatibility">How do I make sure my API documentation is rendered correctly for users of Internet Explorer 9 and below?</a></p>
<p>You can also reference <a href="assets/apidocsample.css">an example API doc CSS file</a>.</p>

<h4 id="reset_doc_tagging">Doc tagging</h4>
<p>The platform offers several tags that you can use to add functionality to your content; for example: </p>
<ul>
	<li><a href="api_admin_documentation_maintenance.htm#inline_tc_in_authored_api_doc">Including Test Client inline in your authored API documentation</a></li>
	<li><a href="api_admin_documentation_maintenance.htm#generated_api_doc_inline_in_authored_api_doc">Including generated API doc inline in your authored API documentation</a></li>
</ul>
<p>These tags rely on there being valid links to reset.css and base.css within the &lt;head&gt; tag of the HTML file. If base.css is not there, the tags will not work; if reset.css is not there, they might work but not look right. Both need to be there, with reset.css being listed first.</p>
<p>For more information on the range of tags available and how to use them in your API documentation, see <a href="api_admin_documentation_maintenance.htm">API Documentation Maintenance</a>.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="does_the_platform_require_that_html_files_be_saved_in_a_specific_code_format">Does the platform require that HTML files be saved in a specific code format?</h2>
<p>Yes, all HTML files must be saved in UNIX code format. This requirement is to ensure optimum compatibility across operating systems.</p>
<p>One method you can use to verify if your files have the correct format is to select <strong>View</strong> &gt; <strong>Document Properties</strong> in TextPad. If the &quot;Code set&quot; is <strong>UTF-8</strong>, and &quot;File type&quot; is <strong>UNIX</strong>, then the code format your file is saved as is correct.</p>
<p><img src="assets/codeformat.jpg" alt="" /></p>
<p>Note that you must also add the following meta data tag in your &lt;head&gt; tag to indicate that the file code set is UTF-8:</p>
<pre>&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;</pre>
<p><a href="#top">Back to top</a></p>




<div class = "divider1"></div>
<h2 id="h_api_documentation">API Documentation:</h2>




<h2 id="what_api_documentation_publishing_options_does_the_platform_provide">What API documentation publishing options does the platform provide?</h2>
<p>After adding an API, you can add documentation for your API using one or more of the following methods:</p>
<ul>
	<li><strong>HTML</strong>&#8212;You can upload HTML documentation and associated support files (for example, graphics) using the <strong>File Explorer</strong>.</li>
	<li><strong>Methods</strong>&#8212;You can add documentation for RESTful services using the Swagger UI add-on that is integrated into the<!-- #BeginLibraryItem "/Library/hdr_myapis_nav_all.lbi" -->&nbsp;<strong>APIs</strong> &gt; <strong>My APIs</strong> &gt; choose API &gt;&nbsp;<!-- #EndLibraryItem --><strong>Documentation</strong> section. When you add a RESTful service using the Add a New API Wizard, the system adds the methods/operations defined in the API to a pre-defined system template composed of Swagger HTML, JavaScript, and css assets. You can then add your documentation content and configure what aspects of the API documentation you would like to show or hide based on the state of your current API.</li>
	<li><strong>Reference</strong>&#8212;If you already have API documentation developed and published to a website, you can create and upload a custom topic that links to the reference documentation.</li>
</ul>
<p><a href="#top">Back to top</a></p>



<h2 id="what_document_styles_can_i_use_for_api_documentation">What document styles can I use for API documentation?</h2>
<p>API documentation content should be defined using standard HTML and CSS files. In choosing styles, make sure you&rsquo;re aware of any corporate or team guidelines, and be consistent across your file set so that users see the same styles and typographical conventions as they read your content.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="can_i_add_other_types_of_content_to_my_api_documentation">Can I add other types of content to my API documentation?</h2>
<p>As well as formatted HTML for your content, and CSS files to control the visual display, you can upload some other types of content and link to them from your HTML files. For example, you can use the following:</p>
<ul>
	<li><strong>Images</strong>: Upload any image files supported by browsers, such as JPG and PNG, and put them in the same folder as your HTML files, or in a subfolder.</li>
	<li><strong>Flash objects</strong>: Upload SWF files and place them in your HTML files or set them up as external links to be viewed in a separate browser window. For example, here&rsquo;s a code sample that illustrates how to link a training video done in Flash:
	<pre>&lt;a href=&quot;filename.swf&quot; target=&quot;_blank&quot;&gt;Training video&lt;/a&gt; </pre>
<p>The extra property after the filename, target=&quot;_blank&quot;, tells the browser to open the file in a new window instead of displaying the content in the current window (the platform UI).</p></li>
	<li><strong>ZIP files</strong>: These are particularly useful if you&rsquo;re offering an SDK, or if you want to offer your API documentation as a download as well as making it available in the platform. You can upload a ZIP file via the <strong>File Explorer</strong> and then link to it from an HTML page. Be sure to use the <strong>Upload a File</strong> option; if you choose <strong>Upload a Zip Archive</strong>, the file is automatically unzipped when you upload it.</li>
	<li><strong>PDF files</strong>: Upload PDF files and link to them from your HTML files. Note: When you link to a PDF file, be sure to specify a target window of &ldquo;new window&rdquo; (target=_blank).</li>
</ul>
<p><a href="#top">Back to top</a></p>



<h2 id="how_do_i_edit_html_page_content_for_api_doc">How do I edit HTML page content for API documentation?</h2>
<p>The platform supports content pages written in HTML. You must create your API and legal documents in an external HTML authoring tool and upload the documentation using <strong>File Explorer</strong>.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="who_can_edit_api_and_legal_agreement_content">Who can edit API and Legal Agreement content?</h2>
<p>API documentation and legal content in the platform can be uploaded and managed by API Admins and Business Admins.</p>
<p>If you are using Simple Dev theme, the API documentation must be uploaded by a Site Admin to a special folder in the Content folder structure, using The Administration menu in Default Theme/Hermosa Theme.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="how_do_i_organize_my_api_and_legal_agreement_documentation_files">How do I organize my API and legal agreement documentation files?</h2>
<h4>To organize your API and legal documentation files:</h4>
<ol>
	<li>In the installation directory of the platform tenant, a /documents and /legal directory are automatically created as part of the adding the API using the <strong>Add a New API Wizard</strong>. These directories can be viewed when you launch <strong>File Explorer</strong> in the<!-- #BeginLibraryItem "/Library/hdr_myapis_nav_all.lbi" -->&nbsp;<strong>APIs</strong> &gt; <strong>My APIs</strong> &gt; choose API &gt;&nbsp;<!-- #EndLibraryItem --><strong>Documentation</strong> or<!-- #BeginLibraryItem "/Library/hdr_myapis_nav_all.lbi" -->&nbsp;<strong>APIs</strong> &gt; <strong>My APIs</strong> &gt; choose API &gt;&nbsp;<!-- #EndLibraryItem --><strong>Agreements</strong> sections of the platform.</li>
	<li>The path of the /documents and /legal folder displayed in the <strong>File Explorer</strong> includes an API ID that is assigned when the API is added to the platform. The /documents path is /content/api/{APIID}.{TenantID}/documents. The /legal path is /content/api{APIID}.{TenantID}/legal.</li>
	<li>Inside the /documents directory, create a style sheet directory (/css) to store any custom API documentation style sheets. This style sheet must work in conjunction with the document.css style sheet (located at {protocol}://{hostname}:{port}/style&gt;/document.css).</li>
	<li>You can also create an assets directory (/assets) in the /documents directory to store image files that might be included in your documentation.</li>
	<li>Download the platform style sheet, document.css, from the {protocol}://{hostname}:{port}/style/document.css directory. A sample API documentation style sheet, apidocsample.css, can also be found <a href="assets/apidocsample.css">here</a>. This style sheet can be used on your local machine to develop your documentation.</li>
	<li>Copy any custom style sheets to the /documents/css directory where you will be storing your API documentation.</li>
	<li>If you would like to upload single documentation files using File Explorer, see <a href="#how_do_i_upload_my_api_documentation">How do I upload my API documentation?</a></li>
	<li>If you would like to upload your documentation using a ZIP file, see <a href="#how_do_i_zip_my_api_documentation_files">How do I upload my API documentation in a ZIP file?</a></li>
	<li>Here is an example of what the /documents directory looks when you load File Explorer for the first time after creating an API:
		<p><img src="assets/fe_sampledocdir.jpg" alt="File Explorer for API docs" /></p></li>
	<li>If you would like to upload your documentation using a ZIP file, see <a href="#how_do_i_upload_my_api_legal_agreements">How do I upload my API legal agreements?</a></li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="how_do_i_zip_my_api_documentation_files">How do I upload my API documentation in a ZIP file?</h2>
<p>You can upload a ZIP file that contains your API documentation using <strong>File Explorer</strong>.</p>
<h4>To upload a ZIP file using <strong>File Explorer</strong>:</h4>
<ol><li>Go to<!-- #BeginLibraryItem "/Library/hdr_myapis_nav_all.lbi" -->&nbsp;<strong>APIs</strong> &gt; <strong>My APIs</strong> &gt; choose API &gt;&nbsp;<!-- #EndLibraryItem --><strong>Documentation</strong>.</li>
	<li>Click the <strong>File Explorer</strong> icon (upper-left corner of the right pane).</li>
	<li>In <strong>File Explorer</strong>, click <strong>Upload a Zip Archive</strong>.</li>
	<li>In the <strong>File Upload</strong> box, navigate to the location of the ZIP archive file you want to upload. Choose the file, and then click <strong>Open</strong>. The ZIP file loads and expands into the /documents folder.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="can_i_link_to_external_site">Can I link to an external site?</h2>
<p>You can include links to your own external website, or any other external site, in your developer portal documentation or API documentation.</p>
<p>Remember to use the &quot;target=&quot;_blank&quot; attribute on the link so that the external site opens in a new window rather than replacing the platform user interface. Refer to the examples below.</p>
<p><strong>Link to an API website:</strong></p>
<pre>
&lt;p&gt;For full information and API documentation, please visit the 
&lt;a href=&quot;http://acmepaymentscorp.com/docs/index.htm&quot; target=&quot;_blank&quot;&gt;ACME Payments API main page&lt;/a&gt;.&lt;/p&gt; </pre>
<p><strong>Link to the specification for a standard:</strong></p>
<pre>
&lt;p&gt;For more information about OAuth 2.0, refer to the 
&lt;a href=&quot;http://oauth.net/2&quot; target=&quot;_blank&quot;&gt;OAuth 2.0 specification&lt;/a&gt;.&lt;/p&gt; </pre>
<p>To upload your reference file see: <a href="api_admin_content_guidelines.htm#how_do_i_upload_my_api_documentation">How do I upload my API documentation?</a></p>
<p><a href="#top">Back to top</a></p>



<h2 id="what_style_sheets_do_i_use_for_my_html_api_documentation">What style sheets do I use for my HTML API documentation?</h2>
<p>If you want to reference platform styles in your HTML API documentation, you can use the lines below in the &lt;head&gt; tag of your API documentation files to reference the platform CSS files:</p>
<pre>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/resources/style/reset.css&quot;/&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/resources/style/base.css&quot;/&gt;</pre>
<p> If you want to use custom styles, you can create or upload a CSS file for your API documentation, and reference that file in your API documentation files. You can add or edit a CSS file in the same way as you do an HTML file. Just make sure you have the correct relative link. For example, in your API documentation folder, you could create a /style subfolder and keep your CSS in there.</p>
<p>The API documentation folder is in this location:</p>
<ul>
	<li><strong>For Hermosa Theme and Default Theme</strong>: /content/api/{APIID}/documents.</li>
	<li><strong>For Simple Dev Theme</strong>: /content/documentation. The Site Admin must upload API documentation and styles for Simple Dev. See <a href="site_admin_content_guidelines_sd.htm#where_do_i_upload_api_doc_for_sd">Where do I upload API documentation for Simple Dev?</a> (Site Admin help).</li>
</ul>
<p><a href="#top">Back to top</a></p>



<h2 id="how_do_i_set_the_default_api_documentation_page_using_a_parameter_file">How do I set the default API documentation page using a parameter file?</h2>
<p>When you upload a document or artifact to the <strong>Documentation</strong> section using the File Explorer, a JSON-based TOC (table of contents) file is created (format: toc.{APIVersionID}.json; for example, <strong>toc.89be612e-cde6-4a35-944b-80d7b5401099.acmepaymentscorp.json</strong>). Information about the way you've set your documents to display on the document table of contents, under the <strong>Documentation</strong> menu item in the left menu bar, are stored in this file.</p>
<p>Using a file editor, you can manually update the &quot;defaultFile&quot;:&quot;{filename}.html&quot; parameter of the file to set your default HTML document.</p>
<p>If you currently have a HTML document loaded and would like to switch back so that users see the generated documentation, you can delete this parameter and reset the default document back to Swagger.</p>
<h4>To set the default documentation page in a toc.apiversion file:</h4>
<ol>
	<li>In the file system, navigate to the /documents folder of your API (<!-- #BeginLibraryItem "/Library/hdr_myapis_nav_all.lbi" -->&nbsp;<strong>APIs</strong> &gt; <strong>My APIs</strong> &gt; choose API &gt;&nbsp;<!-- #EndLibraryItem --><strong>Documentation</strong>, and then choose <strong>File Explorer</strong>).</li>
	<li>If you previously uploaded an HTML file using File Explorer, open a file editor, locate the toc.apiversionXXXXX.&lt;productname&gt;.json file and drag the file into the editor.</li>
	<li>Update the HTML file in the &quot;defaultFile&quot;:&quot;&lt;filename&gt;.html&quot; parameter to the new default.</li>
	<li>If you would like to switch back to the Swagger UI, remove the &quot;defaultFile&quot;:&quot;&lt;filename&gt;.html&quot; parameter.</li>
	<li>Save the file.</li>
	<li>Return to the platform UI and clear the cache. The selected default document will display on the <strong>API</strong> &gt; <strong>Documentation</strong> page.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="can_i_upload_existing_api_documentation_and_use_it_in_the_platform">Can I upload existing API documentation and use it in the platform?</h2>
<p>Yes, you can upload your existing file set into the platform via <strong>File Explorer</strong>. Make sure that relative file locations in the platform are the same as in your source files so that you don&rsquo;t break any links between files (if any exist). The content also needs to be organized in the required document structure. See <a href="#how_do_i_organize_my_api_and_legal_agreement_documentation_files">How do I organize my API and legal agreement documentation files?</a></p>
<p><strong>Note</strong>: You must include head and body tags that reference all the css style sheets used in your API documentation.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="how_do_i_upload_my_api_documentation">How do I upload API documentation?</h2>
<p>The <strong>API</strong> &gt; <strong>Documentation</strong> section includes an interface that allows you to add and maintain your API documentation.</p>
<ul>
	<li>Documentation must be in HTML format.</li>
	<li>It should follow the style conventions defined in the platform default style sheet (document.css) located in the apidocs\styles\ folder, and your custom API style sheet (if used) located in your {apiname}\documents\css directory.</li>
	<li>You can configure any document to be the top-level/intro page that displays when you click <strong>API</strong> &gt; <strong>Documentation</strong>. See <a href="#how_do_i_set_the_default_api_documentation_page_using_file_explorer">How do I set the default API documentation page using File Explorer?</a> or <a href="#how_do_i_set_the_default_api_documentation_page_using_a_parameter_file">How do I set the default API documentation page using a parameter file?</a></li>
	<li>All documentation files must be uploaded to the \documents folder that is auto-generated when an API is created using the <strong>Add a New API Wizard</strong>.</li>
	<li>If you would like specific files to display in the <strong>Documentation</strong> left navigation, you can click the <strong>Show in TOC</strong> check box in the <strong>File Explorer</strong>. See <a href="#how_do_i_set_the_file_display_name_in_the_api_documentation_table_of_contents">How do I set the file display name in the API documentation table of contents?</a></li>
</ul>
<p>You can upload documentation using <strong>File Explorer</strong>. You can upload documentation on a file by file basis, or you can upload a ZIP file.</p>
<h4>To upload API content via the <strong>File Explorer</strong>:</h4>
<ol><li>Go to<!-- #BeginLibraryItem "/Library/hdr_myapis_nav_all.lbi" -->&nbsp;<strong>APIs</strong> &gt; <strong>My APIs</strong> &gt; choose API &gt;&nbsp;<!-- #EndLibraryItem --><strong>Documentation</strong>.</li>
	<li>Click the <strong>File Explorer</strong> icon (upper-left corner of the right pane).</li>
	<li>In <strong>File Explorer</strong>, click <strong>Upload a File</strong>.</li>
	<li>In the <strong>File Upload</strong> box, navigate to the location of the file you want to upload. Choose the file, and then click <strong>Upload</strong>. You can also upload multiple files in a ZIP file. After uploading your files, set the default page. See <a href="#how_do_i_set_the_default_api_documentation_page_using_file_explorer">How do I set the default API documentation page using File Explorer?</a> or <a href="#how_do_i_set_the_default_api_documentation_page_using_a_parameter_file">How do I set the default API documentation page using a parameter file?</a></li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="how_do_i_update_api_and_legal_agreement_documentation">How do I update API and legal agreement documentation I've added to the platform?</h2>
<p>To update API and legal agreement documentation that you've added to the platform, you must upload the new file using <strong>File Explorer</strong>. See <a href="#how_do_i_upload_my_api_documentation">How do I upload my API documentation?</a> or <a href="#how_do_i_upload_my_api_legal_agreements">How do I upload my API legal agreements?</a> for details.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="how_do_i_test_updated_api_documentation">How do I test updated API documentation?</h2>
<p>When you add or change API documentation, it&rsquo;s a good idea to preview it in the browser to make sure it looks correct and no symbol characters are displaying. For example, if you have more than one space separating a word, the additional space may be displayed as a symbol character in some browsers.</p>
<p>When you save the content, it&rsquo;s displayed for you in your own browser window. However, another user reading API documentation might use a different browser. Since there are differences between browser defaults that might affect the visual display, it&rsquo;s a good idea to check how your content looks in the most popular browsers.</p>
<p>Simply copy and paste the URL. Although you need to be signed in to edit the content, no login is required for viewing most content pages.</p>
<p>It&rsquo;s a good idea to make sure your content changes look OK in Internet Explorer, Firefox, and Google Chrome.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="how_do_i_configure_my_api_documentation_so_its_searchable_in_the_platform">How do I configure my API documentation so it's searchable in the platform?</h2>
<p>If you would like your documentation to be searchable in the platform, include the &lt;title&gt; tag (for example, &lt;title&gt;Doc Name&lt;/title&gt;) at the top of your HTML file, within the &lt;head&gt; tag.</p>
<p>The example below shows the structure and sequence.</p>
<p><strong>Note</strong>: this example uses reset.css to reset styles. For more information, see <a href="#platform_reset_css">What are reset.css and base.css and why would I use them?</a></p>
<pre>
&lt;html&gt;

&lt;head&gt;
  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;
  &lt;title&gt;Searchable Text&lt;/title&gt;
  &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/resources/style/reset.css&quot;/&gt; 
  &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/resources/style/base.css&quot;/&gt;
  &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;customapidoc.css&quot; /&gt;

  &lt;!--[if lte IE 9]&gt;
  &lt;link rel=&quot;stylesheet&quot; href=&quot;/resources/style/ie.css&quot;&gt;
  &lt;![endif]--&gt;

&lt;/head&gt;
&lt;body&gt;
&lt;h2&gt;Document Heading&lt;/h2&gt;
&lt;p&gt;Document Content&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>
<p><a href="#top">Back to top</a></p>




<div class = "divider1"></div>
<h2 id="h_linking_in_api_documentation">Linking in API Documentation:</h2>





<h2 id="link_same_file_default">How do I link to another location in the same document in Default Theme/Hermosa Theme?</h2>
<p>Use the standard # coding as shown below.</p>
<p>Coding of the link:</p>
<pre>&lt;p&gt;For more information, see &lt;a href=&quot;#section_2&quot;&gt;Section 2&lt;/a&gt;.&lt;/p&gt;</pre>
<p>Coding of the destination content:</p>
<pre>&lt;a name=&quot;section_2&quot;&gt;&lt;/a&gt;&lt;h4&gt;Section 2&lt;/h4&gt;</pre>



<p><strong>Note</strong>: coding for this type of link is the same in Simple Dev theme.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="link_another_file_same_folder_default">How do I link to a content file in the same folder in Default Theme/Hermosa Theme?</h2>
<p>Use a standard &lt;a href&gt; link with the filename, as shown below.</p>
<pre>For more information about the ACME Payments API, see 
&lt;a href=&quot;index_pmt_api.htm&quot;&gt;ACME Payments API: Overview&lt;/a&gt;.&lt;/p&gt;</pre>
<p><a href="#top">Back to top</a></p>




<h2 id="link_another_file_subfolder_default">How do I link to an API content file in a subfolder in Default Theme/Hermosa Theme?</h2>
<p>Use a standard &lt;a href&gt; link with the relative path and the filename, as shown below.</p>
<pre>&lt;p&gt;For more information about security with the ACME Payments API, see 
&lt;a href=&quot;api_payments/acmepaymentsapi_security.htm&quot;&gt;Security&lt;/a&gt;.&lt;/p&gt;</pre>
<p><a href="#top">Back to top</a></p>



<h2 id="link_another_file_parent_folder_default">How do I link to a content file in a parent folder in Default Theme/Hermosa Theme?</h2>
<p>Use a standard &lt;a href&gt; link with the relative path and the filename, as shown below.</p>
<pre>&lt;p&gt;For an overview of the ACME Payments API, see 
&lt;a href=&quot;../index_pmt_api.htm&quot;&gt;ACME Payments API: Overview&lt;/a&gt;.&lt;/p&gt;
</pre>
<p><a href="#top">Back to top</a></p>




<h2 id="link_to_platform_page_default">How do I link to a platform content page in Default Theme/Hermosa Theme?</h2>
<p>Normally, when coding a relative link to another file, you must include the full filename, including extension, and take into account folder names that you might need to reference in going up or down the folder structure from one folder to another, as in the examples shown above.</p>
<p>When coding a link to a platform user interface page or main platform content page, you don't need to do that. You can code an absolute link using a special class that substitutes the path.</p>
<p><strong>Note</strong>: You can use this approach to link to a platform page from:</p>
<ul>
	<li>API documentation pages</li>
	<li>Any other HTML pages on the platform, such as help pages</li>
</ul>
<p>You'll need to do these things:</p>
<ol>
	<li>Reference the page's unique name. Use the part of the page URL that's after the # sign. For example:
		<ul>
			<li><strong>Page URL</strong>: {protocol}//{hostname}/{TenantID}/#/home/apis</li>
			<li><strong>Link reference</strong>: #/home/apis</li>
		</ul>
		</li>
	<li>Apply this class on the link: <strong>soa-control-cm-route-link</strong>.</li>
</ol>
<p>Below are the URLs for some platform content pages you might want to link to:</p>
<ul>
	<li>{hostname}/#/home/support (main Support page).</li>
	<li>{hostname}/#/home/apis (My APIs list)</li>
	<li>{hostname}/#/home/apps (My Apps list)</li>
</ul>
<p>For example, let's say you want to link from the API documentation to the<!-- #BeginLibraryItem "/Library/hdr_myapis_nav_all.lbi" -->&nbsp;<strong>APIs</strong> &gt; <strong>My APIs</strong> &gt; choose API &gt;&nbsp;<!-- #EndLibraryItem -->list. All you need to do is reference the page name, as follows:</p>
<pre>&lt;p&gt;Go to the &lt;a class=&quot;soa-control-cm-route-link&quot; href=&quot;#/home/apis&quot;&gt;My APIs list (Default Theme/Hermosa Theme)&lt;/a&gt;,
and choose the API from the list.&lt;/p&gt;
</pre>
<p><a href="#top">Back to top</a></p>



<h2 id="link_to_subfolder_doc_page_default">How do I link to a platform content page in a platform subfolder in Default Theme/Hermosa Theme?</h2>
<p>Let's say you want to link from your API documentation main index page to the Markdown example file that's part of the developer portal help. This file resides in a subfolder.</p>
<p>First, access the file in the portal to get the URL. You'll see that the URL is:</p>
<pre>{protocol}{hostname}/{TenandID}/#/home/learnmore/assets/markdown.htm</pre>
<p>To link to this file from your API documentation page, you'll need to complete these actions:</p>
<ol>
	<li>Reference the page's unique name in the link. Use the part of the page URL that's after the # sign. For example:
		<ul>
			<li><strong>Page URL</strong>:
			<pre>{protocol}//{hostname}/{TenantID}/#/home/learnmore/assets/markdown.htm</pre></li>
			<li><strong>Link reference</strong>:
			<pre>#/home/learnmore/assets/markdown.htm</pre></li>
		</ul>
	</li>
	<li>Apply this class on the link: <strong>soa-control-cm-route-link</strong>.</li>
</ol>
<p>In your file, the link looks like this:</p>
<pre>&lt;a class=&quot;soa-control-cm-route-link&quot; href=&quot;#/home/learnmore/assets/markdown.htm&quot;&gt;Link to the Markdown sample file&lt;/a&gt;</pre>
<p>To users, the link looks like this:</p>
<p><a class="soa-control-cm-route-link" href="#/home/learnmore/assets/markdown.htm">Link to the platform's Markdown sample file</a></p>
<p>In the &lt;head&gt; tag of your file, the script file is referenced like this:</p>
<pre>&lt;script language=&quot;javascript&quot; src=&quot;/ui/apps/atmosphere/123/resources/console/SOA/console/common/tag_lib/dist/tag_lib.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</pre>
<p><a href="#top">Back to top</a></p>



<h2 id="external_link_default">How do I link to an external site or document in Default Theme/Hermosa Theme?</h2>
<p>When coding a link to an external site, document, or other file, first test the link yourself in the browser. Include <strong>target=&quot;_blank&quot;</strong> as shown below so that the site or document opens in a new browser tab or window rather than replacing the existing one.</p>
<pre>&lt;p&gt;For more information, visit &lt;a href=&quot;http://acmepaymentscorp.com/api&quot; target=&quot;_blank&quot;&gt;http://acmepaymentscorp.com/api&lt;/a&gt;.&lt;/p&gt; </pre>
<p><a href="#top">Back to top</a></p>




<h2 id="another_api_doc_file_default">How do I link to another API documentation file in the API documentation folder in Default Theme/Hermosa Theme?</h2>
<p>If you have multiple documentation files in the documentation folder and want to link directly to one of them without using a relative link, you can just use the standard coding to reference another file in the same folder, as shown below:</p>
<pre>&lt;a href=&quot;another_api_doc_file.htm&quot;&gt;Another API Doc File&lt;/a&gt;</pre>
<p><a href="#top">Back to top</a></p>



<h2 id="when_do_i_need_to_reference_taglibminjs">When do I need to reference the <strong>tag_lib.min.js</strong> file?</h2>
<p>The platform includes a JavaScript file, <strong>tag_lib.min.js</strong>, that you can link to in the &lt;head&gt; tag of your HTML files to support the use of the following tags in your API documentation or other content files:</p>
<ul>
	<li><strong>soa:testclient</strong> (used for including inline Test Client in your authoredAPI documentation: see <a href="api_admin_documentation_maintenance.htm#h_apidoc_inline_tc_in_authored">Inline Test Client in Authored API Documentation</a>)</li>
	<li><strong>soa:generatedoc</strong> (used for including inline generated API documentation in your authored API documentation: see <a href="api_admin_documentation_maintenance.htm#h_apidoc_combined">Combined Authored and Generated API Documentation</a>)</li>
</ul>
<p>You do not need to reference this file when using the <strong>soa-control-cm-route-link</strong> class used in linking to platform pages.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="how_do_i_reference_taglibminjs">How do I reference the <strong>tag_lib.min.js</strong> file?</h2>
<p>If you are using one or more of the additional tags that rely on the JavaScript file, <strong>tag_lib.min.js</strong> (see <a href="#when_do_i_need_to_reference_taglibminjs">When do I need to reference the tag_lib.min.js file?</a> above), you'll need to include a link to this file.</p>
<p>In the &lt;head&gt; tag of your HTML file, reference the script file like this:</p>
<pre>&lt;script language=&quot;javascript&quot; src=&quot;/ui/apps/atmosphere/123/resources/console/SOA/console/common/tag_lib/dist/tag_lib.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</pre>
<p>The entire &lt;head&gt; tag might look something like the example below:</p>
<pre>&lt;html lang=&quot;en&quot; xmlns:soa=&quot;http://soa.com&quot;&gt;
  &lt;head&gt;
    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;/&gt;
    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;/&gt;

&lt;!-- The css files below are needed for the inline testing feature to be displayed correctly --&gt;
    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/resources/style/reset.css&quot;/&gt; 
    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/resources/style/base.css&quot;/&gt;

    &lt;!--[if lte IE 9]&gt;
    &lt;link rel=&quot;stylesheet&quot; href=&quot;/resources/style/ie.css&quot;&gt;
    &lt;![endif]--&gt;

&lt;!-- The script files below are needed for the inline testing feature to work correctly --&gt;
    &lt;script language=&quot;javascript&quot; src=&quot;config.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
    &lt;script language=&quot;javascript&quot; src=&quot;/ui/apps/atmosphere/123/resources/console/SOA/console/common/tag_lib/dist/tag_lib.min.js&quot;type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</pre>
<p><strong>Notes</strong>: </p>
<ul>
	<li>When you reference reset.css, as in the above example, you must also define styles in your custom css. For more information, see <a href="#platform_reset_css">What are reset.css and base.css and why would I use them?</a></li>
	<li>The above example includes an additional CSS reference to support users of IE versions 9 and earlier (lines 10&#8211;12, after the base.css reference). For more information, see <a href="api_admin_documentation_maintenance.htm#ie_9_compatibility">How do I make sure my API documentation is rendered correctly for users of Internet Explorer 9 and below?</a></li>
</ul>
<p><a href="#top">Back to top</a></p>




<div class = "divider1"></div>
<h2 id="h_using_file_explorer">Using File Explorer:</h2>




<h2 id="what_is_file_explorer_and_what_functionality_does_it_offer">What is File Explorer and what functionality does it offer?</h2>
<p><strong>File Explorer</strong> is a simple file management tool that allows you to upload documentation source files.</p>
<p>Navigation:<!-- #BeginLibraryItem "/Library/hdr_myapis_nav_all.lbi" -->&nbsp;<strong>APIs</strong> &gt; <strong>My APIs</strong> &gt; choose API &gt;&nbsp;<!-- #EndLibraryItem --><strong>Documentation</strong>: click the icon in the upper left-hand corner of the right pane.</p>
<p><strong>File Explorer</strong> includes the following functionality:</p>
<table class="doctable">
<thead>
	<tr>
		<th>This File Manager feature...</th>
		<th>Allows you to...</th>
	</tr>
</thead>
<tbody>
	<tr>
		<td>Go up a Directory</td>
		<td>Navigate one level up the directory tree. By default, API documentation is stored in the \documents default directory. If you are creating a folder structure, make it below, not above. All documentation for a specific API should reside in the applicable \documents folder or folders below it.</td>
	</tr>
	<tr>
		<td>New Directory</td>
		<td>Create a new subdirectory in the current directory.</td>
	</tr>
	<tr>
		<td>Upload a File</td>
		<td>Upload a single file; for example, HTML, .swg, and associated documentation support files such as images, one file at a time.</td>
	</tr>
	<tr>
		<td>Upload a Zip Archive</td>
		<td>Upload a ZIP archive into the \documents folder.</td>
	</tr>
	<tr>
		<td>Download Directory</td>
		<td>Download the current directory, and all files and folders below it that you are authorized to access, into one ZIP file. You have the option to save or open the file.</td>
	</tr>
	<tr>
		<td>Show in TOC</td>
		<td>Display a file in the left-hand navigation underneath the <strong>Documentation</strong> menu.</td>
	</tr>
	<tr>
		<td>Default</td>
		<td>Identify the default file that will load when the user chooses the <strong>Documentation</strong> menu.</td>
	</tr>
	<tr>
		<td>Rename</td>
		<td>Rename a file. When selected a <strong>File Name</strong> popup displays where you enter the file to be renamed.</td>
	</tr>
	<tr>
		<td>View Direct</td>
		<td>View the current file via a URL address.</td>
	</tr>
	<tr>
		<td>Set Display Name</td>
		<td>Configure the name that will display in the <strong>Documentation</strong> section if the <strong>Show in Toc</strong> option is selected. When selected, a <strong>File Namee</strong> popup displays where you enter the file to be renamed.</td>
	</tr>
	<tr>
		<td>Delete</td>
		<td>Delete a file.</td>
	</tr>
</tbody>
</table>
<p><a href="#top">Back to top</a></p>



<h2 id="how_do_i_add_a_file_to_the_api_documentation_table_of_contents">How do I add a file to the API documentation table of contents?</h2>
<h4>To add a file to the documentation table of contents:</h4>
<ol>
	<li>Go to<!-- #BeginLibraryItem "/Library/hdr_myapis_nav_all.lbi" -->&nbsp;<strong>APIs</strong> &gt; <strong>My APIs</strong> &gt; choose API &gt;&nbsp;<!-- #EndLibraryItem --><strong>Documentation</strong>.</li>
	<li>Click the <strong>File Explorer</strong> icon (upper-left corner of the right pane).</li>
	<li>In <strong>File Explorer</strong>, click the box for the file, under <strong>Show in TOC</strong>. The filename displays in the <strong>Documentation</strong> table of contents. Note that this does not make this file the default viewed when users click <strong>Documentation</strong>, it just adds it to the left menu.
<p><img src="assets/fe_api_showintoc.jpg" alt="File Explorer: Show in TOC" /></p>
	</li>
</ol>
<p>You can take additional steps to control accessibility of the API documentation: </p>
<ul>
	<li>To set the default, see <a href="#how_do_i_set_the_default_api_documentation_page_using_file_explorer">How do I set the default API documentation page using File Explorer?</a></li>
	<li>To change the display name of the file, see <a href="#how_do_i_set_the_file_display_name_in_the_api_documentation_table_of_contents">How do I set the file display name in the API documentation table of contents?</a></li>
</ul>
<p><a href="#top">Back to top</a></p>



<h2 id="how_do_i_set_the_default_api_documentation_page_using_file_explorer">How do I set the default API documentation page using File Explorer?</h2>
<h4>To set the default API documentation page that is displayed when users click to view the API documentation</h4>
<p><strong>Note</strong>: First, upload the page that you want to display as the default. For instructions, see <a href="#how_do_i_upload_my_api_documentation">How do I upload API documentation?</a></p>
<ol>
	<li>Go to<!-- #BeginLibraryItem "/Library/hdr_myapis_nav_all.lbi" -->&nbsp;<strong>APIs</strong> &gt; <strong>My APIs</strong> &gt; choose API &gt;&nbsp;<!-- #EndLibraryItem --><strong>Documentation</strong>.</li>
	<li>Click the <strong>File Explorer</strong> icon (upper-left corner of the right pane).</li>
	<li>In <strong>File Explorer</strong>, click the <strong>Default</strong> radio button. The selected document will automatically be displayed when users click to view the API documentation.
		<p><img src="assets/fe_api_default.jpg" alt="File Explorer: Setting the Default" /></p>
	</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="how_do_i_set_the_file_display_name_in_the_api_documentation_table_of_contents">How do I set the file display name in the API documentation table of contents?</h2>
<h4>To set the display name of a file in the API documentation table of contents:</h4>
<ol>
	<li>Go to<!-- #BeginLibraryItem "/Library/hdr_myapis_nav_all.lbi" -->&nbsp;<strong>APIs</strong> &gt; <strong>My APIs</strong> &gt; choose API &gt;&nbsp;<!-- #EndLibraryItem --><strong>Documentation</strong>.</li>
	<li>Click the <strong>File Explorer</strong> icon (upper-left corner of the right pane).</li>
	<li>In <strong>File Explorer</strong>, click <strong>Set Display Name</strong>. The <strong>Display Name</strong> dialog box displays. Enter the name you would like to display in the table of contents for this file and click <strong>OK</strong>. The name of the file changes in the table of contents, as shown below.
	<p><img src="assets/fe_api_displayname.jpg" alt="File Explorer: Setting the Display Name" /></p>
	</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="how_do_i_rename_a_file_in_file_explorer">How do I rename a file in File Explorer?</h2>
<h4>To rename a documentation source file:</h4>
<ol>
	<li>Go to<!-- #BeginLibraryItem "/Library/hdr_myapis_nav_all.lbi" -->&nbsp;<strong>APIs</strong> &gt; <strong>My APIs</strong> &gt; choose API &gt;&nbsp;<!-- #EndLibraryItem --><strong>Documentation</strong>.</li>
	<li>Click the <strong>File Explorer</strong> icon (upper-left corner of the right pane).</li>
	<li>In <strong>File Explorer</strong>, click the <strong>Rename</strong> icon. 
		<p><img src="assets/fe_api_rename.jpg" alt="File Explorer: Rename" /></p>
</li>
	<li>The <strong>File Name</strong> dialog box displays. Enter the new filename and click <strong>OK</strong>. Be sure to preserve the file extension, or rename to a valid extension for the file type. The filename changes in the <strong>File Explorer</strong> display.</li>
</ol>
<p class="apidoc_note"><strong>Note</strong>: When renaming a file, it's important to make sure the new name includes a valid file extension that's correct for the file format; for example, index.html or index.htm.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="how_do_i_view_a_file_in_file_explorer">How do I view a file in File Explorer?</h2>
<h4>To view a documentation source file:</h4>
<ol>
	<li>Go to<!-- #BeginLibraryItem "/Library/hdr_myapis_nav_all.lbi" -->&nbsp;<strong>APIs</strong> &gt; <strong>My APIs</strong> &gt; choose API &gt;&nbsp;<!-- #EndLibraryItem --><strong>Documentation</strong>.</li>
	<li>Click the <strong>File Explorer</strong> icon (upper-left corner of the right pane).</li>
	<li>In <strong>File Explorer</strong>, click the <strong>View Direct</strong> icon. The selected document views in the browser.
		<p><img src="assets/fe_api_viewdirect.jpg" alt="File Explorer: View Direct" /></p>
</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="how_do_i_delete_a_file_using_file_explorer">How do I delete a file using File Explorer?</h2>
<h4>To delete a document source file:</h4>
<ol>
	<li>Go to<!-- #BeginLibraryItem "/Library/hdr_myapis_nav_all.lbi" -->&nbsp;<strong>APIs</strong> &gt; <strong>My APIs</strong> &gt; choose API &gt;&nbsp;<!-- #EndLibraryItem --><strong>Documentation</strong>.</li>
	<li>Click the <strong>File Explorer</strong> icon (upper-left corner of the right pane).</li>
	<li>In <strong>File Explorer</strong>, click the <strong>Delete</strong> icon.
<p><img src="assets/fe_api_delete.jpg" alt="File Explorer: Delete" /></p>
</li>
	<li>At the confirmation prompt, click <strong>OK</strong>.</li>
</ol>
<p><a href="#top">Back to top</a></p>




<div class = "divider1"></div>
<h2 id="h_using_swagger">Using Swagger:</h2>




<h2 id="what_is_swagger_and_how_does_it_work">What is Swagger and how does it work?</h2>
<p>Swagger (<a href="http://swagger.io" target="_blank">http://swagger.io</a>) is a specification and complete framework implementation for describing, producing, consuming, and visualizing RESTful web services. It produces dynamically generated documentation that includes methods, parameters and models. The platform includes an implementation of Swagger that works in conjunction with the <strong>Add a New API Wizard</strong>.</p>
 <p>When you define an API, the structure is dynamically generated and added to a predefined Swagger template. The documentation-ready structure is available in the API documentation section where you add a title, description, implementation notes, and parameter information.</p>
 <p>The documentation content is stored in a <strong>resources.swg</strong> file. Using the <strong>File Explorer</strong> you can add this file to your table of contents to make it the default display document when a user goes to the<!-- #BeginLibraryItem "/Library/hdr_myapis_nav_all.lbi" -->&nbsp;<strong>APIs</strong> &gt; <strong>My APIs</strong> &gt; choose API &gt;&nbsp;<!-- #EndLibraryItem --><strong>Documentation</strong> page. You can also add the Swagger document URL to your HTML documentation.</p>
<p><img src="assets/swagger_sample.jpg" alt="" /></p>
<p><a href="#top">Back to top</a></p>



<h2 id="what_are_the_swagger_controls_and_how_do_i_edit_page_content">What are the Swagger controls and how do I edit page content?</h2>
<p>The Swagger documentation includes a series of page controls for displaying and navigating through the method documentation as follows:</p>
<p><strong>Swagger Controls:</strong></p>
<ul>
	<li><strong>Show / Hide</strong>&#8212;A toggle that expands or collapses the API methods.</li>
	<li><strong>List Operations</strong>&#8212;Displays the API operations.</li>
	<li><strong>Expand Operations</strong>&#8212;Displays the Implementation Notes and Parameter section of the operations.</li>
	<li><strong>Raw</strong>&#8212;Displays the JSON code that comprises the resources.swg file.</li>
</ul>
<p><strong>Editing Options:</strong></p>
<p>You can add / edit the following areas in Swagger documentation. Go to the <strong>Documentation</strong> page that includes the Swagger and perform the desired step.</p>
<h4>To add a page title:</h4>
<ol>
	<li>Click into the &quot;Click here to add a title&quot; text box and specify your documentation title.</li>
	<li>To save the title, click outside the text box.</li>
</ol>
<h4>To add a description:</h4>
<ol>
	<li>Click into the &quot;Click here to add a title&quot; text box and specify your documentation title.</li>
	<li>To save the title, click outside the text box.</li>
</ol>
<h4>To add implementation notes to an API operation:</h4>
<ol>
	<li>Go to a method and select <strong>List Operations</strong>.</li>
	<li>Select the operation you would like to add implementation notes to and click <strong>Expand Operations</strong>.</li>
	<li>Double click under the &quot;Implementation Notes&quot; label, select &quot;Double-click to add Notes.&quot; A text box displays.</li>
	<li>Enter your data and click outside the text box to save.</li>
</ol>
<h4>To add a parameter description to an API operation:</h4>
<ol>
	<li>Go to a method and select <strong>List Operations</strong>.</li>
	<li>Select the operation you would like to add implementation notes to and click <strong>Expand Operations</strong>.</li>
	<li>In the Parameters section, select &quot;Double-click to parameter description.&quot; A text box displays.</li>
	<li>Enter your data and click outside the text box to save.</li>
</ol>
<p><img src="assets/swagger_sample.jpg" alt="" /></p>
<p><a href="#top">Back to top</a></p>



<h2 id="what_style_sheets_do_i_use_for_my_swagger_documentation">What style sheets do I use for my Swagger documentation?</h2>
<p>The developer portal provides a pre-defined Swagger style sheet that is internal to the product and is applied to all dynamically generated Swagger documentation structures.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="can_i_mix_swagger_and_html_files">Can I mix Swagger and HTML files in my API documentation?</h2>
<p>The developer platform automatically generates the Swagger documentation and pre-fills it with information from the runtime service definition. It parses the definition file and generates a Swagger document with no adornments (descriptions and so forth) that is technically accurate for each resource and verb.</p>
<p>At that point the API Admin can annotate the Swagger documentation in two ways:</p>
<ul>
	<li>Directly in the Swagger implementation in the browser by double-clicking on a text field and typing, which generates a properties file.</li>
	<li>By uploading a properties file created offline, or downloaded and then edited offline.</li>
</ul>
<p>Whether the properties file is uploaded or auto-generated, the developer portal merges the properties file with the generated Swagger documentation to produce the resulting document that is displayed to the user (rendered by the Swagger UI JavaScript).</p>
<p>By default, when you add an HTML file to the documents list in the folder for your API documentation, the developer portal defaults to using HTML documentation only, rather than a mix of HTML docs and Swagger docs.</p>
<p>For instructions to  use a mix of <a href="basics_glossary.htm#gl_swagger">Swagger</a> and HTML files, see <a href="api_admin_documentation_maintenance.htm#h_apidoc_combined">Combined Authored and Generated API Documentation</a>.</p>
<p>It's best to modify the display names; otherwise, the display name is the filename, including extension.</p>
<p><strong>Note</strong>: If you have a Swagger properties file in the documentation folder, the developer portal merges the Swagger properties with the generated Swagger template.</p>
<p>For information about uploading API documentation files, see <a href="#how_do_i_upload_my_api_documentation">How do I upload API documentation?</a></p>
<p><a href="#top">Back to top</a></p>




<div class = "divider1"></div>
<h2 id="h_legal_agreements">Legal Agreements:</h2>




<h2 id="how_do_i_upload_my_api_legal_agreements">How do I upload my API legal agreements?</h2>
<p>The <strong>APIs</strong> &gt; <strong>Agreements</strong> section provides functionality that allows you to upload and manage legal agreements that pertain to each API. An API may require one or more legal agreements. Legal agreements with an approved status display in the <strong>API Access</strong> function. A user must accept the terms of the legal agreements to gain access to API functionality.</p>
<ul>
	<li>Legal agreements must be in HTML format.</li>
	<li>A legal agreement should follow the style conventions defined in the platform default style sheet (document.css) located at http://tenanthost:port/content/style/document.css.</li>
	<li>Legal agreements can be any unique filename.</li>
	<li>All legal agreement files must be uploaded to the \legal folder.</li>
</ul>
<h4>To upload the API legal agreement file via the <strong>File Explorer</strong>:</h4>
<ol>
	<li>Go to<!-- #BeginLibraryItem "/Library/hdr_myapis_nav_all.lbi" -->&nbsp;<strong>APIs</strong> &gt; <strong>My APIs</strong> &gt; choose API &gt;&nbsp;<!-- #EndLibraryItem --><strong>Agreements</strong>.</li>
	<li>Click <strong>Manage Files</strong>.</li>
	<li>In <strong>File Explorer</strong>, click <strong>Upload a File</strong>.</li>
	<li>In the <strong>File to Upload</strong> dialog box, click <strong>Browse</strong> to navigate to the location of the file you want to upload. Choose the file, and then click <strong>Open</strong>.</li>
	<li>Click the <strong>Publish</strong> check box to add the document name to the <strong>Agreements</strong> list accessible via <strong>Manage Agreements</strong>.</li>
	<li>Click outside the <strong>File Explorer</strong> to exit.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="what_style_sheets_do_i_use_for_my_api_legal_agreements">What style sheets do I use for my API legal agreements?</h2>
<p>API legal agreements use the platform default style sheets. Active legal agreements display in the API Access Wizard when a user requests access to your API. To ensure that your legal agreement displays properly in this wizard, download the legal agreement sample file and use it as a template to structure your legal agreement HTML.</p>
<p>Click <a href="api_admin_sample_eula.htm" target="_blank">here</a> to view a sample legal agreement file.</p>
<p><a href="#top">Back to top</a></p>



<div class = "divider1"></div>



<h2 id="related_topics">Related Topics</h2>
<div class="relatedlinks" id="api_admin"><!-- #BeginLibraryItem "/Library/relatedtopics_api_admin.lbi" -->
<ul>
	<li><a href="apiadmin_getting_started.htm">Getting Started for API Developers</a></li>
	<li><a href="apiadmin_overview.htm">API Administration: Overview</a></li>
	<li><a href="api_admin_tutorial.htm">Tutorial (API Provider)</a></li>
	<li><a href="api_admin_management.htm">API Admin Management</a></li>
	<li><a href="bus_api_admin_forum.htm">Forum Moderation</a></li>
	<li><a href="apiadmin_promotion.htm">Promoting an API</a></li>
</ul>
<ul>
	<li><a href="apiadmin_api_add.htm">Adding an API</a></li>
	<li><a href="apiadmin_api_design.htm">Add or Modify an API Using API Designer</a></li>
	<li><a href="apiadmin_a_d_d_support.htm">API Description Language Support</a></li>
	<li><a href="apiadmin_implementations.htm">Manage API Implementations</a></li>
	<li><a href="api_admin_testing_tc.htm">API Testing with Test Client</a></li>
	<li><a href="uc_tc_okta.htm">Use Case: API testing in Test Client with Okta</a></li>
	<li><a href="api_admin_managing_contracts.htm">Managing Contracts for your API</a></li>
	<li><a href="apiadmin_monitoring.htm">Monitoring API Analytics</a></li>
</ul>
<ul>
	<li><a href="api_admin_api_publishing.htm">API Visibility, Licenses, and Settings</a></li>
	<li><a href="apiadmin_api_phys_svc.htm">Working with Physical Services</a></li>
	<li><a href="api_admin_oauth_support.htm">OAuth Support</a></li>
	<li><a href="api_admin_content_guidelines.htm">Content Development Guidelines</a></li>
	<li><a href="api_admin_documentation_maintenance.htm">API Documentation Maintenance</a></li>
	<li><a href="api_admin_documentation_tagging.htm">API Documentation Tagging</a></li>
	<li><a href="api_admin_legal_agreement_maintenance.htm">Legal Agreement Maintenance</a></li>
	<li><a href="basics_glossary.htm">Glossary of Terms</a></li>
</ul><!-- #EndLibraryItem --></div>