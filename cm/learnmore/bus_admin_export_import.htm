---
layout: page
title: Export and Import | Business Admin | Akana API Platform Help
description: Export/import business information in the Akana API Platform.
product: cm
category: learn
sub-nav-class: Business Administration
weight: 3038
type: page
nav-title: Export and Import
---
<h2 id="top">Export/Import</h2>
<p>Export and import platform information.</p>
<h5 class="stamp">API Platform Version: 8.1 and later</h5>

<div class = "divider1"></div>



<h3 style="color: gray;">Table of Contents</h3>
<ol class="table_of_contents">
	<li><a href="#export_org_what">What organization information can I export?</a></li>
	<li><a href="#export_org_how">How do I export organization information?</a></li>
	<li><a href="#what_export_options_choose">What export options should I choose?</a></li>
	<li><a href="#export_license_how">How do I export a license?</a></li>
	<li><a href="#export_scope_how">How do I export a scope?</a></li>
	<li><a href="#export_org_file_contents">What are the contents of the organization export file?</a></li>
	<li><a href="#import_org_app_api">How do I import site, app, or API information from an export file?</a></li>
	<li><a href="#import_properties_file">What is the import properties file and when do I need it?</a></li>
	<li><a href="#exp_imp_version_compatibility">Can I export/import between different versions?</a></li>
</ol>
<div class = "divider1"></div>



<h3 id="export_org_what">What organization information can I export?</h3>
<p>You can export organization information to an external file. You can then import that file to another instance of the platform. One use of this feature is to move the entire set of resources associated with an organization from one environment to another, such as from a development environment to a testing environment.</p>
<p><strong>Note</strong>: If you export a subset of platform data, you'll need to consider interdependencies between different resources. For recommendations about export options and information about dependencies, see <a href="#what_export_options_choose">What export options should I choose?</a></p>
<p>You can choose whether or not to include the following information:</p>
<ul>
	<li>API:
    <ul>
      <li>Private Key + Certificate</li>
      <li>Resources / Documentation</li>
      <li>API Contracts</li>
      <li>Export API Administrators<br />
        <strong>Note</strong>: the relationship of the user as an API admin is exported, but the user is not exported. The user must exist in the target environment. If the user does not exist when the information is imported, the API is created without that admin. From there, either a) the user can sign up and be invited to be an admin, b) the user can sign up and the API data can be reimported, c) another individual can be designated as an API admin.</li>
      <li>Export API Implementation Services<br />
        <strong>Note</strong>: If the API was created using an existing service, this option allows you to choose whether or not to export the API implementation services, as set up in Policy Manager. If the API was created as a new service, implementation services are always exported along with API.</li>
    </ul>
  </li>
	<li>Policy:
    <ul>
      <li>Operational Policies</li>
      <li>QoS Policies</li>
      <li>Compliance Policies</li>
    </ul>
  </li>
	<li>Scopes</li>
	<li>Licenses</li>
	<li>Apps:
    <ul>
      <li>Certificate / Shared Secret</li>
      <li>Export App Team Members<br />
        <strong>Note</strong>: the relationship of the user as an app team member is exported, but the user is not exported. The user must exist in the target environment. If the user does not exist when the information is imported, the app is created without that team member. From there, either a) the user can sign up and be invited to be an app team member, b) the user can sign up and the app data can be reimported, c) another individual can be designated as an app team member. </li>
    </ul>
  </li>
	<li>Site Configuration:
    <ul>
      <li>Site Settings</li>
      <li>Workflow Definitions</li>
      <li>Custom Styles</li>
      <li><a href="basics_glossary.htm#gl_securitydomain">Security Domains</a></li>
      <li>Login Domains</li>
<!--      <li>Site Administrators</li>-->
<!--      <li>Business Administrators</li>-->
      <li>Notification Templates (Email and Dashboard)</li>
    </ul>
  </li>
  </ul>
<p>For instructions, see <a href="#export_org_how">How do I export organization information?</a> below.</p>
<p>You can also export an individual license, scope, or API. For instructions, see:</p>
<ul>
	<li><a href="#export_license_how">How do I export a license?</a></li>
	<li><a href="#export_scope_how">How do I export a scope?</a></li>
	<li><a href="apiadmin_api_add.htm#api_export">How do I export an API?</a></li>
</ul>
<p><a href="#top">Back to top</a></p>



<h3 id="export_org_how">How do I export organization information?</h3>
<p>You can export organization information to an external file. You can then import that file to another instance of the platform to replicate the entire set of information. You can use this feature to move the entire set of resources associated with an organization from one environment to another, such as from a development environment to a testing environment.</p>
<p>There are many configuration options, so you can determine exactly what you want to include in the export file.</p>
<h5>To export organization information:</h5>
<ol>
	<li>Log in as the Business Admin and click the <strong>Organizations</strong> icon.</li>
	<li>Choose your organization.</li>
	<li>Click <strong>Actions</strong>.</li>
	<li>Click <strong>Export</strong>.</li>
	<li>On the <strong>Export</strong> page, choose the information you want to include in the export file. For information about the options, see <a href="#export_org_what">What organization information can I export?</a> above. For information about dependencies between different types of platform data, see <a href="#what_export_options_choose">What export options should I choose?</a> below.</li>
	<li>Choose to save or open the export file.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h3 id="what_export_options_choose">What export options should I choose?</h3>
<p>If you choose to export a subset of platform data, it's important to consider interdependencies between different resources, such as apps and APIs. The specific relationships between resources might vary depending on the instance of the platform that you're exporting from; for example, if no APIs use licenses, exporting APIs without exporting licenses is not an issue. Examples of possible interdependencies:</p>
<ul>
	<li>If there are contracts between apps and APIs, and you export contracts and apps, but not APIs, or export contracts and APIs, but not apps, the import data will not work correctly unless the missing resources already exist in the platform version you're importing to. A contract is between an app and an API, so both resources must be available for the import data to be valid.</li>
	<li>If you export one or more APIs that are using the Licenses feature, but don't export licenses and scopes, the same licenses and scopes would need to be available in the platform version you're importing to, otherwise the APIs will not work as expected.</li>
</ul>
<p>In general, it's best to preserve interdependencies when you're exporting data. For example, you could choose all export options, or at least choose API, Policy, Scopes, Licenses, and Apps.</p>
<p><a href="#top">Back to top</a></p>



<h3 id="export_license_how">How do I export a license?</h3>
<p>You can export information about a specific license to an external file. You can then import that file to another instance of the platform. One use of this feature is to move data from one environment to another, such as from a development environment to a testing environment.</p>
<p>You can also choose to export additional data associated with the license.</p>
<h5>To export a license:</h5>
<ol>
  
	<li>Log in as the Business Admin and <a href="bus_admin_overview.htm#admin_menu_busadmin">go to the Admin section</a>.</li>
	<li>Click <strong>Licenses</strong>.</li>
	<li>On the list of licenses, find the license you want to export and click the license name.</li>
	<li>Click <strong>Export</strong>.</li>
	<li>On the Export page, choose whether to include the following data associated with the license:
    <ul>
      <li>QoS Policies</li>
      <li>Scopes</li>
    </ul>
  </li>
	<li>Click <strong>Export</strong>.</li>
	<li>Choose to save or open the <strong>license-export.zip</strong> export file.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h3 id="export_scope_how">How do I export a scope?</h3>
<p>You can export information about a specific scope to an external file. You can then import that file to another instance of the platform. One use of this feature is to move data from one environment to another, such as from a development environment to a testing environment.</p>
<p>You can also choose to export additional data associated with the scope.</p>
<h5>To export a scope:</h5>
<ol>
	<li>Log in as the Business Admin and <a href="bus_admin_overview.htm#admin_menu_busadmin">go to the Admin section</a>.</li>
	<li>Click <strong>Scopes</strong>.</li>
	<li>On the list of scopes, find the scope you want to export and click the scope name. The details are displayed to the right.</li>
	<li>Click <strong>Export</strong>.</li>
	<li>At the prompt, click <strong>Export</strong> again.</li>
	<li>Choose to save or open the <strong>resourse-export.zip</strong> export file.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h3 id="export_org_file_contents">What are the contents of the organization export file?</h3>
<p>The organization export file includes all the core information about the organization, as well as any of the optional additional information you specified.</p>
<p>The file has a very specific structure. It will look something like the image below:</p>
<p><img src="assets/export_file_business.jpg" alt="File structure for a business export file" /></p>
<p>The export file will generally include the following:</p>
<ul>
   <li>Files at root level: 
     <ul>
       <li><strong>objectgraph.xml</strong>: An XML file that shows the relationships between resources.</li>
       <li><strong>objectdata.xml</strong>: An XML-based summary of all the data in the export file.</li>
       <li><strong>exportproperties.properties</strong>: a properties file showing which options were included in the export file.</li>
      </ul>
   </li>
   <li><strong>bpels</strong>: a folder containing XML organization process files (<a href="basics_glossary.htm#gl_bpel_file">bpel files</a>); one for each operation, for each environment. So, for example, if the API has five operations, and runs in Sandbox and <!-- #BeginLibraryItem "/Library/environ_live.lbi" -->Live<!-- #EndLibraryItem --> implementations, there are 10 bpel files.</li>
   <li><strong>services</strong>: a folder containing a subfolder for each environment, each subfolder containing a bpel.xml file for the applicable service/environment.</li>
   <li><strong>styles</strong>: a folder containing the custom.less file with the organization-specific styles (only present if custom styles were uploaded).</li>
   <li><strong>workflow</strong>: custom workflow information specific to the organization (only present if custom workflows were uploaded).</li>
	<li><strong>wsdls</strong>: a folder containing WSDL files for the service.</li>
</ul>
<p><a href="#top">Back to top</a></p>




<h3 id="import_org_app_api">How do I import site, app, or API information from an export file?</h3>
<p>You can export site, app, or API information to an external file. You can then import that file to another instance of the platform to replicate the entire set of information. You can use this feature to move the entire set of resources and associations from one environment to another, such as from a development environment to a testing environment.</p>
<p>The export and import platform versions must be compatible. See <a href="#exp_imp_version_compatibility">Can I export/import between different versions?</a></p>
<p>The import file must be a valid package file previously exported from a platform instance, and the FedmemberID must be the same. For example, if the TenantID for the exported information is <strong>acmepaymentscorp</strong>, the TenantID for the installation the file is being imported to must be the same.</p>
<p class="apidoc_note"><strong>Note</strong>: If you export from one tenant and import to another tenant in the same installation, services that exist in both instances are cloned. This is because two APIs cannot share the same service, and two tenants cannot share the same API.</p>
<p>Only a Business Admin can import.</p>
<h5>To import site, app, or API information:</h5>
<ol>
	<li>Log in as the Business Admin and click the <strong>Organizations</strong> icon.</li>
	<li>Choose your organization.</li>
	<li>Click <strong>Actions</strong>.</li>
	<li>Click <strong>Import</strong>.</li>
	<li>Browse to the location of the export package file (ZIP file) and choose it.</li>
	<li>Optional: browse to the location of the configuration migration properties file and choose it. For more information, see <a href="#import_properties_file">What is the import properties file and when do I need it?</a></li>
	<li>Click <strong>Import</strong>.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h3 id="import_properties_file">What is the import properties file and when do I need it?</h3>
<p>When you import a file, you can also provide an optional configuration migration properties file.</p>
<p>Migration properties allow for URL mapping of physical service endpoints between the source environment that the information was exported from and the target environment you're importing it to.</p>
<p>If the URL mapping is not specified, physical service endpoint URLs are migrated without any change. It is possible that the source environment URLs might not apply to the target environment, and in this case the migration properties file is needed.</p>
<p>URL mapping is done by URL prefix. The backslash character (\) is used to escape any special characters in the properties file, such as a colon in the URL.</p>
<p>If you import the package file without a properties file, APIs included in the package that are Managed Services in the source environment become Unmanaged Services in the target environment, unless the target environment contains <a href="basics_glossary.htm#gl_container">Akana container instances</a> with the same container key as in the source environment.</p>
<p>The migration properties file is used to handle the differences between the source environment and the target environment by transforming the contents of the export package to be suitable for the target environment.</p>
<p>Here are some examples of instances in which the migration properties file can be used:</p>
<ul>
	<li>The target API endpoint is not the same in the source and target environments: see <a href="#import_properties_01">Different source and target endpoints</a>.</li>
	<li>Proxy API is hosted in an Akana container: see <a href="#import_properties_02">Proxy API hosted in an Akana container: different container keys</a>.</li>
	<li>Import package has virtual service and also corresponding physical service, changes have been made, and you want to make sure there are no conflicts: see <a href="#import_properties_03">Import package has both virtual service and physical service</a>.</li>
</ul>


<h5 id="import_properties_01">Different source and target endpoints</h5>
<p>Instances where the target API endpoint is not the same in the source environment and target environment include:</p>
<ul>
	<li><strong>Different hostname</strong>&#8212;It is likely that the path portion of the URL might be the same, but with a different hostname.</li>
	<li><strong>Multiple source environment endpoints</strong>&#8212;The migration properties file allows one or more source environment URL prefixes to match to one or more target environment URL prefixes. You can use this to map one endpoint of the target API to multiple endpoints for the same API in the target environment.</li>
	<li><strong>Multiple target environment endpoints</strong>&#8212;Conversely, you can use the migration properties file to map multiple endpoints of the API in the source environment to a single endpoint of the API in the target environment.</li>
</ul>
<p>The sample file below illustrates this scenario.</p>
<pre>#With the properties below, all target APIs with an endpoint address of 
#http://apihost-source-env:8900 will be imported with a URL of 
#http://apihost-target-env:8900, keeping the path portion the same 
#in both environments.

migration.url.source.http\://apihost-source-env\:8900=DiscussionAPI
migration.url.target.http\://apihost-target-env\:8900=DiscussionAPI</pre>


<h5 id="import_properties_02">Proxy API hosted in an Akana container: different container keys</h5>
<p>Proxy APIs are hosted in Akana containers. It is possible that the container key in the source environment might be different from the container key in the target environment.</p>
<p>It is also possible that the proxy API might be hosted in a different number of ND containers in the source environment versus the target environment. However, this is rare, because most users want to host the Proxy API in an ND cluster rather than hosting in multiple NDs.</p>
<p>The migration properties file allows the user to map a set of ND container keys in the source environment to an alias to which multiple target environment ND containers are also mapped. This scenario allows the proxy APIs that are exported/imported to be imported into the appropriate ND containers in the target environment.</p>
<p>The sample file below illustrates this scenario.</p>
<pre>#With the properties below, source-env-container-key in the source environment 
#is mapped to target-env-container-key in the target environment. All proxy 
#services that were hosted in source-env-container-key in the export file 
#will be hosted in target-env-container-key in the target environment.

migration.container.source.source-env-container-key=acmebroker
migration.container.target.target-env-container-key=acmebroker</pre>


<h5 id="import_properties_03">Import package has both virtual service and physical service</h5>
<p>If an import package includes both virtual services and their corresponding physical services, and changes to the existing virtual service have been made in the target environment, there could be conflicts in some scenarios between data in the resulting physical service and virtual service. To make sure this doesn't happen, you can add the following property to the migration file:</p>
<pre>
migration.delete.virtualized.operations=true</pre>



<h4>Additional Migration Properties: QName Matching</h4>
<p>You can use an additional property to allow service QName matching in the migration properties file.</p>
<p>This property is used in cases where the databases used for package import and export include services, interfaces, and bindings with the same QName but different keys. It allows update of the existing objects based on matching QNames.</p>
<p>For example, if you create a physical service in both the exporting and importing databases using the same WSDL, the QNames will match, but the service keys will be different. Then, if you try to import the service from one database to another with QName matching disabled, the import process will attempt to create a new service, and will fail because duplicate QNames are not allowed.</p>
<p>With QName matching enabled, the import process will update the existing service, behaving exactly the same as if service keys were matching.</p>
<p>The sample file below illustrates use of this property in the migration properties file.</p>
<pre>#Sets QName matching for the import environment.

migration.service.qname.matching=true</pre>
<h4>Creating the properties file</h4>
<p>You can use any text editor to create the properties file for import.</p>
<p><a href="#top">Back to top</a></p>



<h3 id="exp_imp_version_compatibility">Can I export/import between different versions?</h3>
<p>If you're exporting and importing data, it's best to make sure that both environments are on the same version of the platform. However, it might happen that you need to import a file into an upgraded environment, that was exported from an earlier version.</p>
<p>Because of differences between versions, this is not recommended, and is never supported between major versions (for example, 8.2x to 8.4x).</p>
<p>For the import to be successful, the exported file must be from the same version or from an earlier minor update of the same major version (for example, export from 8.4.23 and import to 8.4.24).</p>
<p>Export from a later version and import to an earlier version is never supported.</p>
<p><a href="#top">Back to top</a></p>




<div class = "divider1"></div>



<h3 id="related_topics">Related Topics</h3>
<div class="relatedlinks" id="cmhelp_busadmin">
<ul>
	<li><a href="bus_admin_.htm">Business Admin Summary Page</a></li>
	<li><a href="bus_admin_overview.htm">Business Admin Responsibilities</a></li>
	<li><a href="bus_admin_organizations.htm">Organizations</a></li>
	<li><a href="bus_admin_export_import.htm">Export/Import</a></li>
	<li><a href="bus_admin_bus_admin.htm">Business Admins</a></li>
</ul>
<ul>
	<li><a href="bus_admin_org_apis.htm">Organization APIs</a></li>
	<li><a href="bus_admin_org_apps.htm">Organization Apps</a></li>
	<li><a href="bus_admin_org_processes.htm">Organization Processes</a></li>
	<li><a href="bus_admin_org_scripts.htm">Organization Scripts</a></li>
	<li><a href="bus_admin_dzs.htm">Managing Deployment Zones</a></li>
	<li><a href="bus_api_admin_forum.htm">Forum Moderation</a></li>
	<li><a href="bus_admin_gateways.htm">Managing Gateways</a></li>
	<li><a href="bus_admin_licenses.htm">Licenses</a></li>
	<li><a href="bus_admin_scopes.htm">Scopes</a></li>
</ul>
<ul>
	<li><a href="bus_admin_domains.htm">Domains</a></li>
	<li><a href="bus_admin_domains_eoap.htm">External OAuth Provider Domain</a></li>
	<li><a href="bus_admin_domains_oidc.htm">OpenID Connect Support</a></li>
	<li><a href="bus_admin_ov_pf_endtoend.htm">PingFederate Setup</a></li>
	<li><a href="basics_glossary.htm">Glossary of Terms</a></li>
</ul>
</div>