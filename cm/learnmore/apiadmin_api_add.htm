---
layout: page
title: Add API | API Admin | Akana API Platform Help
description: Add, edit, and manage APIs and API versions on the Akana API Platform.
product: cm
category: learn
sub-nav-class: API Admin
weight: 2616
type: page
nav-title: Add an API
---
<h2 id="top">Adding an API</h2>

<p>Add an API on the Akana API Platform.</p>
<h5 class="stamp">API Platform Version: 8.1 and later</h5>

<div class = "divider1"></div>

<h3 style="color: gray;">Table of Contents</h3>



<ol class="table_of_contents">
  <li><a href="#create_api_overview">Add API: Overview</a></li>
  <li><a href="#create_api_processflow">Add API: Process Flow</a></li>
  <li><a href="#how_do_i_add_an_api">How do I add an API?</a></li>
  <li><a href="#what_info_do_i_need_to_add_an_api_from_scratch">What information do I need to add an API from scratch?</a></li>
  <li><a href="#process_flow_add_api_design_from_scratch">What is the process flow to add an API by designing from scratch?</a></li>
  <li><a href="#how_do_i_add_an_api_from_scratch">How do I add an API by designing from scratch?</a></li>
  <li><a href="#what_types_of_a_d_d">What types of API description document can I use to define my API?</a></li>
  <li><a href="#process_flow_add_api_using_a_d_d">What is the process flow to add an API using an API description document?</a></li>
  <li><a href="#a_d_d_upload_zip">Can I upload my API description in a ZIP file?</a></li>
  <li><a href="#how_do_i_add_an_api_using_a_d_d">How do I add an API using an API description document?</a></li>
  <li><a href="#process_flow_add_api_from_service">What is the process flow to add an API from an existing service?</a></li>
  <li><a href="#add_api_from_service">How do I add an API from an existing service?</a></li>
  <li><a href="#add_api_pattern">What is the API pattern and which pattern should I choose?</a></li>
  <li><a href="#add_api_implementation">How do I add an implementation for an API?</a></li>
  <li><a href="#add_api_soap">How do I add a SOAP-based API?</a></li>
  <li><a href="#api_edit">How do I edit an API?</a></li>
  <li><a href="#api_edit_soap">How do I edit a SOAP-based API?</a></li>
  <li><a href="#api_delete">How do I delete an API?</a></li>
  <li><a href="#api_version_add">How do I add an API version?</a></li>
  <li><a href="#api_version_edit">How do I edit an API version?</a></li>
  <li><a href="#api_anonymous_access">Should I allow anonymous access?</a></li>
  <li><a href="#api_approval_required">Should I require approval for API access requests?</a></li>
  <li><a href="#what_is_a_proxy_api">Why would I use the platform to proxy my API?</a></li>
  <li><a href="#platform_support_of_overloaded_operations">Does the platform support overloaded operations?</a></li>
</ol>



<h5 style="color: gray;"><a href="#h_api_import_export">Import/Export:</a></h5>



<ol class="table_of_contents">
  <li><a href="#api_export">How do I export an API?</a></li>
  <li><a href="#api_export_file_contents">What are the contents of the API export file?</a></li>
  <li><a href="#how_do_i_import_an_api_from_an_export_file">How do I import an API from an export file?</a></li>
  <li><a href="#related_topics">Related Topics</a></li>
</ol>



<div class = "divider1"></div>



<a name="create_api_overview"></a><h3>Add API: Overview</h3>
<p>The Akana API Platform leads you through a simple, streamlined process for adding an API. It goes like this:</p>
<p><img src="assets/process_api_create.gif" alt="Create API process" /></p>
<p>For information about how to complete each of these steps, refer to:</p>
<ul>
  <li><strong>Design</strong>: <a href="apiadmin_api_design.htm">Add or Modify an API Using API Designer</a></li>
  <li><strong>Implement</strong>: <a href="apiadmin_implementations.htm">Manage API Implementations</a></li>
  <li><strong>Test</strong>: <a href="api_admin_testing_tc.htm">API Testing with Test Client</a></li>
</ul>
<p>If you want to create your API by importing an API description document such as a Swagger document, the process is even more streamlined:</p>
<p><img src="assets/process_api_create_import.gif" alt="Create API using description document" /></p>
<p>To get started, see <a href="#how_do_i_add_an_api">How do I add an API?</a> below.</p>
<p><a href="#top">Back to top</a></p>



<a name="create_api_processflow"></a><h3>Add API: Process Flow</h3>
<p>The process flow is a little different depending on how you add the API. For more information and process flow diagrams, choose the applicable link below:</p>
<ul>
  <li><a href="#process_flow_add_api_design_from_scratch">What is the process flow to add an API by designing from scratch?</a></li>
  <li><a href="#process_flow_add_api_using_a_d_d">What is the process flow to add an API using an API description document?</a></li>
  <li><a href="#process_flow_add_api_from_service">What is the process flow to add an API from an existing service?</a></li>
</ul>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_add_an_api"></a><h3>How do I add an API?</h3>
<p>To add a complete API definition on the platform, you'll need to provide information about the API, either manually, by uploading an API description document, or by referencing an API already set up in the underlying infrastructure (API Gateway).</p>
<p>To get started immediately, you can simply name your API and save. You can go back and add more information later.</p>
<h5>To get started adding an API (minimum steps)</h5>
<ol>
  <li>Click the plus sign<strong> (+)</strong> in the middle of the top menu bar, and choose <strong>Add a New API</strong>.</li>
  <li>Optional: click the advanced options icon on the right, and choose a different implementation pattern. Proxy is the default, but you can also choose Orchestration. For a tutorial video, see <a href="https://www.youtube.com/watch?v=VdiYPH4YP0A" target="_blank">Add an API using orchestration</a> (external link).</li>
  <li>Specify a name for the API, and click <strong>Save</strong>.</li>
</ol>
<p>You can add the rest of the information later.</p>
<p>Probably, you'll want to be prepared with information about your API, so that you can set up all the information the platform needs, and you can then test. You have three choices:</p>
<ul>
  <li><strong>Design a REST API from scratch</strong>: manually provide all the information about the API, including operations, parameters, headers, and so forth. See <a href="#how_do_i_add_an_api_from_scratch">How do I add an API by designing from scratch?</a></li>
  <li><strong>Provide an API description document</strong>. The platform reads in the information, and you can then review (if you want to) and save. See <a href="#how_do_i_add_an_api_using_a_d_d">How do I add an API using an API description document?</a> For supported formats, see <a href="#what_types_of_a_d_d">What types of API description document can I use to define my API?</a></li>
  <li>Create an API from an existing service: reference the existing service. The platform reads the information and creates the API, and you can then review (if you want to) and save. See <a href="#add_api_from_service">How do I add an API from an existing service?</a></li>
</ul>
<p class="apidoc_note"><strong>Note</strong>: In some cases, if an extension is in place, additional fields might appear in the bottom section of the <strong>Add API</strong> page. If so, these additional fields collect information about your API. Fields might be required or optional and might be of various types such as text-based or numeric, multiple selection, or dates. If you have questions about any of these fields, check the in-page tooltip (question mark to the right of the field) for help.</p>
<p><a href="#top">Back to top</a></p>





<a name="what_info_do_i_need_to_add_an_api_from_scratch"></a><h3>What information do I need to add an API from scratch?</h3>
<p>You can create an API with just the name, then save it and add the rest later. </p>
<p>To complete the task, if you're adding a REST API from scratch, you'll need to be ready with the exact information for the API definition.</p>
<p>Make sure you have the exact spelling/wording, where applicable.</p>
<p>The specific information you'll need of course depends on your specific API, its definition and its level of complexity.</p>
<h5>Ideal:</h5>
<p>To provide full details of your API, that will enable your users to take full advantage of the rich features of Test Client and ensure your API's generated documentation is really complete and useful, you'll need to provide exact details of the following:</p>
<ul>
  <li>Operation definitions, including HTTP verb and URL</li>
  <li>Parameters</li>
  <li>Request headers</li>
  <li>Request and response media types</li>
  <li>Responses, including HTTP code and description</li>
  <li>Model object definitions that are sent in the request and response</li>
</ul>
<h5>Bare minimum:</h5>
<p>If you don't provide all of the above, your users will be missing out on the features of Test Client and the generated documentation. However, your API will still work as long as you provide the following:</p>
<ul>
  <li>URL path</li>
  <li>HTTP verb</li>
  <li>Request media types</li>
  <li>Response media types</li>
</ul>
<p>If you start defining your API and find you don't have all the information to hand, don't worry. You can save your work and come back to it later.</p>
<p><a href="#top">Back to top</a></p>



<a name="process_flow_add_api_design_from_scratch"></a>
<h3>What is the process flow to add an API by designing from scratch?</h3>
<p>When you choose to add an API, and you don't have an API description document, you can define your API from scratch using the API Designer.</p>
<p>To fully design the API, you'll need to have your API documentation or other source of information handy so that you define the API accurately.</p>
<p>In API Designer, you can add operations, parameters, and media types, model objects, and any other information that's part of your API definition. For details, see <a href="apiadmin_api_design.htm">Add or Modify an API Using API Designer</a>.</p>
<p>Once that's done, you can create one or more implementations, add policy assignments, verify the access points, and test. The process flow is shown below.</p>
<p><img src="assets/Workflow_AddAPI_scratch.gif" alt="Add API: from scratch" /></p>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_add_an_api_from_scratch"></a><h3>How do I add an API by designing from scratch?</h3>
<p>To add an API from scratch, it's best to first gather the information about the API definition. See <a href="#what_info_do_i_need_to_add_an_api_from_scratch">What information do I need to add an API from scratch?</a> above. You can save the API definition at any point, and come back to it later.</p>
<h5>To add an API by designing from scratch</h5>
<ol>
  <li>Log in to the Akana API Platform.</li>
  <li>Click the plus sign<strong> (+)</strong> in the middle of the top menu bar, and choose <strong>Add a New API</strong>.</li>
  <li>Choose <strong>Add a new API</strong> and click <strong>Add</strong>.</li>
  <li>Click the <strong>I want to design my API from scratch (REST only)</strong> button.</li>
  <li>Provide a name for the API, and the endpoint if you have it already.</li>
  <li>Click <strong>Save</strong>. The platform saves the data and takes you to the API Designer for adding details about your API, including:
    <ul>
      <li>Adding resources: see <a href="apiadmin_api_design.htm#operation_add">How do I add a resource in API Designer?</a></li>
      <li>Adding parameters for operations: see <a href="apiadmin_api_design.htm#api_designer_parameter_add_edit">How do I add or edit a parameter for an API operation?</a></li>
      <li>Adding responses for operations: see <a href="apiadmin_api_design.htm#api_designer_define_response">How do I define my API response?</a></li>
      <li>Specifying media types: see <a href="apiadmin_api_design.htm#api_designer_media_types_set_up">How do I set up media types in API Designer?</a></li>
      <li>Adding model object definitions: see <a href="apiadmin_api_design.htm#model_object_add">How do I add a model object definition in API Designer?</a></li>
    </ul>
  </li>
  <li>When done, remember to click <strong>Save</strong> on the API Designer window, to save your API design.</li>
  </ol>
<p class="apidoc_note"><strong>Note</strong>: In some cases, if an extension is in place, additional fields might appear in the bottom section of the <strong>Add API</strong> page. If so, these additional fields collect information about your API. Fields might be required or optional and might be of various types such as text-based or numeric, multiple selection, or dates. If you have questions about any of these fields, check the in-page tooltip (question mark to the right of the field) for help.</p>
<p>For more information about API Designer, see <a href="apiadmin_api_design.htm">Add or Modify an API Using API Designer</a>.</p>
<p>When your API design is complete, remember to test your API, using Test Client, to make sure it's working properly. See <a href="api_admin_testing_tc.htm">API Testing with Test Client</a>.</p>
<p>If you need to change something later, you can edit the API definition as needed.</p>
<p><a href="#top">Back to top</a></p>



<a name="what_types_of_a_d_d"></a><h3>What types of API description document can I use to define my API?</h3>
<p>The platform supports adding an API by uploading, or otherwise referencing, API description documents in any of the following formats:</p>
<ul>
  <li>For REST APIs:
    <ul>
      <li>Swagger 2.0</li>
      <li>Swagger 1.2</li>
      <li>RAML 0.8</li>
      <li>RAML 1.0</li>
      <li>WADL</li>
    </ul>
  </li>
  <li>For SOAP APIs:
    <ul>
      <li>WSDL</li>
    </ul>
  </li>
</ul>
<p><a href="#top">Back to top</a></p>



<a name="process_flow_add_api_using_a_d_d"></a><h3>What is the process flow to add an API using an API description document?</h3>
<p>When you choose to add a new API, you can then define your API by providing an API description document. The platform pulls all the information from the API description document and creates the API design and a Live implementation. You just need to add another implementation if needed, add or modify policy assignments, verify the access points, and test, as shown below.</p>
<p><img src="assets/Workflow_AddAPI_a_d_d.gif" alt="Add API: from API description document" /></p>
<p><a href="#top">Back to top</a></p>



<a name="a_d_d_upload_zip"></a><h3>Can I upload my API description in a ZIP file?</h3>
<p>Yes. The file you upload can be an individual file or a ZIP file. However, you can only upload a ZIP file that's on your local filesystem, not via a URL.</p>
<p>If it is a ZIP file, it might include multiple services in one format; for example, several Swagger 2.0 documents. It might include a mix of Swagger versions, or a mix of different types of API description documents; for example, WADL and RAML or Swagger 2.0 and WSDL. If the file includes descriptions of more than one service, the platform displays a list of services so that you can choose the service to import for your API definition, as shown below.</p>
<p><img src="assets/api_add_service_to_import.jpg" alt="Add API: list of services to import" /></p>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_add_an_api_using_a_d_d"></a><h3>How do I add an API using an API description document?</h3>
<p>To add an API using an API description document, first get the document, or make sure you know its location:</p>
<ul>
  <li><strong>URL</strong>: an individual API description document. Make sure you have the full URL, with authentication credentials if needed.</li>
  <li><strong>File</strong>: an individual API description document file or a ZIP archive file containing one or more API description documents. Make sure the file is accessible on the local filesystem.</li>
</ul>
<p>Follow the steps below.</p>
<h5>To add an API using an API description document</h5>
<ol>
  <li>Log in to the Akana API Platform.</li>
  <li>Click the plus sign<strong> (+)</strong> in the middle of the top menu bar, and choose <strong>Add a New API</strong>.</li>
  <li>Choose <strong>Add a new API</strong>, and then click the <strong>I have a Swagger/RAML/WSDL/WADL document</strong> button. There are two ways you can provide the API definition:
    <ul>
    <li><strong>URL</strong>: Provide the full URL, including protocol. If the URL requires authentication, provide your username and password (for Authentication Options, the default is Anonymous).</li>
      <li><strong>File</strong>: Browse to the location of the file and upload. If the file includes multiple services, you'll be shown a list of options for the service to import; choose the one you want.</li>
    </ul>
    </li>
  <li>Click <strong>Save</strong>. The API is created, and the API's <strong>Overview</strong> page is displayed.</li>
</ol>
<p class="apidoc_note"><strong>Note</strong>: In some cases, if an extension is in place, additional fields might appear in the bottom section of the <strong>Add API</strong> page. If so, these additional fields collect information about your API. Fields might be required or optional and might be of various types such as text-based or numeric, multiple selection, or dates. If you have questions about any of these fields, check the in-page tooltip (question mark to the right of the field) for help.</p>
<p>When you create an API from an API description document, the platform automatically creates a Live implementation. You'll need to review the implementation and, probably, add policies. Optionally, you can also add a Sandbox implementation. For information about implementations, see <a href="apiadmin_implementations.htm">Manage API Implementations</a>.</p>
<p>When you're done, remember to test your API, using Test Client, to make sure it's working properly. See <a href="api_admin_testing_tc.htm">API Testing with Test Client</a>.</p>
<p><a href="#top">Back to top</a></p>



<a name="process_flow_add_api_from_service"></a><h3>What is the process flow to add an API from an existing service?</h3>
<p>When you specify an existing service, the platform pulls all the information already set up in the underlying infrastructure (API Gateway). You just need to add another implementation if needed, add or modify policy assignments, verify the access points, and test, as shown below.</p>
<p><img src="assets/Workflow_AddAPI_existingservice.gif" alt="Add API: from existing service" /></p>
<p><a href="#top">Back to top</a></p>



<a name="add_api_from_service"></a><h3>How do I add an API from an existing service?</h3>
<p>If you already have an API that's set up as a service in the <a href="basics_glossary.htm#gl_api_gateway">API Gateway</a>, or you want to create the service using the flexible service definition model offered by the API Gateway, you can use the <strong>Publish an existing service as an API</strong> option to add the API to the platform.</p>
<p>The platform references the information already set up in the API Gateway so you don't have to set up all the API details again.</p>
<p>You might choose this option if your service matches any of the following descriptions:</p>
<ul>
  <li>A virtual service that is an aggregate of different target services.</li>
  <li>A virtual service that is implemented using an orchestration engine.</li>
  <li>Any service that supports multiple interfaces and bindings.</li>
  <li>A target service managed with any embedded agents, such as the J2EE Agent or DataPower Agent.</li>
  </ul>
<h5>To add an API from an existing API Gateway service:</h5>
<ol>
  <li>Click the plus sign<strong> (+)</strong> in the middle of the top menu bar, and choose <strong>Add a New API</strong>.</li>
  <li>Choose <strong>Publish an existing service as an API</strong> and click <strong>Add</strong>. A wizard opens and displays at the first page, <strong>Details</strong>.</li>
  <li>Specify basic API details: <strong>Name</strong>, <strong>Description</strong>, <strong>Visibility</strong>, <strong>Version ID</strong>, and <strong>Version Description</strong>.</li>
  <li>Check the box to indicate whether the API uses licenses.<br />
  For more information about setting up an API to use licenses, see <a href="api_admin_api_publishing.htm#how_do_i_determine_what_licenses_will_be_available_for_my_api">How do I determine what licenses will be available for my API?</a> For general information about the Licenses feature, see <a href="ov_licenses.htm">Licenses: Feature Overview</a>.
  </li>
  <li>Optional: set up an avatar for your API. Click <strong>Upload</strong> and navigate to the avatar image file.</li>
  <li>Click <strong>Next</strong> to go to the <strong>Target API</strong> page.</li>
  <li>Set up the following values for at least one environment in which the API is running:
    <ul>
  <li><strong>Service Key</strong>. Enter the environment name, unique service key, or URL. The platform locates the API Gateway service, and you can then select it. To locate the appropriate value, go to the API Gateway, open up the service, and click <strong>Edit</strong>. Copy the value and paste it into this field.</li>
  <li><strong>Allow <a href="basics_glossary.htm#gl_anonymousaccess">anonymous access</a></strong> (yes/no)</li>
      <li><strong>Approval required</strong> (yes/no)</li>
    </ul>
  </li>
  <li>Click <strong>Finish</strong>.</li>
</ol>
<p class="apidoc_note"><strong>Note</strong>: In some cases, if an extension is in place, additional fields might appear in the bottom section of the <strong>Add API</strong> page. If so, these additional fields collect information about your API. Fields might be required or optional and might be of various types such as text-based or numeric, multiple selection, or dates. If you have questions about any of these fields, check the in-page tooltip (question mark to the right of the field) for help.</p>
<p><a href="#top">Back to top</a></p>



<a name="add_api_pattern"></a><h3>What is the API pattern and which pattern should I choose?</h3>
<h5 class="stamp">New in API Platform Version: 8.2</h5>
<p>When you're adding an API, there are advanced options available to the right of the <strong>Add API</strong> page, as shown below.</p>
<p><img src="assets/api_add_advanced_options.jpg" alt="Advanced Options" /></p>
<p>If you click the Advanced Options button, you'll see an additional field where you can determine the implementation pattern for the API. There are two choices, Proxy or Orchestration:</p>
<ul>
  <li>For a simple API that just references one endpoint, choose <strong>Proxy</strong>.
<p>In a proxy scenario, the API Implementation has a 1:1 relationship with a corresponding back-end Physical Service/API. The back-end Physical Service/API shares the same design as the API itself. A common use case is a scenario where you might want the platform to manage an existing API. In this scenario, you create a proxy and specify the existing API endpoint. The platform creates an API Implementation, automatically registers the appropriate back-end Physical Service/API, and creates default processes that tie each operation of the API Implementation to the appropriate back-end operation. The platform then provides a new (proxied) API endpoint that you can use and share for API access.</p></li>
  <li>For a more complex API implementation, that might include one or more services, processes, or additional steps, choose <strong>Orchestration</strong>.
<p>In an orchestration scenario, you design the API and then manually build a mashup or orchestration for each operation of each implementation. You are free to call any number of other back-end Services/APIs in the orchestration. Unlike a proxy, where the platform automatically registers a back-end Physical Service/API and generates a default process for every operation, the orchestration simply creates an empty process. You can then edit each operation in turn and decide what kind of process you want and which back-end Services/APIs you want to invoke.</p>
  <p>An orchestration creates a service that is implemented with a process, rather than being simply a proxy of another service. If the API has an implementation pattern of Orchestration, you can access the Process Editor to manage the process for a specific operation by clicking through for that specific operation, at the bottom of the page for the specific implementation. This feature offers many additional capabilities for orchestrating processes relating to the API. For more information, see <a href="apiadmin_implementations.htm#api_impl_process_editor">How do I manage orchestration for my implementation?</a></p></li>
  </ul>
<p><a href="#top">Back to top</a></p>



<a name="add_api_implementation"></a><h3>How do I add an implementation for an API?</h3>
<p>Your API <a href="basics_glossary.htm#gl_implementation">implementation</a> defines where the API is deployed.</p>
<p>When you create an API from an API description document, the platform automatically creates a Live implementation. Optionally, you can add a second implementation for Sandbox. You can also modify the implementation.</p>
<p>If you're creating your API from scratch, you'll need to create at least one implementation once you're done with the API design stage. See <a href="apiadmin_api_design.htm">Add or Modify an API Using API Designer</a>.</p>
<p>For information about adding and managing API implementations, see <a href="apiadmin_implementations.htm">Manage API Implementations</a>.</p>
<p><a href="#top">Back to top</a></p>



<a name="add_api_soap"></a><h3>How do I add a SOAP-based API?</h3>
<p>If your API is SOAP-based, make sure you have the <a href="basics_glossary.htm#gl_wsdl">WSDL</a> available; either a WSDL URL or an individual file or ZIP file.</p>
<p>Then, create your API following the procedure in <a href="#how_do_i_add_an_api_using_a_d_d">How do I add an API using an API description document?</a> above.</p>
<p>When you add an API based on a WSDL file, the summary of description languages displayed in the Implementations section at the bottom of the API Details page and the API Design page lists only WSDL, as shown below (Hermosa theme); you cannot view the API description in other API description languages such as Swagger and RAML, as you can for REST-based APIs.</p>
<p><img src="assets/api_add_soap_dll.jpg" alt="Implementations bar for a SOAP API" /></p>
<p>In addition, you cannot edit the API design specifically. Instead, you'll need to upload a new WSDL file. See <a href="#api_edit_soap">How do I edit a SOAP-based API?</a> below.</p>
<p>For general information on the platform's support of API description languages, see <a href="apiadmin_a_d_d_support.htm">API Description Language Support</a>.</p>
<p><a href="#top">Back to top</a></p>



<a name="api_edit"></a><h3>How do I edit an API?</h3>
<p>Once you've added an API, you might need to modify one or more aspects of the API, including:</p>
<ul>
  <li>Basic data about the API such as description, information about API versions, and the privacy setting for the API: refer to <a href="#proc_api_edit">To edit basic data about an API or API version</a> below.</li>
  <li>Design information: see <a href="apiadmin_api_design.htm">Add or Modify an API using API Designer</a>.</li>
  <li>Implementation information: see <a href="apiadmin_implementations.htm">Manage API Implementations</a>.</li>
  <li>Properties (may or may not be present depending on developer portal configuration): see <a href="#proc_api_edit_properties">To edit properties for an API or API version</a> below.</li>
</ul>

<h5><a name="proc_api_edit"></a>To edit basic data about an API or API version</h5>
<ol>
  <li>Log in to the Akana API Platform and go to the overview page for your API.</li>
  <li>From the left menu bar, choose <strong>Details</strong>. The summary of the API design is displayed on the <strong>Details</strong> page.</li>
  <li>In the top section, click <strong>Edit</strong>.</li>
  <li>Optional: on the left, modify any of these fields:
    <ul>
      <li><strong>API name</strong>: A short and clear name to distinguish your API.</li>
      <li><strong>Summary</strong>: A short, plain-text field for internal display of the API description.</li>
      <li><strong>API Description</strong>: A concise description of the API that will attract users. Supports <a href="basics_glossary.htm#gl_markdown">Markdown</a>.</li>
      </ul>
    </li>
  
  <li>Optional: on the right:
    <ul>
      <li>Change the parent organization by providing the new value in the <strong>Parent Organization Name</strong> field. Start typing the new organization name in the field. After the first three characters, the platform displays a list of matching organizations for you to choose from. For more information about organizations on the platform, see <a href="bus_admin_organizations.htm">Organizations</a>.</li>
      <li>Click the blue dot to display advanced options and modify version number, version name, notes, tags, and/or visibility.</li>
    </ul>
    </li>
  
  <li>Click <strong>Save</strong>.</li>
</ol>
<h5><a name="proc_api_edit_properties"></a>To edit properties for an API or API version</h5>
<p><span class="apidoc_note"><strong>Note</strong>: Properties may or may not be present, depending on the configuration of the developer portal.</span></p>
<ol>
  <li>Log in to the Akana API Platform and go to the overview page for your API.</li>
  <li>From the left menu bar, choose <strong>Details</strong>. The summary of the API design is displayed on the <strong>Details</strong> page.</li>
  <li>In the <strong>Properties</strong> section, click <strong>Edit</strong>.</li>
  <li>Edit the properties as needed. For help, refer to field-level help if needed. If you need additional assistance, contact the Site Admin.</li>
  <li>Click <strong>Finish</strong>.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="api_edit_soap"></a><h3>How do I edit a SOAP-based API?</h3>
<p>You can edit basic data about a SOAP-based API, such as name and description, in the same way as any other API; see <a href="#proc_api_edit">To edit basic data about an API or API version</a>.</p>
<p>To edit the properties for a SOAP-based API, you can't use the API Designer as you can with a REST-based API. However, you can update a SOAP API by uploading a revised WSDL file. Follow the steps below.</p>
<h5><a name="proc_api_edit_propertiessoap"></a>To update design information about a SOAP-based API or API version</h5>
<ol>
  <li>Log in to the Akana API Platform and go to the overview page for your API.</li>
  <li>From the left menu bar, choose <strong>Details</strong>. The summary of the API design is displayed on the <strong>Details</strong> page.</li>
  <li>In the <strong>Design</strong> section, click <strong>Edit</strong>, as shown below, to access the <strong>Import Swagger/RAML/WSDL/WADL Document</strong> page.
<p><img src="assets/api_soap_edit.jpg" alt="Editing a SOAP-based API" /></p>
  </li>
  <li>Specify the URL for the WSDL file, providing credentials if needed; or choose File and upload an individual file or ZIP file.</li>
  <li>Click <strong>Save</strong>. The API is updated.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="api_delete"></a><h3>How do I delete an API?</h3>
<p>When you delete an API that has only one version, the API is deleted.</p>
<h5><a name="proc_api_delete"></a>To delete an API</h5>
<ol>
  <li>Log in to the Akana API Platform and go to the overview page for your API.</li>
  <li>From the left menu bar, choose <strong>Details</strong>.</li>
  <li>At the top right, click <strong>Delete</strong>.</li>
  <li>In the top section, click <strong>Edit</strong>. At the prompt, click <strong>OK</strong>. The API is deleted.</li>
</ol>
<p><strong>Note</strong>: If the API has more than one version, the API is not deleted until the last version is deleted.</p>
<p><a href="#top">Back to top</a></p>



<a name="api_version_add"></a><h3>How do I add an API version?</h3>
<p>You can have multiple versions for an API. One common use case is that the new version is being tested while the earlier version is servicing current traffic.</p>
<h5>To add an API version</h5>
<ol>
  <li>Log in to the Akana API Platform and go to the overview page for your API.</li>
  <li>From the left menu bar, choose <strong>Details</strong>. The summary of the API design is displayed on the Details page.</li>
  <li>From the drop-down menu at the top right, choose <strong>Add Version</strong>.</li>
  <li>At the Add API Version overlay, choose how you want to create the new version, and then click <strong>Add</strong>. In most cases you'd choose to create the new version the same way you created the API, but in some cases you might choose a different option. The choices are:
    <ul>
      <li><strong>Add a new API</strong>: you'll need to provide the version name and specify whether you want to clone the current version, design from scratch, or import an API description document.</li>
      <li><strong>Publish an existing service as an API</strong>: specify version name and description, tags, visibility, and whether licensing is enabled for the API. Then specify the target API and click <strong>Finish</strong>.</li>
    </ul>
  </li>
</ol>



<p>If you choose <strong>Add a new API</strong>, you'll see the following additional choices on the <strong>Add API Version</strong> page:</p>
<ul>
  <li><strong>Clone current version </strong>: Makes a copy of the current version. You can then go in and modify as needed.</li>
  <li><strong>I want to design this API version from scratch (REST only)</strong>: allows you to design the API version from scratch. You can also:
    <ul>
      <li>Specify the API endpoint if you know it (for Proxy implementation pattern only).</li>
      <li>Change the API pattern (implementation pattern). </li>
    </ul>
  </li>
  <li><strong>I have a Swagger/RAML/WSDL/WADL document</strong>: If you choose this option, you can import an API description document for the API version.</li>
</ul>
<p class="apidoc_note"><strong>Note</strong>: In some cases, if an extension is in place, additional fields might appear in the bottom section of the <strong>Add API Version</strong> page. If so, these additional fields collect information about your API version. Fields might be required or optional and might be of various types such as text-based or numeric, multiple selection, or dates. If you have questions about any of these fields, check the in-page tooltip (question mark to the right of the field) for help.</p>
<p><a href="#top">Back to top</a></p>



<a name="api_version_edit"></a><h3>How do I edit an API version?</h3>
<p>To edit API version information follow the steps covered in <a href="#proc_api_edit">To edit basic data about an API or API version</a>. Version information is in the Advanced options on the right; see Step 5 in the procedure.</p>
<p><a href="#top">Back to top</a></p>


<a name="api_anonymous_access"></a><h3>Should I allow anonymous access?</h3>
<p>The <strong>Allow Anonymous Access</strong> option lets you enable or disable anonymous access to Sandbox and Live endpoints.</p>
<p>Allowing anonymous access to an API endpoint in a Sandbox implementation is useful if you want to offer a preview of an API to developers without requiring users to create an app or sign up to the platform. For example, if you have a specific feature set that you want to expose as part of promoting your API, you can expose those operations in your API configuration, and enable the Allow Anonymous Access option.</p>
<p>With anonymous access, developers can review your API documentation and try out the API without signing up and requesting access. If a developer tries out the API and likes it, he/she can then sign up, create an app on the platform, and request API access.</p>
<p>Your decision will depend on many factors including the nature of your app and your target audience.</p>
<p>We strongly recommend that you do <strong>not</strong> allow anonymous access to a Live implementation for security reasons. However, allowing anonymous access to a Sandbox implementation means that app developers can easily try out your API without having to set up an app on the platform.</p>
<p>Note that with anonymous access, viewing of metrics such as charts and logs is not supported.</p>
<p><a href="#top">Back to top</a></p>



<a name="api_approval_required"></a><h3>Should I require approval for API access requests?</h3>
<p>Requiring approval for API access requests introduces a delay for app developers, but gives you the chance for manual intervention and gives you greater control.</p>
<p>One approach is to allow anonymous access, with no approval required, for a Sandbox implementation, but to require approval for access to a Live implementation.</p>
<p>In some cases, you might decide that even though you are allowing anonymous access to a Sandbox implementation, you'll still require approval for an API access contract. If the API allows anonymous access, app developers can access it without connecting the app to the API; however, unless there is a connection contract, the API doesn't show up in the app's Test Client for testing. For this reason, app developers might prefer not to take advantage of the anonymous access, but to request a contract instead, so that your API is available for selection in Test Client.</p>
<p>Even in this scenario, you might choose to allow anonymous access to the Sandbox implementation, not require approval for contracts in the Sandbox implementation, but require approval for contracts in the Live implementation. App developers could then request a contract in the Sandbox environment and would get immediate access to your API.</p>
<p><a href="#top">Back to top</a></p>



<a name="what_is_a_proxy_api"></a>
<h3>Why would I use the platform to proxy my API?</h3>
<p>When you set up your API on the platform, using the platform as a proxy, your API is the Target API and the platform is the <a href="basics_glossary.htm#gl_proxyapi">Proxy API</a>. This allows you to configure an endpoint in a particular environment (for example, internal or external network) that is accessible by your target applications.</p>
<p>A proxy API endpoint exists in the Cloud and is similar to a virtual service. Users access the proxy that runs in the Cloud, rather than accessing the API endpoint directly. Traffic is channeled via the proxy to your target API. This is more secure for your API. You can also use a vanity hostname, to make things easier for your users.</p>
<p><strong>Advantages:</strong></p>
<p><strong>Internal / External Networks</strong>&#8212;If you want to access your real API on an internal network, but want to expose specific functionality on an external network, you can add the API Target URL using the <strong>Add a New API </strong>function, and then virtualize the API by specifying a Proxy API Target URL for specific functionality you want to make available on an external network.</p>
<p><strong>Bridge Between App and Proxy API</strong>&#8212;If your API is focused on the business aspects of the API or service, you can set up the proxy API to provide other tasks such as security enforcement or specifications required by the target (for example, API specs for the app team).</p>
<p><strong>Sandbox / Live Implementation Access</strong>&#8212;App developers can access either your Live implementation, Sandbox implementation, or both.</p>
<p><strong>Contract Enforcement</strong>&#8212;If you configure your API with a proxy, you can take advantage of the platform's contract enforcement functionality. Here's how it works:</p>
<ul>
  <li>When you add an API to the platform your policy administrator adds a series of security policies to the Tenant Organization for your platform using the Akana Policy Manager Console. Site or Policy Administrators can refer to the Akana API Platform Installation Guide for more information. <a href="basics_support.htm#how_do_i_contact_technical_support">Email Technical Support</a> for more information.</li>
  <li>In the platform, apps that would like to have access to your API submit and <strong>API Access Request</strong>.</li>
  <li>When the request is approved, the app is &quot;connected&quot; to the API.</li>
  <li>The security policies are in force when the app is connected to the API and ensure that only authorized applications can gain access to your API at runtime.</li>
  </ul>
<p><strong>Note</strong>: if your API is not configured with a proxy, you will need to provide your own firewall rules and security approach to restrict applications making calls to your API.</p>
<p><a href="#top">Back to top</a></p>



<a name="platform_support_of_overloaded_operations"></a><h3>Does the platform support overloaded operations?</h3>
<p>The platform supports adding <a href="basics_glossary.htm#gl_overloaded_operation">overloaded operations</a> in API Designer. Overloaded operations are displayed in the generated Swagger documentation for the API via <strong>API</strong> &gt; <strong>Documentation</strong> in the Akana API Portal.</p>
<p>However, the Swagger 2.0 standard specification does not support overloaded operations, so only one operation will show up in the generated API documentation. Also, if the Swagger documentation includes overloaded operations, the raw Swagger JSON is not available from <strong>API</strong> &gt; <strong>Details</strong> &gt; <strong>Implementations</strong> (bottom of page) &gt; links to definition language (on the right). Instead, an error message is returned. The platform supports display of the generated swagger documentation to API users viewing API documentation via <strong>API</strong> &gt;<strong>Document</strong>.</p>
<p><a href="#top">Back to top</a></p>




<div class = "divider1"></div>
<h3><a name="h_api_import_export"></a>Import/Export:</h3>




<a name="api_export"></a>
<h3>How do I export an API?</h3>
<p>You can export information about an API to an external file. You can then import that file to another instance of the platform. One use of this feature is to move data from one environment to another, such as from a development environment to a testing or Live implementation.</p>
<p>You can also choose whether or not to export additional data associated with the API, such as policies, contracts, scopes, and documentation.</p>
<h5>To export an API:</h5>
<ol>
  <li>Log in to the Akana API Platform and go to the overview page for your API.</li>
  <li>From the left menu bar, choose <strong>Details</strong>. The summary of the API design is displayed on the <strong>Details</strong> page.</li>
  <li>In the top section, click the drop-down, and choose <strong>Export</strong>.</li>
  <li>In the Export dialog, choose the versions you want to export (Current or All) and the options. If you want to export all information about the API, check all boxes. You can export the following data associated with the API:
    <ul>
      <li>Export Operational Policies</li>
      <li>Export QoS Policies</li>
      <li>Export API Administrators<br />
        <strong>Note</strong>: the relationship of the user as an API admin is exported, but the user is not exported. The user must exist in the target environment. If the user does not exist when the information is imported, the API is created without that admin. From there, either a) the user can sign up and be invited to be an admin, b) the user can sign up and the API data can be reimported, c) another individual can be designated as an API admin.</li>
      <li>Export API Implementation Services<br />
        <strong>Note</strong>: If the API was created using an existing service, this option allows you to choose whether or not to export the API implementation services, as set up in Policy Manager. If the API was created as a new service, implementation services are always exported along with API.</li>
      <li>Export API Contracts</li>
      <li>Export Scopes</li>
      <li>Export Resources/Documentation</li>
      <li>Export API PKI</li>
    </ul>
  </li>
</ol>
<ol>
  <li>Click <strong>Export</strong>.</li>
  <li>Choose to save or open the export file.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="api_export_file_contents"></a><h3>What are the contents of the API export file?</h3>
<p>The API export file includes all the core information about the API, as well as any of the optional additional information you specified.</p>
<p>The file has a very specific structure. It will look something like the image below:</p>
<p><img src="assets/export_file_api.jpg" alt="File structure for an API export file" /></p>
<p>The export file will generally include the following:</p>
<ul>
  <li>Files at root level: 
    <ul>
      <li><strong>objectgraph.xml</strong>: An XML file that shows the relationships between resources.</li>
      <li><strong>objectdata.xml</strong>: An XML-based  summary of all the data in the export file.</li>
      <li><strong>exportproperties.properties</strong>: a properties file showing which options were included in the export file.</li>
     </ul>
  </li>
  <li><strong>bpels</strong>: a folder containing XML business process files (<a href="basics_glossary.htm#gl_bpel_file">bpel files</a>). One for each operation, for each environment. So, for example, if the API has five operations, and runs in Sandbox and Live implementations, there are 10 bpel files.</li>
  <li><strong>services</strong>: a folder containing a subfolder for each environment, each subfolder containing a bpel.xml file for the applicable service/environment.</li>
  <li><strong>wsdls</strong>: a folder containing WSDL files for the service.</li>
</ul>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_import_an_api_from_an_export_file"></a>
<h3>How do I import an API from an export file?</h3>
<p>Once you've exported an API to an external ZIP file, it can be imported to another environment. For example, you can export from a development environment and then import to a testing or Live implementation.</p>
<p>The API Admin or Business Admin can export information about an API to an external file. However, only a Site Admin or Business Admin can import.</p>
<p>If you need help with import functions, contact your Administrator.</p>
<p>If you are an Administrator, refer to the Site Admin help.</p>
<p><a href="#top">Back to top</a></p>



<div class = "divider1"></div>



<h3 id="related_topics">Related Topics</h3>
<table width="98%" border="0" cellspacing="0" cellpadding="2" class="doctable">
  <tr>
    <td width="33%"><ul>
  <li><a href="apiadmin_getting_started.htm">Getting Started for API Developers</a></li>
  <li><a href="apiadmin_overview.htm">API Administration: Overview</a></li>
  <li><a href="api_admin_tutorial.htm">Tutorial (API Provider)</a></li>
  <li><a href="api_admin_management.htm">API Admin Management</a></li>
  <li><a href="bus_api_admin_forum.htm">Forum Moderation</a></li>
  <li><a href="apiadmin_promotion.htm">Promoting an API</a></li>
    </ul>
</td>
    <td width="33%"><ul>
  <li><a href="apiadmin_api_design.htm">Add or Modify an API Using API Designer</a></li>
  <li><a href="apiadmin_a_d_d_support.htm">API Description Document Support</a></li>
  <li><a href="apiadmin_implementations.htm">Manage API Implementations</a></li>
  <li><a href="api_admin_testing_tc.htm">API Testing with Test Client</a></li>
  <li><a href="api_admin_managing_contracts.htm">Managing Contracts for your API</a></li>
  <li><a href="api_admin_monitoring.htm">Monitoring API Analytics</a></li>
    </ul></td>
    <td width="33%"><ul>
  <li><a href="api_admin_api_publishing.htm">API Visibility, Licenses, and Settings</a></li>
  <li><a href="api_admin_oauth_support.htm">OAuth Support</a></li>
  <li><a href="api_admin_content_guidelines.htm">Content Development Guidelines</a></li>
  <li><a href="api_admin_documentation_maintenance.htm">API Documentation Maintenance</a></li>
  <li><a href="api_admin_documentation_tagging.htm">API Documentation Tagging</a></li>
  <li><a href="api_admin_legal_agreement_maintenance.htm">Legal Agreement Maintenance</a></li>
  <li><a href="basics_glossary.htm">Glossary of Terms</a></li>
    </ul>
</td>
  </tr>
</table>


