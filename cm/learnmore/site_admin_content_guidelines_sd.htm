---
layout: page
title: Content Development Guidelines for Simple Dev | Site Administration | Community Manager Help
description: Guidelines for Site Admins managing content for Simple Developer theme, and content developers writing the content.
product: cm
category: ref
subcategory:
weight: 11
type: page
nav-title: Content Development in Simple Dev
no-nav: true
no-catalog: true
---
<h2 id="top">Content Development Guidelines for Simple Developer Theme</h2>
<p>Manage content pages for  Simple Developer theme (Simple Dev). Content pages are displayed in Simple Dev, but must be uploaded by the Site Admin in Default Theme.</p>
<p>Simple Dev has its own set of content pages that will display to all users. This document provides information specific to Simple Dev for writing, uploading, and managing Simple Dev content.</p>
<div class = "divider1"></div>



<h3 style="color: gray;">Table of Contents</h3>
<ol class="table_of_contents">
  <li><a href="#what_are_the_content_pages_in_sd">What are the content pages in Simple Dev?</a></li>
  <li><a href="#what_is_the_folder_structure_for_content_sd">What is the folder structure for content in Simple Developer Theme?</a></li>
  <li><a href="#where_do_i_upload_revisions_sd">Where do I upload revisions for the Simple Dev content pages?</a></li>
  <li><a href="#what_is_the_customization_zip_file_and_how_do_i_use_it_sd">What is the customization ZIP file and how do I use it?</a></li>
  <li><a href="#where_do_i_upload_api_doc_for_sd">Where do I upload API documentation for Simple Dev?</a></li>
  <li><a href="#how_do_i_code_links_in_sd">How do I code links in Simple Dev?</a></li>
  <li><a href="#how_do_i_use_css_sd">How do I use CSS with my Simple Dev pages?</a></li>
  <li><a href="#what_file_types_are_supported_for_content_sd">What file types are supported for content in Simple Dev?</a></li>
  <li><a href="#how_do_i_manage_my_content_assets_sd">How do I manage my content assets in Simple Dev?</a></li>
  <li><a href="#how_do_i_use_file_manager_sd">How do I use File Manager?</a></li>
  <li><a href="#limitations_coding_sd">Are there any limitations to HTML coding in Simple Dev?</a></li>
</ol>


<div class = "divider1"></div>



<a name="what_are_the_content_pages_in_sd"></a><h3>What are the content pages in Simple Dev?</h3>
<p>By default, Simple Dev has three content pages in the user interface:</p>
<ul>
  <li><strong>Documentation page</strong>: 
    <ul>
      <li>Filename: content/documentation/index.htm. </li>
      <li>URL: &lt;hostname&gt;/#!documentation</li>
      <li>Accessed: Via the Documentation link, center of top menu bar.</li>
    </ul>
  </li>
  <li><strong>Help page</strong>: 
    <ul>
      <li>Filename: content/help/index.htm. </li>
      <li> URL: &lt;hostname&gt;/#!help</li>
      <li>Accessed:  Via the Help link, right of top menu bar.</li>
    </ul>
  </li>
  <li><strong>Welcome page</strong>: 
    <ul>
      <li>Filename: content/welcome/index.htm. </li>
      <li>URL: &lt;hostname&gt;/#!welcome</li>
      <li>Accessed:  By clicking the logo at the top left.</li>
      </ul>
  </li>
  </ul>
<p>See also: <a href="#what_is_the_folder_structure_for_content_sd">What is the folder structure for content in Simple Developer Theme?</a> below.</p>
<p>You can, of course, create additional pages in the existing folders, or create new custom pages, as needed. This document includes general information on modifying and formatting existing pages and on creating additional pages within the same folder structure. To add custom pages to the user interface, or modify existing user interface pages, refer to the <a href="http://docs.soa.com/cm/share/cm_customizing_ui.htm" target="_blank">customization guide</a>.</p>
<p><a href="#top">Back to top</a></p>



<a name="what_is_the_folder_structure_for_content_sd"></a><h3>What is the folder structure for content in Simple Developer theme?</h3>
<p>Simple Developer theme, by default, includes three content files/folders, as explained in <a href="#what_are_the_content_pages_in_sd">What are the content pages in Simple Dev?</a> above.</p>
<p>In the file system, these are represented by a structure of three subfolders in the main /<strong>content</strong>/ folder:</p>
<ul>
  <li>content/documentation/index.htm</li>
  <li>content/help/index.htm</li>
  <li>content/welcome/index.htm</li>
</ul>
<p><a href="#top">Back to top</a></p>



<a name="where_do_i_upload_revisions_sd"></a><h3>Where do I upload revisions for the Simple Dev content pages?</h3>
<p>The Site Admin can upload a revised file in Community Manager (default theme).</p>
<p>For instructions, see <a href="site_admin_config.htm#how_do_i_upload_content_sd">How do I upload content for Simple Developer theme?</a> (Site Admin Configuration help).</p>
<p><a href="#top">Back to top</a></p>



<a name="what_is_the_customization_zip_file_and_how_do_i_use_it_sd"></a><h3>What is the customization ZIP file and how do I use it?</h3>
<p>A customization ZIP file is available to help you get started with customizing your content. You can upload the ZIP file in File Manager and view examples of linking, and other instructions, or you can unzip to your local drive and use those files as a basis for further customization.</p>
<p>To get a copy of the customization file, <a href="basics_support.htm#how_do_i_contact_technical_support">contact Technical Support</a>.</p>
<h5>To update the Simple Developer customization ZIP file</h5>
<ol>
  <li>Log in to the platform (Default Theme) as a Site Administrator.</li>
  <li>Navigate to <em> Administration</em> &gt; <em>Config &gt; Resources</em>.</li>
  <li>In the <em>Content</em> section, click <strong>File Manager</strong> to access the Content folder.</li>
  <li>Click <strong>Upload a Zip Archive</strong>.</li>
  <li>Navigate to the location of the ZIP file and upload it. The content is automatically unzipped as part of the upload process.</li>
  <li>Test by viewing in Simple Developer theme.
    <p><strong>Note</strong>: to see the update immediately, you will need to clear cache and refresh the page. Cache is updated automatically every hour.</p></li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="where_do_i_upload_api_doc_for_sd"></a><h3>Where do I upload API documentation for Simple Dev?</h3>
<p>In the Simple Dev user interface, the Documentation link gives access to the default location for API documentation.</p>
<p>In the content folder structure, it is in the /<strong>documentation</strong> subfolder: <strong>content/documentation/index.htm</strong>. </p>
<p>You can create as much API documentation content as is needed, including:</p>
<ul>
  <li>Adding files</li>
  <li>Adding assets such as images</li>
  <li>Adding links</li>
  <li>Adding CSS definitions and referencing the CSS from your files</li>
</ul>
<p>It's a good idea to keep the basic folder structure and build on that, keeping index.htm as the main entry page. For example, let's say you have three APIs on the platform. You could:</p>
<ul>
  <li>Create a subfolder for each API, so you can keep the three sets of files separate.</li>
  <li>Keep one API-specific main page in the root /<strong>documentation</strong> folder. Link from the main index page to the API-specific pages, and from there to the content in each subfolder.</li>
  <li>Create a separate /<strong>styles</strong> subfolder and keep your CSS file in there, linking to it with relative links from your content files. Alternatively, if you want different styles for each API project, you could store a separate CSS file for each API in the applicable folder&#8212;or have a style subfolder for each API.</li>
</ul>
<p>Depending on the number of assets you have, you might want one assets folder for all API documentation files, or might prefer to have an assets subfolder for each API. The only constraints are file type (see <a href="#what_file_types_are_supported_for_content_sd">What file types are supported for content in Simple Dev?</a> below).</p>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_code_links_in_sd"></a>
<h3>How do I code links in Simple Dev?</h3>
<p>Coding of links in Simple Dev essentially follows HTML standard for coding of links, with one or two differences.</p>
<p>The sections below explain each type of link, with examples.</p>
<p>To experiment with  working examples of each link type, upload the customization ZIP file. See <a href="#what_is_the_customization_zip_file_and_how_do_i_use_it_sd">What is the customization ZIP file and how do I use it?</a> above.</p>
<p>Link types include:</p>
<ul>
  <li><a href="#link_same_file_sd">Link to another location in the same document</a></li>
  <li><a href="#link_another_file_same_folder_sd">Link to a content file in the same folder</a></li>
  <li><a href="#link_another_file_subfolder_sd">Link to a content file in a subfolder</a></li>
  <li><a href="#link_another_file_parent_folder_sd">Link to a content file in a parent folder</a></li>
  <li><a href="#link_doc_page_to_doc_page_sd">Link from a platform content page to another content page</a></li>
  <li><a href="#link_platform_page_to_doc_page_sd">Link from a platform UI page to a content page</a></li>
  <li><a href="#link_doc_page_to_platform_page_sd">Link from a content page to a platform UI page</a></li>
  <li><a href="#link_to_subfolder_doc_page_sd">Link to a content page in a platform subfolder</a></li>
  <li><a href="#external_link_sd">Link to an external site or document</a></li>
</ul>

<a name="link_same_file_sd"></a>
<h4>Link to another location in the same document</h4>
<p>Use the standard # coding as shown below.</p>
<pre>&lt;p&gt;For more information, see &lt;a href=&quot;#section_2&quot;&gt;Section 2&lt;/a&gt;.&lt;/p&gt;</pre>


<a name="link_another_file_same_folder_sd"></a><h4>Link to a content file in the same folder</h4>
<p>Use a standard &lt;a href&gt; link with the filename, as shown below.</p>
<pre>For more information about the ACME Payments API, see 
&lt;a href=&quot;index_pmt_api.htm&quot;&gt;ACME Payments API: Overview&lt;/a&gt;.&lt;/p&gt;</pre>


<a name="link_another_file_subfolder_sd"></a><h4>Link to a content file in a subfolder</h4>
<p>Use a standard &lt;a href&gt; link with the relative path and the filename, as shown below.</p>
<pre>&lt;p&gt;For more information about security with the ACME Payments API, see 
&lt;a href=&quot;api_payments/acmepaymentsapi_security.htm&quot;&gt;Security&lt;/a&gt;.&lt;/p&gt;</pre>


<a name="link_another_file_parent_folder_sd"></a><h4>Link to a content file in a parent folder</h4>
<p>Use a standard &lt;a href&gt; link with the relative path and the filename, as shown below.</p>
<pre>&lt;p&gt;For an overview of the ACME Payments API, see 
&lt;a href=&quot;../index_pmt_api.htm&quot;&gt;ACME Payments API: Overview&lt;/a&gt;.&lt;/p&gt;
</pre>


<a name="link_doc_page_to_doc_page_sd"></a><h4>Link from a platform content page to another content page</h4>
<p>Normally, when coding a relative link to another file, you must include the full filename, including extension, and take into account folder names that you might need to reference in going up or down the folder structure from one folder to another, as in the examples shown above.</p>
<p>When coding a link to a platform user interface page or main platform content page, you don't need to do that. Instead, you'll need to do two things:</p>
<ul>
  <li>Reference the page's unique name</li>
  <li>Apply this class on the link: <strong>soa-control-cm-route-link</strong>
  <p><strong>Note</strong>: This class might change in future versions of the product.</p></li>
</ul>
<p>Below are the URLs for the default platform content pages:</p>
<ul>
  <li>&lt;hostname&gt;/#!help</li>
  <li>&lt;hostname&gt;/#!documentation</li>
  <li>&lt;hostname&gt;/#!welcome</li>
</ul>
<p>For example, let's say you want to link from the Welcome index page to the Help index page. All you need to do is reference the unique name, <strong>help</strong>, as follows:</p>
<pre>&lt;p&gt;For more information about using the platform, visit the 
&lt;a class=&quot;soa-control-cm-route-link&quot; href=&quot;help&quot;&gt;Simple Dev Help Page&lt;/a&gt;.&lt;/p&gt;
</pre>


<a name="link_platform_page_to_doc_page_sd"></a>
<h4>Link from a platform UI page to a content page</h4>
<p>The approach explained in <a href="#link_doc_page_to_platform_page_sd">Link from a platform content page to another content page</a> above applies to links to all main platform content or UI pages.</p>
<p>Let's say you want to link from the Forum page to the Documentation index page. </p>
<p>First, look at the Documentation page in the browser; the URL is: &lt;hostname&gt;/#!documentation.</p>
<p>All you need to do is reference the unique name, <strong>documentation</strong>, with the <strong>soa-control-cm-route-link</strong> class on the link, as follows:</p>
<pre>&lt;p&gt;For more information about using the platform APIs, visit the 
&lt;a class=&quot;soa-control-cm-route-link&quot; href=&quot;documentation&quot;&gt;Documentation Page&lt;/a&gt;.&lt;/p&gt;
</pre>


<a name="link_doc_page_to_platform_page_sd"></a>
<h4>Link from a content page to a platform UI page</h4>
<p>The approach explained in <a href="#link_doc_page_to_platform_page_sd">Link from a platform content page to another content page</a> above applies to links to all main main platform content or UI pages.</p>
<p>Let's say you want to link from the platform help page to the Forum page.</p>
<p>First, look at the Forum page in the browser; the URL is: &lt;hostname&gt;/#!forum.</p>
<p>All you need to do is reference the unique name, <strong>forum</strong>, with the <strong>soa-control-cm-route-link</strong> class on the link, as follows:</p>
<pre>&lt;p&gt;For discussions and other information, visit the 
&lt;a class=&quot;soa-control-cm-route-link&quot; href=&quot;forum&quot;&gt;Forum Page&lt;/a&gt;.&lt;/p&gt;</pre>
<p><a href="#top">Back to top</a></p>


<a name="link_to_subfolder_doc_page_sd"></a><h4>Link to a content page in a platform subfolder</h4>
<p>The approach explained in <a href="#link_doc_page_to_platform_page_sd">Link from a platform content page to another content page</a> above applies to links to all main platform content or UI pages. However, if you want to link to an additional content page, either in the same folder as a main content page or in a subfolder, you will need to use the relative path.</p>
<p>You might need to do this to link to a specific help page that's supplementary to the main help page, or a specific API documentation page.</p>
<p>As an example, let's say you want to link from the platform help page to the overview page for a specific API, which is stored in a subfolder in the documentation section. The file name and location are as follows:</p>
<p><strong>\content\documentation\api_payments\index_api_payments.htm</strong></p>
<p>Since it isn't a main platform page, you'll need to use a relative path based on the file and folder structure within the /<strong>content</strong> folder.</p>
<p>So the link would look something like the below:</p>
<pre>&lt;p&gt;For information about using the Payments API, visit the 
&lt;a href=&quot;../documentation/api_payments/index_api_payments.htm&quot;&gt;Payments API Home Page&lt;/a&gt;.&lt;/p&gt;
</pre>



<a name="external_link_sd"></a>
<h4>Link to an external site or document</h4>
<p>When coding a link to an external site, document, or other file, first test the link yourself in the browser. Include <strong>target=&quot;_blank&quot;</strong> as shown below so that the site or document opens in a new browser tab or window rather than replacing the existing one.</p>
<pre>&lt;p&gt;For more information, visit &lt;a href=&quot;http://acmepaymentscorp.com/api&quot; target=&quot;_blank&quot;&gt;http://acmepaymentscorp.com/api&lt;/a&gt;.&lt;/p&gt; </pre>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_use_css_sd"></a>
<h3>How do I use CSS with my Simple Dev pages?</h3>
<p>The platform comes with some default styles for documentation. You can add or customize styles via CSS in the platform in the same way you would anywhere else.</p>
<p>Simply create a custom stylesheet (CSS) file, upload it to the platform, and reference it via relative links in the &lt;head&gt; tag of your files, following the basic content folder structure: see <a href="#what_is_the_folder_structure_for_content_sd">What is the folder structure for content in Simple Developer theme?</a></p>
<p>For example, if you want to use the same styles for all your platform content pages, you might choose to add a new subfolder in the Content folder, and store your custom CSS in there:</p>
<p><strong>/content/styles/acmepaymentscorp.css</strong></p>
<p>To reference this CSS file in your platform Welcome page, you'll just need an extra line in the &lt;head&gt; tag of your Welcome page, with the relative path to your CSS file:</p>
<pre>&lt;link href=&quot;../styles/acmepaymentscorp.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;</pre>
<p>If you have several APIs on your platform, you might choose to have different styles for each API. You could set up a folder structure in your /content/documentation folder, and store the CSS file for each project in the same folder, such as this:</p>
<ul>
  <li>content/documentation/API_1/api_1.css</li>
  <li>content/documentation/API_2/api_2.css</li>
  <li>content/documentation/API_3/api_3.css</li>
</ul>
<p>However you choose to structure your files, just use a relative link to the CSS in the &lt;head&gt; tag of your documentation file.</p>
<p><a href="#top">Back to top</a></p>



<a name="what_file_types_are_supported_for_content_sd"></a><h3>What file types are supported for content in Simple Dev?</h3>
<p>Simple Dev supports most standard file types you might want to use in documentation. For example, it supports the following:</p>
<ul>
  <li>Standard HTML files: htm, html</li>
  <li>Image files: gif, png, jpg</li>
  <li>PDF files: pdf</li>
  <li>Flash files: swf</li>
  <li>ZIP archive files: zip. Note that if you want to offer a ZIP file in your documentation--for example, to include an SDK&#8212;you must upload it as a single file. If you choose <strong>Upload a Zip Archive</strong>, File Manager unzips the files.</li>
</ul>
<p>For more information, see <a href="api_admin_content_guidelines.htm#can_i_add_other_types_of_content_to_my_api_documentation">Can I add other types of content to my API documentation?</a></p>
<p>If you want to use a file type that isn't listed above, test to see whether it is supported.</p>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_manage_my_content_assets_sd"></a><h3>How do I manage my content assets in Simple Dev?</h3>
<p>Managing your content assets in Simple Dev is the same as in any other file structure. Just organize your assets and refer to them by relative links.</p>
<p>For example, you might choose to create a subfolder for all your documentation assets:</p>
<p>/content/documentation/<strong>assets</strong></p>
<p>All files in the documentation folder, or any subfolders you create, can refer to those assets by simple relative links, in the same way as the references to the CSS stylesheets (see <a href="#how_do_i_use_css_sd">How do I use CSS with my Simple Dev pages?</a> above).</p>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_use_file_manager_sd"></a><h3>How do I use File Manager?</h3>
<p>File Manager is not available in the Simple Dev theme. In Default Theme, it is available for two audiences:</p>
<ul>
  <li>API Admins managing API content for Default Theme</li>
  <li>Site Admins managing site content for Default Theme or both site and API content for Simple Dev</li>
</ul>
<p>For Simple Dev content, the Site Admin can:</p>
<ul>
  <li>Upload individual files</li>
  <li>Upload a ZIP file</li>
  <li>Create folders</li>
  <li>Navigate up and down the file structure</li>
</ul>
<p>For information and procedures for working with File Manager, review the topics in the API Admin content management help under this heading: <a href="api_admin_content_guidelines.htm#h_using_file_manager">Using File Manager</a>.</p>
<p><a href="#top">Back to top</a></p>



<a name="limitations_coding_sd"></a><h3>Are there any limitations to HTML coding in Simple Dev?</h3>
<p>There is one known limitation to HTML coding in Simple Dev:  If an uploaded document has expandable/collapsible sections, those sections do not resize when viewed in the platform.</p>
<p><a href="#top">Back to top</a></p>



</div>

