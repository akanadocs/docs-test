---
layout: page
title: File Manager | Site Admin | Akana API Platform Help
description: Learn how to use File Manager to manage developer portal files such as help content and customized resources.
product: cm
category: learn
sub-nav-class: Site Administration
weight: 3224
type: page
nav-title: File Manager
---
<h1 id="top">File Manager</h1>
<p>Learn how to use File Manager to manage developer portal content files, such as help content and customized resources.</p>
<p><strong>Note</strong>: As well as working with content files, The Site Admin uses File Manager for uploading platform resource files, such as the site logo, custom styles, and any customized site pages. For information on these actions, see <a href="site_admin_customization.htm">Customization and Branding</a>. It is also used by the API Admin for uploading authored API documentation. See <a href="api_admin_documentation_maintenance.htm">API Documentation Maintenance</a>.</p>
<hr class="divide_hr" />



<h2 style="color: gray;">Table of Contents</h2>
<ol class="table_of_contents">
	<li><a href="#what_is_a_resource">What is a Resource?</a></li>
	<li><a href="#diff_resources_content">What's the difference between Resources and Content?</a></li>
	<li><a href="#what_is_the_folder_structure_for_content_default">What is the folder structure for content in Hermosa Theme?</a></li>
	<li><a href="#how_do_i_download_files">How do I download content or resource files?</a></li>
	<li><a href="#howto_content_upload">How do I upload content to the developer portal?</a></li>
	<li><a href="#how_do_i_find_the_resource_version_key">What is the Resource Version Key and how do I find it?</a></li>
	<li><a href="#resources_common_content">How do I set up platform content to include a piece of shared content that's referenced across multiple files?</a></li>
	</ol>


<h4 style="color: gray;"><a href="#h_content_simpledev">Managing Content in Simple Dev Theme:</a></h4>
<ol class="table_of_contents">
	<li><a href="#what_is_the_folder_structure_for_content_sd">What is the folder structure for content in Simple Developer Theme?</a></li>
	<li><a href="#how_do_i_develop_content_for_sd_theme">How do I develop content for Simple Developer theme?</a></li>
	<li><a href="#how_do_i_upload_content_sd">How do I upload content for Simple Developer theme?</a></li>
	</ol>


<hr class="divide_hr" />



<h2 id="what_is_a_resource">What is a Resource?</h2>
<p>In the context of the<!-- #BeginLibraryItem "/Library/hdr_more_admin.lbi" -->&nbsp;<strong>More</strong> &gt; <strong>Admin</strong> &gt;&nbsp;<!-- #EndLibraryItem --><strong>File Manager</strong> section available to the Site Admin, a Resource is any type of publishing artifact used in the construction of the platform UI presentation. This includes:</p>
<ul>
	<li> css style sheets</li>
	<li>Images</li>
	<li>Sprite files</li>
	<li>Site copy</li>
	<li>The site legal agreement</li>
	<li>API documentation, legal agreements, and downloadable files</li>
	<li>Online help documentation</li>
</ul>
<p><a href="#top">Back to top</a></p>



<h2 id="diff_resources_content">What's the difference between Resources and Content?</h2>
<p>When you log in as the Site Admin and go to the<!-- #BeginLibraryItem "/Library/hdr_more_admin.lbi" -->&nbsp;<strong>More</strong> &gt; <strong>Admin</strong> &gt;&nbsp;<!-- #EndLibraryItem --><strong>File Manager</strong> section, you'll see two buttons to access File Manager:</p>
<ul>
	<li><strong>Resources</strong>
	<p>The Resources button takes you to the /resources folder for your implementation. From here, you can upload files and create folders. Use this location for assets that do not require indexing, such as images and sprite files.</p>
	<p><strong>Note</strong>: For site styles, go to<!-- #BeginLibraryItem "/Library/hdr_more_admin.lbi" -->&nbsp;<strong>More</strong> &gt; <strong>Admin</strong> &gt;&nbsp;<!-- #EndLibraryItem --><strong>Customization</strong>; see <a href="site_admin_customization.htm#platform_styles_customize">I want to customize platform styles. What do I do?</a></p>
	</li>
	<li><strong>Content</strong>
		<p>The Content button takes you to the /content folder for your implementation. Here, you can upload customized content files for the platform help and the platform legal agreement. You can also upload API documentation and API legal agreements, for any APIs already created on the platform. If you're uploading API documentation, you'll need to know the APIID so that you choose the correct folder.</p>
		<p>Files uploaded to this location are indexed periodically, automatically, so that content is available for your site users when they use the Search feature to look for content.</p>
	</li>
</ul>
<p>For more information on the file and folder structure for your implementation, as it relates to files you might want to upload or customize, see <a href="#what_is_the_folder_structure_for_content_default">What is the folder structure for content in Hermosa Theme?</a> and <a href="#what_is_the_folder_structure_for_content_sd">What is the folder structure for content in Simple Developer Theme?</a> below.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="what_is_the_folder_structure_for_content_default">What is the folder structure for content in Hermosa Theme?</h2>
<p>If you're uploading content to the platform, via<!-- #BeginLibraryItem "/Library/hdr_more_admin.lbi" -->&nbsp;<strong>More</strong> &gt; <strong>Admin</strong> &gt;&nbsp;<!-- #EndLibraryItem --><strong>File Manager</strong> &gt; <strong>Content</strong>, you'll need to make sure you place files in the correct folders.</p>
<p>Clicking the <strong>Content</strong> button takes you to File Manager where you can create folders, navigate up and down the folder structure, and upload single files or ZIP files. When you're uploading files, it's important to make sure you're in the right folder. You cannot move files.</p>
<p>The Content button takes you to the top level of the folder structure, the <strong>/content</strong> folder. From there, the folder structure is as follows:</p>
<ul>
	<li><strong>/api</strong>: top folder for any API documentation. When an API is added on the platform, a documentation folder is created. Click through to a specific API to upload API documentation.</li>
	<li><strong>/home</strong>: top folder for site content. From here there are additional subfolders:
		<ul>
			<li><strong>/landing</strong> for the site landing page and legal agreement (ideally HTML and PDF, but only one agreement)</li>
			<li><strong>/learnmore</strong> where the site content files are located.</li>
			<li><strong>/signup/confirm</strong> for the signup page.</li>
			<li><strong>/support</strong> for the support page.</li>
		</ul>
	</li>
</ul>
<p>For example, let's say you want to customize the Support page. The URL for the page is: {hostname}/#/home/support. You would go to<!-- #BeginLibraryItem "/Library/hdr_more_admin.lbi" -->&nbsp;<strong>More</strong> &gt; <strong>Admin</strong> &gt;&nbsp;<!-- #EndLibraryItem --><strong>File Manager</strong> &gt; <strong>Content</strong>, to access the Content folder, navigate down to the home/support folder, and upload the new file. See <a href="site_admin_customization.htm#proc_custom_support_page">To customize the Support page for the developer portal</a>.</p>
<p>If needed, you can save out the existing HTML; choose to view the file in the browser, click View Source, and then copy the HTML. Or you can export the file set, which will include referenced assets.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="how_do_i_download_files">How do I download content or resource files?</h2>
<p>In File Explorer, you can download a ZIP file of the current directory including all files in the directory and all subfolders and their contents. You can download a ZIP of any content or resources that you are authorized to view and edit. Follow the instructions below.</p>
<h4>To download content or resource files</h4>
<ol>
	<li>Log in as a Site Admin and <a href="site_admin_overview.htm#admin_menu_siteadmin">go to the Admin section.</a></li>
	<li>Go to<!-- #BeginLibraryItem "/Library/hdr_more_admin.lbi" -->&nbsp;<strong>More</strong> &gt; <strong>Admin</strong> &gt;&nbsp;<!-- #EndLibraryItem --><strong>File Manager</strong>.</li>
	<li>Under either Resources or Content, click the File Manager button.</li>
	<li>Go to the directory you want to download (or stay in the current directory).</li>
	<li>Click <strong>Download </strong><strong>Directory</strong>.</li>
	<li>Choose to open or save the file.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="howto_content_upload">How do I upload content to the developer portal?</h2>
<p>Platform content typically consists of HTML files, images that are referenced in the content, any custom styles sheets that support the content, and reference material, such as PDF files or diagrams, that are linked in the content.</p>
<p>Content that you can add or customize includes:</p>
<ul>
	<li><strong>API Documentation Content</strong>&#8212;The /content/api directory includes a folder for each API that is added to the platform. When you initially add your API using the <strong>Add a New API</strong> function this folder is automatically generated and an id name is automatically assigned as the folder name; for example, <strong>api100.cm</strong>. API content is uploaded to this folder.</li>
	<li><strong>Online Help Content</strong>&#8212;You can use the /content/home/learnmore directory for any html and supporting graphic files you might want to add or modify for the platform Online Help.</li>
	<li><strong>Landing</strong> <strong>Page Content</strong>&#8212;The /content/home/landing directory includes HTML and supporting files that comprise the platform home page, including images, content, css styles sheets, and JavaScript files.</li>
	<li><strong>Developer Agreement</strong>&#8212;Upload the platform developer legal agreement to the /content/system/agreements directory, as shown below. You might have to create the path.
		<p><img src="assets/content_system_agreements.jpg" alt="Agreements folder" /></p>
	</li>
	<li><strong>Support</strong>&#8212;The /content/home/support directory includes the default Support page, <strong>index.html</strong>. Use this folder for any html and supporting graphic files that comprise the <strong>Support</strong> section of the platform.</li>
</ul>

<h4>To upload a content file to the developer portal</h4>
<ol>
	
	<li>Log in as a Site Admin and <a href="site_admin_overview.htm#admin_menu_siteadmin">go to the Admin section.</a></li>
	<li>Go to<!-- #BeginLibraryItem "/Library/hdr_more_admin.lbi" -->&nbsp;<strong>More</strong> &gt; <strong>Admin</strong> &gt;&nbsp;<!-- #EndLibraryItem --><strong>File Manager</strong>.</li>
	<li>In the <strong>Content</strong> section, click <strong>File Manager</strong>.</li>
	<li>Select the directory for the content area you would like to update.
		<p><img src="assets/resources_content.jpg" alt="" /></p></li>
	<li>Click <strong>Upload</strong>. The <strong>File Upload</strong> dialog box displays. Go to the file you want to upload and click <strong>Open</strong>.</li>
	<li>To upload the file to the selected directory, click <strong>Upload</strong>.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="how_do_i_find_the_resource_version_key">What is the Resource Version Key and how do I find it?</h2>
<p>UI resource files include all code-related components such as JavaScript files, templates, and stylesheets.</p>
<p>These types of files are cached for a long time, to improve performance, since generally the files do not change. The cache setting is one month.</p>
<p>For all resource files, the URL includes a dynamically-constructed unique ID, called a Resource Version Key.</p>
<p>If a new version of the platform resource files is uploaded, there is a new Resource Version Key. Because the URL is different, the next time the file is retrieved, the latest version replaces the older version. Therefore, a <a href="basics_glossary.htm#gl_cdn">CDN</a>, browser cache, forward proxy, etc. will need to make a new call to get the latest version. The change in the URL triggers the new call, and the updated resource is served.</p>
<p>The key is dynamically constructed every 10 minutes. This means that if you update a file, you won't see the change immediately. To see the update you'll need to do two things:</p>
<ol>
	<li>Wait for 10 minutes to be sure the content is updated.</li>
	<li>Refresh the page so you'll see the change.</li>
</ol>
<p>If you need to set up your platform version so that file updates are immediate, you'll need to:</p>
<ul>
	<li>Make sure you are not using any other components between the browser and the server, that might cache the file, such as a CDN, forward proxy, or reverse proxy.</li>
	<li>Clear the browser cache and refresh the page.</li>
</ul>
<p>The resource version key is used to construct the URL, but is not used when the request comes in. The server will always serve the latest file, independent of the version key specified in the URL. A request referencing an old version key will still get the new version in response.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="resources_common_content">How do I set up platform content to include a piece of shared content that's referenced across multiple files?</h2>
<p>In the documentation that you upload to the developer portal, you can reference one or more pieces of shared content across multiple content files by using special tags. When you update the piece of shared content, all files that reference it are automatically updated.</p>
<p> Some likely scenarios where you might want to use shared content:</p>
<ul>
	<li>To include a navigation element in your content files, such as a left menu or Related Topics section.</li>
	<li>To include a piece of content that might change frequently, such as information about updates or new features, in all files.</li>
</ul>
<p>In all cases, when you change one common content file that's referenced by one or more other files, all files are updated.</p>
<p>If your content includes similar information on multiple pages, it makes sense to use the common content feature, whether you have two content pages or 100.</p>
<p>To set up your files to use common content, you'll need to:</p>
<ol>
	<li>Define each piece of shared content as a separate file: see <a href="#common_content_defining_00">Defining a common content file</a>.</li>
	<li>Set up the files to reference the shared content: see <a href="#common_content_referencing_00">Setting up files to reference shared content</a>.</li>
	<li> Upload your files to the developer portal and test: see <a href="#common_content_testing_00">Uploading and Testing</a>.</li>
</ol>
<h4>Resources</h4>
<p>To help you get your files set up to reference shared content, you can use the following:</p>
<ul>
	<li><strong>Video</strong>: A short video demonstrating how the common content feature works and showing how the example files are put together: <a href="assets/vid_common_content.mp4" target="_blank">Common content overview video</a> (on this website)</li>
	<li><strong>Sample Files</strong>: A ZIP file of the example shown in the video so that you can upload and test for yourself. See <a href="assets/ex_common_content.zip">ex_common_content.zip</a>. The ZIP file includes:
		<ul>
			<li>Index page and four other simple content files that are tagged to reference two separate pieces of shared content.</li>
			<li>Two shared content files, both of which are referenced by all files. One shared content file is static text; the other is a navigational element that includes links.</li>
			<li>Readme file with simple setup instructions.</li>
			<li>CSS for the files.</li>
		</ul>
	</li>
</ul>

<h3 id="common_content_defining_00">Defining a common content file</h3>
<p>This section includes:</p>
<ul>
	<li><a href="#common_content_defining_01">File structure strategy</a></li>
	<li><a href="#common_content_defining_02">Shared content without links</a></li>
	<li><a href="#common_content_defining_03">Shared content with links</a></li>
</ul>
<h4 id="common_content_defining_01">File structure strategy</h4>
<p>It's a good idea to store shared content files together, perhaps in a subfolder, so that relative paths are simple and consistent. You can see a set of example files: download <a href="assets/ex_common_content.zip">ex_common_content.zip</a>. In the example files, all content files are in the <strong>learnmore</strong> folder, and shared content files are in the /<strong>common</strong> subfolder.</p>

<h4 id="common_content_defining_02">Shared comment without links</h4>
<p>If the common content file is just static text, with no links to other files, all you need to do is create a separate file with the HTML-coded content. Do not include &lt;head&gt; and &lt;body tags.</p>
<p> An example is shown below. This example could be used as a banner at the top of each file, to share upcoming news or to specify the product version for the content.</p>
<pre>&lt;hr/&gt;<br />&lt;h3&gt;Version Information&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The information in this file relates to version 1.5 of the product: release date 12 December 2017.&lt;/p&gt;
&lt;hr/&gt;</pre>
<p>Once you've created the content along the lines of the example above, if your content doesn't include links, you're done. Go to the next step: <a href="#common_content_referencing_01">Defining a file that references common content: Adding values in the &lt;head&gt; tag</a>.</p>

<h4 id="common_content_defining_03">Shared content with links</h4>
<p>If your shared content includes links, and your content files are stored in a directory structure, rather than all in one folder, you'll need to consider how to code any links that are in a shared content file.</p>
<p>It's best to use absolute links, which will work regardless of the location of the source and destination files. In the context of the developer portal, in practical terms, this means that the links are relative to the <strong>content root folder</strong> in the developer portal. The root is <strong>/home</strong>.</p>
<p>For example, if the link is to the main index page in the /learnmore folder, the code for the link might look like this:</p>
<pre>&lt;a href=&quot;/home/learnmore/index.htm&quot;&gt;Home page&lt;/a&gt;</pre>
<p>If the link is to a file in a /learnmore/examples subfolder, the path would be:</p>
<pre>&lt;a href=&quot;/home/learnmore/examples/example_01.htm&quot;&gt;Example 1&lt;/a&gt;</pre>
<p>Example of developer portal content pages:</p>
<ul>
	<li>The Action Dashboard page is /home/dashboard.</li>
	<li>The help content page is /home/learnmore.</li>
</ul>
<p>An example of a shared content file that includes links is shown below.</p>
<pre>&lt;ul&quot;&gt;
&lt;li&gt;&lt;a href=&quot;/home/learnmore/index.htm&quot; target=&quot;_parent&quot;&gt;Index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/home/learnmore/sample_page1.htm&quot;&gt;Sample Page 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/home/learnmore/sample_page2.htm&quot;&gt;Sample Page 2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</pre>
<p>In this example, to view the main index file (/home/learnmore/index.htm), you'd go to <strong>{protocol}://{hostname}/{tenantname}/#/home/learnmore</strong> in the developer portal. For example:</p>
<pre>
http://acmepaymentscorp.com/acmepaymentscorp/#/home/learnmore</pre>
<p>When you include the full path relative to the root content folder, the links work even if the piece of shared content is included in multiple files in different locations in your content folder structure.</p>
<p>Once you have the shared content ready, the next step is to code the source files so that they'll reference the shared content.</p>


<h3 id="common_content_referencing_00">Setting up files to reference shared content</h3>
<p>In each file that references a piece of shared content, you'll need to reference the <strong>dynamic_docs_lib.js</strong> file in the &lt;head&gt; tag and then reference the shared content file using the <strong>soa:include</strong> dynamic documentation tag.</p>
<p>This section includes:</p>
<ul>
	<li><a href="#common_content_referencing_01">Defining a file that references common content: Adding values in the &lt;head&gt; tag</a></li>
	<li><a href="#common_content_referencing_02">Defining a file that references common content: Coding the content location</a></li>
</ul>



<h4 id="common_content_referencing_01">Defining a file that references common content: Adding values in the &lt;head&gt; tag</h4>
<p>The developer portal's support of the ability to reference common content relies on code included in a specific file, <strong>dynamic_docs_lib.js</strong>. This file is included as part of your installation, but you'll need to reference it in a &lt;script&gt; tag, within the &lt;head&gt; tag of each file that will reference a piece of common content.</p>
<p>Include the following:</p>
<pre>&lt;script language=&quot;javascript&quot; src=&quot;/ui/apps/atmosphere/123/resources/console/SOA/console/common/dynamic_docs_lib/dist/dynamic_docs_lib.js&quot;type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</pre>
<p>An example of a complete &lt;head&gt; tag, including this extra line, is shown below:</p>
<pre>&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /&gt;
&lt;meta http-equiv="X-UA-Compatible" content="IE=edge" /&gt;
&lt;link rel="stylesheet" type="text/css" href="/resources/style/reset.css"/&gt;
&lt;link rel="stylesheet" type="text/css" href="/resources/style/base.css"/&gt;
&lt;link rel="stylesheet" type="text/css" href="../../style/document.css"/&gt;


&lt;script language="javascript" src="/ui/apps/atmosphere/123/resources/console/SOA/console/common/dynamic_docs_lib/dist/dynamic_docs_lib.js"type="text/javascript"&gt;&lt;/script&gt;
&lt;/head&gt;
</pre>
<p>Referencing this file gives you the additional capability to use the dynamic tag that you need to reference common content, but you still need to include the tag at the correct place in your document, as explained below.</p>

<h4 id="common_content_referencing_02">Defining a file that references common content: Coding the content location</h4>
<p>Within your content file, at the point where you want a piece of shared content to be included in the file, use the <strong>soa:include</strong> dynamic documentation tag, as shown below.</p>
<pre>&lt;soa:include file=&quot;{path}/{filename.htm}&quot;&gt;
&lt;div class=&quot;soa-ui-cm-dynamic-docs&quot;&gt;&lt;/div&gt;
&lt;/soa:include&gt;</pre>
<p>For example:</p>
<pre>&lt;soa:include file=&quot;/content/home/learnmore/common/include_relatedtopics.htm&quot;&gt;<br />&lt;div class=&quot;soa-ui-cm-dynamic-docs&quot;&gt;&lt;/div&gt;<br />&lt;/soa:include&gt;</pre>
<p><strong>Note</strong>: When referencing the included file within the dynamic document tag, the full path to the file needs to include /content/home as shown above. However, when linking between files, including the links in the included file itself, the path starts with /home. </p>


<h3 id="common_content_testing_00">Uploading and Testing</h3>
<p>Once you have your files set up:</p>
<ul>
	<li>ZIP them</li>
	<li><a href="#common_content_testing_01">Upload the content ZIP file to the developer portal</a></li>
	<li><a href="#common_content_testing_02">Test the content</a></li>
</ul>


<h4 id="common_content_testing_01">To upload the content ZIP file to the developer portal</h4>
<ol>
	<li>Log in as a Site Admin and <a href="site_admin_overview.htm#admin_menu_siteadmin">go to the Admin section.</a></li>
	<li>Go to<!-- #BeginLibraryItem "/Library/hdr_more_admin.lbi" -->&nbsp;<strong>More</strong> &gt; <strong>Admin</strong> &gt;&nbsp;<!-- #EndLibraryItem --><strong>File Manager</strong>.</li>
	<li>In the <strong>Content</strong> section, click <strong>File Manager.</strong> The File Manager opens at the /content folder.</li>
	<li>Navigate down two levels to home/learnmore.</li>
	<li>In the learnmore folder, click <strong>Upload a ZIP Archive</strong> and upload the file. The file unzips automatically.</li>
</ol>


<h4 id="common_content_testing_02">To test the content</h4>
<ol>
	<li>Go to the developer portal home page ({protocol}://{hostname}/{tenant}/#/home/landing)/).</li>
	<li>Change the last part of the URL from <strong>home/landing</strong> to <strong>home/learnmore</strong>.</li>
	<li>The main index page, <strong>index.htm</strong>, is displayed.</li>
	<li>Click through to files that have common content and make sure that the common content is displaying correctly.</li>
	<li>Click on links in included content.</li>
</ol>
<p>If there are any issues, check that you haven't missed any of the steps, starting at the top: see <a href="#common_content_defining_00">Defining a common content file</a>.</p>
<p>You can also upload the test ZIP file, <a href="assets/ex_common_content.zip">ex_common_content.zip</a>, and see how those files work.</p>
<p>For any fixes, you'll need to modify the external files and upload them to the developer portal again.</p>
<p><a href="#top">Back to top</a></p>



<hr class="divide_hr" />
<h2 id="h_content_simpledev">Managing Content in Simple Dev Theme:</h2>



<h2 id="what_is_the_folder_structure_for_content_sd">What is the folder structure for content in Simple Developer Theme?</h2>
<p>The Simple Developer theme shares the same file and folder structure as Hermosa Theme (see <a href="#what_is_the_folder_structure_for_content_default">What is the folder structure for content in Hermosa Theme?</a> above), but uses different folders for content.</p>
<p>Simple Developer theme, by default, includes the following three content files/folders:</p>
<ul>
	<li>Documentation page: documentation/index.htm. In the user interface, this is accessed via the Documentation link at the center of the top menu bar.</li>
	<li>Help page: documentation/index.htm. In the user interface, this is accessed via the Help link, right of top menu bar.</li>
	<li>Welcome page: documentation/index.htm. In the user interface, this is accessed by clicking on the logo at the top left.</li>
</ul>
<p>In the file system, these are represented by a structure of three subfolders in the main /content/ folder:</p>
<ul>
	<li>content/documentation/index.htm</li>
	<li>content/help/index.htm</li>
	<li>content/welcome/index.htm</li>
</ul>
<p>For more detailed information about content development and management for the Simple Developer theme, see <a href="site_admin_content_guidelines_sd.htm">Content Development Guidelines for Simple Developer Theme</a>.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="how_do_i_develop_content_for_sd_theme">How do I develop content for the Simple Developer theme?</h2>
<p>Content development for the Simple Developer theme is managed in the same way as content development for Hermosa Theme. The files share the same main folder structure, but there are unique subfolders for Simple Developer content.</p>
<p>In addition, you can develop and upload custom pages for Simple Dev.</p>
<p>For detailed information on working with Simple Developer content pages, including working with styles, linking, supported file formats, managing assets, and other information, refer to <a href="site_admin_content_guidelines_sd.htm">Content Development Guidelines for Simple Developer Theme</a>.</p>
<p>For information about uploading the files, see <a href="#how_do_i_upload_content_sd">How do I upload content for Simple Developer theme?</a></p>
<p><a href="#top">Back to top</a></p>



<h2 id="how_do_i_upload_content_sd">How do I upload content for Simple Developer theme?</h2>
<p>The Simple Developer theme shares the same file and folder structure as Hermosa Theme, but uses different folders for content. If you want to replace existing content, you must mirror the existing folder structure, as given in <a href="#what_is_the_folder_structure_for_content_sd">What is the folder structure for content in Simple Developer Theme?</a> above.</p>
<p>When you navigate to the <strong>content</strong> folder in File Explorer, you won't see these subfolders and files. However, to update the content, you must use identical folder and file names. Create the folder, click into the folder, and then upload the revised file, as explained below.</p>
<h4>To update a Simple Developer default page</h4>
<ol>
	<li>Log in as a Site Admin and <a href="site_admin_overview.htm#admin_menu_siteadmin">go to the Admin section.</a></li>
	<li>Go to<!-- #BeginLibraryItem "/Library/hdr_more_admin.lbi" -->&nbsp;<strong>More</strong> &gt; <strong>Admin</strong> &gt;&nbsp;<!-- #EndLibraryItem --><strong>File Manager</strong>.</li>
	<li>In the <strong>Content</strong> section, click <strong>File Manager</strong> to access the Content folder.</li>
	<li>Click <strong>New Directory</strong>, and create a folder with the exact name of the folder in which you want to update the content: for example, <strong>help</strong>.</li>
	<li>Click the new folder to go into it in File Explorer.</li>
	<li>Click Upload a File.</li>
	<li>Go to the location of the updated file and upload it. You can also upload a ZIP archive if you want to add multiple files or assets.
		<p><strong>Note</strong>: If you're uploading a ZIP file, make sure you're in the correct folder before uploading. The files are automatically unzipped as part of the upload process.</p></li>
	<li>Click <strong>Upload</strong>. The file is uploaded.</li>
	<li>Test by viewing in Simple Developer theme.
	<p><strong>Note</strong>: to see the update immediately, you will need to clear cache and refresh the page. Cache is updated automatically every hour, so there is a delay before developers see the new page.</p></li>
</ol>
<p>For more detailed information about content development and management for the Simple Developer theme, see <a href="site_admin_content_guidelines_sd.htm">Content Development Guidelines for Simple Developer Theme</a>.</p>
<p><a href="#top">Back to top</a></p>



<hr class="divide_hr" />



<h2 id="related_topics">Related Topics</h2>
<div class="relatedlinks" id="cmhelp_site_admin"><!-- #BeginLibraryItem "/Library/relatedtopics_site_admin.lbi" -->
<ul>
	<li><a href="site_admin_.htm">Site Admin Summary Page</a></li>
	<li><a href="site_admin_overview.htm">Site Admin Responsibilities</a></li>
	<li><a href="site_admin_agreements.htm">Platform Legal Agreement</a></li>
	<li><a href="site_admin_challenges.htm">Challenges</a></li>
	<li><a href="site_admin_config.htm">Configuration</a></li>
	<li><a href="site_admin_country_codes.htm">Country Codes</a></li>
	<li><a href="site_admin_customization.htm">Customization and Branding</a></li>
</ul>
<ul>
	<li><a href="site_admin_file_manager.htm">File Manager</a></li>
	<li><a href="site_admin_logins.htm">Logins</a></li>
	<li><a href="site_admin_settings.htm">Settings</a></li>
<li><a href="site_admin_site.htm">Site Settings</a></li>
	<li><a href="site_admin_site_admins.htm">Managing Site Admins</a></li>
	<li><a href="site_admin_users.htm">Managing User Accounts</a></li>
	<li><a href="site_admin_workflows.htm">Workflows</a></li>
</ul>
<ul>
	<li><a href="site_admin_promotion.htm">Promotion Feature</a></li>
	<li><a href="site_admin_tc.htm">Test Client</a></li>
	<li><a href="site_admin_es.htm">Elasticsearch Configuration</a></li>
	<li><a href="site_admin_content_guidelines_sd.htm">Content Development Guidelines for Simple Dev Theme</a></li>
	<li><a href="basics_glossary.htm">Glossary of Terms</a></li>
</ul><!-- #EndLibraryItem --></div>