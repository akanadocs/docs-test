---
layout: oauthapipage
title: OAuth - Using Tokens with OAuth 1.0a | Reference Material | Akana OAuth API
description: OAuth uses tokens to represent the authorization granted to the client by the resource owner. Typically, token credentials are issued by the server at the resource owner's request, after authenticating the resource owner's identity credentials (usually using a username and password).
product: cm
category: ref
nav-title: OAuth - Using Tokens with OAuth 1.0a 
no-nav: api
sub-nav: true
sub-nav-class: aaref
no-catalog: true
---

<div class="apidocContent">
<h2 id="top">OAuth: Using Tokens with OAuth 1.0a</h2>
<p>OAuth uses tokens to represent the authorization granted to the client by the resource owner. Typically, token credentials are issued by the server at the resource owner's request, after authenticating the resource owner's identity credentials (usually using a username and password).</p>
<p>The platform's OAuth Provider feature supports issuing request tokens and access tokens according to the OAuth 1.0a protocol.</p>
<p>The server can facilitate the provisioning of token credentials in many ways.</p>
<p>Below are details of one approach that uses HTTP redirection and the resource owner's user-agent. For each step, there is further information below, including links to documentation for specific API operations.</p>
<h5>Provisioning OAuth 1.0a token credentials using HTTP redirection and the resource owner's user-agent</h5>
<ol>
<li>The client application obtains a set of temporary credentials from the server (in the form of an identifier and shared secret). The temporary credentials are used to identify the access request throughout the authorization process. See <a href="#get_temporary_credentials">Get Temporary Credentials</a> below.</li>
<li>The resource owner authorizes the server to grant the client's access request (identified by the temporary credentials). </li>
<li>The client uses the temporary credentials to request a set of token credentials from the server. These token credentials will enable the client to access the resource owner's protected resources. See <a href="#get_token_credentials">Get Token Credentials</a> below.</li>
</ol>
<h3 id="get_temporary_credentials">Get Temporary Credentials</h3>
<p>Operations: <span class="apidoc_code"><a href="../oauth_oauth10/m_oauth10_generateRequestTokenPOST.htm">POST&nbsp;/oauth/oauth10/initiate</a></span> or <span class="apidoc_code"><a href="../oauth_oauth10/m_oauth10_generateRequestTokenGET_.htm">GWT&nbsp;/oauth/oauth10/initiate</a></span>.</p>
<p>The client obtains a set of temporary credentials from the server by making an authenticated HTTP (GET/POST) request to the Temporary Credential Request endpoint.</p>

<h5>Request</h5>
<table class="tableparmsresponse">
  <thead>
    <tr>
      <th style="width:20%">Header</th>
      <th style="width:80%">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>URL</td>
      <td>{oauth-provider-url}/oauth/oauth10/initiate</td>
    </tr>
    <tr>
      <td>Action</td>
      <td>GET/POST</td>
    </tr>
    <tr>
      <td>Request Headers</td>
      <td><p>Content-Type: application/x-www-form-urlencoded (if POST)<br />
Authorization: OAuth realm=[realm],<br />
&nbsp;&nbsp;oauth_consumer_key=[Client ID],<br />
&nbsp;&nbsp;oauth_signature_method=[Signature Method],<br />
&nbsp;&nbsp;oauth_callback=[Client Redirect URI],<br />
&nbsp;&nbsp;oauth_timestamp=[Timestamp],<br />
&nbsp;&nbsp;oauth_nonce=[Nonce],</p>
&nbsp;&nbsp;oauth_signature=[Signature]</td>
    </tr>
  </tbody>
</table>


<h5>Request Parameters</h5>
<table class="tableparmsresponse">
  <thead>
    <tr>
      <th style="width:20%">Header</th>
      <th style="width:80%">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>oauth_callback</td>
      <td>An absolute URI back to which the server will redirect the resource owner when the Resource Owner Authorization is completed. If the client is unable to receive callbacks or a callback URI has been established via other means, the parameter value MUST be set to &quot;oob&quot; (case sensitive), to indicate an out-of-band configuration.</td>
      </tr>
    <tr>
      <td>oauth_consumer_key</td>
      <td>The client identifier.</td>
    </tr>
    <tr>
      <td>oauth_signature_method</td>
      <td>The signature method. For valid values, see <a href="Ref_Values.htm#values_oauth_signature_method">OAuth Signature Method (1.0a) values</a>.</td>
    </tr>
    <tr>
      <td>realm</td>
      <td><!-- #BeginLibraryItem "/Library/oauth_realm.lbi" -->The domain name for the OAuth provider. For more information, see <a href="http://tools.ietf.org/html/rfc2617#section-1.2" target="_blank">http://tools.ietf.org/html/rfc2617#section-1.2</a>.<!-- #EndLibraryItem --></td>
    </tr>
    <tr>
      <td>oauth_nonce</td>
      <td>The random <a href="../Ref_Glossary_CommunityPlatform.htm#gl_nonce">nonce</a> value. The nonce value <strong>must</strong> be unique across all requests with the same timestamp, client credentials, and token combinations.</td>
    </tr>
    <tr>
      <td>oauth_timestamp</td>
      <td>The timestamp value. Must be a positive integer. The timestamp is expressed in the number of seconds since January 1, 1970 00:00:00 GMT.</td>
    </tr>
    <tr>
      <td>oauth_signature</td>
      <td><p>The signature base string: a consistent, reproducible concatenation of several of the HTTP request elements into a single string. The string is used as an input to the signature method.</p>
        <p>The signature base string includes the following components of the HTTP request:</p>
        <ul class="apidoctable_ul">
        <li>The HTTP request method (GET or POST).</li>
        <li>The authority, as declared by the HTTP <strong>host</strong> field in the request header.</li>
        <li>The path and query components of the request resource URI.</li>
        <li>The protocol parameters, excluding the <strong>oauth_signature</strong>.</li>
        </ul>
        <p>The signature base string does not cover the entire HTTP request. Most important, it does not include the entity-body in most requests, nor does it include most HTTP entity-headers. It is important to note that the server cannot verify the authenticity of the excluded request components without using additional protections such as SSL/TLS or other methods.</p></td>
    </tr>
    </tbody>
</table>

<h5>Response</h5>
<pre>oauth_token=[Temporary token identifier]&amp;oauth_token_secret=[Temporary token secret]&amp;oauth_callback_confirmed=true</pre>

<h5>Response Parameters</h5>
<table class="tableparmsresponse">
  <thead>
    <tr>
      <th style="width:20%">Header</th>
      <th style="width:80%">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>oauth_token</td>
      <td>The temporary credentials identifier.</td>
    </tr>
    <tr>
      <td>oauth_token_secret</td>
      <td>The temporary credentials shared secret value.</td>
    </tr>
    <tr>
      <td>oauth_callback_confirmed</td>
      <td>Must be set to <strong>true</strong>.</td>
    </tr>
  </tbody>
</table>


<h5>Example</h5>
<pre>oauth_token=hdk48Djdsa&amp;oauth_token_secret=xyz4992k83j47x0b&amp;oauth_callback_confirmed=true</pre>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>



<h3 id="get_token_credentials">Get Token Credentials</h3>
<p>Operations: <span class="apidoc_code"><a href="../oauth_oauth10/m_oauth10_generateAccessTokenPOST_.htm">POST&nbsp;/oauth/oauth10/token</a></span> or <span class="apidoc_code"><a href="../oauth_oauth10/m_oauth10_generateAccessTokenGET.htm">GET&nbsp;/oauth/oauth10/token</a></span>.</p>
<p>The client obtains a set of token credentials from the server by making an authenticated HTTP (GET/POST) request to the Token Request endpoint.</p>
<h5>Request</h5>
<table class="tableparmsresponse">
  <thead>
    <tr>
      <th>Header</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>URL</td>
      <td>{oauth-provider-url}/oauth/oauth10/token</td>
    </tr>
    <tr>
      <td>Action</td>
      <td>GET/POST</td>
    </tr>
    <tr>
      <td>Request Headers</td>
      <td><p>Content-Type: application/x-www-form-urlencoded (if POST)<br />
        Authorization: OAuth realm=[realm],<br />
        oauth_consumer_key=[Client ID],<br />
        oauth_token=[Request Token],<br />
        oauth_signature_method=[Signature Method],<br />
        oauth_timestamp=[Timestamp],<br />
        oauth_nonce=[Nonce],<br />
        oauth_verifier=[Verification Code],<br />
        oauth_signature=[Signature]</p></td>
    </tr>
    </tbody>
</table>
<h5>Request Parameters</h5>
<table class="tableparmsresponse">
  <thead>
    <tr>
      <th style="width:20%">Header</th>
      <th style="width:80%">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>oauth_token</td>
      <td>The temporary token (request token) received from the OAuth server.</td>
    </tr>
    <tr>
      <td>oauth_consumer_key</td>
      <td>The client identifier.</td>
    </tr>
    <tr>
      <td>oauth_signature_method</td>
      <td>The signature method. For valid values, see <a href="Ref_Values.htm#values_oauth_signature_method">OAuth Signature Method (1.0a) values</a>.</td>
    </tr>
    <tr>
      <td>realm</td>
      <td><!-- #BeginLibraryItem "/Library/oauth_realm.lbi" -->The domain name for the OAuth provider. For more information, see <a href="http://tools.ietf.org/html/rfc2617#section-1.2" target="_blank">http://tools.ietf.org/html/rfc2617#section-1.2</a>.<!-- #EndLibraryItem --></td>
    </tr>
    <tr>
      <td>oauth_nonce</td>
      <td>The random <a href="../Ref_Glossary_CommunityPlatform.htm#gl_nonce">nonce</a> value. The nonce value <strong>must</strong> be unique across all requests with the same timestamp, client credentials, and token combinations.</td>
    </tr>
    <tr>
      <td>oauth_timestamp</td>
      <td>The timestamp value. Must be a positive integer. The timestamp is expressed in the number of seconds since January 1, 1970 00:00:00 GMT.</td>
    </tr>
    <tr>
      <td>oauth_verifier</td>
      <td>The verification code received from the OAuth server in the authorization step.</td>
    </tr>
    <tr>
      <td>oauth_signature</td>
      <td><p>The signature base string: a consistent, reproducible concatenation of several of the HTTP request elements into a single string. The string is used as an input to the signature method.</p>
        <p>The signature base string includes the following components of the HTTP request:</p>
        <ul class="apidoctable_ul">
          <li>The HTTP request method (GET or POST).</li>
          <li>The authority, as declared by the HTTP <strong>host</strong> field in the request header.</li>
          <li>The path and query components of the request resource URI.</li>
          <li>The protocol parameters, excluding the <strong>oauth_signature</strong>.</li>
        </ul>
        <p>The signature base string does not cover the entire HTTP request. Most important, it does not include the entity-body in most requests, nor does it include most HTTP entity-headers. It is important to note that the server cannot verify the authenticity of the excluded request components without using additional protections such as SSL/TLS or other methods.</p></td>
    </tr>
  </tbody>
</table>

<h5>Response</h5>
<pre>oauth_token=[Token identifier]&amp;oauth_token_secret=[Token shared secret]</pre>

<h5>Response Parameters</h5>
<table class="tableparmsresponse">
  <thead>
    <tr>
      <th style="width:20%">Header</th>
      <th style="width:80%">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>oauth_token</td>
      <td>The token identifier.</td>
    </tr>
    <tr>
      <td>oauth_token_secret</td>
      <td>The token shared secret value.</td>
    </tr>
  </tbody>
</table>


<h5>Example</h5>
<pre>oauth_token=j49ddk933skd9dks&amp;oauth_token_secret=ll399dj47dskfjdk</pre>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>



<h3 id="relatedtopics">Related Topics</h3><!-- #BeginLibraryItem "/Library/_RelatedTopics.lbi" -->
<div class="relatedlinks">
<ul>
	<li><a href="../index.htm">OAuth API: Overview</a></li>
	<li><a href="../Ref_Glossary_CommunityPlatform.htm">Glossary of Terms</a></li>
</ul>
<ul>
	<li><a href="../Ref_DocConventions.htm">Documentation Conventions</a></li>
	<li><a href="../Ref_API_Reference.htm">OAuth API: Reference Material</a></li>
</ul>
</div><!-- #EndLibraryItem --><hr />
</div>
