---
layout: oauthapipage
title: OAuth Operations - GET or POST | Reference Material | Akana OAuth API
description: Many of the  Akana OAuth operations are available with either HTTP GET or POST. This is per the OAuth specification. Each of these pairs of operations has essentially the same functionality, but relays the information in different ways.
product: cm
category: ref
nav-title: OAuth Operations - GET or POST 
no-nav: api
sub-nav: true
sub-nav-class: aaref
no-catalog: true
---

<div class="apidocContent">
<h2 id="top">OAuth Operations: GET or POST?</h2>
<p>Many of the  Akana OAuth operations are available with either HTTP GET or POST. This is per the OAuth specification. Each of these pairs of operations has essentially the same functionality, but relays the information in different ways.</p>
<p>Below is some additional information on the differences between the two approaches.</p>
<p>For a summary of the OAuth operations available, see <a href="../index.htm">OAuth Services: Overview</a>.</p>
<h5>Logging/Security</h5>
<p>In a lot of cases, as messages are relayed from one system to another, message logs record the URL, including all query parameters. In general, in the case of POST operations using Form parameters, the information becomes part of the payload, which is generally not logged. For this reason, POST can be considered to be a little more secure than GET.</p>
<h5>URL length limitations</h5>
<p>When a message is sent using HTTP GET, all the OAuth information is sent in the query parameters, which are part of the URL. Sometimes this is a lot of information. For example, if the id_token is included in the parameters, the URL could get very long.</p>
<p>Some browsers and applications have URL length limitations, and will strip the URL or refuse the message if the URL is longer than a certain size.</p>
<p>Depending on the general length of your OAuth messages and the systems you are using, this might be a reason to choose HTTP POST rather than GET.</p>
<h5>Header buffer limitations</h5>
<p>Some applications place a limit on the header buffer. When OAuth information is sent via HTTP GET, the information is conveyed in query parameters, and some of the values might be quite long. Query parameters go into the header. If there is a limitation on the header buffer, this could result in the message being cut off and/or refused.</p>
<p>Depending on the general length of your OAuth messages and the systems you are using, this might be a reason to choose HTTP POST rather than GET.</p>

<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<h3 id="relatedtopics">Related Topics</h3><!-- #BeginLibraryItem "/Library/_RelatedTopics.lbi" -->
<div class="relatedlinks">
<ul>
	<li><a href="../index.htm">OAuth API: Overview</a></li>
	<li><a href="../Ref_Glossary_CommunityPlatform.htm">Glossary of Terms</a></li>
</ul>
<ul>
	<li><a href="../Ref_DocConventions.htm">Documentation Conventions</a></li>
	<li><a href="../Ref_API_Reference.htm">OAuth API: Reference Material</a></li>
</ul>
</div><!-- #EndLibraryItem --><hr />
</div>
