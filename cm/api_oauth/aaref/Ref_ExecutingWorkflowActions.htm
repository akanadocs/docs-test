---
layout: oauthapipage
title: Executing Workflow Actions | Reference Material | Akana OAuth API
description: Certain types of activities on the platform must be done in a specific sequence. These are often managed by workflows. For example, generally an app is created, then a Sandbox contract is requested, and then a Production contract is requested. At some point the app might be deleted. These actions are sequential, at least in part. An app must be created before a contract is requested; an app must exist in order to be deleted.
product: cm
category: ref
nav-title: Executing Workflow Actions 
no-nav: oauthapi
sub-nav: true
sub-nav-class: aaref
no-catalog: true
---

<div class="apidocContent">
<h1 id="top">Executing Workflow Actions</h1>
<p>Certain types of activities on the platform must be done in a specific sequence. These are often managed by workflows. For example, generally an app is created, then a Sandbox contract is requested, and then a Production contract is requested. At some point the app might be deleted. These actions are sequential, at least in part. An app must be created before a contract is requested; an app must exist in order to be deleted.</p>
<p>Some examples of workflow actions are: requesting or approving an API contract, sending a group membership invitation, or changing the status of a ticket.</p>
<p>These actions, which change a resource from one state to another, are controlled by the Execute Workflow Action operation. This applies to the following services:</p>
<ul>
  <li>Groups: the <span class="apidoc_code">POST&nbsp;/api/groups/requests/{MembershipRequestID}/actions</span> operation</li>
  <li>Tickets: the <span class="apidoc_code">POST&nbsp;tickets/{ticketID}/actions</span> operation</li>
  <li>Contracts: the <span class="apidoc_code">POST&nbsp;/api/contracts/{ContractDN}/actions</span> operation</li>
</ul>
<p>In each case, the operation verifies two things before executing the workflow action:</p>
<ul>
  <li>The requestor is authorized to make the state change. For example, an API admin can approve or deny a request from an app to connect to the API; an app team member can cancel the app's request for access to an API.</li>
  <li>The state change is valid for the resource. To be valid, it must satisfy two conditions:
    <ul>
    <li>The &quot;from&quot; state is the current state of the resource.</li>
    <li>The &quot;to&quot; state is a valid state for the resource to transition to. For example, a ticket can change state from Closed to Reopened but not from Closed to Resolved.</li>
  </ul></li>
</ul>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<h2 id="relatedtopics">Related Topics</h2><!-- #BeginLibraryItem "/Library/_RelatedTopics.lbi" -->
<div class="relatedlinks">
<ul>
	<li><a href="../index.htm">OAuth API: Overview</a></li>
	<li><a href="../Ref_Glossary_CommunityPlatform.htm">Glossary of Terms</a></li>
</ul>
<ul>
	<li><a href="../Ref_DocConventions.htm">Documentation Conventions</a></li>
	<li><a href="../Ref_API_Reference.htm">OAuth API: Reference Material</a></li>
</ul>
</div><!-- #EndLibraryItem --><hr />
</div>
