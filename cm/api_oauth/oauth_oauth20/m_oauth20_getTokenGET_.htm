---
layout: oauthapipage
title: Get OAuth 2.0 Token (GET) | Authorization Server OAuth 2.0 Token Service | Akana OAuth API
description: Returns an OAuth 2.0 token using HTTP GET.
product: cm
category: ref
nav-title: Get OAuth 2.0 Token (GET) 
no-nav: oauthapi
sub-nav: true
sub-nav-class: oauth_oauth20
no-catalog: true
---

<div class="apidocContent">
<h1 id="top">GET&nbsp;/oauth/oauth20/token</h1>
<p><!-- #BeginLibraryItem "/Library/desc_oauth_oauth20_getTokenGET.lbi" -->Returns an OAuth 2.0 token using HTTP GET.<!-- #EndLibraryItem --></p>
<p class="apidoc_note"><strong>Note</strong>: there is a corresponding operation that performs the same action using HTTP POST: <a href="m_oauth20_getTokenPOST.htm"><span class="apidoc_code">POST&nbsp;/oauth/oauth20/token</span></a>. For information on why you might choose one or the other, see <a href="../aaref/Ref_OAuthGETorPOST.htm">OAuth Operations: GET or POST?</a></p>
<p>This operation works essentially the same as the corresponding POST operation. For information about using it, refer to <a href="m_oauth20_getTokenPOST.htm"><span class="apidoc_code">POST&nbsp;/oauth/oauth20/token</span></a>.</p>
<p><strong>Note</strong>: This operation might be disabled by a platform security setting in the Akana Administration Console. If the GET operation is disabled, the request is rejected with an HTTP 401 response code and this error message: <strong>The request is invalid</strong>. In this scenario, you can use the POST operation, which is more secure since information is not sent in parameters.</p>



<h2 id="relatedtopics">Related Topics</h2><!-- #BeginLibraryItem "/Library/_RelatedTopics.lbi" -->
<div class="relatedlinks">
<ul>
	<li><a href="../index.htm">OAuth API: Overview</a></li>
	<li><a href="../Ref_Glossary_CommunityPlatform.htm">Glossary of Terms</a></li>
</ul>
<ul>
	<li><a href="../Ref_DocConventions.htm">Documentation Conventions</a></li>
	<li><a href="../Ref_API_Reference.htm">OAuth API: Reference Material</a></li>
</ul>
</div><!-- #EndLibraryItem --><hr />
</div>
