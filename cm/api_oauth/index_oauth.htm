---
layout: apipage
title: OAuth Services - API Overview
description: The group of OAuth services include operations relating to the platform's activities relating to OAuth 1.0a and 2.0 support, including such functions as authentication, authorization, discovery, login, token management, and grant management.
product: cm
category: ref
weight: 02
nav-title: OAuth Services API Overview 
no-nav:
sub-nav: false
sub-nav-class:
no-catalog:
---

<h2><a name="top"></a>OAuth Services: Overview</h2>
<p>The group of OAuth services include operations relating to the platform's activities relating to OAuth 1.0a and 2.0 support, including such functions as authentication, authorization, discovery, login, token management, and grant management.</p>
<p>It includes:</p>
<ul>
  <li><a href="#svc_oauth_auz">OAuth Authorization Server Authorization Service</a></li>
  <li><a href="#svc_oauth_discovery">OAuth Authorization Server Discovery Service</a></li>
  <li><a href="#svc_oauth_admin">OAuth Authorization Server Grant Admin Service</a></li>
  <li><a href="#svc_oauth_jwks">OAuth Authorization Server JWK Set Service</a></li>
  <li><a href="#svc_oauth_login">OAuth Authorization Server Login Service</a></li>
  <li><a href="#svc_oauth_oauth10">OAuth Authorization Server OAuth 1.0a Token Service</a></li>
  <li><a href="#svc_oauth_oauth20">OAuth Authorization Server OAuth 2.0 Token Service</a></li>
  <li><a href="#svc_oauth_userinfo">OAuth UserInfo Service</a></li>
</ul>
<p><strong>URL</strong>:<span class="soaapidoc_endpoint"> <!-- #BeginLibraryItem "/Library/_endpointbase_oauth.lbi" -->https://{oauth-provider-url}/oauth/<!-- #EndLibraryItem --></span></p>
<p class="apidoc_note">Note: Many of the  Akana OAuth operations are available with either HTTP GET or POST. For information on why you might choose one or the other, see <a href="aaref/Ref_OAuthGETorPOST.htm">OAuth Operations: GET or POST?</a></p>



<h3><a name="svc_oauth_auz"></a>OAuth Authorization Server Authorization Service</h3>
<p>Provides operations for performing activities relating to the resource owner's interaction with the OAuth Provider&rsquo;s authorization endpoint during the grant setup/provisioning process. This service includes such activities as initiating a resource owner grant, authenticating the resource owner with the corresponding resource owner domain, and obtaining the resource owner's authorization for the application's access to the resources, with the specific scopes requested.</p>
<p>Calls to this service are always initiated by the resource owner, never by the application. Since the authorization endpoint is only used in <a href="Ref_Glossary_CommunityPlatform.htm#gl_oauth_grant_3legged">three-legged</a> scenarios, these operations are only used by three-legged grant types (<a href="Ref_Glossary_CommunityPlatform.htm#gl_oauth_grant_authorizationcode">Authorization Code</a> and <a href="Ref_Glossary_CommunityPlatform.htm#gl_oauth_grant_implicit">Implicit</a>).</p>
<p><strong>URL</strong>:<span class="soaapidoc_endpoint"> <!-- #BeginLibraryItem "/Library/_endpointbase_oauth.lbi" -->https://{oauth-provider-url}/oauth/<!-- #EndLibraryItem --></span>auz</p>
<!--<p>Note there is some duplication of operations between this service and the Grant Admin API and also the Login API. This is intentional so that all activities relating to managing the resource owner authorization process are in one place without need to use other services. Maybe TMI but noted.</p>-->

<table class="tableparmsresponse" width="100%" cellspacing="0"
	cellpadding="2" summary="table description">
  <thead>
    <tr bgcolor="#DDDDDD">
      <th width="20%">Action</th>
      <th width="20%">Endpoint</th>
      <th width="60%">Description</th>
    </tr>
    <tr>
      <td>authenticate complete (GET)</td>
      <td><a href="oauth_auz/m_auz_authenticateComplete.htm">GET&nbsp;/oauth/auz/grants/{GrantID}/authcomplete</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_auz_authenticateComplete.lbi" -->Supports redirect from the identity provider after the resource owner's login with the identity provider is complete.<!-- #EndLibraryItem --></td>
    </tr>
    <tr>
      <td>authenticate complete (POST)</td>
      <td><a href="oauth_auz/m_auz_authenticateCompletePOST.htm">POST&nbsp;/oauth/auz/grants/provider/authcomplete{domainid:(/[^/]+?)?}</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_auz_authenticateCompleteWithStaticCallbackUri.lbi" -->In scenarios where the resource owner will be authenticated with an SSO domain, this operation renders the authorization provider's authorization page.<!-- #EndLibraryItem --></td>
    </tr>
    <tr>
      <td>authenticate resource owner</td>
      <td><a href="oauth_auz/m_auz_authenticateResourceOwner.htm">POST&nbsp;/oauth/auz/grants/{GrantID}/authenticate</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_auz_authenticateResourceOwner.lbi" -->
Authenticates the resource owner. For SSO login, this operation renders the login domain; for LDAP domain, it accepts LDAP credentials such as username and password.<!-- #EndLibraryItem --></td>
    </tr>
    <tr>
      <td>complete resource owner authorization</td>
      <td><a href="oauth_auz/m_auz_completeResourceOwnerAuthorization.htm">GET&nbsp;/oauth/auz/grants/{GrantID}/auzcomplete</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_auz_completeResourceOwnerAuthorization.lbi" -->
Completes the process of authentication and authorization. Changes the grant status to Active or Rejected based on the authorization action, removes the temporary cookie that was in use during provisioning, and returns the resource owner to the redirect URI along with additional information such as the <strong>state</strong> parameter and the code, token, or id token.<!-- #EndLibraryItem --></td>
    </tr>
    <tr>
      <td>get client avatar</td>
      <td><a href="oauth_auz/m_auz_getClientAvatar.htm">GET&nbsp;/oauth/auz/grants/{GrantID}/client/picture</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_auz_getClientAvatar.lbi" -->
Returns the avatar image for the OAuth client, for display on the Authorization page where the resource owner authorizes the grant.<!-- #EndLibraryItem --></td>
    </tr>
    <tr>
      <td>get grant details</td>
      <td><a href="oauth_auz/m_auz_getGrantDetails.htm">GET&nbsp;/oauth/auz/grants/{GrantID}/details</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_auz_getGrantDetails.lbi" -->Returns detailed information about the specified OAuth grant, including the list of scopes.<!-- #EndLibraryItem --></td>
    </tr>
    <tr>
      <td>get OAuth Provider from Grant ID</td>
      <td><a href="oauth_auz/m_auz_getOAuthProviderFromGrantID.htm">GET&nbsp;/oauth/auz/grants/{GrantID}/provider</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_auz_getOAuthProviderFromGrantID.lbi" -->
Returns information about the OAuth Provider, based on the GrantID. <!-- #EndLibraryItem --></td>
    </tr>
    <tr>
      <td>get OAuth Provider logo from Grant ID</td>
      <td><a href="oauth_auz/m_auz_getOAuthProviderResourceFromGrantID.htm">GET&nbsp;/oauth/auz/grants/{GrantID}/provider/resources/logo</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_auz_getOAuthProviderResourceFromGrantID.lbi" -->Returns the logo for the OAuth provider, based on the specified GrantID, as part of the <a href="Ref_Glossary_CommunityPlatform.htm#gl_oauth_grantprovisioningui">OAuth grant provisioning UI</a>. In the developer portal, the logo is uploaded as part of the OAuth Provider domain setup (OAuth Provider domain setup, Branding tab). It can be retrieved using this operation. The resource name is always <strong>logo</strong>.<!-- #EndLibraryItem --></td>
    </tr>
    <tr>
      <td>request resource owner authorization (GET)</td>
      <td><a href="oauth_auz/m_auz_requestResourceOwnerAuthorizationGET.htm">GET&nbsp;/oauth/auz/authorize</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_auz_requestResourceOwnerAuthorizationGET.lbi" -->Starts the authentication of the resource owner. On success, the user sees a login page based on the resource owner domain configured by the OAuth provider, so the user can complete authentication. Similar functionality to SSO Login in the Login service. Uses HTTP GET.<!-- #EndLibraryItem --></td>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>request resource owner authorization (POST)</td>
      <td><a href="oauth_auz/m_auz_requestResourceOwnerAuthorizationPOST_.htm">POST&nbsp;/oauth/auz/authorize</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_auz_requestResourceOwnerAuthorizationPOST.lbi" -->Starts the authentication of the resource owner. On success, the user sees a login page based on the resource owner domain configured by the OAuth provider, so the user can complete authentication. Similar functionality to SSO Login in the Login service. Supported by both OAuth and OpenID Connect; OpenID Connect introduces some additional parameters, or additional values to existing parameters. Uses HTTP POST.<!-- #EndLibraryItem --></td>
    </tr>
  </tbody>
</table>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<h3><a name="svc_oauth_discovery"></a>OAuth Authorization Server Discovery Service</h3>
<p>Provides an operation for retrieving the Well-Known Configuration URL (Discovery Endpoint) for the OpenID Connect provider.</p>
<p><strong>URL</strong>:<span class="soaapidoc_endpoint"> see below.</span></p>

<table class="tableparmsresponse" width="100%" cellspacing="0"
	cellpadding="2" summary="table description">
  <thead>
    <tr bgcolor="#DDDDDD">
      <th width="20%">Action</th>
      <th width="20%">Endpoint</th>
      <th width="60%">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>get OpenID Connect well-known configuration</td>
      <td><a href="oauth_discovery/m_oauth_getOpenIdConnectWellknownConfiguration.htm">GET&nbsp;/.well-known/openid-configuration</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_getOpenIdConnectWellknownConfiguration.lbi" -->Returns the OpenID Connect configuration values from the provider's Well-Known Configuration Endpoint, per the specification (<a href="http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfigurationRequest" target="_blank">http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfigurationRequest</a>).<!-- #EndLibraryItem --></td>
    </tr>
  </tbody>
</table>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<h3><a name="svc_oauth_admin"></a>OAuth Authorization Server Grant Admin Service</h3>
<p>Provides functions associated with managing and querying on grants; for example, querying for a single grant or a list of grants, querying the client information, and performing workflow actions on grants. This service is available for resource owners, administrators, app team members, and applications.</p>
<p>The Grant Admin service is not to be used for grant provisioning; to manage these activities, use the <a href="#svc_oauth_auz">Authorization Server Authorization service</a>, which provides functions associated with grant provisioning for resource owners. There is some overlap between these two services, but each has its specific focus and audience.</p>
<p>This service is available through either OAuth Provider Agent or OAuth Provider.</p>
<p>When using this service, you must first get the necessary tokens using the <a href="#svc_oauth_login">Authorization Server Login service</a>.</p>
<p>For more information on using the Grant Admin service, with use cases and sample requests and responses, see <a href="aaref/Ref_OAuth_UsingTheGrantAdminAPI.htm">OAuth: Using the Grant Admin API</a>.</p>
<p><strong>URL</strong>:<span class="soaapidoc_endpoint"> <!-- #BeginLibraryItem "/Library/_endpointbase_oauth.lbi" -->https://{oauth-provider-url}/oauth/<!-- #EndLibraryItem --></span>admin</p>

<table class="tableparmsresponse" width="100%" cellspacing="0"
	cellpadding="2" summary="table description">
  <thead>
    <tr bgcolor="#DDDDDD">
      <th width="20%">Action</th>
      <th width="20%">Endpoint</th>
      <th width="60%">Description</th>
    </tr>
    <tr>
      <td>execute workflow action</td>
      <td><a href="oauth_admin/m_admin_executeWorkflowAction.htm">POST&nbsp;/oauth/admin/grants/{GrantID}/actions</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_admin_executeWorkflowAction_grants.lbi" -->Executes a valid workflow action associated with the specified OAuth grant.<!-- #EndLibraryItem --></td>
    </tr>
    <tr>
      <td>get client avatar</td>
      <td><a href="oauth_admin/m_admin_getClientAvatar.htm">GET&nbsp;/oauth/admin/clients/{ClientID}/picture</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_admin_getClientAvatar.lbi" -->
Returns the avatar for the specified OAuth client, based on the Client ID.<!-- #EndLibraryItem --></td>
    </tr>
    <tr>
      <td>get clients</td>
      <td><a href="oauth_admin/m_admin_getClients.htm">GET&nbsp;/oauth/admin/clients</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_admin_getClients.lbi" -->
Returns information about clients. For the provider admin, this operation returns a list of all client apps that have at least one grant; for the resource owner, it returns only the clients for which the resource owner has a grant.<!-- #EndLibraryItem --></td>
    </tr>
    <tr>
      <td>get grant client avatar</td>
      <td><a href="oauth_admin/m_admin_getGrantClientAvatar.htm">GET&nbsp;/oauth/admin/grants/{GrantID}/client/picture</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_admin_getGrantClientAvatar.lbi" -->
Returns the avatar for the client app associated with the specified OAuth Grant ID. For example, this could be used to create a page showing the resource owner a summary of grants that are currently authorized.<!-- #EndLibraryItem --></td>
    </tr>
    <tr>
      <td>get grant details</td>
      <td><a href="oauth_admin/m_admin_getGrantDetails.htm">GET&nbsp;/oauth/admin/grants/{GrantID}</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_admin_getGrantDetails.lbi" -->Returns detailed information about the specified OAuth grant, including the list of scopes.<!-- #EndLibraryItem --></td>
    </tr>
    <tr>
      <td>get OAuth Provider</td>
      <td><a href="oauth_admin/m_admin_getOAuthProvider.htm">GET&nbsp;/oauth/admin/provider</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_admin_getOAuthProvider.lbi" -->Returns information about an OAuth provider.<!-- #EndLibraryItem --></td>
    </tr>
    <tr>
      <td>list grants</td>
      <td><a href="oauth_admin/m_admin_listGrants.htm">GET&nbsp;/oauth/admin/grants</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_admin_listGrants.lbi" -->Returns information about OAuth grants.<!-- #EndLibraryItem --></td>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>update grant properties</td>
      <td><a href="oauth_admin/m-admin_updateGrantProperties.htm">PUT&nbsp;/oauth/admin/grants/{GrantID}/properties</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_updateGrantProperties.lbi" -->Updates information about the properties for the specified OAuth grant.<!-- #EndLibraryItem --></td>
    </tr>
  </tbody>
</table>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<h3><a name="svc_oauth_jwks"></a>OAuth Authorization Server JWK Set Service</h3>
<p>When the OpenID Connect provider uses asymmetric signatures and encryption using a JWK Set, the  keys must be shared. That functionality is provided by the JWK Set service.</p>
<p>For more information, refer to the specification: <a href="http://openid.net/specs/openid-connect-core-1_0.html#RotateSigKeys" target="_blank">http://openid.net/specs/openid-connect-core-1_0.html#RotateSigKeys</a>.</p>
<p><strong>URL</strong>:<span class="soaapidoc_endpoint"> <!-- #BeginLibraryItem "/Library/_endpointbase_oauth.lbi" -->https://{oauth-provider-url}/oauth/<!-- #EndLibraryItem --></span>jwks</p>

<table class="tableparmsresponse" width="100%" cellspacing="0"
	cellpadding="2" summary="table description">
  <thead>
    <tr bgcolor="#DDDDDD">
      <th width="20%">Action</th>
      <th width="20%">Endpoint</th>
      <th width="60%">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>get public JWK set</td>
      <td><a href="oauth_jwks/m_jwks_getPublicJwkSet.htm">GET&nbsp;/oauth/jwks</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_jwks_getPublicJwkSet.lbi" -->Returns information about the JWK Set for the specified OAuth Provider.<!-- #EndLibraryItem --></td>
    </tr>
  </tbody>
</table>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<h3><a name="svc_oauth_login"></a>OAuth Authorization Server Login Service</h3>
<p>Provides operations for activities relating to login in the context of OAuth, such as logging in and out and renewal of the authorization token. This service is primarily for use in activities relating to grant provisioning, which might need to be accessible to external clients; for example, it can be used by app administrators and provider administrators. Anyone that wants to interface with the OAuth Provider can use this service. Results from certain operations might be restricted depending on the roles and permissions of the user.</p>
<p>Although operations in this service can also be used for resource owners, corresponding operations are available in the <a href="#svc_oauth_auz">OAuth Authorization Server Authorization Service</a> for grant administration.</p>
<p><strong>URL</strong>:<span class="soaapidoc_endpoint"> <!-- #BeginLibraryItem "/Library/_endpointbase_oauth.lbi" -->https://{oauth-provider-url}/oauth/<!-- #EndLibraryItem --></span>login</p>

<table class="tableparmsresponse" width="100%" cellspacing="0"
	cellpadding="2" summary="table description">
  <thead>
    <tr bgcolor="#DDDDDD">
      <th width="20%">Action</th>
      <th width="20%">Endpoint</th>
      <th width="60%">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>log in</td>
      <td><a href="oauth_login/m_oauth_login_login.htm">POST&nbsp;/oauth/login</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_login.lbi" -->Allows a person to log in for the purposes of OAuth, and returns the OAuth authentication cookie. For users signed up on the platform; other users log in using the <span class="apidoc_code"><a href="oauth_login/m_oauth_login_ssoLoginPost.htm">POST&nbsp;/oauth/login/ssoLogin</a></span> operation.<!-- #EndLibraryItem --></td>
    </tr>

    <tr>
      <td>log out</td>
      <td><a href="oauth_login/m_oauth_login_logout.htm">GET&nbsp;/oauth/login/logout</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_login_logout.lbi" -->Destroys any authentication cookies associated with the current OAuth session.<!-- #EndLibraryItem --></td>
    </tr>
    <tr>
      <td>renew token (GET)</td>
      <td><a href="oauth_login/m_oauth_login_renewTokenGET_.htm">GET&nbsp;/oauth/login/renewToken</a></td>
      <td><p><!-- #BeginLibraryItem "/Library/desc_oauth_login_renewTokenGET.lbi" -->Renews an OAuth authentication token. Uses HTTP GET.<!-- #EndLibraryItem --></p>
        <p>For full documentation, refer to renew token (POST) (below).</p></td>
    </tr>
    <tr>
      <td>renew token (POST)</td>
      <td><a href="oauth_login/m_oauth_login_renewTokenPOST.htm">POST&nbsp;/oauth/login/renewToken</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_login_renewTokenPOST.lbi" -->Renews an OAuth authentication token. Uses HTTP POST.<!-- #EndLibraryItem --></td>
    </tr>
    <tr>
      <td>SSO login (GET)</td>
      <td><a href="oauth_login/m_oauth_login_ssoLoginGET_.htm">GET&nbsp;/oauth/login/ssoLogin</a></td>
      <td><p><!-- #BeginLibraryItem "/Library/desc_oauth_login_ssoLoginGET.lbi" -->Allows a user to log in for OAuth authorization purposes by authenticating with an identity provider that has its own login screen, providing SSO is enabled for the OAuth Provider and the identity provider it's using. Examples: Facebook, Google. Also for LDAP users. Uses HTTP GET.<!-- #EndLibraryItem --></p>
        <p>For full documentation, refer to SSO login (POST) (below).</p></td>
    </tr>
    <tr>
      <td>SSO login (POST)</td>
      <td><a href="oauth_login/m_oauth_login_ssoLoginPost.htm">POST&nbsp;/oauth/login/ssoLogin</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_login_ssoLoginPost.lbi" -->Allows a user to log in for OAuth authorization purposes by authenticating with an identity provider that has its own login screen, providing SSO is enabled for the OAuth Provider and the identity provider it's using. Examples: Facebook, Google. Sets the <a href="aaref/Ref_CookiesOnThePlatform.htm">OAuthToken_{OAuthProviderName}</a> cookie and redirects the user. Also for LDAP users. Uses HTTP POST.<!-- #EndLibraryItem --></td>
    </tr>
  </tbody>
</table>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<h3><a name="svc_oauth_oauth10"></a>OAuth Authorization Server OAuth 1.0a Token Service</h3>
<p>Provides operations for performing activities relating to the OAuth 1.0a Provider&rsquo;s token endpoint.</p>
<p>For a broader picture of how OAuth 1.0a token management works, see <a href="../_ref/Ref_OAuth_10a_Tokens.htm">OAuth: Using Tokens with OAuth 1.0a</a>.</p>
<p><strong>URL</strong>:<span class="soaapidoc_endpoint"> <!-- #BeginLibraryItem "/Library/_endpointbase_oauth.lbi" -->https://{oauth-provider-url}/oauth/<!-- #EndLibraryItem --></span>oauth10</p>

<table class="tableparmsresponse" width="100%" cellspacing="0"
	cellpadding="2" summary="table description">
  <thead>
    <tr bgcolor="#DDDDDD">
      <th width="20%">Action</th>
      <th width="20%">Endpoint</th>
      <th width="60%">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>generate access token (GET)</td>
      <td><a href="oauth_oauth10/m_oauth10_generateAccessTokenGET.htm">GET&nbsp;/oauth/oauth10/token</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_oauth10_generateAccessTokenGET.lbi" -->Generates an OAuth 1.0a access token using HTTP GET.<!-- #EndLibraryItem --></td>
    </tr>
    <tr>
      <td>generate access token (POST)</td>
      <td><a href="oauth_oauth10/m_oauth10_generateAccessTokenPOST_.htm">POST&nbsp;/oauth/oauth10/token</a></td>
      <td><p><!-- #BeginLibraryItem "/Library/desc_oauth_oauth10_generateAccessTokenPOST.lbi" -->Generates an OAuth 1.0a access token using HTTP POST.<!-- #EndLibraryItem --></p>
        <p>For full documentation, see the GET operation.</p></td>
    </tr>
    <tr>
      <td>generate request token (GET)</td>
      <td><a href="oauth_oauth10/m_oauth10_generateRequestTokenGET_.htm">GET&nbsp;/oauth/oauth10/initiate</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_oauth10_generateRequestTokenGET.lbi" -->Generates a request to the OAuth Provider for an OAuth 1.0a token, using HTTP GET.<!-- #EndLibraryItem --></td>
    </tr>
    <tr>
      <td>generate request token (POST)</td>
      <td><a href="oauth_oauth10/m_oauth10_generateRequestTokenPOST.htm">POST&nbsp;/oauth/oauth10/initiate</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_oauth10_generateRequestTokenPOST.lbi" -->Generates a request to the OAuth Provider for an OAuth 1.0a token, using HTTP POST.<!-- #EndLibraryItem --></td>
    </tr>
  </tbody>
</table>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<h3><a name="svc_oauth_oauth20"></a>OAuth Authorization Server OAuth 2.0 Token Service</h3>
<p>Provides operations for performing activities relating to the OAuth 2.0 Provider&rsquo;s token endpoint. </p>
<p>Calls to this service are always initiated by the application, never by the resource owner. Since the token endpoint is only used in <a href="Ref_Glossary_CommunityPlatform.htm#gl_oauth_grant_2legged">two-legged</a> scenarios, these operations are only used by two-legged grant types (<a href="Ref_Glossary_CommunityPlatform.htm#gl_oauth_grant_clientcredentials">Client Credentials</a> and <a href="Ref_Glossary_CommunityPlatform.htm#gl_oauth_grant_passwordcredentials">Resource Owner Password Credentials</a>).</p>
<p class="apidoc_note"><strong>Note</strong>: In the token endpoint there is a grant_type parameter that uses the value of <strong>refresh_token</strong> when obtaining an access token using a refresh token. This is per the OAuth specification: <a href="http://tools.ietf.org/html/rfc6749#section-6" target="_blank">http://tools.ietf.org/html/rfc6749#section-6</a>.</p>
<p><strong>URL</strong>:<span class="soaapidoc_endpoint"> <!-- #BeginLibraryItem "/Library/_endpointbase_oauth.lbi" -->https://{oauth-provider-url}/oauth/<!-- #EndLibraryItem --></span>oauth20</p>

<table class="tableparmsresponse" width="100%" cellspacing="0"
	cellpadding="2" summary="table description">
  <thead>
    <tr bgcolor="#DDDDDD">
      <th width="20%">Action</th>
      <th width="20%">Endpoint</th>
      <th width="60%">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>get token (GET)</td>
      <td><a href="oauth_oauth20/m_oauth20_getTokenGET_.htm">GET&nbsp;/oauth/oauth20/token</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_oauth20_getTokenGET.lbi" -->Returns an OAuth 2.0 token using HTTP GET.<!-- #EndLibraryItem --></td>
    </tr>
    <tr>
      <td>get token (POST)</td>
      <td><a href="oauth_oauth20/m_oauth20_getTokenPOST.htm">POST&nbsp;/oauth/oauth20/token</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_oauth20_getTokenPOST.lbi" -->Returns an OAuth 2.0 token using HTTP POST.<!-- #EndLibraryItem --></td>
    </tr>
  </tbody>
</table>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<h3><a name="svc_oauth_userinfo"></a>OAuth UserInfo Service</h3>
<p>Provides operations associated with the UserInfo Endpoint, &quot;an OAuth 2.0 Protected Resource that returns Claims about the authenticated End-User.&quot;</p>
<p>For more information, refer to the OpenID Connect specification: <a href="http://openid.net/specs/openid-connect-core-1_0.html#UserInfo" target="_blank">http://openid.net/specs/openid-connect-core-1_0.html#UserInfo</a>.</p>
<p><strong>URL</strong>:<span class="soaapidoc_endpoint"> <!-- #BeginLibraryItem "/Library/_endpointbase_oauth.lbi" -->https://{oauth-provider-url}/oauth/<!-- #EndLibraryItem --></span>userinfo</p>

<table class="tableparmsresponse" width="100%" cellspacing="0"
	cellpadding="2" summary="table description">
  <thead>
    <tr bgcolor="#DDDDDD">
      <th width="20%">Action</th>
      <th width="20%">Endpoint</th>
      <th width="60%">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>get authenticated user info (POST)</td>
      <td><a href="oauth_userinfo/m_userinfo_getAuthenticatedUserInfoPOST.htm">POST&nbsp;/oauth/userinfo</a></td>
      <td><!-- #BeginLibraryItem "/Library/desc_oauth_getAuthenticatedUserInfoPOST.lbi" -->
Returns information about the authenticated user. Uses HTTP POST.<!-- #EndLibraryItem --></td>
    </tr>
  </tbody>
</table>
<p class="apidoc_backtotop"><a href="#top">Back to top</a></p>


<h3 id="relatedtopics">Related Topics</h3><!-- #BeginLibraryItem "/Library/_RelatedTopics.lbi" -->
<table width="700" border="0" cellspacing="0" cellpadding="2">
  <tr>
    <td width="300"><ul>
  <li><a href="index_oauth.htm">OAuth API: Overview</a></li>
  <li><a href="Ref_Glossary_CommunityPlatform.htm">Glossary of Terms</a></li>
</ul>
</td>
    <td width="400"><ul>
  <li><a href="Ref_DocConventions.htm">Documentation Conventions</a></li>
  <li><a href="Ref_API_Reference.htm">OAuth API: Reference Material</a></li>
</ul>
</td>
  </tr>
</table><!-- #EndLibraryItem --><hr />
