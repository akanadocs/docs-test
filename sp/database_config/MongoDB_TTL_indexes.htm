---
layout: page
title: Managing MongoDB TTL Indexes
description: Learn how to manage the TTL index on MongoDB RAW collections, to configure deletion time.
product: sp
category: learn
weight: 08
sub-nav-class: Administration
type: page
nav-title: MongoDB TTL Indexes
---
<h1 id="top">Managing MongoDB TTL Indexes</h1>
<p>Learn how to manage the <a href="../../cm/learnmore/basics_glossary.htm#gl_ttl">TTL index</a> on MongoDB RAW collections, to configure deletion time.</p>
<h4 class="stamp">Valid in Version: 2020.2.0 and later</h4>
<hr class="divide_hr" />



<h2 style="color: gray;">Table of Contents</h2>
<ol class="table_of_contents">
	<li><a href="#overview">Overview: TTL indexes</a></li>
	
	<li><a href="#akana_ttl_usage">How the Akana Platform uses TTL indexes</a></li>
	<li><a href="#ttl_extending">Extending the TTL</a></li>
	<li><a href="#uc_ttl_extend">Use case: Extending the TTL</a></li>
	<li><a href="#xxx">Guidance</a></li>
</ol>
<hr class="divide_hr" />



<h2 id="overview">Overview: TTL indexes</h2>
<p>The platform uses MongoDB for xxx.</p>
<p>MongoDB built-in TTL (Time to Live) indexes allow you to control how long data is kept for. When the TTL setting is reached, the MongoDB document is deleted.</p>
<p>By default,  data added to the METRIC_RAW_DATA table is scheduled for deletion after 1 hour via a MongoDB TTL index.</p>
<p>In some cases, the MongoDB Administrator might want to modify the TTL indexes; for example, if the data is not being processed fast enough (see <a href="#uc_ttl_extend">Use case: Extending the TTL</a> below). </p>
<p>For information about modifying the MongoDB TTL indexes, refer to the MongoDB documentation: <a href="https://docs.mongodb.com/manual/core/index-ttl/" title="https://docs.mongodb.com/manual/core/index-ttl/" target="_blank">https://docs.mongodb.com/manual/core/index-ttl/</a>.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="akana_ttl_usage">How the Akana Platform uses TTL indexes</h2>
<p>{MKL said how we use TTL indexes. Is it the same in PM and EV? But not CM?}</p>
<p>Akana Envision requires MongoDB.</p>
<p>In the Akana Platform, analytics data is marked for deletion on TTL index columns after they have been aggregated into rollups.</p>
<p>{<span class="apidoc_red">MKL is there more we need to say here?</span>}</p>
<p><a href="#top">Back to top</a></p>



<h2 id="ttl_extending">Extending the TTL</h2>
<p>You might find that existing scripts cannot pull data fast enough, and data is therefore lost. In this scenario, you might want to extend the life of the data to accommodate the slower retrieval rate so that data is not lost.</p>
<p>To do this, you can extend the TTL, as covered in the MongoDB documentation: <a href="https://docs.mongodb.com/manual/core/index-ttl/" title="https://docs.mongodb.com/manual/core/index-ttl/" target="_blank">https://docs.mongodb.com/manual/core/index-ttl/</a>.</p>
<p>When external systems are interfacing with the raw data directly, extending the TTL, and therefore the life of the data, can give time to these processes to read the data.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="uc_ttl_extend">Use case: Extending the TTL</h2>
<p>Let's say that the ETL scripts that are in use {<span class="apidoc_red">MKL what is ETL here?</span>}  are not able to pull data fast enough, resulting in data loss. As a solution, you want to extend the life of the data by modifying the TTL.</p>
<p>Below is an example of extending the TTL in this scenario.</p>
<pre>db.runCommand({"collMod": &lt;collection&gt;,
    "index": {
           keyPattern: &lt;index_spec&gt;,
           expireAfterSeconds: &lt;seconds&gt;
     }
  })</pre>
<p>The below is a complete working example of modifying the TTL indexes: {<span class="apidoc_red">MKL: need a lead-in to the below example also.</span>}</p>
<pre>public static void main(String[] args) {
  MongoClientWrapper wrapper = new MongoClientWrapper("mongodb://localhost:27017");
  wrapper.setDefaultDB("METRIC_ROLLUP_DATA");
  wrapper.setDefaultCollection("TestDS1");
  wrapper.updateTTL(1);
}
public Document updateTTL(long newExpiry) {
  return updateTTL(getDefaultDB(), getDefaultCollection(), "value._deleteOn", newExpiry);
}
public Document updateTTL(String indexName, long newExpiry) {
  return updateTTL(getDefaultDB(), getDefaultCollection(), indexName, newExpiry);
}
public Document updateTTL(String dbName, String collectionName, String deleteOnKey, long newExpiry) {
  Document cmd = new Document("collMod", collectionName).
      append("index", new Document("keyPattern", new Document(deleteOnKey, 1))
                 .append("background", true)
                 .append("expireAfterSeconds", newExpiry));
  Document r = mongoClient.getDatabase(dbName).runCommand(cmd);
  logger.debug(r.toJson());
  return r;
}</pre>
<p><a href="#top">Back to top</a></p>



<h2 id="xxx">Guidance...</h2>
<p>Per ATMO-33863:</p>
<p>Must include guidance on data capture requirements if expanding this value and potential impact to Mongo DB cluster.</p>
<p>{<span class="apidoc_red">MKL? Not sure what to say here.</span>}</p>
<p><a href="#top">Back to top</a></p>