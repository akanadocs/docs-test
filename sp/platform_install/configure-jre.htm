---
layout: page
title: Configure Java Runtime
description: A guide to how to set up the Akana Platform to use an external JRE rather than the version included with installation.
product: sp
category: gs
sub-nav-class: Installation - Akana API Platform
weight: 11
type: page
nav-title: Configure Java Runtime
---
<h1 id="top">Configure Java Runtime</h1>
<p>A guide to how to set up the Akana Platform to use an external JRE rather than the version included with installation.</p>
<hr class="divide_hr" />



<h2 style="color: gray;">Table of Contents</h2>
<ul class="table_of_contents">
	<li><a href="#introduction">Introduction</a></li>
	<li><a href="#supported_jre_version">Supported JRE version</a></li>
	<li><a href="#finding_java">Find your Java installation / set JAVA_HOME environment variable</a></li>
	<li><a href="#update_keystore">Save the keystore/truststore and update the path {<span class="apidoc_red">query</span>}</a></li>
	<li><a href="#update_setdemsenv">Update the setDEMSenv.sh/setDEMSenv.bat file</a></li>
</ul>
<hr class="divide_hr" />



<h2 id="introduction">Introduction</h2>
<p>With regard to JRE, you can choose to install the Akana Platform:</p>
<ul>
	<li>With embedded JRE: for example, for 2020.2.0, the file for Windows is <strong>api-platform-win-jre-2020.2.2.zip</strong>. For information about the bundled JRE version, see <a href="../system_requirements/system_requirements_akana_platform_20202x.htm#sysreq_2020x_jre">JRE Version</a>. For the Java version bundled with other platform versions, refer to the applicable System Requirements document: go to <a href="../system_requirements/system_requirements_all.htm">System Requirements (all versions)</a> and choose your version.</li>
	<li>Without embedded JRE: for example, for 2020.2.0, the file is <strong>api-platform-no-jre-2020.2.2.zip</strong>. In this scenario, you must provide a compatible Java version and update your platform installation to point to your Java version.</li>
</ul>
<p>{<span class="apidoc_red">GWo: Linux comes only with JRE, no other option available. Does this affect this doc?</span>}</p>
<p>The Akana Platform with bundled JRE doesn't use the JAVA_HOME environment variable. Instead, it uses Java runtime, installed in the {platform_install}/jre folder. When you choose the installation ZIP file without embedded JRE, this folder does not exist in the installation.</p>
<p>If you have an existing installation and you're not sure which JRE version the platform is using, you can check it in your installation. See <a href="../../ag/troubleshooting/ts_pm_nd_02.htm#s02_08_05">Checking the JRE version</a> (troubleshooting guide).</p>



<h2 id="supported_jre_version">Supported JRE version</h2>
<p>For information about the Java version compatible with your Akana Platform version, refer to the applicable System Requirements document: go to <a href="../system_requirements/system_requirements_all.htm">System Requirements (all versions)</a> and choose your version. For example:</p>
<ul>
	<li>2020.2.x: <a href="../system_requirements/system_requirements_akana_platform_20202x.htm#sysreq_2020x_jre">JRE version</a></li>
	<li>2020.1.x: <a href="../system_requirements/system_requirements_akana_platform_20201x.htm#sysreq_2020x_jre">JRE version</a></li>
</ul>
<p><a href="#top">Back to top</a></p>



<h2 id="finding_java">Find your Java installation / set JAVA_HOME environment variable</h2>
<p>Depending on the operating system and how you installed the JRE, there are different ways of finding it. If you're on a Mac you could use this command:</p>
<pre>/usr/libexec/java_home</pre>
<p>This will show you the folder where Java is installed, and will also tell you what you should set in your profile for the <strong>JAVA_HOME</strong> variable. Then, set <strong>JAVA_HOME</strong>.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="update_keystore">Save the keystore/truststore and update the path {<span class="apidoc_red">query</span>}</h2>
<p>{<span class="apidoc_red">GWo: Moved this, see link in second para. But does it need to be in here at all? You mentioned referencing the procedure.</span>}</p>
<p>By default, when you install the Akana platform, the platform settings point to the default keystore/truststore location where the <strong>cacerts</strong> file is stored. This is inside the <strong>/{install_folder}/jre/lib/security</strong> folder, which is the packaged JRE.</p>
<p>For instructions on changing the default configuration, see <a href="installing_akana_api_platform_v20202.htm#update_keystore">Saving the keystore/truststore and updating the path</a> (install doc).</p>
<p>If you change the JRE, you must also copy the <strong>cacerts</strong> file to a new location, and update the settings so that the container can find the certificates.</p>
<p>For example, you could create a new folder, <strong>/{install_folder}/keystore</strong>, and copy the <strong>/{install_folder}/jre/lib/security/cacerts</strong> file to the <strong>/{install_folder}/keystore</strong> folder.</p>
<p><strong>Note</strong>: If you don't set up the new location for this file and update the properties as above, when you restart the container there will be issues due to missing certificates.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="update_setdemsenv">Update the setDEMSenv.sh/setDEMSenv.bat file</h2>
<p>{<span class="apidoc_red">CR info: I don’t update the setDEMSEnv.sh script. I set the JAVA_HOME in startup.sh and jython.sh scripts for Barclays. / I think the JIRA was to set the JAVA_HOME in setDEMSEnv.sh so the startup.sh and jython.sh can read this and use the JAVA_HOME variable set. / I don’t think we should use the environment variable, since there are times where the Ops group may install a JRE on the box and then the customer will want to install a separate JRE on the machine specific to Akana.</span> }</p>
<p>{<span class="apidoc_red">GWo: Not sure from the above whether we should say to do the same as CR says in the above... seems like more instructions. The below would work the same and is valid for now I think?</span>}</p>
<p>In Akana, the <strong><strong>startup</strong></strong> script used to start the Akana container executes the <strong>setDEMSEnv</strong> file as a part of the startup process, and this <strong>setDEMSEnv</strong> file sets the <strong>JAVA_HOME</strong> variable to use the JRE version installed with the product. This resets/overrides the JAVA_HOME value set at the operating system level.</p>
<p>To avoid that and to use the JAVA_HOME path (pointing to an external JRE) already set at the operating system level, you'll need to comment a few lines of code in the <strong>setDEMSEnv</strong> file.</p>
<p>Follow the steps below.</p>

<h4>For containers on Linux</h4>
<ol>
	<li>From your install directory, open the <strong>setDEMSenv.sh</strong> file with any text editor(<strong>/{install_folder}/bin/setDEMSenv.sh</strong>).</li>
	<li>Edit the file to comment out the following lines:
		<pre>if [ -d $RELEASE_ROOT/jre ] ; then
JAVA_HOME=$RELEASE_ROOT/jre
export JAVA_HOME
fi</pre>
	</li>
	<li>Save and close the file.</li>
	<li>Restart the container.</li>
</ol>

<h4>For containers on Windows</h4>
<ol>
	<li>From your install directory, open the <strong>setDEMSEnv.bat</strong> file with any text editor (<strong>\{install_folder}\bin\setDEMSenv.bat</strong>).</li>
	<li>Edit the file to comment out the following lines:
		<pre>IF EXIST &quot;%RELEASE_ROOT%/jre&quot; (
	set JAVA_HOME=%RELEASE_ROOT%/jre
)</pre>
	</li>
	<li>Save and close the file.</li>
	<li>Restart the container.</li>
</ol>
<p>And that's it! Your Akana Platform will run on the external JRE you configured.</p>
<p><a href="#top">Back to top</a></p>




</div>
</body>
</html>