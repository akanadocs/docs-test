---
layout: page
title: Configure Java Runtime
description: A guide to how to set up the Akana Platform to use an external JRE rather than the version included with installation.
product: sp
category: gs
sub-nav-class: Installation - Akana API Platform
weight: 11
type: page
nav-title: Configure Java Runtime
---
<h1 id="top">Configure Java Runtime</h1>
<p>A guide to how to set up the Akana Platform to use an external JRE rather than the version included with installation.</p>
<hr class="divide_hr" />



<h2 style="color: gray;">Table of Contents</h2>
<ul class="table_of_contents">
	<li><a href="#introduction">Introduction</a></li>
	<li><a href="#supported_jre_version">Supported JRE version</a></li>

	<li><a href="#config_jre_external">Configuring the Akana Platform to use an external JRE</a>
		<ul>
			<li><a href="#finding_java">Find your Java installation</a></li>
			<li><a href="#update_keystore">Save the keystore/truststore and update the path</a></li>
			<li><a href="#update_setdemsenv">Update the setDEMSenv.sh/setDEMSenv.bat file</a></li>
		</ul>
	</li>
</ul>
<hr class="divide_hr" />



<h2 id="introduction">Introduction</h2>
<p>With regard to JRE, you can choose to install the Akana Platform:</p>
<ul>
	<li>With embedded JRE: for example, for 2020.2.0, the file for Windows is <strong>api-platform-win-jre-2020.2.2.zip</strong>. For information about the bundled JRE version, see <a href="../system_requirements/system_requirements_akana_platform_20202x.htm#sysreq_2020x_jre">JRE Version</a>. For the Java version bundled with other platform versions, refer to the applicable System Requirements document: go to <a href="../system_requirements/system_requirements_all.htm">System Requirements (all versions)</a> and choose your version.</li>
	<li>Without embedded JRE: for example, for 2020.2.0, the file is <strong>api-platform-no-jre-2020.2.2.zip</strong>. In this scenario, you must provide a compatible Java version and update your platform installation to point to your Java version.</li>
</ul>
<p>{<span class="apidoc_red">GWo: Linux comes only with JRE, no other option available. Does this affect this doc?</span>}</p>
<p>The Akana Platform with bundled JRE doesn't use the JAVA_HOME environment variable. Instead, it uses Java runtime, installed in the {platform_install}/jre folder. When you choose the installation ZIP file without embedded JRE, this folder does not exist in the installation.</p>
<p>If you have an existing installation and you're not sure which JRE version the platform is using, you can check it in your installation. See <a href="../../ag/troubleshooting/ts_pm_nd_02.htm#s02_08_05">Checking the JRE version</a> (troubleshooting guide).</p>



<h2 id="supported_jre_version">Supported JRE version</h2>
<p>For information about the Java version compatible with your Akana Platform version, refer to the applicable System Requirements document: go to <a href="../system_requirements/system_requirements_all.htm">System Requirements (all versions)</a> and choose your version. For example:</p>
<ul>
	<li>2020.2.x: <a href="../system_requirements/system_requirements_akana_platform_20202x.htm#sysreq_2020x_jre">JRE version</a></li>
	<li>2020.1.x: <a href="../system_requirements/system_requirements_akana_platform_20201x.htm#sysreq_2020x_jre">JRE version</a></li>
</ul>
<p><a href="#top">Back to top</a></p>



<h2 id="config_jre_external">Configuring the Akana Platform to use an external JRE</h2>
<p><strong>Note</strong>: If you're pointing to an external version, choose an installation ZIP file that does <strong>not</strong> include a bundled JRE, as covered in <a href="#introduction">Introduction</a> above. The instructions below assume that you have done that.</p>
<p>To configure the platform to use an external JRE, follow these high-level steps:</p>
<ol>
	<li><a href="#finding_java">Find your Java installation</a></li>
<!--	<li><a href="#update_java_security">Update the java.security file</a></li>-->
	<li><a href="#update_keystore">Save the keystore/truststore and update the path</a></li>
	<li><a href="#update_setdemsenv">Update the setDEMSenv.sh/setDEMSenv.bat file</a></li>
</ol>



<h3 id="finding_java">Find your Java installation</h3>
<p>Depending on your operating system and how you installed your JRE, there are different ways of finding it. If you're on a Mac you could use this command:</p>
<pre>/usr/libexec/java_home</pre>
<p>This will show you the folder where Java is installed, and will also tell you what you should set in your profile for the <strong>JAVA_HOME</strong> variable. In fact, this is a good time to set JAVA_HOME.</p>
<p>Once you've found your installation, you can continue with the process of adding the Bouncy Castle security provider. On a Mac, it will look something like this:</p>
<pre>Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home</pre>



<h3 id="update_keystore">Save the keystore/truststore and update the path</h3>
<p>By default, when you install the Akana platform, the platform settings point to the default keystore/truststore location where the <strong>cacerts</strong> file is stored. This is inside the <strong>/{install_folder}/jre/lib/security</strong> folder, which is the packaged JRE.</p>
<p>For instructions on changing the default configuration, see <a href="installing_akana_api_platform_v20202.htm#update_keystore">Saving the keystore/truststore and updating the path</a> (install doc).</p>
<p>If you change the JRE, you must also copy the <strong>cacerts</strong> file to a new location, and update the settings so that the container can find the certificates.</p>
<p>For example, you could create a new folder, <strong>/{install_folder}/keystore</strong>, and copy the <strong>/{install_folder}/jre/lib/security/cacerts</strong> file to the <strong>/{install_folder}/keystore</strong> folder.</p>
<p><strong>Note</strong>: If you don't set up the new location for this file and update the properties as above, when you restart the container there will be issues due to missing certificates.</p>



<h3 id="update_setdemsenv">Update the setDEMSenv.sh/setDEMSenv.bat file</h3>
<!--<p>{<span class="apidoc_red">HK ATMO-29790</span>}</p>-->
<p>In an environment where you're using the default packaged JRE version and then want to switch to using your own JRE at an external path, there is one other file in the Akana install directory that you'll need to change, so that it will not override your JAVA_HOME path when the container is started using the startup script.</p>
<p>In Akana, the <strong><strong>startup</strong></strong> script used to start the Akana container executes the <strong>setDEMSEnv</strong> file as a part of the startup process, and this <strong>setDEMSEnv</strong> file sets the <strong>JAVA_HOME</strong> variable to use the JRE version installed with the product. This resets/overrides the JAVA_HOME value set at the operating system level.</p>
<p>To avoid that and to use the JAVA_HOME path (pointing to an external JRE) already set at the operating system level, you'll need to comment a few lines of code in the <strong>setDEMSEnv</strong> file.</p>
<p>Follow the steps below.</p>

<h4>For containers on Linux</h4>
<ol>
	<li>From your install directory, open the <strong>setDEMSenv.sh</strong> file with any text editor(<strong>/{install_folder}/bin/setDEMSenv.sh</strong>).</li>
	<li>Edit the file to comment out the following lines:
		<pre>if [ -d $RELEASE_ROOT/jre ] ; then
JAVA_HOME=$RELEASE_ROOT/jre
export JAVA_HOME
fi</pre>
	</li>
	<li>Save and close the file.</li>
	<li>Restart the container.</li>
</ol>

<h4>For containers on Windows</h4>
<ol>
	<li>From your install directory, open the <strong>setDEMSEnv.bat</strong> file with any text editor (<strong>\{install_folder}\bin\setDEMSenv.bat</strong>).</li>
	<li>Edit the file to comment out the following lines:
		<pre>IF EXIST &quot;%RELEASE_ROOT%/jre&quot; (
	set JAVA_HOME=%RELEASE_ROOT%/jre
)</pre>
	</li>
	<li>Save and close the file.</li>
	<li>Restart the container.</li>
</ol>
<p>And that's it! Your Akana Platform will run on the external JRE you configured.</p>
<p><a href="#top">Back to top</a></p>




</div>
</body>
</html>