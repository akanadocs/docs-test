---
layout: page
title: Configure Java Runtime
description: A guide to how to set up an external JRE to run the Akana Platform (versions earlier than 2019.0.0).
product: sp
category: gs
sub-nav-class: Installation - Akana API Platform
weight: 11
type: page
nav-title: Configure Java Runtime
---
<h2 id="top">Configure Java Runtime</h2>
<p>A guide to how to set up an external JRE to run the Akana Platform.</p>
<p><strong>Note</strong>: These instructions are only applicable for versions <strong>earlier than</strong> 2019.0.0. These steps are <strong>not</strong> valid for version 2019.0.0.</p>



<h3 style="color: gray;">Table of Contents</h3>
<ol class="table_of_contents">
	<li><a href="#introduction">Introduction</a></li>
	<li><a href="#finding_java">Find Your Java installation</a></li>
	<li><a href="#copy_provider_jar">Copy the provider jar file</a></li>
	<li><a href="#update_java_security">Update the java.security file</a></li>
	<li><a href="#update_setdemsenv">Update the setDEMSenv.sh file</a></li>
	<li><a href="#config_different_jre">Configuring Akana to use a different JRE</a></li>
</ol>



<h3 id="introduction"><a name="introduction"></a>Introduction</h3>
<p>In versions earlier than 2019.0.0, to use an external JRE (that is, not the version provided by Akana), it's necessary to ensure that you extend the Java security providers with the Bouncy Castle provider. This provider ships with the Akana Plaform in the <strong>/jreupdate</strong> folder.</p>
<p>These instructions assume that you choose an installation ZIP file that does <strong>not</strong> include a bundled JRE.</p>
<p>If you have an existing installation and you're not sure which JRE version the platform is using, you can check it in your installation. See <a href="../../ag/troubleshooting/ts_pm_nd_02.htm#s02_08_05">Checking the JRE version</a> (troubleshooting guide).</p>



<h3 id="finding_java">Find your Java installation</h3>
<p>Depending on your operating system and how you installed your JRE, there are different ways of finding it. If you're on a Mac you could use this command:</p>
<pre>/usr/libexec/java_home</pre>
<p>This will show you the folder where Java is installed, and will also tell you what you should set in your profile for the <strong>JAVA_HOME</strong> variable. In fact, this is a good time to set JAVA_HOME.</p>
<p>Once you've found your installation, you can continue with the process of adding the Bouncy Castle security provider. On a Mac, it will look something like this:</p>
<pre>Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home</pre>



<h3 id="copy_provider_jar">Copy the provider jar file</h3>
<p>Copy the following file from your Akana Platform installation folder to the <strong>jre/lib/ext</strong> folder in your Java installation.</p>
<ul>
	<li>File: <strong>bcprov-jdkon-XXX.jar</strong></li>
	<li>Source folder: <strong>$AKANAROOT/jreupdate/ext</strong></li>
	<li>Target folder: <strong>jre/lib/ext</strong></li>
	<li>Example:
		<pre>sudo cp ~/Downloads/akana-platform-8.1.39/jreupdate/ext/bcprov-jdk15on-147.jar $JAVA_HOME/jre/lib/ext/</pre> </li>
</ul>



<h3 id="update_java_security">Update the java.security file</h3>
<ol>
	<li>Open the sample <strong>java.security</strong> file from your Akana Platform installation (in <strong>jreupdate/security</strong>).</li>
	<li>Find and copy the line that references the Bouncy Castle provider, something like the following:
		<pre>security.provider.10=org.bouncycastle.jce.provider.BouncyCastleProvider</pre></li>
	<li>Then edit the <strong>java.security</strong> file (it's normally a root owned file, so remember to use <strong>sudo</strong>) in your Java installation <strong>$JAVA_HOME/jre/lib/security/java.security</strong>, and add the line you just copied to the end of the provider list.
	<p><strong>NOTE</strong>: make sure you change the number of the provider to be one greater than the previous entry in the list. In the case of the default Apple JRE installation you will see a list ending in 10, and so will need to use <strong>security.provider.11=...</strong>.</p></li>
</ol>



<h3 id="update_setdemsenv">Update the setDEMSenv.sh file</h3>
<p>In an environment where you're using Packaged JRE and then want to switch to using your own JRE at an external path, there is one other file in the Akana installation that you'll need to change, to point to the new location.</p>
<p>The <strong><strong>startup.sh</strong></strong> file, which starts the container, includes the following reference to the <strong>setDEMSEnv.sh</strong> file:</p>
<pre>if [ -r $INSTALL_ROOT/bin/setDEMSEnv.sh ] ; then
 . $INSTALL_ROOT/bin/setDEMSEnv.sh
fi</pre>
<p>And the <strong>setDEMSEnv.sh</strong> file, referenced in the above, includes the following code which sets the <strong>JAVA_HOME</strong> variable to use the version installed with the product:</p>
<pre>if [ -d $RELEASE_ROOT/jre ] ; then
JAVA_HOME=$RELEASE_ROOT/jre
export JAVA_HOME
fi</pre>
<p>If you want to use an external JRE, and want to use the JAVA_HOME path (pointing to  external JRE) already set at the operation system level, you'll need to block the code in <strong>setDEMSEnv.sh</strong> from resetting <strong>JAVA_HOME</strong>.</p>
<p>Follow the steps below.</p>
<h5>To update the setDEMSenv.sh file so that it doesn't reset the JAVA_HOME variable</h5>
<ol>
	<li>In your Akana Platform installation, open the <strong>setDEMSenv.sh</strong> file (<strong>/{install_folder/bin/setDEMSenv.sh</strong>).</li>
	<li>Comment out the following lines:
	<pre>if [ -r $INSTALL_ROOT/bin/setDEMSEnv.sh ] ; then
 . $INSTALL_ROOT/bin/setDEMSEnv.sh
fi</pre></li>
	<li>Save and close the file.</li>
	<li>Restart the container.</li>
</ol>
<p>And that's it&#8212;your JRE is ready to use with the Akana Platform.</p>
<p>As a reminder, from version 2019.0.0 the above instructions are <strong>not</strong> applicable.</p>



<h3 id="config_different_jre">Configuring Akana to use a different JRE {SH ATMO-29265 incomplete}</h3>
<p><span class="apidoc_red">One easy approach to configuring Akana to use a different JRE is to</span>:</p>
<ol>
	<li>Rename the existing JRE folder; for example, rename <strong>{install_folder}/jre</strong> to <strong>{install_folder}/jre/old</strong>.</li>
	<li>Create a new jre folder and copy the new JRE version into that folder....</li>
</ol>