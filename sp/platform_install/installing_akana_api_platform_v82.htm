---
layout: page
title: Installing Akana API Platform 8.2
description: Learn how to download, install, and configure the Akana API Platform 8.2.
product: sp
category: ref
weight: 06
sub-nav-class: Installation - Akana API Platform
type: page
nav-title: Installing Akana API Platform 8.2
---
<h2 id="top">Installing the Akana API Platform 8.2x</h2>
<p>Learn how to download, install, and configure the Akana API Platform 8.2x, including the Akana Platform and all features previously included in Policy Manager and Community Manager.</p>
<p><strong>Note</strong>: This document covers instructions for the combined features available in version 8.2x. For versions prior to 8.2x, see <a href="installing_policy_manager_v80.htm">Installing Policy Manager 8.x</a>.</p>

<p>
<a href="../admin_console/using_admin_console.htm" class="button secondary">Using Admin Console</a>
<a href="../admin_console/installing_tools.htm" class="button secondary">Installing Tools</a>
<a href="../admin_console/installing_plugins.htm" class="button secondary">Installing Plug-ins</a></p>

<p>
<a href="../../ag/assets/PM_ConfigurationCategories_6x_7x.pdf" class="button secondary">Configuration Categories</a>
<a href="../admin_console/config_actions.htm" class="button secondary">Configuration Actions</a></p>
<p><a href="installing_akana_api_platform_v84.htm" class="button secondary">Installing Akana API Platform 8.4</a></p>

<h5 class="stamp">Supported Platforms: 8.2x</h5>
<div class = "divider1"></div>
<h3 style="color: gray;">Table of Contents</h3>




<h5 style="color: gray;"><a href="#h_install_procedure">Installation Procedure:</a></h5>


<ol class="table_of_contents">
  <li><a href="#overview">Overview</a></li>
  <li><a href="#gather_zip_files">Step 1: Gather ZIP files and download to the install folder</a></li>
  <li><a href="#unzip_files">Step 2: Unzip files into the installation folder in the correct sequence</a></li>
  <li><a href="#run_configurator_pm">Step 3: Run Configurator to create the first container</a></li>
  <li><a href="#install_pm">Step 4: Install Policy Manager features on the container</a></li>
  <li><a href="#install_plugins">Step 5: Install plug-ins on the container</a></li>
  <li><a href="#configure_pm">Step 6: Configure container features</a></li>
  <li><a href="#run_configurator_more">Step 7: Create and configure additional containers</a></li>
  <li><a href="#add_nd_to_pm">Step 8: Add Network Director to Policy Manager</a></li>
  <li><a href="#create_cm_tenant_using_jython">Step 9: Create developer portal tenant using the Jython script</a></li>
  <li><a href="#run_portal">Step 10: Run the developer portal</a></li>
</ol>



<h5 style="color: gray;"><a href="#h_install_tasks_reference">Installation Tasks/Reference:</a></h5>



<ol class="table_of_contents">
  <li><a href="#supported_databases">Supported databases</a></li>
  <li><a href="#database_drivers">Database drivers</a></li>
  <li><a href="#installation_folder_structure">Installation folder structure</a></li>
  <li><a href="#installation_scenarios">Sample Installation Scenario</a></li>
  <li><a href="#clear_configurator_cache">Clear Configurator Cache</a></li>
  <li><a href="#wizard_configure_container_instance">Configure Container Instance Wizard</a></li>
  <li><a href="#starting_container">Starting a container</a></li>
  <li><a href="#stopping_container">Stopping a container</a></li>
  <li><a href="#creating_container_silent">Creating a container using silent install (Linux)</a></li>
  <li><a href="#unregister_reregister_windows_service">Unregistering and re-registering the Windows service</a></li>
  <li><a href="#linux_java_home_variable">Linux install: exporting the JAVA_HOME variable</a></li>
  <li><a href="#related_topics">Related Topics</a></li>
</ol>




<div class = "divider1"></div>
<a name="h_install_procedure"></a>
<h3>Installation Procedure:</h3>




<a name="overview"></a><h3>Overview</h3>
<p>This document provides instructions for installing the Akana API Platform version 8.2. </p>
<p>It covers a simple scenario of setting up three containers:</p>
<ol>
  <li>One container for Policy Manager.</li>
  <li>One container for Community Manager.</li>
  <li>One container for Network Director.</li>
</ol>
<p>This document covers the following broad activities associated with the installation process:</p>
<ul>
  <li>Preparation (Steps 1 and 2)</li>
  <li>Installing features and plug-ins, and configuring, for the first container (<a href="#run_configurator_pm">Step 3</a> to <a href="#configure_pm">Step 6</a>)</li>
  <li>Installing and configuring additional containers (<a href="#run_configurator_more">Step 7</a>, which is <a href="#run_configurator_pm">Step 3</a> to <a href="#configure_pm">Step 6</a> repeated for each container as needed)</li>
  <li>Adding Network Director to Policy Manager (<a href="#add_nd_to_pm">Step 8</a>)</li>
  <li>Creating and running the API Platform tenant (<a href="#create_cm_tenant_using_jython">Step 9</a> and <a href="#run_portal">Step 10</a>)</li>
</ul>



<a name="gather_zip_files"></a><h3>Step 1: Gather ZIP files and download to the install folder</h3>
<p>The first step is to gather the installation ZIP files from the Akana Library (<a href="https://library.akana.com/display/MAIN/Akana+Library" target="_blank">https://library.akana.com/display/MAIN/Akana+Library</a>. On the left, click <strong>Downloads</strong>.</p>
<p class="apidoc_note"><strong>Note</strong>: If you don't see the 8.2 files, contact Technical Support for access.</p>
<p>Create a folder for your installation; for example, <strong>AP82</strong>. Gather all applicable ZIP files in the installation folder.</p>
<p>You'll need at minimum the following files:</p>
<ol>
  <li>Akana Platform ZIP file: choose the appropriate file for the operating system you're using:
    <ul>
      <li><strong>Windows</strong> (includes JRE: <strong>akana-platform-win-jre-8.2.xxx.zip</strong></li>
      <li><strong>Linux</strong> ( includes JRE): <strong>akana-platform-linux-jre-8.2.xxx.zip</strong></li>
      <li><strong>Windows, Linux, or Solaris</strong> (does not include JRE; provide your own JRE, version 1.8): <strong>akana-platform-8.2.xxx.zip</strong></li>
    </ul>
  </li>
  <li>Akana API Platform ZIP file (contains all necessary files for Akana API Platform installation, including Policy Manager and Community Manager installation): <strong>akana-api-platform-8.2.xxx.zip</strong>.</li>
</ol>
<p>Depending on the scenario, you might also need the following files:</p>
<ul>
  <li><strong>Incremental updates to the Akana Platform</strong>: download any that are available, up to the latest version.</li>
  <li><strong>Incremental updates to the Akana API Platform</strong>: download any that are available, up to the latest version.</li>
  <li><strong>Plug-ins</strong>: The ZIP file, and any updates, for any plug-ins you want to use in your installation.</li>
</ul>
<p><a href="#top">back to top</a></p>



<a name="unzip_files"></a><h3>Step 2: Unzip files into the installation folder in the correct sequence</h3>
<p>When you've downloaded all applicable ZIP files, extract the files into your <strong>AP82</strong> folder in the sequence listed below.</p>
<p><strong>Note</strong>: The sequence is very important. Be sure to install products, and updates, in the sequence given below.</p>

<ol>
  <li><a href="../../cm/learnmore/basics_glossary.htm#gl_akana_platform">Akana Platform</a> main file.</li>
  <li>Akana Platform updates if applicable: One or more updates if there are any, beginning with the earliest update, up to the latest. If you're prompted whether to overwrite a file, select <strong>Yes</strong>.</li>
  <li><a href="../../cm/learnmore/basics_glossary.htm#gl_akana_api_platform">Akana API Platform</a> main file.</li>
  <li>Akana API Platform updates if applicable: One or more updates if there are any, beginning with the earliest update, up to the latest. If you're prompted whether to overwrite a file, select <strong>Yes</strong>.</li>
  <li>Plug-ins for your installation, if any.</li>
</ol>
<p><a href="#top">back to top</a></p>



<a name="run_configurator_pm"></a><h3>Step 3: Run Configurator to create the first container</h3>
<p>The first step in creating a container is to run the Configurator. Here, you specify basic values about the container.</p>
<p>Once the container has been created, you can go into the Akana Admin Console for the container and install features into it.</p>
<p>You can create a container in any of three different modes:</p>
<ul>
  <li>Via the GUI, a Windows-based wizard that steps you through the installation process (see <a href="#proc_create_container_gui">To create a container via the GUI</a> below)</li>
  <li>Silent install: see <a href="#creating_container_silent">Creating a container using silent install (Linux)</a></li>
</ul>

<a name="proc_create_container_gui"></a><h5>To create a container via the GUI</h5>
<p>For information on the Configure Container Instance Wizard, see <a href="#wizard_configure_container_instance">Configure Container Instance Wizard</a>.</p>
<ol>
  <li>Open up a command prompt.
<p><strong>Note</strong>: if you want to install the container as a Windows service, open the command prompt in Administrator mode.</p></li>
  <li>Go to the new folder where you unzipped the version 8.2x files (for example, <strong>AP82</strong>).</li>
  <li>Navigate to the \bin subfolder and run one of the following commands, depending on your operating system:
    <p><strong>Windows</strong>:</p>
    <pre>startup.bat configurator</pre>
    <p><strong>Unix</strong>:</p>
    <pre>startup.sh configurator</pre>
    <p>The Configurator starts with the <strong>Welcome to Configure Container Instance Wizard</strong> page, as shown below.</p>
    <p><img src="images/03_configurator.jpg" alt="Configurator" width="612" height="379" /></p>
  </li>
  <li>Click <strong>Next</strong>. The wizard steps you through the following pages:
    <ol>
      <li><strong>Instance Name</strong>: Specify the name of the Akana container instance; for example, <strong>pm1</strong>. Click <strong>Next</strong>.</li>
      <li><strong>Default Admin User</strong>: Specify Administrator Credentials (username and password) or accept defaults. Click <strong>Next</strong>.</li>
      <li><strong>Default HTTP Listener</strong>: Specify port, host IP address, and bind to all interfaces/specified interface only, or accept defaults. Click <strong>Next</strong>.</li>
      <li><strong>Instance Startup</strong>: Choose <strong>Standalone</strong>, <strong>Install as Windows Service</strong>, or <strong>Do Not Start Instance</strong>. Click <strong>Next</strong>.
        <p><strong>Note</strong> if you want to install as windows service, the command prompt you used to start the Configurator must be running in Administrator mode.</p>
      </li>
      <li><strong>Launch Admin Console</strong>: The checkbox is selected by default. If you do <strong>not</strong> want to launch the Admin Console UI, clear the checkbox. Click <strong>Next</strong>.</li>
      <li><strong>Instance Configuration Summary</strong>: Review the summary. If all OK, click <strong>Finish</strong>. The container is configured. When configuration is complete, the Admin Console starts automatically (unless you cleared the checkbox in Step 7 above; if so, you'll need to start it manually).</li>
    </ol>
  </li>
  </ol>
<p>Continue to the next step.</p>
<p><a href="#top">back to top</a></p>



<a name="install_pm"></a><h3>Step 4: Install Policy Manager features on the container</h3>
<p>You can configure a Policy Manager container using either <a href="../container_management/configure_standalone_container.htm#container_gui">GUI</a> or <a href="../container_management/configure_standalone_container.htm#container_silent">Silent</a> options.</p>
<p>Follow the short procedure below to install the Policy Manager features for this three-container scenario (one PM, one CM, one ND). For additional information on features for different scenarios, see <a href="#installation_scenarios">Sample Installation Scenarios</a>.</p>
<h5>To install Policy Manager features on the container</h5>
<ol>
  <li>In the <strong>Akana Administration Console</strong>, go to the <strong>Available Features</strong> list.</li>
  <li>Choose the options applicable to your install, and then click <strong>Install Feature</strong>; then, at the Resolution Summary, click <strong>Install Feature</strong> again. In this multi-container example with PM and CM in separate containers, you'd choose the features below for the PM container:
    <ul>
      <li>Akana Managed Services</li>
      <li>Akana Policy Manager Console (for more information on this feature see <a href="../admin_console/using_pmconsole_feature.htm">Using the Policy Manager Console Feature</a>)</li>
      <li>Akana Policy Manager Services (for more information on this feature see <a href="../admin_console/using_pmservices_feature.htm">Using the Policy Manager Services Feature</a>)</li>
      <li>Akana Scheduled Jobs</li>
      <li>Akana Security Services</li>
    </ul>
    </li>
  <li>At the <strong>Installation Complete</strong> summary, click <strong>Configure</strong> (if you are installing plug-ins, click <strong>Close</strong> and install plug-ins first).</li>
</ol>
  <p>For additional information, if needed, refer to the following topics:</p>
<ul>
  <li>For more detailed installation instructions: <a href="../container_management/configure_standalone_container.htm">Configure Standalone Container</a>.</li>
  <li>For  container deployment options: <a href="../container_management/container_management.htm#deployment">Container Deployment Options</a>.</li>
</ul>
<p>The next step is to install any plug-ins that are needed for the container.</p>
<p><a href="#top">back to top</a></p>



<a name="install_plugins"></a><h3>Step 5: Install plug-ins on the container (as needed)</h3>
<p>Depending on your installation scenario, you might need to install one or more plug-ins on your container.</p>
<p>In this installation scenario of three containers (PM, CM, and ND), one plug-in is needed on the PM container, and one or more on the CM container. The procedures below walk you through both of these.</p>

<h5>To install plug-ins on the container (PM example)</h5>
<ol>
  <li>At the Available Features list, from the <strong>Filter</strong> drop-down list at the top left, choose <strong>Plug-Ins</strong>.</li>
  <li>Choose features to install. For example, if you are setting up the Policy Manager container, but the installation will include Community Manager on another container, you'd choose the option below:
    <ul>
      <li>Akana Community Manager Policy Console</li>
    </ul>
  </li>
  <li>Click <strong>Install Feature</strong>.</li>
  <li>Review the installation summary. To continue to the configuration step, click <strong>Configure</strong>.</li>
</ol>

<h5>To install plug-ins on the container (CM example)</h5>
<ol>
  <li>At the Available Features list, from the <strong>Filter</strong> drop-down list at the top left, choose <strong>Plug-Ins</strong>.</li>
  <li>Choose features to install. For example, if Community Manager is installed on the container you'd choose one or more themes:
    <ul>
      <li>Akana Community Manager Policy Console</li>
      <li>Akana Community Manager Default Theme</li>
      <li>Akana Community Manager Hermosa Theme</li>
      <li>Akana Community Manager Simple Developer Theme</li>
    </ul>
  </li>
  <li>Click <strong>Install Feature</strong>; then, at the Resolution Summary, click <strong>Install Feature</strong> again.</li>
  <li>Review the installation summary. To continue to the configuration step, click <strong>Configure</strong>.</li>
</ol>
<p><a href="#top">back to top</a></p>



<a name="configure_pm"></a><h3>Step 6: Configure container features</h3>
<p>The next step is to configure the features you've just installed. When you click <strong>Configure</strong> at the end of the installation process in the previous step, the process steps you through the wizards for each configuration step.</p>
<p>If you're not continuing straight from the <strong>Installation Complete</strong> summary, you can resume these tasks later: in the Akana Administration Console for the container, click the <strong>Installed Features</strong> tab. Pending installation steps are listed at the bottom left. Click <strong>Complete Configuration</strong> to start the process.</p>
<p><strong>Note</strong>: Before configuring the database, make sure you have the applicable database driver in place. See <a href="#database_drivers">Database drivers</a>.</p>
<h5>To configure Policy Manager features</h5>
<ol>
  <li>Click through the configuration wizards, choosing values as needed. Configuration steps vary according to the features you're installing. In this example, the first wizard is the <strong>Manage PKI Keys Wizard</strong>. Choose key management options and other values and then click <strong>Finish</strong>. Review the summary and then click <strong>Go to Next Task</strong>.</li>
  <li>At the <strong>Configure Database Options Wizard</strong>, specify your database and other values. Since this is the first container, select <strong>Create new database</strong> (for subsequent containers, you'll use the same database, so you'd select <strong>Use existing database</strong>).
<p>You'll need to have your database driver in place, in the <strong>{installation}\instances\{containername}\deploy</strong> folder, before running this wizard. See <a href="#database_drivers">Database drivers</a>.</p>
<p>If you're using a new Oracle database, see <a href="#notes_database_oracle">Database notes: Oracle</a> for additional Oracle-specific information about DBA permissions and password configuration.</p></li>
  <li>At the <strong>Manage Schemas wizard</strong>, check the checkbox for the Policy Manager schema, as shown below, and click <strong>Finish</strong>. Review the summary and then click <strong>Go to Next Task</strong>.
<p><img src="images/05_wizard_manage_schemas.jpg" alt="Manage Schemas wizard" /></p></li>
  <li>At the <strong>Define Policy Manager Administrator Credentials</strong> <strong>Wizard</strong>, specify Administrator Credentials (username and password) or accept defaults. Click <strong>Finish</strong>. Review the summary and then click <strong>Go to Next Task</strong>.</li>
  <li>At the <strong>Provisioning</strong> <strong>Wizard</strong>, make sure the box is checked, and then click <strong>Finish</strong>.</li>
  <li>When the provisioning task is complete, you'll see a message box prompting you to restart your system. Click <strong>OK</strong>.</li>
  <li>At the <strong>Complete Configuration</strong> page, click <strong>Close</strong>.</li>
</ol>
<p>Configuration of the first container is now complete.</p>
<p><a href="#top">back to top</a></p>



<a name="run_configurator_more"></a><h3>Step 7: Create and configure additional containers</h3>
<p>Once you have the first container set up, it's time to create and configure additional containers. Essentially you'll follow these steps for each container: <a href="#run_configurator_pm">Step 3: Run Configurator to create the first container</a> through <a href="#configure_pm">Step 6: Configure container features</a>. See <a href="#proc_create_additional_container">To create an additional container</a> below.</p>
<p>Create containers in this sequence:</p>
<ol>
  <li>First, create all Policy Manager containers.</li>
  <li>Then, create all Community Manager containers.</li>
  <li>Then, create all Network Director containers.
  <p>You can configure a Network Director container using either <a href="../admin_console/using_network_director_feature.htm#container_gui">GUI</a> or <a href="../admin_console/using_network_director_feature.htm#container_silent">Silent</a> options. For instructions on how to install a Network Director Container (<strong>ND1</strong>), install and configure the Network Director feature, and register the <strong>ND1</strong> container in Policy Manager, refer to <a href="../admin_console/using_network_director_feature.htm">Using Network Director Feature</a>.</p></li>
</ol>

<a name="proc_create_additional_container"></a><h5>To create an additional container</h5>
<ol>
  <li>Run Configurator to create the container. See <a href="#run_configurator_pm">Step 3: Run Configurator to create the first container</a>. Note these differences:
    <ul>
      <li>Use a different port number for each container.</li>
      </ul>
    </li>
  
  <li>Install features on the container. See <a href="#install_pm">Step 4: Install Policy Manager features on the container</a>. For information on which features you might choose, see <a href="#installation_scenarios">Sample Installation Scenarios</a>.</li>
  <li>Install any needed plug-ins on the container. See <a href="#install_plugins">Step 5: Install plug-ins on the container (as needed)</a>. For information on which plug-ins you'd select, see <a href="#installation_scenarios">Sample Installation Scenarios</a>. For the CM container you'll need to install at least the following:
    <ul>
      <li>Akana Community Manager Policy Console.</li>
      <li>One or more themes: <strong>Akana Community Manager Default Theme</strong>, <strong>Akana Community Manager Hermosa Theme</strong>, or <strong>Akana Community Manager Simple Developer Theme</strong>.</li>
      </ul>
    <p>For the Network Director container, you don't need any plug-ins unless you are setting up a cluster.</p>
    </li>
  <li>Configure the features. See <a href="#configure_pm">Step 6: Configure container features</a>. Note these differences:
    <ul>
      <li>If you had to copy a database driver for the first container, you'll need to complete the same action for each subsequent container.</li>
      <li>In the <strong>Configure Database Options Wizard</strong>, choose <strong>Use existing database</strong>, and add the information about the database you set up for the first container.</li>
      <li>For a CM container, the <strong>Manage Schemas Wizard</strong> will look something like the below:
        <p><img src="images/08_cm_install_schemas.jpg" alt="install schemas for CM" /></p>
        </li>
      <li>For the Network Director container, you'll need to configure WS-MetaDataExchange options. Make sure the URL is set to {PM_URL}/wsmex. For example: <strong>http://localhost:9900/wsmex</strong>. If you have multiple PM containers set up as a cluster, use the URL for the master node.</li>
    </ul>
    </li>
</ol>
<p>Follow the steps for each container until all containers are set up and configured.</p>
<p>As you complete configuration for each container, be sure to restart at the prompt.</p>
<p><a href="#top">back to top</a></p>



<a name="add_nd_to_pm"></a><h3>Step 8: Add Network Director to Policy Manager</h3>
<p>The next step is to add the Network Director to Policy Manager so that you can access the developer portal and start sending traffic.</p>
<h5>To add Network Director to Policy Manager</h5>
<ol>
  <li>Using the URL you set up for Policy Manager (<a href="#run_configurator_pm">Step 3</a> above), access Policy Manager in the browser. For example: <strong>http://localhost:9900</strong>. This redirects to the Policy Manager login page: <strong>{pm_url}/admin/login.html</strong>. Log in using the credentials you set up.</li>
  <li>In the Organization Tree, under Containers, click <strong>Add Container</strong>, as shown below.
  <p><img src="images/09_01_pm_org_tree_container_add.jpg" alt="add container" /></p></li>
  <li>At the Add Container Wizard:
    <ul>
      <li><strong>Select Container Type</strong>: Container or Container Cluster. Click <strong>Next</strong>.</li>
      <li><strong>Specify Metadata Import Options</strong>: Set up the metadata URL of the Network Director container, using the URL you set up for the container and appending <strong>/metadata</strong>. For example: <strong>http://localhost:9902/metadata</strong>. Click <strong>Next</strong>.</li>
      <li><strong>X.509 Certificate Not Trusted</strong>: If you get this message, modify the certificate or accept the default to add the certificate to the Policy Manager trusted certificate store. Click <strong>Next</strong>.</li>
      <li><strong>Specify Container Details</strong>: Provide an instance name (for example, <strong>ND1</strong>). Click <strong>Finish</strong>.</li>
      <li><strong>Completion Summary</strong>: review the summary and then click <strong>Close</strong>.</li>
    </ul>
  </li>
  <li>Check that the container appears in Policy Manager. It should look something like the below. The initial state value is <strong>Stopped</strong>, but after a short time it changes to <strong>Started</strong> as shown below.
    <p><img src="images/09_02_nd_in_pm.jpg" alt="Network Director container in Policy Manager" /></p></li>
</ol>
<p>If you're using the developer portal, the next step is to create the Community Manager tenant.</p>
<p><a href="#top">back to top</a></p>



<a name="create_cm_tenant_using_jython"></a><h3>Step 9: Create developer portal tenant using the Jython script</h3>
<p>The next step is to create the tenant for the developer portal. To do this, you'll:</p>
<ol>
  <li><strong>Conditional, Linux users only</strong>: Export the JAVA_HOME location to your installation directory. See <a href="#linux_java_home_variable">Linux install: exporting the JAVA_HOME variable</a>.</li>
  <li><strong>All users</strong>: Run a Jython script at the command line. The script includes various parameters that you can use to specify values for your tenant, such as the tenant name, the theme you want to use, the Administrator login, the &quot;from&quot; email address for notifications that the developer portal sends to users, and other values. See <a href="#9a_jython_script">Developing and running the Jython script</a> below.</li>
  <li><strong>Conditional, for custom tenant name</strong>: If you choose a tenant name other than the default (<strong>atmosphere</strong>), update a configuration setting to the new value, in the Akana Administration Console for the CM container. See <a href="#9b_update_config">Conditional: updating configuration setting for new tenant name</a> below.</li>
</ol>
<p>For full details of the various parameters that make up the Jython script, and the values you can choose, see <a href="install_cm_jython_script.htm">Installation Jython Script</a>.</p>

<a name="9a_jython_script"></a><h4>Developing and running the Jython script</h4>
<p>In composing your script, refer to the examples below:</p>
<ul>
  <li>Example 1: Template script with placeholders.</li>
  <li>Example 2: An example with each parameter on a separate line, with sample values.</li>
  <li>Example 3: Jython script example for Unix.</li>
</ul>

<p class="apidoc_note"><strong>Note</strong>: The default value for <strong>consoleAddress</strong> is <strong>atmosphere</strong>.. If you change the value, as in Example 2 below where the value is set to <strong>acmepaymentscorp</strong>, there is an additional step you'll need to take before running the developer portal, to update a value in Policy Manager. See <a href="#9b_update_config">Conditional: updating configuration setting for new tenant name</a> below.</p>

<p><strong>Example 1: Template script with placeholders</strong></p>
<p>In the template script below, a few line breaks have been added for clarity. Replace the values enclosed in curly brackets with the values for your implementation (remove the curly brackets).</p>
<pre>jython.bat ../scripts/Lib/soa/atmosphere/tenant.py -a -v --url {CM_URL} 
--tenantName {tenantid} --tenantId {tenantid} --address {CM_URL} 
--consoleAddress {CM_URL/{tenantid} --theme default --themeImpl default 
--email {emailaddress} --password {password} 
--contactEmailAddress {emailaddress} --fromEmailAddress {emailaddress}</pre>

<p><strong>Example 2: Each parameter on a separate line, with sample values</strong></p>
<p>In the example below, line breaks have been added between the Jython script elements. This example installs Hermosa theme (theme = hermosa, themeImpl = default).</p>
<pre>jython.bat ../scripts/Lib/soa/atmosphere/tenant.py -a –v 
--url http://localhost:9901 
--tenantName acmepaymentscorp 
--tenantId acmepaymentscorp 
--address http://localhost:9901 
--consoleAddress http://localhost:9901/acmepaymentscorp 
--theme hermosa 
--themeImpl default 
--email administrator@acmepaymentscorp 
--password password 
--contactEmailAddress support@acmepaymentscorp.com 
--fromEmailAddress notifications@acmepaymentscorp.com</pre>

<p><strong>Example 3: Unix example</strong></p>
<pre>./jython.sh ../scripts/Lib/soa/atmosphere/tenant.py -a -v --url http://lxc1-pm8x-22.local.akana.com:9900 
--tenantName EnterpriseAPI --tenantId enterpriseapi --address http://lxc1-pm8x-22.local.akana.com:9900 
--consoleAddress http://lxc1-pm8x-22.local.akana.com:9900/enterpriseapi --theme default --themeImpl default 
--email support@acmepaymentscorp.com --password password --contactEmailAddress support@acmepaymentscorp.com 
--fromEmailAddress no_reply_cm@acmepaymentscorp.com</pre>

<h5>To run the Jython script</h5>
<ol>
  <li>At a command prompt, go to the \bin folder for your installation.</li>
  <li>Run the Jython script command, customized for your installation, as shown in the example above.</li>
  <li>The script runs, and returns a response code 200 with a message that it was successful, as shown in the example below.
    <p><img src="images/09_01_jython_script_success.jpg" alt="Jython script successful" /></p></li>
</ol>
<p><strong>Note</strong>: If you get a 404, make sure that the container is started. <a href="#starting_container">Start the container</a> and run the script again.</p>

<a name="9b_update_config"></a><h4>Conditional: updating configuration setting for new tenant name</h4>
<p>The default tenant name is <strong>atmosphere</strong>. If you use a different tenant name in the Jython script, you'll need to change a configuration setting before running the developer portal. Follow the instructions below.</p>
<h5>To update the configuration setting for the new tenant name</h5>
<ol>
  <li>Log in to the Akana Administration Console for the CM container.</li>
  <li>Click the <strong>Configuration</strong> tab.</li>
  <li>On the left, under Configuration Categories, scroll down to find the <strong>com.soa.atmosphere.console</strong> category.</li>
  <li>On the right, find the <strong>atmosphere.context.root</strong> property, and update the value. An example is shown below.
    <p><img src="images/09_02_update_config.jpg" alt="updating configuration" /></p></li>
  <li>Click <strong>Apply Changes</strong>.</li>
  <li>Restart the container so that the changes take effect.</li>
</ol>
<p>Now, you can log in to the developer portal and start configuring settings and adding apps and APIs. See <a href="#run_portal">Step 10: Run the developer portal</a> below.</p>
<p><a href="#top">back to top</a></p>



<a name="run_portal"></a><h3>Step 10: Run the developer portal</h3>
<p>Installation steps are now complete, and you can run the develop portal and set up domains and users, configure settings, and add apps and APIs. To access the developer portal, follow the steps below.</p>

<h5>To run the developer portal</h5>
<ol>
  <li>Compose the developer portal URL as follows:
    <ul>
      <li>Take the root address for the container that CM is installed on: for example, <strong>http://localhost:9901</strong>.</li>
      <li>Append <strong>/{tenantid}</strong>.</li>
      <li>For example: <strong>http://localhost:9901/atmosphere</strong>. </li>
    </ul>
  </li>
  <li>Paste the URL in the browser. The browser redirects to the default landing page; for example: <strong>http://localhost:9901/atmosphere/#/home/landing</strong>.</li>
  <li>Log in, using the username and password from the Jython script.</li>
</ol>
<p>For information about tasks relating to the developer portal, including Site Admin tasks such as configuring platform login, setting up domains, and choosing platform settings, as well as user tasks such as adding apps and APIs, refer to the platform help: <a href="http://docs.akana.com/cm/learning.html" title="Learning about Community Manager" target="_blank">http://docs.akana.com/cm/learning.html</a>.</p>
<p><a href="#top">back to top</a></p>




<div class = "divider1"></div>




<div class = "divider1"></div>
<a name="h_install_tasks_reference"></a><h3>Installation Tasks/Reference:</h3>




<a name="supported_databases"></a>
<h3>Supported databases</h3>
<p>Akana API Platform 8.2.x supports the following database versions: </p>
<ul>
  <li>MySQL 5.6 </li>
  <li>Oracle 11g, 12c. See <a href="#notes_database_oracle">Database notes: Oracle</a> below.</li>
</ul>
<p>In addition, versions 8.2.3 onwards support the following:</p>
<ul>
  <li>Microsoft SQL Server 2012 and 2014</li>
</ul>


<a name="notes_database_oracle"></a><h5>Database notes: Oracle</h5>
<p>Please note the following if you're working with an Oracle database:</p>
<ul>
  <li><strong>Oracle password</strong>: If you&rsquo;re creating a new Oracle database using the <strong>Create New Database</strong> wizard (standard installation procedure), make sure the Oracle database password does not start with a number or special character.</li>
  <li><a name="note_oracle_12c"></a><strong>Database permissions, Oracle 12c only</strong>: When using Oracle 12c to configure a new database, the DBA must GRANT SELECT ON SYS.USER$ TO SYSTEM; (substitute the SYSTEM user for the user specified for the Administrator credentials). This is because Oracle 12c introduced restricted access to SYS.USER$, which the platform uses to query on.</li>
  <li><strong>Database drivers</strong>: For Oracle database drivers, see <a href="#database_drivers">Database drivers</a> below.</li>
</ul>
<p><a href="#top">back to top</a></p>



<a name="database_drivers"></a><h3>Database drivers</h3>
<p>Depending on which database server you're using, you might need to install a database driver before running the <strong>Configure Database Options</strong> Wizard.</p>
<p>If you need to install a database driver, place it in this location:</p>
<ul>
  <li> <strong>/instances/{container_name}/deploy</strong> folder</li>
</ul>
<p>Database options, with driver information:</p>
<ul>
  <li><strong>
    MySQL</strong>: install this file:
  <p><strong>com.springsource.com.mysql.jdbc-5.1.6.jar</strong></p>
  <p>Downloadable from: <a href="http://www.java2s.com/Code/Jar/c/Downloadcomspringsourcecommysqljdbc516jar.htm" title="download location for MySQL database driver" target="_blank">http://www.java2s.com/Code/Jar/c/Downloadcomspringsourcecommysqljdbc516jar.htm</a></p>
  </li>
  <li><strong>Oracle 12c</strong>: install this file:
    <p><strong>Ojdbc7.jar</strong></p>
  <p>Downloadable from: <a href="http://www.oracle.com/technetwork/database/features/jdbc/jdbc-drivers-12c-download-1958347.html" title="download location for Oracle 12c database driver" target="_blank">http://www.oracle.com/technetwork/database/features/jdbc/jdbc-drivers-12c-download-1958347.html</a> (requires accepting the agreement and logging in).</p>
    <p>Also, for Oracle 12c, see <a href="#note_oracle_12c">note about database permissions needed</a>.</p>
  </li>
  <li><strong>Oracle 11g</strong>: install this file:
    <p><strong>Ojdbc5.jar</strong></p>
  <p>Downloadable from: <a href="http://www.java2s.com/Code/Jar/o/Downloadojdbc5jar.htm" title="download location for Oracle 11g database driver" target="_blank">http://www.java2s.com/Code/Jar/o/Downloadojdbc5jar.htm</a></p>
  </li>
  <li><strong>Microsoft SQL Server</strong>: no database driver installation is required.</li>
</ul>
<p><a href="#top">back to top</a></p>



<a name="installation_folder_structure"></a><h3>Installation folder structure</h3>
<p>After installation, the directory structure will look similar to the following:</p>
<p><img src="images/install_folders.jpg" alt="Installation folder structure" /></p>
<p>Installation includes the following folders:</p>

<dl class="apidoc_dl">
<dt>bin</dt>
<dd>Includes the Akana Platform shell and batch scripts. This includes Start /Stop scripts for all the Akana Platform processes, scripts used to register and un-register Windows services, and scripts for launching the Akana Platform administration and configuration wizards. This folder also includes a script to run the Akana Platform product as a unique Cron job.</dd>


<dt>config</dt>
<dd>Includes Akana Platform properties files. Reserved for system use.</dd>


<dt>docs</dt>
<dd>Includes product documentation.</dd>


<dt>instances</dt>
<dd>After installation, the initial <strong>instances</strong> folder includes <strong>config.properties</strong> and <strong>system.properties</strong> files. </dd>
<dd>When you launch and complete the Configure Container Instance Wizard, a Configurator folder is created that includes the following sub-folders:
<ul>
  <li><strong>asynchworkflow</strong>&#8212;Stores code samples for platform APIs.</li>
  <li><strong>cache</strong>&#8212;Stores OSGi bundles for installed features.</li>
  <li><strong>deploy</strong>&#8212;Includes properties files (com.soa.config.cfg and com.soa.log.cfg) that include Akana Platform default configuration settings. These files are used to push default configuration information to the Administration Console and are typically for one-time use only. After initial configuration, you can update properties in the Administration Console via the <strong>Configuration</strong> tab. Bundles and other .cfg files can also be added to the \deploy folder and will be published to the Administration Console. These properties can also be updated via the <strong>Configuration</strong> tab.</li>
  <li><strong>log</strong>&#8212;Stores log files that are automatically generated when an Akana Platform function is operating. The logging process records the actions performed for each Akana Platform function and stores the information in the log file. You can archive log files for historical record as needed.</li>
</ul></dd>
<dd>Each time a new container instance is created, the platform creates a new folder using the container name. For example, if you install the Policy Manager ZIP file and name the container instance, the associated folder includes the above folders plus the following:
  <ul>
  <li><strong>cachedir</strong>&#8212;Reserved for system use.</li>
  <li><strong>cm</strong>&#8212;Stores configuration data associated with the Akana Administration Console <strong>Configure</strong> tab.</li>
  <li><strong>scriptStore</strong>&#8212;Stores code samples for platform  APIs.</li>
  <li><strong>snapshot</strong>&#8212;Stores changes to a container made during updates. Also used for update rollbacks.</li>
  <li><strong>wsdlStore</strong>&#8212;Stores code samples for platform APIs. </li>
</ul></dd>



<dt>jre</dt>
<dd>A Java Runtime Environment (JRE) folder that is automatically created during an Akana product installation. The Akana Platform is packaged with the applicable JRE version for each release.</dd>


<dt>jreupdate</dt>
<dd>Includes an <strong>ext</strong> folder that stores bouncy castle artifacts, and a <strong>security</strong> folder that provides security algorithms and is used for PKCS12 keystore management.</dd>


<dt>lib</dt>
<dd>Includes the <strong>jar</strong> files needed by the available Akana features.</dd>


<dt>scripts</dt>
<dd>Includes script utilities that you can use to create containers without using the <strong>Configure Container Instance Wizard</strong> UI. </dd>


<dt>yajsw</dt>
<dd>Includes files used by the Akana Platform to support YAJSW. See <a href="http://yajsw.sourceforge.net" title="http://yajsw.sourceforge.net" target="_blank">http://yajsw.sourceforge.net</a>.</dd>
</dl>
<p><a href="#top">back to top</a></p>



<a name="installation_scenarios"></a><h3>Sample installation scenarios</h3>
<p>The examples below show which features to install for some sample scenarios, including:</p>
<ul>
  <li><a href="#one_pm">One container with Policy Manager installed (no Community Manager)</a></li>
  <li><a href="#multi_pm">Multi-container setup with Policy Manager installed (no Community Manager)</a></li>
  <li><a href="#one_pmcm">One container with both Policy Manager and Community Manager installed</a></li>
  <li><a href="#multi_pm_cm">Multi-container setup with Policy Manager and Community Manager in separate containers</a></li>
  <li><a href="#multi_no_cm">Needed in any multi-container deployment that does not include Community Manager</a></li>
  <li><a href="#multi_any_cm">Needed in any multi-container deployment that includes Community Manager</a></li>
  <li><a href="#nd_features">Needed for the Network Director container</a></li>
</ul>


<a name="one_pm"></a><h4>One container with Policy Manager installed (no Community Manager)</h4>
<p>Install these features on the Policy Manager container:</p>
<ul>
  <li>Akana Policy Manager Console</li>
  <li>Akana Policy Manager Services</li>
</ul>

<p>Install this feature on the Network Director container:</p>
<ul>
  <li>Akana Network Director</li>
</ul>


<a name="multi_pm"></a><h4>Multi-container setup with Policy Manager installed (no Community Manager)</h4>
<p><strong>Policy Manager Container Features:</strong></p>

<ul>
  <li>Akana Managed Services</li>
  <li>Akana Policy Manager Console</li>
  <li>Akana Policy Manager Services</li>
  <li>Akana Scheduled Jobs</li>
  <li>Akana Security Services</li>
</ul>
<p><strong>Network Director Container Features:</strong></p>
<ul>
  <li>Akana Network Director</li>
</ul>

<a name="one_pmcm"></a><h4>One container with both Policy Manager and Community Manager installed</h4>
<p>Install these features:</p>
<ul>
  <li>Akana Embedded Elasticsearch Node</li>
  <li>Akana Policy Manager Console</li>
  <li>Akana Policy Manager Services</li>
  <li>Akana Community Manager</li>
  <li>Akana Community Manager APIs</li>
  <li>Akana Community Manager Default Theme</li>
  <li>Akana Community Manager OAuth Provider</li>
  <li>Akana Community Manager Scheduled Jobs</li>
  <li>Akana Managed Services</li>
  <li>Akana OAuth Provider</li>
  <li>Akana Scheduled Jobs</li>
  <li>Akana Security Services</li>
</ul>

<p>Install these plug-ins on every non-Network Director container:</p>
<ul>
  <li>Akana Community Manager Policy Console</li>
  <li>One or more of the following (at least one theme is required for Community Manager):
    <ul>
      <li>Akana Community Manager Default Theme</li>
      <li>Akana Community Manager Hermosa Theme</li>
      <li>Akana Community Manager Simple Developer Theme</li>
    </ul>
  </li>
</ul>

<p>Install this feature on every Network Director container:</p>
<ul>
  <li>Akana Network Director</li>
</ul>


<a name="multi_pm_cm"></a><h4>Multi-container setup with Policy Manager and Community Manager in separate containers</h4>
<p><strong>Policy Manager Container Features:</strong></p>
<ul>
  <li>Akana Embedded Elasticsearch Node</li>
  <li>Akana Managed Services</li>
  <li>Akana Policy Manager Console (for more information on this feature see <a href="../admin_console/using_pmconsole_feature.htm">Using the Policy Manager Console Feature</a>)</li>
  <li>Akana Policy Manager Services (for more information on this feature see <a href="../admin_console/using_pmservices_feature.htm">Using the Policy Manager Services Feature</a>)</li>
  <li>Akana Scheduled Jobs</li>
  <li>Akana Security Services</li>
  </ul>
<p><strong>Policy Manager Container Plug-ins:</strong></p>
<ul>
  <li>Akana Community Manager Policy Console</li>
</ul>


<p><strong>Community Manager Container Features:</strong></p>
<ul>
  <li>Akana Community Manager</li>
  <li>Akana Community Manager APIs</li>
  <li>Akana Community Manager OAuth Provider</li>
  <li>Akana Community Manager Scheduled Jobs</li>
  <li>Akana Embedded Elasticsearch Node</li>
  <li>Akana Policy Manager Console (for more information on this feature see <a href="../admin_console/using_pmconsole_feature.htm">Using the Policy Manager Console Feature</a>)</li>
</ul>

<a name="cm_plug_ins"></a><p><strong>Community Manager Container Plug-ins:</strong></p>
<p>Install these plug-ins:</p>
<ul>
  <li>Akana Community Manager Policy Console</li>
  <li>One or more of the following (at least one theme is required for Community Manager):
    <ul>
      <li>Akana Community Manager Default Theme</li>
      <li>Akana Community Manager Hermosa Theme</li>
      <li>Akana Community Manager Simple Developer Theme</li>
    </ul>
  </li>
</ul>

<p><strong>Network Director Container Features:</strong></p>
<ul>
  <li>Akana Network Director</li>
</ul>

<a name="multi_no_cm"></a><h4>Needed in any multi-container deployment that does not include Community Manager</h4>
<p>Install these features on every non-Network Director container:</p>
<ul>
  <li>Akana Managed Services</li>
  <li>Akana Scheduled Jobs</li>
  <li>Akana Security Services</li>
</ul>

<p>Install this feature on every Network Director container:</p>
<ul>
  <li>Akana Network Director</li>
</ul>


<a name="multi_any_cm"></a><h4>Needed in any multi-container deployment that includes Community Manager</h4>
<p>Install these features on every non-Network Director container:</p>
<ul>
  <li>Akana Managed Services</li>
  <li>Akana Scheduled Jobs</li>
  <li>Akana Security Services</li>
  <li>Akana Embedded Elasticsearch Node</li>
</ul>

<p>Install these plug-ins on every non-Network Director container:</p>
<ul>
  <li>Akana Community Manager Policy Console</li>
  <li>One or more of the following (at least one theme is required for Community Manager):
    <ul>
      <li>Akana Community Manager Default Theme</li>
      <li>Akana Community Manager Hermosa Theme</li>
      <li>Akana Community Manager Simple Developer Theme</li>
    </ul>
  </li>
  </ul>

<p>Install this feature on every Network Director container:</p>
<ul>
  <li>Akana Network Director</li>
</ul>


<a name="nd_features"></a><h4>Needed for the Network Director container</h4>
<p>Install the below on the Network Director container:</p>
<ul>
  <li>Akana Network Director</li>
</ul>
<p><a href="#top">back to top</a></p>



<a name="clear_configurator_cache"></a><h3>Clear Configurator Cache</h3>
<p>You might need to clear the configurator cache. Follow the steps below.</p>
<h5>To clear configurator cache</h5>
<ol>
  <li>Locate the configurator cache folder: \instances\configurator\cache, as shown below.
  <p><img src="images/01_05_configurator_cache.jpg" alt="Configurator cache folder" /></p>
  </li>
  <li>Delete the folder if it exists (if there is no cache, the folder will not be there).</li>
</ol>
<p><a href="#top">back to top</a></p>



<a name="wizard_configure_container_instance"></a><h3>Configure Container Instance Wizard</h3>
<h5>Configure Container Wizard pages:</h5>
<ul>
  <li><b>Instance Name</b>: provide name; for example, <b>aap82</b>.</li>
  <li><b>Default Admin User</b>: specify Administrator Credentials (username and password) or accept defaults.</li>
  <li><b>Default HTTP Listener</b>: port, host IP address, bind to all interfaces/specified interface only.</li>
  <li><b>Instance Startup</b>: Choose Standalone, Install as Windows Service, or Do Not Start Instance.
  <p><b>Note</b>: If you want to run Install as Windows Service, the command prompt you used to start the Configurator must be in Administrator mode. If necessary, restart the Configurator in a new window in Administrator mode.</p></li>
  <li><b>Launch Admin Console</b>: Checkbox is selected by default. If you do <strong>not</strong> want to launch the Admin Console UI, clear the checkbox. Click <b>Next</b>.</li>
  <li><b>Instance Configuration Summary</b>: review options. If all OK, click <b>Finish</b>.</li>
</ul>
<p><a href="#top">back to top</a></p>



<a name="starting_container"></a><h3>Starting a container</h3>
<p>There are several approaches to starting a container:</p>
<ul>
  <li><strong>In Windows:</strong>
    <ul>
      <li>At a command prompt</li>
      <li>As a Windows service</li>
    </ul>
  </li>
  <li><strong>In Unix:</strong>
    <ul>
      <li>At the command line</li>
      <li>With background option</li>
      </ul>
  </li>
  </ul>

<h5>To start a container in Windows at a command prompt</h5>
<ol>
  <li>At a command prompt, navigate to the \bin folder for the implementation. For example: <strong>c:\akana\ap82\bin</strong>.</li>
  <li>Type:
  <pre>startup {containername}</pre></li>
</ol>
<p>There might be a short delay while the container starts.</p>

<h5>To start a container as a Windows service</h5>
<p><strong>Note</strong>: You can only start a container as a Windows service if it was installed as a Windows service.</p>
<ol>
  <li>Launch the Services list (Control Panel &gt; Administrative Tools &gt; Services).</li>
  <li>Select the instance name on the list.</li>
  <li>From the right-click <strong>Actions</strong> menu, choose <strong>Stop</strong>.</li>
</ol>
<p>There might be a short delay while the container starts.</p>

<h5>To start a container in Unix</h5>
<ol>
  <li>At the command line, navigate to the /bin folder for the implementation. For example: <strong>/akana/ap82/bin</strong>. </li>
  <li>Type:
    <pre>startup.sh {containername}</pre>
  </li>
</ol>
<p>There might be a short delay while the container starts.</p>

<h5>To start a container in Unix (background)</h5>
<ol>
  <li>At the command line, navigate to the /bin folder for the implementation. For example:<strong> /akana/ap82/bin</strong>. </li>
  <li>Type:
    <pre>startup.sh {containername} -bg</pre>
  </li>
</ol>
<p>There might be a short delay while the container starts.</p>
<p><a href="#top">back to top</a></p>



<a name="stopping_container"></a><h3>Stopping a container</h3>
<p>You can start a container in several ways; you can also stop a container in several ways.</p>
<h5>To stop a container at a command prompt</h5>
<ol>
  <li>Go to the command prompt window where the process is running.</li>
  <li>Type <strong>Ctrl+C</strong> or close the command prompt.</li>
</ol>

<h5>To stop a container as a Windows service</h5>
<p><strong>Note</strong>: You can only start/stop a container as a Windows service if it was installed as a Windows service.</p>
<ol>
  <li>Launch the Services list (Control Panel &gt; Administrative Tools &gt; Services).</li>
  <li>Select the instance name on the list.</li>
  <li>From the right-click <strong>Actions</strong> menu, choose <strong>Stop</strong>.</li>
</ol>

<h5>To stop a container in Unix</h5>
<ol>
  <li>Go to the command line window where the process is running.</li>
  <li>Send the process a KILL signal or type <strong>Ctrl+C</strong>.</li>
</ol>

<h5>To stop a container in Unix (background)</h5>
<ol>
  <li>At the command line, navigate to the /bin folder for the implementation. For example: <strong>/akana/ap82/bin</strong>. </li>
  <li>Type:
    <pre>shutdown.sh</pre>
  </li>
</ol>
<p><a href="#top">back to top</a></p>



<a name="creating_container_silent"></a><h3>Creating a container using silent install (Linux)</h3>
<p>As part of Step 3, <a href="#run_configurator_pm">Step 3: Run Configurator to create the first container</a>, in some scenarios such as Linux installations, you'll create the container using silent install.</p>
<p>Before you begin, make sure you have Administrator rights on the machine you’re using.</p>
<p>A silent installation is an automatic process that installs the Akana Platform without any user interaction. Before running the silent install, you must configure the properties file (<strong>installer.properties</strong>). For example, you must specify a target installation directory, install set, and input options to be executed at the end of the installation. Once you’ve configured the properties file, you can deploy the platform onto multiple computers in a scripted, non-interactive way. </p>
<p>To generate an <strong>installer.properties</strong> file, you must first perform a standard Akana Platform installation using the correct files for your installation. When platform installation is complete, the properties file is automatically saved in the directory from which you launched the setup file. The file includes the configuration settings you specified during setup; from here, you can customize further as needed.</p>
<p>To run the properties file in a Linux environment, go to the <strong>{release_directory}/bin</strong> folder and run the following command:</p>
<pre>startup.sh configurator -Dsilent=true -Dproperties={properties file path}/{filename}.properties</pre>
<p>For example:</p>
<pre>startup.sh configurator -Dsilent=true -Dproperties=properties/pm_silentinstall.properties</pre>
<p>Then:</p>
<ul>
  <li>Start the container.</li>
  <li>Continue with the rest of the procedure from <a href="#install_pm">Step 4: Install Policy Manager features on the container</a>.</li>
</ul>
<p>For full instructions, refer to: <a href="../container_management/configure_standalone_container.htm#container_silent">Configure Container (Silent Option)</a>.</p>
<p class="apidoc_note"><strong>Note</strong>: Silent install is not supported for Windows machines.</p>
<p><a href="#top">back to top</a></p>



<a name="unregister_reregister_windows_service"></a><h3>Unregistering and re-registering the Windows service</h3>
<p>If you have a container registered as a Windows service so that the container will start automatically when Windows starts, and you want to unregister and re-register the Windows service, follow the steps below for each container.</p>
<p>Unregistering/re-registering the Windows service is generally part of upgrade procedure, but you might need to do this for some other reason.</p>
<p>If you’re not sure which containers are registered as a Windows service, you can check in the Windows Control Panel (<strong>Administrative Tools</strong> > <strong>Services</strong>). To change the services, you must run as Administrator.</p>
<h5>To unregister and re-register the Windows service</h5>
<ol>
<li>Open a command prompt in Administrator mode (If you don’t use Administrator mode, Windows prompts for Admin permission before unregistering/registering the service, but doesn’t actually start the service).</li>
<li>Run the command below:
  <pre>.\sm70\bin\unregisterContainerServiceYAJWS.bat{instance_name}</pre></li>
<li>Register the new version as a Windows service:
<pre>.\{plat82_foldername}\bin\registerContainerServiceYAJWS.bat {instance_name}</pre>
<p>If you’re running in Administrator mode, Windows registers the service and also starts it.</p></li>
<li>Repeat steps 2 and 3 for each additional container that’s registered as a Windows service.</li>
</ol>
<p class="apidoc_note"><strong>Note</strong>: The above filenames, <strong>unregisterContainerServiceYAJWS.bat</strong> and <strong>registerContainerServiceYAJWS.bat</strong>, are correct for product version 8.1.7 and later and version 8.2.2 and later. In earlier versions, up to 8.1.6 or 8.2.1, the filenames are <strong>unregisterContainerService.bat</strong> and <strong>registerContainerService.bat</strong>.</p>
<p><a href="#top">back to top</a></p>



<a name="linux_java_home_variable"></a><h3>Linux install: exporting the JAVA_HOME variable</h3>
<p>Because Linux containers don't have a JAVA_HOME environment variable set, you'll need to export the JAVA_HOME location to your installation directory.</p>
<p>For example:</p>
<pre>export JAVA_HOME=/opt/akana/AP82/jre</pre>
<p>If you omit this step, you'll get an error during the installation.</p>
<p><a href="#top">back to top</a></p>



<div class = "divider1"></div>



<h3 id="related_topics">Related Topics</h3>
<table width="1012" border="0" cellspacing="0" cellpadding="2" class="doctable">
  <tr>
    <td width="300" valign="top"><p><strong>Version 8.4:</strong></p>
      <ul>
        <li><a href="installing_akana_api_platform_v84.htm">Installing the Akana API Platform 8.4x</a></li>
      </ul>
    </td>
    <td width="300" valign="top"><p><strong>Version 8.2:</strong></p>
      <ul>
        <li><a href="install_cm_jython_script.htm">Installation Jython Script</a></li>
        <li><a href="implementation_planning.htm">Planning Your Implementation</a></li>
      </ul>
    </td>
    <td width="300" valign="top"><p><strong>Version 8.0:</strong></p>
      <ul>
        <li><a href="installing_akana_platform.htm">Installing Akana Platform 8.x</a></li>
        <li><a href="installing_policy_manager_v80.htm">Installing Policy Manager 8.x</a></li>
      </ul>
    </td>
  </tr>
</table>