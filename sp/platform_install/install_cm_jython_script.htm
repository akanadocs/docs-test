---
layout: page
title: Installation Jython Script
description: Learn how to create and run the Jython installation script for the developer portal.
product: sp
category: ref
weight: 07
sub-nav-class: Installation - Akana API Platform
type: page
nav-title: Installation Jython Script
---
<h2><a name="top"></a>Installation Jython Script</h2>
<p>This document provides reference information and examples relating to the installation Jython script used to create an instance of the Akana API Platform developer portal (tenant).</p>
<p>It includes:</p>
<ul>
  <li><a href="#jython_script_elements">Jython Script Elements</a></li>
  <li><a href="#theme_themeimpl">Using theme and themeImpl to specify a theme</a></li>
  <li><a href="#cloning_themes">Extending a platform theme</a></li>
  <li><a href="#installation_scripts_with_examples">Installation scripts with examples</a></li>
  <li><a href="#secure_installation">Secure Installation</a></li>
  <!--<li><a href="#tenant_settings_in_ui">Managing tenant settings in the user interface</a></li>-->
</ul>
<a name="jython_script_elements"></a><h3>Jython Script Elements</h3>
<p>The various Jython script elements allow you to specify tenant configuration values, to tailor the installation to your requirements. Some of the elements determine the look and feel of the resulting installation. Review the available options before writing your tenant Jython script. Script elements are explained below.</p>
<h4>Required Jython Script Elements</h4>
<p>Required script elements are given below, with an explanation of each.</p>
<dl class="apidoc_dl">



<dt>--url</dt>
<dd>The hostname for the container that the developer portal is running on. The URL is normally structured along these lines: <strong>{protocol}://{hostname}:{port}</strong></dd>
<dd>Example:<strong> http://server-10.acmepaymentscorp.com</strong></dd>
<dd>There is normally no context unless the product is running in an application server.</dd>



<dt>--tenantName</dt>
<dd>A friendly name for the tenant, for use in certain scenarios such as email messages.</dd>
<dd>Example: <strong>Acme</strong></dd>
<dd><strong>Note</strong>: The <strong>tenantName</strong> value can be changed, later, from the developer portal.</dd>



<dt>--tenantId</dt>
<dd>The internal ID of the tenant. When choosing the TenantID, it's best to choose an ID that's as short as possible, since it's used in many other IDs, URLs, and message payload content. It cannot have spaces or special characters, and should be lowercase. Keep it simple. The tenantID is normally the lowercase version of the tenant name above (without spaces); for example, <strong>acmepaymentscorp</strong>. It will appear in all object IDs and the URLs in the system.</dd>
<dd><strong>Note</strong>: Once the tenant is created, the <strong>tenantId</strong> value cannot be changed.</dd>



<dt>--address</dt>
<dd>The base URL of the tenant. The hostname must be unique. There is normally no context unless the product is running in an application server.</dd>
<dd>This is the default address from which the tenant is accessed. Multiple additional virtual hostnames are allowed, but the hostname provided in this element is the primary hostname.</dd>
<dd>This value is used in certain notifications that provide a URL for accessing the tenant; for example, the signup confirmation email.</dd>
<dd>Example: <strong>http://acmepaymentscorp:9901</strong></dd>



<dt>--consoleAddress</dt>
<dd>The same as the --address element, but includes the context in which the developer portal is running, if a context is specified. Context could be a value, such as <strong>acmepaymentscorp</strong>, or could just be root (<strong>/</strong>). This is the address of the developer portal; the full URL that will be used in the browser when accessing the developer portal user interface. The browser then redirects to the default login page.</dd>
<dd>Examples: <strong>http://acmepaymentscorp:9901/acmepaymentscorp</strong>, <strong>http://acmepaymentscorp:9901/</strong>.</dd>



<dt>--username  (Version 8.3 and later)</dt>
<dd>Username for authorized user. Needed, along with the <strong>userpassword</strong> element, for the BasicAuth security required for adding a tenant.</dd>
<dd>Example: <strong>johnsmith</strong></dd>



<dt>--userpassword  (Version 8.3 and later)</dt>
<dd>Password for authorized user. Needed, along with the <strong>username</strong> element, for the BasicAuth security required for adding a tenant.</dd>
<dd>Example:<strong> securepassword_976</strong></dd>



</dl>


<h4>Optional Jython Script Elements</h4>
<p>Optional script elements are given below, with an explanation of each.</p>
<dl class="apidoc_dl">



<dt>--contactEmailAddress</dt>
<dd>The email address that users should contact for help with any issues in the tenant. This address is used in some links in tenant pages; for example, in the footer template for pages on the developer portal.</dd>



<dt>--email</dt>
<dd>The email address for the default tenant administrator.</dd>
<dd>From version 8.1 onwards, you can add multiple email addresses, as a comma-separated list. Each administrator created via the script has both SiteAdmin and BusinessAdmin roles.</dd>
<dd><strong>Note</strong>: If you don't include this parameter, the following default value is assigned: administrator@{tenantid}.</dd>



<dt>--esIndexName</dt>
<dd>Optional: the name of the Elasticsearch index. This is only needed if you're using some advanced options in a larger deployment, to have a separate, independent Elasticsearch index for each tenant. By default, an index with the name <strong>default</strong> is used. If this parameter is not included, the <strong>default</strong> index is used for the tenant.</dd>
<dd>Generally, this is only applicable to a very large installation with multiple tenants.</dd>



<dt>--fromEmailAddress</dt>
<dd>The email address that is displayed in the "From" field for email notifications sent out by the platform.</dd>



<dt>--password</dt>
<dd>The password for the default tenant administrator.</dd>
<dd>If you specify a password, and include multiple email addresses, all tenant administrators will have the same password for first login.</dd>
<dd>If password is not specified, the platform generates a random password, unique to each user. The password is sent to the specified email address in the initial email notification.</dd>
<dd>Users must change the password on first login.</dd>



<dt>--theme</dt>
<dd>A value that determines which of the available themes is used for the developer portal user interface.</dd>
<dd>There are three possible values: <strong>default</strong>, <strong>simpledev</strong>, and <strong>hermosa</strong>. For default and simpledev theme, specifying the <strong>theme</strong> parameter is all you need to do to specify your theme. For Hermosa theme, you must also include the <strong>themeImpl</strong> parameter with a value of <strong>default</strong> (see below). For more information, see <a href="#theme_themeimpl">Using theme and themeImpl to specify a theme</a> and <a href="#cloning_themes">Extending a platform theme</a>.</dd>



<dt>--themeImpl</dt>
<dd>An element that works with the <strong>theme</strong> element to support the ability to extend developer portal user interface themes, so that you can have multiple instances of one theme with separate customization for each.&nbsp;However, from version 8.5 onwards, extending themes is most easily accomplished via the developer portal user interface. See <a href="http://docs.akana.com/cm/learnmore/site_admin_site.htm#settings_theme_clone">How do I extend a platform theme?</a> (developer portal help).</dd>
<dd>There are three possible values: <strong>default</strong>, <strong>simpledev</strong>, and <strong>hermosa</strong>. If you're installing Hermosa theme, use <strong>theme</strong> value of <strong>hermosa</strong> and <strong>themeImpl</strong> value of <strong>default</strong>. If you're installing Default or Simple Dev theme, you don't need to use themeImpl at all.</dd>



<dt>--virtualHosts</dt>
<dd>A comma-separated list of host names that the portal can be accessed from. For example:</dd>
<dd><strong>--virtualHosts open.acmepaymentscorp.com,open.example.com </strong></dd>



<dt>--ignoreCerts</dt>
<dd>(Version 8.4.4 and later) An optional parameter you can use if you want to ignore SSL certs when creating the tenant. Defaults to <strong>False</strong>; if you include this parameter with value <strong>True</strong> (case sensitive), the code will accept all certs when calling an HTTPS endpoint to create a new tenant.</dd>



</dl>
<p><a href="#top">Back to top</a></p>



<a name="theme_themeimpl"></a><h3>Using theme and themeImpl to specify a theme</h3>
<p>To install the first platform theme, use the values below to specify which theme you want.</p>
<p><strong>Note</strong>: You must also install the plug-in for the theme you want to use, as part of the installation process. See <a href="installing_akana_api_platform_v84.htm#cm_plug_ins">Community Manager Container Plug-ins</a> (version 8.4).</p>
<table width="60%" cellpadding="2" cellspacing="0" class="tableparmsresponse" summary="table description">
  <thead>
    <tr bgcolor="#DDDDDD">
      <th width="20%">To install this theme...</th>
      <th width="20%">Use this theme parameter value...</th>
      <th width="20%">use this themeImpl parameter value...</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Default Theme</td>
      <td>default</td>
      <td>{none; not needed}</td>
    </tr>
    <tr>
      <td>Hermosa Theme</td>
      <td>hermosa</td>
      <td>default</td>
    </tr>
    <tr>
      <td>Simple Developer Theme</td>
      <td>simpledev</td>
      <td>{none; not needed}</td>
    </tr>
  </tbody>
</table>
<p><a href="#top">Back to top</a></p>



<a name="cloning_themes"></a>
<h3>Extending a platform theme</h3>
<p>You can have multiple versions of a single platform themes by extending the theme. When you extend the theme, you essentially create one or more additional, custom themes, each with a different name. The steps are:</p>
<ol>
  <li>Defining the custom theme.</li>
  <li>Specifying the standard theme that it's based on.</li>
  <li>Modifying the custom theme.</li>
</ol>
<p>Each instance has its own URL (virtual host) and can be separately customized, but they all use the same code base and database. This allows you to provide a different user experience to different user groups.</p>
<p>The platform supports extending of all three themes: <strong>default theme</strong>, <strong>simple dev</strong>, and <strong>hermosa</strong>.</p>
<p>In earlier versions of the developer portal, extending of themes had to be done via the Jython script. However, from version 8.4 onwards, you can extend themes via the developer portal user interface; <strong>Administration</strong> &gt; <strong>Site</strong> &gt; <strong>Add Theme</strong>, and choose the <strong>Custom Theme</strong> option.</p>
<p>Extending Hermosa theme is supported from version 8.5 onwards.</p>
<p>For instructions, see <a href="http://docs.akana.com/cm/learnmore/site_admin_site.htm#settings_theme_clone">How do I extend a platform theme?</a> (developer portal help).</p>
<p><a href="#top">Back to top</a></p>



<a name="installation_scripts_with_examples"></a>
<h3>Installation scripts with examples</h3>
<p>From the /bin folder of your installation, run the applicable Jython script below, using appropriate values for your installation. For definitions, refer to the tables above.</p>
<h4>Windows</h4>
<p><strong>Script:</strong></p>
<pre>Jython.bat ../scripts/Lib/soa/atmosphere/tenant.py -a -v --url {url} --tenantName {tenantName} 
--tenantId {tenantId} --address {tenantAddress} --consoleAddress {consoleAddress} --theme {theme} 
--themeImpl {themeImpl} --email  {default tenant administrator} 
--password {default tenant administrator password} --contactEmailAddress {contactEmailAddress} 
--fromEmailAddress {fromEmailAddress} --virtualHosts {virtualHosts} </pre>
<p><strong>Example:</strong></p>
<pre>jython.bat ../scripts/Lib/soa/atmosphere/tenant.py -a -v --url http://enterprise.soa.local:9900 
--tenantName EnterpriseAPI --tenantId enterpriseapi --address http://enterpriseapi.soa.local:9900 
--consoleAddress http://enterpriseapi.soa.local:9900/enterpriseapi --theme default --themeImpl {default} 
--email administrator@{yoursite}.com --password password 
--contactEmailAddress yourname@acmepaymentscorp.com 
--fromEmailAddress yourname@acmepaymentscorp.com </pre>
<h4>UNIX</h4>
<p><strong>Script:</strong></p>
<pre>/jython.sh../scripts/Lib/soa/atmosphere/tenant.py -a -v --url {url} --tenantName {tenantName} 
--tenantId {tenantId} --address {tenantAddress} --consoleAddress {consoleAddress} --theme {theme} 
--themeImpl {themeImpl} --email {default tenant administrator} --password {default tenant administrator password} 
--contactEmailAddress {contactEmailAddress} --fromEmailAddress {fromEmailAddress} 
--virtualHosts {virtualHosts}</pre>
<p><strong>Example:</strong></p>
<pre>./jython.sh ../scripts/Lib/soa/atmosphere/tenant.py -a -v --url http:// enterpriseapi.soa.local:9900 
--tenantName EnterpriseAPI --tenantId enterpriseapi --address http://enterpriseapi.soa.local:9900 
--consoleAddress http://enterpriseapi.soa.local:9900/enterpriseapi --theme default --themeImpl default 
--email administrator@{yoursite}.com --password password 
--contactEmailAddress yourname@acmepaymentscorp.com 
--fromEmailAddress yourname@acmepaymentscorp.com</pre>
<p><a href="#top">Back to top</a></p>



<a name="secure_installation"></a><h3>Secure Installation: Steps before Running Jython Scripts</h3>
<p>If you will be using HTTPS URLs for your Akana API Platform installation, there are some additional steps you must perform <strong>before</strong> running the Jython script. If these setup steps are not in place, the Jython script will fail.</p>
<p>The Jython installation script invokes a REST API call on the API Platform. If the API Platform container is configured with HTTPS, the Jython script must use a keystore with a trusted certificate; otherwise, it will not be able to connect to the API Platform.</p>
<p>If the certificate is a default trusted certificate issued by one of the trusted CAs already recognized by the JRE, no extra steps are needed. However, if the API Platform container is configured with HTTPS, you'll need to add the issuer to the certificate file before running the Jython script if your API Platform SSL certificate meets any of these conditions:</p>
<ul>
<li>The certificate is self-signed.</li>
<li>The certificate is generated by the Akana platform's internal CA.</li>
<li>The certificate is generated by a non-commercial issuer.</li>
</ul>
<h4>Setting up security for an Akana API Platform tenant with HTTPS URLs</h4>
<p>To add the issuer to the certificate file, you must get the certificate issuer of the container, set the path, and then set the Jython <strong>ops</strong> command. You can then run the Jython script. Follow the steps below.</p>
<h5>To set up security for a CM tenant with HTTPS URLs</h5>
<ol>
<li>In Akana Policy Manager, create a keystore with the issuer certificate of API Platform SSL Certificate.
<p>You could use a tool such as the Java Keytool utility (http://sourceforge.net/projects/keytool) or the Elysian Keytool Advanced GUI (http://sourceforge.net/projects/ssltools) to create the keystore. An example using Keytool is shown below:</p>
<pre>keytool -genkey -alias mydomain -keyalg RSA -keystore keystore.jks -keysize 2048</pre></li>
<li>Import the trusted certificate into the keystore. An example is shown below. Substitute values such as filename and location and keystore name and location.
<pre>keytool -importcert -v -trustcacerts -alias atmo -file C:/akana/CA.cer -keystore 
c:/akana/keystore.jks -storepass password -storetype JKS</pre>
<p>Once this step is complete, the keystore is ready with the API Platform SSL certificate.</p>
<p><strong>Note</strong>: As an alternative to the above step, which uses the default <strong>cacerts</strong> keystore and adds the new certificate issuer, you could create a blank <strong>cacerts</strong> file with just this issuer, the API Platform certificate issuer. If you take this approach you would still have to follow Step 3 below, and then run the Jython script.</p></li>
<li>In the <strong>bin</strong> folder for your installation, at the command line, execute the following command, substituting the keystore path and filename:
<pre>set JYTHON_OPTS="-Djavax.net.ssl.trustStore={keystore_path_and_filename}"</pre>
<p>An example is shown below.</p>
<pre>set JYTHON_OPTS="-Djavax.net.ssl.trustStore=C:/testdata/mykeystore.jks"</pre></li>
<li>Run the Jython script with the values for your installation.
<p><strong>Windows:</strong></p>
<pre>jython.bat ../scripts/Lib/soa/atmosphere/tenant.py -a -v --url https://enterprise.soa.local:9443 
--tenantName EnterpriseAPI--tenantId enterpriseapi --address https://enterpriseapi.soa.local:9443 
--consoleAddress https://enterpriseapi.soa.local:9443/enterpriseapi --theme default 
--email administrator@{yoursite}.com --password password 
--contactEmailAddress yourname@acmepaymentscorp.com 
--fromEmailAddress yourname@acmepaymentscorp.com</pre>
<p><strong>UNIX: </strong></p>
<pre>./jython.sh ../scripts/Lib/soa/atmosphere/tenant.py -a -v --url https:// enterpriseapi.soa.local:9443 
--tenantName EnterpriseAPI --tenantId enterpriseapi--address https://enterpriseapi.soa.local:9443 
--consoleAddress https://enterpriseapi.soa.local:9443/enterpriseapi --theme default 
--email administrator@{yoursite}.com --password password 
--contactEmailAddress yourname@acmepaymentscorp.com 
--fromEmailAddress yourname@acmepaymentscorp.com </pre>
<p>An example is shown below.</p>
<pre>jython ../scripts/Lib/soa/atmosphere/tenant.py -a -v --url https://acmepaymentscorp.com:9443 
--tenantName admin@acmepaymentscorp --tenantId admin@acmepaymentscorp 
--address https://acmepaymentscorp.com:9443 
--consoleAddress https://acmepaymentscorp.com:9443/atmosphere 
--theme default --contactEmailAddress admin@acmepaymentscorp.com 
--fromEmailAddress admin@acmepaymentscorp.com --virtualHosts acmepaymentscorp.com</pre></li>
</ol>
<p>If you are not sure how to do SSL configuration for your listener, follow the instructions below.</p>
<h4>Configure HTTPS listener when using the Akana Platform internal Certificate Authority</h4>
<p>To configure the HTTPS listener, there are three basic steps:</p>
<ol>
  <li><a href="#01_configure_ca">Step 1: In Policy Manager, configure the Certificate Authority</a></li>
  <li><a href="#02_add_listener">Step 2: Add HTTPS listener to CM container</a></li>
  <li><a href="#03_manage_pki_keys_for_listener">Step 3: Manage PKI Keys for HTTPS Listener</a></li>
</ol>
<a name="01_configure_ca"></a><h4>Step 1: In Policy Manager, configure the Certificate Authority</h4>
<p>The first step is to configure the Certificate Authority.</p>
<h5>To configure the CA in Policy Manager</h5>
<ol>
<li>In Policy Manager, go to <strong>Configure</strong>, then <strong>Security</strong>, then <strong>Certificates</strong>, then <strong>Certificate Authority</strong>.</li>
<li>Click <strong>Configure Certificate Authority</strong>. </li>
<li>At the <strong>Select Certificate Configuration Option</strong> page, click <strong>Generate X.509 CA Certificate and PKI Keys</strong>.</li>
<li>At the <strong>Generate CA Certificate and PKI Keys</strong> page, provide values and then click <strong>Finish</strong>.</li>
<li>At the summary page, click <strong>Export CA Certificate</strong>. Save it to a location on your local filesystem.</li>
</ol>
<a name="02_add_listener"></a><h4>Step 2: Add HTTPS listener to CM container</h4>
<p>Next, add an HTTPS listener to the container.</p>
<h5>To add an HTTPS listener to the CM container</h5>
<ol>
<li>In the Akana Policy Manager Workbench, go to Akana API Platform, then <strong>Containers</strong>, then <strong>CM Container</strong>, then <strong>Details</strong>, then <strong>Inbound Listeners</strong>.</li>
<li>Click <strong>Add Container Listener</strong>.</li>
<li>At the <strong>Select Container Listener Type</strong> page, select HTTPS and click <strong>Next</strong>.</li>
<li>Provide values for the listener: Name and Description, Bind to all interfaces checkbox, Host Name, Port Number, Content Path, and thread pool details.</li>
<li>Click <strong>Finish</strong>. The HTTPS listener is added.</li>
</ol>
<a name="03_manage_pki_keys_for_listener"></a><h4>Step 3: Manage PKI Keys for HTTPS Listener</h4>
<p>Your subject DN must match with the CA, and the HTTPS listener certificate must use the same hostname that you are using, otherwise the Jython script will fail. </p>
<p>Follow the steps below.</p>
<h5>To manage PKI keys for the HTTPS Listener</h5>
<ol>
<li>In the Policy Manager Organization Tree, under <strong>API Platform</strong>, <strong>Containers</strong>, <strong>CM Container</strong>, <strong>Details</strong>, choose <strong>Inbound Listeners</strong>.</li>
<li>From the Actions drop-down menu, click <strong>Manage PKI Keys</strong>.</li>
<li>In the <strong>Select Key Management Options</strong> page, under <strong>Key Management Options</strong>, choose <strong>Generate PKI Keys and X.509 Certificate</strong>. Click <strong>Next</strong>.</li>
<li>In the <strong>Generate PKI Keys and X.509 Certificate</strong> page, provide the same details you set up for the Certificate Authority's Subject DN (see To configure the CA in Policy Manager, Step 3).</li>
<li>Click <strong>Finish</strong>.</li>
<li>In the summary page, in the <strong>Certificate Details</strong> section, verify that the values for <strong>Subject DN</strong> and <strong>Issuer DN</strong> match.</li>
</ol>
<p><a href="#top">back to top</a></p>



<!--<a name="tenant_settings_in_ui"></a><h3>Managing tenant settings in the user interface</h3>
<h5 class="stamp">API Platform Version: 8.3</h5>
<p>From version 8.3 onwards, you can also manage some of the tenant settings in the developer portal user interface, via the Site Settings page (Administration &gt; Settings &gt; SIte).</p>
<p>Here you can change some of the settings, such as contact email address, and you can add, change, or delete themes.</p>
<p>For more information refer to the Site Admin documentation: <a href="../../cm/learnmore/site_admin_settings.htm" title="Settings" target="_blank">http://docs.akana.com/cm/learnmore/site_admin_settings.htm</a>.</p>
<p><a href="#top">back to top</a></p>-->



<div class = "divider1"></div>



<h3 id="related_topics">Related Topics</h3>
<div class="relatedlinks" id="install">
<ul>
	<li><a href="../upgrade/upgrading_akana_api_platform_84_2018.htm">Upgrading Akana API Platform from Version 8.4x to Version 2018.0.x</a></li>
	<li><a href="../upgrade/upgrading_akana_api_platform_82_84.htm">Upgrading Akana API Platform from Version 8.2 to Version 8.4x</a></li>
	<li><a href="../upgrade/upgrading_min_downtime.htm">Use Case: Upgrading with Minimum Downtime</a></li>
	<li><a href="../upgrade/upgrading_micro.htm">Micro-Version Upgrade Notes: 2018.0.0</a></li>
	<li><a href="../upgrade/upgrading_micro_84x.htm">Micro-Version Upgrade Notes: 8.4x</a></li>
</ul>
<ul>
	<li><a href="../platform_install/installing_akana_api_platform.htm">Installing the Akana API Platform 2018.0.0</a></li>
	<li><a href="../platform_install/installing_akana_api_platform_v84.htm">Installing the Akana API Platform 8.4x</a></li>
	<li><a href="../platform_install/installing_akana_api_platform_v82.htm">Installing the Akana API Platform 8.2x</a></li>
	<li><a href="../platform_install/implementation_planning.htm">Planning Your Implementation</a></li>
	<li><a href="../platform_install/install_cm_jython_script.htm">Installation Jython Script</a></li>
	<li><a href="../platform_install/install_es_config.htm">Installing and Configuring Elasticsearch</a></li>
	<li><a href="../platform_install/install_es_secure_tc.htm">Configuring Elasticsearch with security</a></li>
</ul>
</div>