---
layout: page
title: Community Manager Tenant Installation Jython Script
description: Learn how to create and run the Jython installation script for the Community Manager developer portal.
product: sp
category: gs
weight: 07
sub-nav-class: Installation - Akana API Platform
type: page
nav-title: Tenant Installation Jython Script
---
<h1 id="top">Community Manager Tenant Installation Jython Script</h1>
<p>Provides reference information and examples relating to the installation Jython script used to create a tenant&#8212;an instance of the Akana API Platform Community Manager developer portal.</p>
<hr class="divide_hr" />



<h2 style="color: gray;">Table of Contents</h2>
<ol class="table_of_contents">
	<li><a href="#jython_script_elements">Jython Script Elements</a>
		<ul>
			<li><a href="#script_elements_required">Required Jython script elements</a></li>
			<li><a href="#script_elements_optional">Optional Jython script elements</a></li>
		</ul>
	</li>
	<li><a href="#theme_themeimpl">Using theme and themeImpl to specify a theme</a></li>
	<li><a href="#cloning_themes">Extending a platform theme</a></li>
	<li><a href="#installation_scripts_with_examples">Installation script examples</a>
		<ul>
			<li><a href="#install_script_eg_calling_windows">Calling the script: Windows</a></li>
			<li><a href="#install_script_eg_calling_unix">Calling the script: Unix</a></li>
			<li><a href="#install_script_eg_calling_elements">Script elements (same for all)</a></li>
			<li><a href="#install_script_eg_windows">Script example: Windows</a></li>
			<li><a href="#install_script_eg_unix">Script example: Unix</a></li>
		</ul>
	</li>
	<li><a href="#secure_installation">Secure Installation</a></li>
</ol>
<hr class="divide_hr" />



<h2 id="jython_script_elements">Jython Script Elements</h2>
<p>The various Jython script elements allow you to specify tenant configuration values, to tailor the installation to your requirements. Some of the elements determine the look and feel of the resulting installation. Review the available options before writing your tenant Jython script:</p>
<ul>
	<li><a href="#script_elements_required">Required Jython script elements</a></li>
	<li><a href="#script_elements_optional">Optional Jython script elements</a></li>
</ul>


<h3 id="script_elements_required">Required Jython script elements</h3>
<p>Required script elements are given below, with an explanation of each.</p>
<dl>



<dt>--url</dt>
<dd>The URL for the container that the <strong>Akana Community Manager APIs</strong> feature is installed on. Can be a container URL or load balancer URL. The URL is normally structured along these lines: <strong>{protocol}://{hostname}:{port}</strong></dd>
<dd>Example: <strong>http://server-10.acmepaymentscorp.com:9901</strong></dd>
<dd>For a more detailed example, see <a href="#jython_script_elements_url_example">URL values in the Jython script elements: example</a> below.</dd>
<dd>There is normally no context unless the product is running in an application server.</dd>



<dt>--tenantName</dt>
<dd>A friendly name for the tenant, for use in certain scenarios such as email messages.</dd>
<dd>Example: <strong>Acme</strong></dd>
<dd><strong>Note</strong>: The <strong>tenantName</strong> value can be changed, later, from the Community Manager developer portal.</dd>



<dt>--tenantId</dt>
<dd>The internal ID of the tenant. When choosing the TenantID, it's best to choose an ID that's as short as possible, since it's used in many other IDs (such as AppID, APIID), in URLs, and in message payload content. It cannot have spaces or special characters, and should be lowercase. Keep it simple. The tenantID is normally the lowercase version of the tenant name above (without spaces); for example, <strong>acmepaymentscorp</strong>. It will appear in all object IDs and the URLs in the system.</dd>
<dd><strong>Notes</strong>:
	<ul>
		<li>Once the tenant is created, the <strong>tenantId</strong> value cannot be changed.</li>
		<li>If you are using multiple environments, and might be using import/export or promotion of data between environments, the value for tenantid must be the same for all environments.</li>
	</ul>
</dd>



<dt>--address</dt>
<dd>The base URL of the tenant. The hostname must be unique. There is normally no context unless the product is running in an application server.</dd>
<dd>This is the default address from which the tenant is accessed. Multiple additional virtual hostnames are allowed, but the hostname provided in this element is the primary hostname.</dd>
<dd>This value is used in certain notifications that provide a URL for accessing the tenant; for example, the signup confirmation email.</dd>
<dd>Example: <strong>http://acmepaymentscorp.com</strong></dd>
<dd>For a more detailed example, see <a href="#jython_script_elements_url_example">URL values in the Jython script elements: examples</a> below.</dd>
<dd><strong>Note</strong>: Hostnames in the Jython script must be lowercase.</dd>



<dt>--consoleAddress</dt>
<dd>The same as the --address element, but includes the context in which the Community Manager developer portal is running, if a context is specified. Context could be a value, such as <strong>apiportal</strong>, or could just be root (<strong>/</strong>). This is the address of the Community Manager developer portal&#8212;the full URL that will be used in the browser when accessing the Community Manager developer portal user interface. The browser then redirects to the default login page.</dd>
<dd>Example: <strong>http://acmepaymentscorp.com/apiportal</strong> or <strong>http://acmepaymentscorp.com</strong>.</dd>
<dd>For a more detailed example, see <a href="#jython_script_elements_url_example">URL values in the Jython script elements: examples</a> below.</dd>
<dd><strong>Note:</strong>: Hostnames in the Jython script <strong>must</strong> be lowercase.</dd>
<dd><strong>Note</strong>: This parameter corresponds to the <strong>atmosphere.context.root</strong> settings in the underlying Administration Console. See <a href="../../cm/learnmore/site_admin_admin_console_settings.htm#com_soa_atmosphere_console">com.soa.atmosphere.console</a> (Community Manager developer portal Site Admin doc). There are certain values that are reserved for other uses. They include: /portal, /api. If you're choosing a custom value for this setting, do <strong>not</strong> use these values.</dd>



<dt>--username</dt>
<dd>Username for authorized user. Needed, along with the <strong>userpassword</strong> element, for the BasicAuth security required for adding a tenant.</dd>
<dd>Example: <strong>johnsmith</strong></dd>



<dt>--userpassword</dt>
<dd>Password for authorized user. Needed, along with the <strong>username</strong> element, for the BasicAuth security required for adding a tenant.</dd>
<dd>Example: <strong>securepassword_976</strong></dd>



</dl>


<h3 id="script_elements_optional">Optional Jython script elements</h3>
<p>Optional script elements are given below, with an explanation of each.</p>
<dl>



<dt>--contactEmailAddress</dt>
<dd>The email address that users should contact for help with any issues in the tenant. This address is used in some links in tenant pages&#8212;for example, in the footer template for pages on the Community Manager developer portal.</dd>



<dt>--email</dt>
<dd>The email address for the default tenant administrator.</dd>
<dd>From version 8.1 onwards, you can add multiple email addresses, as a comma-separated list. Each administrator created via the script has both SiteAdmin and BusinessAdmin roles.</dd>
<dd><strong>Note</strong>: If you don't include this parameter, the following default value is assigned: administrator@{tenantid}.</dd>



<dt>--esIndexName</dt>
<dd>Optional: the name of the Elasticsearch index. This is only needed if you're using some advanced options in a larger deployment, to have a separate, independent Elasticsearch index for each tenant. By default, an index with the name <strong>default</strong> is used. If this parameter is not included, the <strong>default</strong> index is used for the tenant.</dd>
<dd>Generally, this parameter is only applicable to a very large installation with multiple tenants.</dd>



<dt>--fromEmailAddress</dt>
<dd>The email address that is displayed in the "From" field for email notifications sent out by the platform.</dd>



<dt>--password</dt>
<dd>The password for the default tenant administrator.</dd>
<dd>If you specify a password, and include multiple email addresses, all tenant administrators will have the same password for first login.</dd>
<dd>If password is not specified, the platform generates a random password, unique to each user. The password is sent to the specified email address in the initial email notification.</dd>
<dd>Users must change the password on first login.</dd>



<dt>--theme</dt>
<dd>A value that determines which of the available themes is used for the Community Manager developer portal user interface.</dd>
<dd>Possible values depend on the product version you're using. In addition, for some themes, <strong> themeimpl</strong> is also needed (see below). For information about the values to specify, see <a href="#theme_themeimpl">Using theme and themeImpl to specify a theme</a> below.</dd>



<dt>--themeImpl</dt>
<dd>A property that works with <strong>theme</strong> to support the ability to extend Community Manager developer portal user interface themes, so that you can have multiple instances of one theme with separate customization for each. However, extending themes is most easily accomplished via the Community Manager developer portal user interface. See <a href="../../cm/learnmore/site_admin_site.htm#settings_theme_clone">How do I extend a platform theme?</a> (Community Manager developer portal help).</dd>
<dd>For information about the values to specify, see <a href="#theme_themeimpl">Using theme and themeImpl to specify a theme</a> below.</dd>
		
		
<dt>--virtualHosts</dt>
<dd>A comma-separated list of host names that the portal can be accessed from. For example:</dd>
<dd><strong>--virtualHosts server-10.acmepaymentscorp.com,acmepaymentscorp.com</strong> </dd>
<dd>For a more detailed example, see <a href="#jython_script_elements_url_example">URL values in the Jython script elements: examples</a> below.</dd>
<dd><strong>Note</strong>: Hostnames in the Jython script must be lowercase.</dd>
	
	
	
<dt>--ignoreCerts</dt>
<dd>An optional parameter you can use if you want to ignore SSL certs when creating the tenant. Defaults to <strong>False</strong>; if you include this parameter with value <strong>True</strong> (case sensitive), the platform accepts all certs when calling an HTTPS endpoint to create a new tenant.</dd>
</dl>

<h4 id="jython_script_elements_url_example">URL values in the Jython script elements: examples</h4>
<ul>
	<li><a href="#jython_script_elements_url_eg_01">Example #1 (with virtual hosts)</a></li>
	<li><a href="#jython_script_elements_url_eg_02">Example #2 (simple example)</a></li>
</ul>


<h5 id="jython_script_elements_url_eg_01">Example #1 (with virtual hosts)</h5>
<p> Let's say for example you create a container on http://server-10.acmepaymentscorp.com:9901, and install the <strong>Akana Community Manager APIs</strong> feature. You might choose to have the Akana Administration Console on a different port, for security reasons, so the URL might be http://server-10.acmepaymentscorp.com:9005/admin.</p>
<p>In this example, the values for the Jython script elements might be as shown below.</p>
<table class="doctable">
	<thead>
		<tr>
			<th>Jython script element...</th>
			<th>Possible value...</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>--url</td>
			<td>http://server-10.acmepaymentscorp.com:9901</td>
		</tr>
		<tr>
			<td>--address</td>
			<td>http://acmepaymentscorp.com</td>
		</tr>
		<tr>
			<td>--consoleAddress</td>
			<td>http://acmepaymentscorp.com/apiportal</td>
		</tr>
		<tr>
			<td>--virtualHosts</td>
			<td>server-10.acmepaymentscorp.com,acmepaymentscorp.com</td>
		</tr>
	</tbody>
</table>

<h5 id="jython_script_elements_url_eg_02">Example #2 (simple example)</h5>
<p>A very simple example might not use load balancing or virtual hosts. For example:</p>
<ul>
	<li>--url http://localhost:9000</li>
	<li>--address http://localhost:9000</li>
	<li>--consoleAddress http://localhost:9000/enterpriseapi</li>
</ul>
<p>In this example, --virtualHosts is not needed.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="theme_themeimpl">Using theme and themeImpl to specify a theme</h2>
<p>To install the first platform theme, use the values below to specify which theme you want.</p>
<p><strong>Note</strong>: You might also need to install the plug-in for the theme you want to use, as part of the installation process. Refer to the installation doc for your version: go to <a href="installing_akana_api_platform_all.htm" title="Akana API Platform installation doc landing page">Installing the Akana API Platform (all versions)</a> and choose your version.</p>
<table class="doctable">
	<thead>
		<tr bgcolor="#DDDDDD">
			<th>To install this theme...</th>
			<th>Use this theme parameter value...</th>
			<th>Use this themeImpl parameter value...</th>
			<th>Valid in these versions...</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>Bonita Theme</td>
			<td>bonita</td>
			<td>simpledev</td>
			<td>2020.1.0 and later</td>
			</tr>
		<tr>
			<td>Default Theme</td>
			<td>default</td>
			<td>None needed</td>
			<td><p>Versions earlier than 2020.2.0.</p>
				<p>Deprecated in 2020.1.0, removed in 2020.2.0</p></td>
			</tr>
		<tr>
			<td>Dev Ops Theme</td>
			<td>devops</td>
			<td>None needed</td>
			<td>All</td>
			</tr>
		<tr>
			<td>Hermosa Theme</td>
			<td>hermosa</td>
			<td>default</td>
			<td>All</td>
			</tr>
		<tr>
			<td>Simple Dev Theme</td>
			<td>simpledev</td>
			<td>None needed</td>
			<td><p>Versions earlier than 2020.2.0.</p>
				<p>Deprecated in 2020.2.0.</p></td>
			</tr>
	</tbody>
</table>
<p>For more information, see <a href="#cloning_themes">Extending a platform theme</a> below.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="cloning_themes">Extending a platform theme</h2>
<p>You can have multiple versions of a single platform theme by extending the theme. When you extend the theme, you essentially create one or more additional, custom themes, each with a different name. The steps are:</p>
<ol>
	<li>Defining the custom theme.</li>
	<li>Specifying the standard theme that it's based on.</li>
	<li>Modifying the custom theme.</li>
</ol>
<p>Each instance has its own URL (virtual host) and can be separately customized, but they all use the same code base and database. This allows you to provide a different user experience to different user groups.</p>
<p>The platform supports extending of all themes.</p>
<p>You can also extend themes via the Community Manager developer portal user interface: <strong>Administration</strong> &gt; <strong>Site</strong> &gt; <strong>Add Theme</strong>, and choose the <strong>Custom Theme</strong> option.</p>
<p>Extending Hermosa theme is supported from version 2018.0.0 onwards. For instructions, see <a href="../../cm/learnmore/site_admin_site.htm#settings_theme_clone">How do I extend a platform theme?</a> (Community Manager developer portal help).</p>
<p><a href="#top">Back to top</a></p>



<h2 id="installation_scripts_with_examples">Installation script examples</h2>
<p>From the /bin folder of your installation, run the applicable Jython script below, using appropriate values for your installation. For definitions, refer to the sections above. Choose the section for your operating system:</p>
<ul>
	<li><a href="#install_script_eg_calling_windows">Calling the script: Windows</a></li>
	<li><a href="#install_script_eg_calling_unix">Calling the script: Unix</a></li>
	<li><a href="#install_script_eg_calling_elements">Script elements (same for all)</a></li>
	<li><a href="#install_script_eg_windows">Script example: Windows</a></li>
	<li><a href="#install_script_eg_unix">Script example: Unix</a></li>
</ul>


<h3 id="install_script_eg_calling_windows">Calling the script: Windows</h3>
<p>For Windows the first part of calling the script is shown below. For information on the script parameters, see <a href="#install_script_eg_calling_elements">Script elements (same for all)</a>.</p>
<pre>Jython.bat ../scripts/Lib/soa/atmosphere/tenant.py -a -v</pre>

<h3 id="install_script_eg_calling_unix">Calling the script: Unix</h3>
<p>For Unix the first part of calling the script is shown below. For information on the script parameters, see <a href="#install_script_eg_calling_elements">Script elements (same for all)</a>.</p>
<pre>/jython.sh../scripts/Lib/soa/atmosphere/tenant.py -a -v</pre>


<h3 id="install_script_eg_calling_elements">Script elements (same for all)</h3>
<p>After the first part of the script, list the script elements and their values. Script elements are shown below.</p>
<p>Line breaks have been added for display purposes. Remove line breaks when copying and pasting.</p>
<pre>--url {url} 
--tenantName {tenantName} 
--tenantId {tenantId} 
--address {tenantAddress} 
--consoleAddress {consoleAddress} 
--theme {theme} 
--themeImpl {themeImpl} 
--email {default tenant administrator} 
--password {default tenant administrator password} 
--contactEmailAddress {contactEmailAddress} 
--fromEmailAddress {fromEmailAddress} 
--virtualHosts {virtualHosts} 
--username {username} 
--userpassword {user password}</pre>


<h3 id="install_script_eg_windows">Script example: Windows</h3>
<p>An example of a script for Windows is shown below.</p>

<pre>jython.bat ../scripts/Lib/soa/atmosphere/tenant.py -a -v --url http://server-10.acmepaymentscorp.com:9901 --tenantName EnterpriseAPI --tenantId enterpriseapi --address http://acmepaymentscorp.com --consoleAddress http://enterpriseapi.soa.local:9900/enterpriseapi --theme default --themeImpl {default} --email administrator@acmepaymentscorp.com --password Admin_Password --contactEmailAddress yourname@acmepaymentscorp.com --fromEmailAddress yourname@acmepaymentscorp.com --virtualHosts server-10.acmepaymentscorp.com,acmepaymentscorp.com --username janemead --userpassword pwdFk24y1iY3U4dpwd</pre>


<h3 id="install_script_eg_unix">Script example: Unix</h3>
<p>An example of a script for Unix is shown below.</p>
<pre>./jython.sh ../scripts/Lib/soa/atmosphere/tenant.py -a -v --url http://server-10.acmepaymentscorp.com:9901 --tenantName EnterpriseAPI --tenantId enterpriseapi --address http://acmepaymentscorp.com --consoleAddress http://enterpriseapi.soa.local:9900/enterpriseapi --theme default --themeImpl default --email administrator@acmepaymentscorp --password Admin_Password --contactEmailAddress yourname@acmepaymentscorp.com --fromEmailAddress yourname@acmepaymentscorp.com --virtualHosts server-10.acmepaymentscorp.com,acmepaymentscorp.com --username janemead --userpassword pwdFk24y1iY3U4dpwd</pre>
<p><a href="#top">Back to top</a></p>



<h2 id="secure_installation">Secure Installation: Steps before Running Jython Scripts</h2>
<p>If you will be using HTTPS URLs for your Akana API Platform installation, there are some additional steps you must perform <strong>before</strong> running the Jython script. If these setup steps are not in place, the Jython script will fail.</p>
<p>The Jython installation script invokes a REST API call on the API Platform. If the API Platform container is configured with HTTPS, the Jython script must use a keystore with a trusted certificate; otherwise, it will not be able to connect to the API Platform.</p>
<p>If the certificate is a default trusted certificate issued by one of the trusted CAs already recognized by the JRE, no extra steps are needed. However, if the API Platform container is configured with HTTPS, you'll need to add the issuer to the certificate file before running the Jython script if your API Platform SSL certificate meets any of these conditions:</p>
<ul>
<li>The certificate is self-signed.</li>
<li>The certificate is generated by the Akana platform's internal CA.</li>
<li>The certificate is generated by a non-commercial issuer.</li>
</ul>


<h3>Setting up security for an Akana API Platform tenant with HTTPS URLs</h3>
<p>To add the issuer to the certificate file, you must get the certificate issuer of the container, set the path, and then set the Jython <strong>ops</strong> command. You can then run the Jython script. Follow the steps below.</p>

<h4>To set up security for a CM tenant with HTTPS URLs</h4>
<ol>
	<li>In Akana Policy Manager, create a keystore with the issuer certificate of API Platform SSL Certificate.
		<p>You could use a tool such as the Java Keytool utility (http://sourceforge.net/projects/keytool) or the Elysian Keytool Advanced GUI (http://sourceforge.net/projects/ssltools) to create the keystore. An example using Keytool is shown below:</p>
		<pre>keytool -genkey -alias mydomain -keyalg RSA -keystore keystore.jks -keysize 2048</pre></li>
	<li>Import the trusted certificate into the keystore. Substitute the correct values for filename, file location, keystore name, and keystore location. An example is shown below.
		<pre>keytool -importcert -v -trustcacerts -alias atmo -file C:/akana/CA.cer -keystore c:/akana/keystore.jks -storepass password -storetype JKS</pre>
		<p>Once this step is complete, the keystore is ready with the API Platform SSL certificate.</p>
		<p><strong>Note</strong>: As an alternative to the above step, which uses the default <strong>cacerts</strong> keystore and adds the new certificate issuer, you could create a blank <strong>cacerts</strong> file with just this issuer, the API Platform certificate issuer. If you take this approach you would still have to follow Step 3 below, and then run the Jython script.</p></li>
	<li>In the <strong>bin</strong> folder for your installation, at the command line, execute the following command, substituting the keystore path and filename:
		<pre>set JYTHON_OPTS="-Djavax.net.ssl.trustStore={keystore_path_and_filename}"</pre>
		<p>An example is shown below.</p>
		<pre>set JYTHON_OPTS="-Djavax.net.ssl.trustStore=C:/testdata/mykeystore.jks"</pre></li>
	<li>Run the Jython script with the values for your installation. For examples, see:
		<ul>
			<li>Windows: <a href="#install_script_eg_windows">Script example: Windows</a></li>
			<li>Unix: <a href="#install_script_eg_unix">Script example: Unix</a></li>
		</ul>
	</li>
</ol>
<p>If you are not sure how to do SSL configuration for your listener, follow the instructions below.</p>
<h3>Configure HTTPS listener when using the Akana Platform internal Certificate Authority</h3>
<p>To configure the HTTPS listener, there are three basic steps:</p>
<ol>
	<li><a href="#s01_configure_ca">Step 1: In Policy Manager, configure the Certificate Authority</a></li>
	<li><a href="#s02_add_listener">Step 2: Add HTTPS listener to CM container</a></li>
	<li><a href="#s03_manage_pki_keys_for_listener">Step 3: Manage PKI Keys for HTTPS Listener</a></li>
</ol>


<h3 id="s01_configure_ca">Step 1: In Policy Manager, configure the Certificate Authority</h3>
<p>The first step is to configure the Certificate Authority.</p>

<h4 id="proc_pm_config_ca">To configure the CA in Policy Manager</h4>
<ol>
<li>In Policy Manager, go to <strong>Configure</strong>, then <strong>Security</strong>, then <strong>Certificates</strong>, then <strong>Certificate Authority</strong>.</li>
<li>Click <strong>Configure Certificate Authority</strong>. </li>
<li>At the <strong>Select Certificate Configuration Option</strong> page, click <strong>Generate X.509 CA Certificate and PKI Keys</strong>.</li>
<li>At the <strong>Generate CA Certificate and PKI Keys</strong> page, provide values and then click <strong>Finish</strong>.</li>
<li>At the summary page, click <strong>Export CA Certificate</strong>. Save it to a location on your local filesystem.</li>
</ol>


<h3 id="s02_add_listener">Step 2: Add HTTPS listener to CM container</h3>
<p>Next, add an HTTPS listener to the container.</p>
<h4>To add an HTTPS listener to the CM container</h4>
<ol>
<li>In the Akana Policy Manager Workbench, go to Akana API Platform, then <strong>Containers</strong>, then <strong>CM Container</strong>, then <strong>Details</strong>, then <strong>Inbound Listeners</strong>.</li>
<li>Click <strong>Add Container Listener</strong>.</li>
<li>At the <strong>Select Container Listener Type</strong> page, select HTTPS and click <strong>Next</strong>.</li>
<li>Provide values for the listener: Name and Description, Bind to all interfaces checkbox, Host Name, Port Number, Content Path, and thread pool details.</li>
<li>Click <strong>Finish</strong>. The HTTPS listener is added.</li>
</ol>


<h3 id="s03_manage_pki_keys_for_listener">Step 3: Manage PKI Keys for HTTPS Listener</h3>
<p>Your subject DN must match with the CA, and the HTTPS listener certificate must use the same hostname that you are using, otherwise the Jython script will fail. </p>
<p>Follow the steps below.</p>
<h4>To manage PKI keys for the HTTPS Listener</h4>
<ol>
<li>In the Policy Manager Organization Tree, under <strong>API Platform</strong>, <strong>Containers</strong>, <strong>CM Container</strong>, <strong>Details</strong>, choose <strong>Inbound Listeners</strong>.</li>
<li>From the <strong>Actions</strong> drop-down menu, click <strong>Manage PKI Keys</strong>.</li>
<li>In the <strong>Select Key Management Options</strong> page, under <strong>Key Management Options</strong>, choose <strong>Generate PKI Keys and X.509 Certificate</strong>. Click <strong>Next</strong>.</li>
<li>In the <strong>Generate PKI Keys and X.509 Certificate</strong> page, provide the same details you set up for the Certificate Authority's Subject DN (see <a href="#proc_pm_config_ca">To configure the CA in Policy Manager</a>).</li>
<li>Click <strong>Finish</strong>.</li>
<li>In the summary page, in the <strong>Certificate Details</strong> section, verify that the values for <strong>Subject DN</strong> and <strong>Issuer DN</strong> match.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<hr class="divide_hr" />



<h2 id="related_topics">Related Topics</h2>
<div class="relatedlinks" id="install"><!-- #BeginLibraryItem "/Library/relatedtopics_install.lbi" -->
<ul>
	<li><a href="../upgrade/upgrading_akana_api_platform_all.htm">Upgrading the Akana API Platform (all versions)</a></li>
	<li><a href="../upgrade/upgrading_min_downtime.htm">Use Case: Upgrading with Minimum Downtime</a></li>
	<li><a href="../upgrade/upgrading_micro.htm">Minor-Version Update Notes</a></li>
</ul>
<ul>
	<li><a href="installing_akana_api_platform_all.htm">Installing the Akana API Platform (all versions)</a></li>
	<li><a href="implementation_planning.htm">Planning Your Implementation</a></li>
	<li><a href="install_cm_jython_script.htm">Community Manager Tenant Installation Jython Script</a></li>
	<li><a href="../elasticsearch/install_es_config.htm">Installing and Configuring Elasticsearch</a></li>
	<li><a href="../elasticsearch/install_es_secure_tc.htm">Configuring Elasticsearch with Security</a></li>
</ul><!-- #EndLibraryItem --></div>