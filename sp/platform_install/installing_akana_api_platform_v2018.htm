---
layout: page
title: Installing Akana API Platform 2018.0.x
description: Learn how to download, install, and configure the Akana API Platform 2018.0.x.
product: sp
category: gs
weight: 04
sub-nav-class: Installation - Akana API Platform
type: page
nav-title: Installing Akana API Platform 2018.0.x
---
<h1 id="top">Installing the Akana API Platform 2018.0.x</h1>
<p>Learn how to download, install, and configure the Akana API Platform 2018.0.x, including the Akana Platform and all features previously included in Policy Manager and Community Manager.</p>
<p><strong>Note</strong>: This document covers instructions for the combined features available in version 2018.0.x. For 8.4x, refer to <a href="installing_akana_api_platform_v84.htm">Installing Akana API Platform 8.4x</a>.</p>

<p>
<a href="../admin_console/using_admin_console.htm" class="button secondary">Using the Admin Console</a>
<a href="../admin_console/installing_tools.htm" class="button secondary">Installing Tools</a>
<a href="../admin_console/installing_plugins.htm" class="button secondary">Installing Plug-ins</a>
<a href="../admin_console/config_actions.htm" class="button secondary">Configuration Actions</a>
</p>

<h4 class="stamp">Supported Platforms: 2018.0.x</h4>
<hr class="divide_hr" />
<h2 style="color: gray;">Table of Contents</h2>



<h4 style="color: gray;"><a href="#h_install_planning">Planning the Installation</a></h4>
<ol class="table_of_contents">
	<li><a href="#overview">Overview</a></li>
	<li><a href="#s01_01">Step 1-1: Plan the installation</a></li>
	<li><a href="#s01_02">Step 1-2: Install and configure Elasticsearch (if not already done)</a></li>
</ol>



<h4 style="color: gray;"><a href="#h_install_procedure">Performing the Installation:</a></h4>
<ol class="table_of_contents">
	<li><a href="#gather_zip_files">Step 1: Download ZIP files</a></li>
	<li><a href="#unzip_files">Step 2: Extract installation files</a></li>
	<li><a href="#run_configurator_pm">Step 3: Run Configurator to create the first container</a></li>
	<li><a href="#install_pm_cm">Step 4: Install Policy Manager/Community Manager features on the container</a></li>
	<li><a href="#install_plugins">Step 5: (as needed) Install plug-ins on the container</a></li>
	<li><a href="#configure_pm">Step 6: Complete pending tasks to configure container features</a></li>
	<li><a href="#run_configurator_more">Step 7: Create and configure additional containers</a></li>
	<li><a href="#add_nd_to_pm">Step 8: Add Network Director to Policy Manager</a></li>
	<li><a href="#create_cm_tenant_using_jython">Step 9: Create Community Manager tenant using the Jython script</a></li>
	<li><a href="#run_portal">Step 10: Run the developer portal</a></li>
</ol>



<h4 style="color: gray;"><a href="#h_install_tasks_reference">Installation Tasks/Reference:</a></h4>
<ol class="table_of_contents">
	<li><a href="#supported_databases">Supported databases</a></li>
	<li><a href="#database_notes">Database notes</a>
		<ul>
			<li><a href="#notes_database_general">Database notes, all: user permissions</a></li>
			<li><a href="#notes_database_oracle">Database notes: Oracle</a></li>
			<li><a href="#notes_database_ms_sql_server">Database notes: Microsoft SQL Server</a></li>
			<li><a href="#notes_database_mysql">Database notes: MySQL</a></li>

		</ul>
		</li>
	
	<li><a href="#database_drivers">Database drivers</a></li>
	<li><a href="#installation_folder_structure">Installation folder structure</a></li>
	<li><a href="#clear_configurator_cache">Clear Configurator cache</a></li>
	<li><a href="#starting_container">Starting a container</a></li>
	<li><a href="#stopping_container">Stopping a container</a></li>
	<li><a href="#creating_container_gui">Creating a container via the GUI</a></li>
	<li><a href="#creating_container_silent">Creating a container using silent install (Linux)</a></li>
	<li><a href="#unregister_reregister_windows_service">Unregistering and re-registering the Windows service</a></li>
	<li><a href="#linux_java_home_variable">Linux install: exporting the JAVA_HOME variable</a></li>
	<li><a href="#install_tasks_manage_pki_keys">Installation wizard: Manage PKI Keys</a></li>
	<li><a href="#install_tasks_add_database">Installation wizard: Add Database</a></li>
	<li><a href="#install_tasks_manage_schemas">Installation wizard: Manage Schemas</a></li>
	<li><a href="#install_tasks_create_pm_admin_user">Installation wizard: Define Policy Manager Administrator Credentials</a></li>
	<li><a href="#install_tasks_provisioning">Installation wizard: Provisioning</a></li>
	<li><a href="#wizard_configure_container_instance">Installation wizard: Configure Container Instance</a></li>
	<li><a href="#install_tasks_nd_configure_wsmex">Installation wizard, ND container: Configure WS-Metadata Exchange Options</a></li>
	<li><a href="#install_options">Installation Options: Full List</a></li>
	<li><a href="#pm_add_container_wizard">Policy Manager Add Container wizard</a></li>
	<li><a href="#installation_scenarios">Sample deployment scenarios</a></li>
	<li><a href="#container_creation_sequence">Container creation sequence</a></li>
	<li><a href="#fn_scheduled_jobs">Feature notes: Scheduled jobs</a></li>
	<li><a href="#fn_embedded_es_node">Feature Notes: Akana Embedded Elasticsearch Node feature</a></li>
	<li><a href="#optional_additional_features">Optional additional features</a></li>
</ol>



<hr class="divide_hr" />
<h2 id="h_install_planning">Planning the Installation:</h2>



<h2 id="overview">Overview</h2>
<p>This document provides instructions for installing the Akana API Platform version 2018.0.0.</p>
<p>It covers a very simple scenario of setting up these containers:</p>
<ul>
	<li>One container with Policy Manager and Community Manager installed</li>
	<li>One container running the API Gateway (Network Director)</li>
</ul>

<p>This document covers the following broad activities associated with the installation process:</p>
<ul>
	<li>Preparation (Steps 1 and 2)</li>
	<li>Creating the first container, installing features and plug-ins, and configuring the container (<a href="#run_configurator_pm">Step 3</a> to <a href="#configure_pm">Step 6</a>)</li>
	<li>Creating and configuring additional containers (<a href="#run_configurator_more">Step 7</a>, which is <a href="#run_configurator_pm">Step 3</a> to <a href="#configure_pm">Step 6</a> repeated for each container as needed)</li>
	<li>Adding Network Director to Policy Manager (<a href="#add_nd_to_pm">Step 8</a>)</li>
	<li>Creating and running the API Platform tenant (<a href="#create_cm_tenant_using_jython">Step 9</a> and <a href="#run_portal">Step 10</a>)</li>
</ul>

<h4>Note: Installation task sequence</h4>
<p>There are different approaches to the install tasks:</p>
<ul>
	<li>You can create one container, configure it, and then create the next container, or you can create all containers and then configure the containers. It really doesn't matter. This documentation creates and configures the first container and then the next.</li>
	<li>You can install features and then configure them before installing plug-ins, or you can install features and plug-ins and then configure them. Again, it really doesn't matter. Just make sure all pending installation tasks are complete, on all containers, before creating the developer portal tenant. This documentation installs features and plug-ins and then configures.</li>
</ul>
<p><a href="#top">back to top</a></p>



<h2 id="s01_01">Step 1-1: Plan the installation</h2>
<p>Before you start, plan your installation. In particular, you'll need to:</p>
<ul>
	<li>Decide what containers you'll have, and which features will be installed in which containers. For a recommended simple configuration, see <a href="../deployment/deployment_clustered.htm">Sample Deployment Scenario</a>.</li>
	<li>Determine where you'll install Elasticsearch, needed for the search feature. For full information on Elasticsearch, see <a href="../platform_install/install_es_config.htm">Installing and Configuring Elasticsearch</a>.</li>
	<li>Determine whether you'll be using a specific add-on feature, such as the SAML Web SSO Security Provider.</li>
</ul>
<p><a href="#top">back to top</a></p>



<h2 id="s01_02">Step 1-2: Install and configure Elasticsearch (if not already done)</h2>
<p>Version 2018.0.0 requires standalone Elasticsearch. REST Client mode is recommended.</p>
<p>For instructions, see <a href="../platform_install/install_es_config.htm">Installing and Configuring Elasticsearch</a>.</p>
<p><a href="#top">back to top</a></p>




<hr class="divide_hr" />
<h2 id="h_install_procedure">Performing the Installation:</h2>




<h2 id="gather_zip_files">Step 1: Download ZIP files</h2>
<p>The first step is to download the required ZIP files.</p>
<p>First, create two folders:</p>
<ul>
	<li>A temporary download location for the download ZIP file.</li>
	<li>A folder for your installation; for example, <strong>AAP2018</strong>.</li>
</ul>
<p><strong>Note</strong>: The version numbering for the Akana Platform and Akana API Platform files does not necessarily match. For example, Akana API Platform 2018.0.9 requires Akana Platform 2018.0.8. For version compatibility, check the release notes for the version you're installing.</p>

<h4 id="proc_download_zips">To download the installation ZIP file or files</h4>
<ol>
	<li>Log in to the Rogue Wave Support Center (<a href="https://library.roguewave.com" target="_blank">https://library.roguewave.com</a>).
		<p><strong>Note</strong>: If you don't have a login for the site, contact Akana technical support to get access.</p>
	</li>
	<li>In the <strong>My Resources section</strong>, click <strong>Product Downloads</strong>, and then click <strong>Akana - Product Downloads</strong>.</li>
	<li>Choose the <strong>Product Downloads</strong> page for the release.</li>
	<li>Expand the links at the top of the page to access the files.</li>
	<li>Download the Akana Platform 2018.0.x GA file to your installation folder. See <a href="#os_versions">Akana Platform: Operating system versions</a> below.</li>
	<li>Download the latest 2018.0.x Akana API Platform file to your installation folder. This contains all necessary files for Akana API Platform installation, including Policy Manager and Community Manager installation.</li>
	<li>Optional: if you're using one or more plug-ins, download the latest ZIP file for each plug-in.
		<p><strong>Note</strong>: The SAML Web SSO plug-in ZIP file is part of the Akana API Platform ZIP file.</p>
	</li>
</ol>
<p><a href="#top">Back to top</a></p>



<h2 id="unzip_files">Step 2: Extract installation files</h2>
<p>The next step is to extract the files.</p>
<p><strong>Note</strong>: You'll need a password to unzip the files. If you don't know the password, contact your Akana representative.</p>
<h4 id="proc_unzip_files">To unzip the installation files</h4>
<p>In your installation folder, unzip all files:</p>
<ul>
	<li>Akana Platform latest ZIP</li>
	<li>Akana API Platform latest ZIP</li>
	<li>Any add-ons</li>
</ul>

<h4 id="os_versions">Akana Platform: Operating system versions</h4>
<p>The Akana Platform 2018.0.0 download ZIP file contains within it ZIP files for each operating system, so you can choose the appropriate file for the operating system you're using: </p>
<ul>
	<li><strong>Linux</strong> (includes JRE): <strong>akana-platform-linux-jre-2018.0.0.19.zip</strong></li>
	<li><strong>Windows</strong> (includes JRE): <strong>akana-platform-win-jre-2018.0.0.19.zip</strong></li>
	<li><strong></strong><strong>Windows, Linux, or Solaris</strong> (does not include JRE; provide your own JRE, version 1.8): <strong>akana-platform-2018.0.0.19.zip</strong>
	<p><strong>Note</strong>: If you're running on Windows and using your own JRE, be sure to set your JAVA_HOME system variable. The platform uses this when registering Windows services.</p>
	</li>
</ul>
<p><a href="#top">back to top</a></p>



<h2 id="run_configurator_pm">Step 3: Run Configurator to create the first container</h2>
<p>The Configurator steps you through creating a container, specifying basic values about the container.</p>
<p>Once you've created the container, you can go into the Akana Administration Console for the container and install features into it.</p>
<p>You can create a container:</p>
<ul>
	<li>Via the GUI, a Windows-based wizard that steps you through the installation process: See <a href="#creating_container_gui">Creating a container via the GUI</a>.</li>
	<li>Via silent install using a properties file: see <a href="#creating_container_silent">Creating a container using silent install (Linux)</a>.</li>
</ul>
<p>Follow the applicable linked procedure to create the first container, and then continue to the next step.</p>
<p><a href="#top">back to top</a></p>



<h2 id="install_pm_cm">Step 4: Install Policy Manager/Community Manager features on the container</h2>
<p>Follow the short procedure below to install the Policy Manager/Community Manager features on the first container for this two-container scenario (one PM/CM, one ND). For additional information on features for different scenarios, see <a href="#installation_scenarios">Sample deployment scenarios</a>.</p>

<h4>To install Policy Manager/Community Manager features on the container</h4>
<ol>
	<li>In the <strong>Akana Administration Console</strong>, go to the <strong>Available Features</strong> list.</li>
	<li>Install the following features:
		<ul>
			<li>Akana Community Manager (installing this feature also installs the Akana Community Manager APIs feature)</li>
			<li>Akana Community Manager OAuth Provider (Should be installed for any Community Manager container) </li>
			<li>Akana Community Manager Scheduled Jobs </li>
			<li>Akana Management Services</li>
			<li>Akana OAuth Provider</li>
			<li>Akana Policy Manager Console </li>
			<li>Akana Policy Manager Services&#8212;this feature bundle includes the Akana Scheduled Jobs feature which adds jobs to the Quartz scheduler. It also includes Akana Security Services<!--(security.services)-->. This feature is needed on all containers except Network Director.</li>
		</ul>
	<p><strong>Note</strong>: If you're following the sample deployment scenario, see <a href="#features_cm_pm">Community Manager/Policy Manager container features with access to MongoDB</a>.</p></li>
	<li>Click <strong>Install Feature</strong>; then, at the Resolution Summary, click <strong>Install Feature</strong> again.	</li>
	<li>At the <strong>Installation Complete</strong> summary, click <strong>Configure</strong> (if you are installing plug-ins, click <strong>Close</strong> and install plug-ins first).</li>
</ol>
	<p>For additional information, if needed, refer to the following topics:</p>
<ul>
	<li>For more detailed installation instructions: <a href="../container_management/configure_standalone_container.htm">Configure Standalone Container</a>.</li>
	<li>For container deployment options: <a href="../container_management/container_management.htm#deployment">Container Deployment Options</a>.</li>
</ul>
<p>The next step is to install any plug-ins that are needed for the container. See <a href="#install_plugins">Step 5: (as needed) Install plug-ins on the container</a> below.</p>
<p><a href="#top">back to top</a></p>



<h2 id="install_plugins">Step 5: (as needed) Install plug-ins on the container</h2>
<p>Depending on your installation scenario, you might need to install one or more plug-ins on your container to support the container features.</p>
<p>The procedures below walk you through installing the plug-ins for a PM/CM container.</p>

<h4>To install plug-ins on the PM/CM container</h4>
<ol>
	<li>At the Available Features list, from the <strong>Filter</strong> drop-down list at the top left, choose <strong>Plug-Ins</strong>.</li>
	<li>Install these plug-ins:
		<ul>
			<li>Akana Community Manager Policy Console plug-in</li>
			<li>Optional: Akana OAuth Plug-In (must be installed on the Community Manager container if OAuth is installed on a separate container)</li>
		</ul>
		</li>
	
	<li>Install one or more themes (also in the plug-ins list):
		<ul>
			<li>Akana Community Manager Default Theme</li>
			<li>Akana Community Manager Hermosa Theme</li>
			<li>Akana Community Manager Simple Developer Theme</li>
			</ul>
	</li>
	<li>Click <strong>Install Feature</strong>; then, at the Resolution Summary, click <strong>Install Feature</strong> again.</li>
	<li>Review the installation summary. To continue to the configuration step, click <strong>Configure</strong>.</li>
</ol>
<p><a href="#top">back to top</a></p>



<h2 id="configure_pm">Step 6: Complete pending tasks to configure container features</h2>
<p>The next step is to configure the features you've just installed on the container. You can either:</p>
<ul>
	<li>Click <strong>Configure</strong> at the end of the installation process in the previous step. The process steps you through the wizards for each configuration step.</li>
	<li>Manually start the configuration tasks at any point. In the Akana Administration Console for the container, click the <strong>Installed Features</strong> tab. Pending installation steps are listed at the bottom left. Click <strong>Complete Configuration</strong> to start the process.</li>
</ul>
<p><strong>Note</strong>: Before configuring the database, make sure you have the applicable database driver in place. See <a href="#database_drivers">Database drivers</a>.</p>
<p>Pending installation tasks for this installation scenario are shown below.</p>
<table class="doctable">
	<tr>
		<td rowspan="5" width="20%" align="left" valign="top"><img src="images_84/06_01_PendingInstallationTasks.jpg" alt="Pending installation tasks" /></td>
		<td rowspan="5" width="80%" align="left" valign="top"><ul>
			<li><strong>Manage PKI keys</strong>: Specifies key management options.</li>
			<li><strong>Add Database</strong>: Creates the database for the installation.</li>
			<li><strong>Manage Schemas</strong>: Manages the database schemas for the container.</li>
			<li><strong>Create Policy Manager Admin User</strong>: Creates the top-level Policy Manager user.</li>
			<li><strong>Provisioning</strong>: Initializes resources associated with the features installed on the container.</li>
		</ul></td>
	</tr>
</table>

<h4>To configure features for the PM/CM container</h4>
<ol>
	<li>Start the configuration step, either by clicking <strong>Configure</strong> at the end of the installation process or by choosing <strong>Installed Features</strong> &gt; <strong>Complete Configuration</strong> as shown above. Configuration steps vary depending on the features you're installing. The tasks below apply to the PM/CM container scenario.</li>
	<li>At the <strong>Manage PKI Keys wizard</strong>, choose key management options and other values and then click <strong>Finish</strong>. Review the summary and then click <strong>Go to Next Task</strong>.
		<p>For more information on this wizard, see <a href="#install_tasks_manage_pki_keys">Installation wizard: Manage PKI Keys</a> below.</p></li>
	<li>At the <strong>Configure Database Options Wizard</strong>, specify your database and other values. Since this is the first container, select <strong>Create new database</strong>/ For subsequent containers, you'll use the same database, so for a subsequent container you'd select <strong>Use existing database</strong>. Be sure to follow any applicable database-specific notes from the list below.
<p><strong>Notes</strong>: </p>
		<ul>
			<li>You'll need to have your database driver in place, in the <strong>{installation}\instances\{containername}\deploy</strong> folder, before running this wizard. See <a href="#database_drivers">Database drivers</a>.</li>
			<li><strong>Oracle</strong>: If you're using a new Oracle database, see <a href="#notes_database_oracle">Database notes: Oracle</a> for additional Oracle-specific information about DBA permissions, password configuration, and database table updates.</li>
			<li><strong>Microsoft SQL Server</strong>: For additional notes, refer to <a href="#notes_database_ms_sql_server">Database notes: Microsoft SQL Server</a> below.</li>
			<li><strong>MySQL</strong>: If your installation will include Lifecycle Manager, you'll need to add the required grants to the DB user before continuing to Step 4. For details, see <a href="#notes_database_mysql_rm_all">Database notes: MySQL with Lifecycle Repository</a>.</li>
		</ul>
	<p>For more information on this wizard, see <a href="#install_tasks_add_database">Installation wizard: Add Database</a> below.</p>
</li>
	<li>At the <strong>Manage Schemas wizard</strong>, check the checkboxes for all listed schemas and click <strong>Finish</strong>. Review the summary and then click <strong>Go to Next Task</strong>.
		<p>For more information on this wizard, see <a href="#install_tasks_manage_schemas">Installation wizard: Manage Schemas</a> below.</p></li>
	<li>At the <strong>Define Policy Manager Administrator Credentials</strong> <strong>Wizard</strong>, specify Administrator credentials (username and password). Click <strong>Finish</strong>. Review the summary and then click <strong>Go to Next Task</strong>.
		<p>For more information on this wizard, see <a href="#install_tasks_create_pm_admin_user">Installation wizard: Define Policy Manager Administrator Credentials</a> below.</p></li>
	<li>At the <strong>Provisioning</strong> <strong>Wizard</strong>, make sure the box is checked, and then click <strong>Finish</strong>.
	<p>For more information on this wizard, see <a href="#install_tasks_provisioning">Installation wizard: Provisioning</a> below.</p></li>
	<li>When the provisioning task is complete, you'll see a message box prompting you to restart your system. Click <strong>OK</strong>.
	<p><strong>Note</strong>: It's important to make sure that the Provisioning task is 100% complete before restarting.</p></li>
	<li>At the <strong>Complete Configuration</strong> page, click <strong>Close</strong>.</li>
</ol>
<p>Configuration of the first container is now complete.</p>
<p><a href="#top">back to top</a></p>



<h2 id="run_configurator_more">Step 7: Create and configure additional containers</h2>
<p>Once you have the first container set up, it's time to create and configure additional containers. Essentially you'll follow these steps for each container: <a href="#run_configurator_pm">Step 3: Run Configurator to create the first container</a> through <a href="#configure_pm">Step 6: Complete pending tasks to configure container features</a>. See <a href="#proc_create_additional_container">To create an additional container</a> below.</p>
<p>Create containers in this sequence:</p>
<ol>
	<li>First, create all Policy Manager/Community Manager containers.</li>
	<li>Then, create all Network Director containers.
	<p>You can create a Network Director container using either <a href="../admin_console/using_network_director_feature.htm#container_gui">GUI</a> or <a href="../admin_console/using_network_director_feature.htm#container_silent">Silent</a> options. For instructions on how to install a Network Director Container (<strong>ND1</strong>), install and configure the Network Director feature, and register the <strong>ND1</strong> container in Policy Manager, refer to <a href="../admin_console/using_network_director_feature.htm">Using Network Director Feature</a>.</p></li>
</ol>

<h4 id="proc_create_additional_container">To create an additional container</h4>
<ol>
	<li>Run Configurator to create the container. See <a href="#run_configurator_pm">Step 3: Run Configurator to create the first container</a>. Note these differences:
		<ul>
			<li>Use a different port number for each container.</li>
			</ul>
		</li>
	
	<li>Install features on the container. See <a href="#install_pm_cm">Step 4: Install Policy Manager/Community Manager features on the container</a>. For information on which features you might choose, see <a href="#installation_scenarios">Sample deployment scenarios</a>. For the Network Director container in this scenario, you would install:
		<ul>
			<li>Akana Network Director</li>
		</ul>
	</li>
	<li>Install any needed plug-ins on the container.
		<p>For the Network Director container, you don't need any plug-ins unless you are setting up a cluster.</p>
	</li>
	<li>Configure the features. See <a href="#configure_pm">Step 6: Complete pending tasks to configure container features</a>. Note these differences:
		<ul>
			<li>If you had to copy a database driver for the first container, you'll need to complete the same action for each subsequent container.</li>
			<li>In the <strong>Configure Database Options Wizard</strong>, choose <strong>Use existing database</strong>, and add the information about the database you set up for the first container.</li>
			<li>For the Network Director container, you'll need to configure WS-MetaDataExchange options. Make sure the URL is set to {PM_URL}/wsmex. For example: <strong>http://localhost:9900/wsmex</strong>. If you have multiple PM/CM containers set up as a cluster, use the URL for the master node.</li>
		</ul>
		<p>Pending installation tasks for a Network Director container are shown below. For more information on these tasks, see <a href="#install_tasks_nd_configure_wsmex">Installation wizard, ND container: Configure WS-Metadata Exchange Options</a> and <a href="#install_tasks_manage_pki_keys">Installation wizard: Manage PKI Keys</a>.</p>
		<p><img src="images_84/pi_tasks_ND_Container.jpg" alt="Pending Installation tasks, ND container" /></p>
		</li>
</ol>
<p>Follow the steps for each container until all containers are set up and configured.</p>
<p>As you complete the configuration for each container, be sure to restart at the prompt.</p>
<p><a href="#top">back to top</a></p>



<h2 id="add_nd_to_pm">Step 8: Add Network Director to Policy Manager</h2>
<p>The next step is to add the Network Director to Policy Manager so that you can access the developer portal and start sending traffic.</p>
<p><strong>Note</strong>: If you are using the developer portal, it's not strictly necessary to complete this step, since you can add and manage API Gateways in the developer portal. However, you'll still need this step if you are setting up a single API Gateway to be used by multiple tenants in a multi-tenant deployment.</p>

<h4>To add Network Director to Policy Manager</h4>
<ol>
	<li>Using the URL you set up for Policy Manager (<a href="#run_configurator_pm">Step 3</a> above), access Policy Manager in the browser. For example: <strong>http://localhost:9900</strong>. This redirects to the Policy Manager login page: <strong>{pm_url}/admin/login.html</strong>. Log in using the credentials you set up.</li>
	<li>In the <strong>Organization Tree</strong>, under <strong>Containers</strong>, click <strong>Add Container</strong>, as shown below.
	<p><img src="images_84/09_01_pm_org_tree_container_add.jpg" alt="add container" /></p></li>
	<li>At the <strong><a href="#pm_add_container_wizard">Add Container</a></strong><a href="#pm_add_container_wizard"> wizard</a>:
<ul>
			<li><strong>Select Container Type</strong>: Container or Container Cluster. Click <strong>Next</strong>.</li>
			<li><strong>Specify Metadata Import Options</strong>: Set up the metadata URL for the Network Director container, using the URL you set up for the container and appending <strong>/metadata</strong>. For example: <strong>http://localhost:9902/metadata</strong>. Click <strong>Next</strong>.</li>
			<li><strong>X.509 Certificate Not Trusted</strong>: If you get this message, modify the certificate or accept the default to add the certificate to the Policy Manager trusted certificate store. Click <strong>Next</strong>.</li>
			<li><strong>Specify Container Details</strong>: Provide an instance name (for example, <strong>ND1</strong>). Click <strong>Finish</strong>.</li>
			<li><strong>Completion Summary</strong>: review the summary and then click <strong>Close</strong>.</li>
</ul>
	</li>
	<li>Check that the container appears in Policy Manager. It should look something like the below. The initial state value is <strong>Stopped</strong>, but after a short time it changes to <strong>Started</strong> as shown below.
		<p><img src="images_84/09_02_nd_in_pm.jpg" alt="Network Director container in Policy Manager" /></p></li>
</ol>
<p>If you're using the developer portal, the next step is to create the Community Manager tenant.</p>
<p><a href="#top">back to top</a></p>



<h2 id="create_cm_tenant_using_jython">Step 9: Create Community Manager tenant using the Jython script</h2>
<p>The next step is to create the tenant for the developer portal. To do this, you'll need to do the following, in sequence.</p>
<table class="doctable">
<thead>
	<tr>
		<th><strong>Scenario</strong></th>
		<th>Action</th>
	</tr>
</thead>
<tbody>
	<tr>
		<td><strong>Conditional, Linux users only</strong></td>
		<td>Export the JAVA_HOME location to your installation directory. See <a href="#linux_java_home_variable">Linux install: exporting the JAVA_HOME variable</a>.</td>
	</tr>
	<tr>
		<td><strong>All users</strong></td>
		<td> Determine the values you'll use in your Jython script. The script includes various parameters that you can use to specify values for your tenant. See <a href="#s9a_jython_script">Developing and running the Jython script</a> below.</td>
	</tr>
	<tr>
		<td><strong>All users</strong></td>
		<td>Run the Jython script at the command line. See <a href="#proc_jython_script_run">To run the Jython script</a> below.</td>
	</tr>
	<tr>
		<td><strong>Conditional, for custom tenant name</strong></td>
		<td>If you choose a tenant name other than the default (<strong>atmosphere</strong>), update a configuration setting to the new value, in the Akana Administration Console for the CM container. See <a href="#s9b_update_config">Conditional: updating configuration setting for new context root</a> below.</td>
	</tr>
</tbody>
</table>


<h3 id="s9a_jython_script">Developing and running the Jython script</h3>
<p>In composing your script, refer to the examples below:</p>
<ul>
	<li>Example 1: Template script with each parameter on a separate line, with placeholder values.</li>
	<li>Example 2: An example with each parameter on a separate line, with sample values.</li>
	<li>Example 3: Jython script example for Unix.</li>
</ul>
<p class="apidoc_note"><strong>Note</strong>: Hostnames in the Jython script must be lowercase.</p>
<p>For detailed information about the various parameters that make up the Jython script, and the values you can choose, see <a href="install_cm_jython_script.htm#jython_script_elements">Jython Script Elements</a>.</p>

<p class="apidoc_note"><strong>Note</strong>: The default value for the context path in the <strong>consoleAddress</strong> parameter is <strong>atmosphere</strong>. If you change the value, as in Example 2 below where the value is set to <strong>acmepaymentscorp</strong>, there is an additional step you'll need to take before running the developer portal, to update the <strong>atmosphere.context.root</strong> value in the Akana Administration Console. See <a href="#s9b_update_config">Conditional: updating configuration setting for new context root</a> below.</p>

<p><strong>Example 1: Template script with placeholders</strong></p>
<p>In the template script below, each parameter is shown on a separate line, for clarity. Replace the values enclosed in curly brackets with the values for your implementation (remove the curly brackets). When running the script, remove the line breaks and leave a space between parameters.</p>
<pre>jython.bat ../scripts/Lib/soa/atmosphere/tenant.py -a -v 
--url {CM_URL} 
--tenantName {tenantid} 
--tenantId {tenantid} 
--address {CM_URL} 
--consoleAddress {CM_URL/{context_path} 
--theme default 
--themeImpl default
--email {emailaddress} 
--password {password} 
--contactEmailAddress {emailaddress} 
--fromEmailAddress {emailaddress}
--username {username} 
--userpassword {password}</pre>

<p><strong>Example 2: Each parameter on a separate line, with sample values</strong></p>
<p>The example below installs Hermosa theme (theme = hermosa, themeImpl = default).</p>
<pre>jython.bat ../scripts/Lib/soa/atmosphere/tenant.py -a –v --url http://localhost:9901 --tenantName acmepaymentscorp --tenantId acmepaymentscorp --address http://localhost:9901 --consoleAddress http://localhost:9901/acmepaymentscorp --theme hermosa --themeImpl default --email administrator@acmepaymentscorp.com --password MyPassword --contactEmailAddress support@acmepaymentscorp.com --fromEmailAddress notifications@acmepaymentscorp.com --username admin_123 --userpassword AdminPassW0rd123</pre>

<p><strong>Example 3: Unix example</strong></p>
<pre>./jython.sh ../scripts/Lib/soa/atmosphere/tenant.py -a -v --url http://pm84-13.local.akana.com:9900 --tenantName EnterpriseAPI --tenantId enterpriseapi --address http://pm84-13.local.akana.com:9900 --consoleAddress http://pm84-13.local.akana.com:9900/enterpriseapi --theme default --themeImpl default --email support@acmepaymentscorp.com --password password --contactEmailAddress support@acmepaymentscorp.com --fromEmailAddress no_reply_cm@acmepaymentscorp.com --username admin_123 --userpassword AdminPassW0rd123</pre>

<h4 id="proc_jython_script_run">To run the Jython script</h4>
<ol>
	<li>At a command prompt, go to the \bin folder for your installation.</li>
	<li>Run the Jython script command, customized for your installation, as shown in the example above.</li>
	<li>The script runs, and returns a response code 200 with a message that it was successful, as shown in the example below.
		<p><img src="images_84/09_01_jython_script_success.jpg" alt="Jython script successful" /></p></li>
</ol>
<p><strong>Note</strong>: If you get a 404, make sure that the container is started. <a href="#starting_container">Start the container</a> and run the script again.</p>


<h3 id="s9b_update_config">Conditional: updating configuration setting for new context root</h3>
<p>The default value for the context path part of the <strong>consoleAddress</strong> parameter is <strong>atmosphere</strong>. This means that, by default, the developer portal will be accessible via this URL: <strong>{consoleAddress}/atmosphere</strong>. If you prefer to use a different value for the context path, you'll have to use that value in the Jython script (<strong>--consoleAddress {CM_URL}/{new context path value</strong>}.</p>
<p>If you make this change in the Jython script, you'll also need to update a configuration setting to the new value so that you can access the portal using the new context path.</p>
<p class="apidoc_note"><strong>Note</strong>: There are certain values that are reserved for other uses. They include: /portal, /api. If you need to change <strong>atmosphere.context.root</strong>, do <strong>not</strong> use these values.</p>
<p>Follow the instructions below.</p>

<h4>To update the configuration setting for the new context root</h4>
<ol>
	<li>Log in to the Akana Administration Console for the CM container.</li>
	<li>Click the <strong>Configuration</strong> tab.</li>
	<li>On the left, under <strong>Configuration Categories</strong>, find the <strong>com.soa.atmosphere.console</strong> category.</li>
	<li>On the right, find the <strong>atmosphere.context.root</strong> property, and update the value. An example is shown below.
		<p><img src="images_84/adminconsole_update_config.jpg" alt="updating configuration" /></p></li>
	<li>Click <strong>Apply Changes</strong>.</li>
	<li>Restart the container so that the changes take effect.</li>
</ol>
<p>Now, you can log in to the developer portal and start configuring settings and adding apps and APIs. See <a href="#run_portal">Step 10: Run the developer portal</a> below.</p>
<p><a href="#top">back to top</a></p>



<h2 id="run_portal">Step 10: Run the developer portal</h2>
<p>Installation steps are now complete, and you can run the develop portal and set up domains and users, configure settings, and add apps and APIs.</p>

<h4>To run the developer portal</h4>
<ol>
	<li>Compose the developer portal URL as follows:
		<ul>
			<li>Take the root address for the container that CM is installed on: for example, <strong>http://localhost:9901</strong>.</li>
			<li>Append <strong>/{tenantid}</strong>. For example: <strong>http://localhost:9901/acmepaymentscorp</strong>. </li>
		</ul>
	</li>
	<li>Paste the URL in the browser. The browser redirects to the default landing page; for example: <strong>http://localhost:9901/acmepaymentscorp/#/home/landing</strong>.</li>
	<li>Log in, using the username and password from the Jython script.</li>
</ol>
<p>For information about tasks relating to the developer portal, including Site Admin tasks such as configuring platform login, setting up domains, and choosing platform settings, as well as user tasks such as adding apps and APIs, refer to the platform help: <a href="../../cm/learning.html" title="Learning about Community Manager" target="_blank">../../cm/learning.html</a>.</p>
<p><a href="#top">back to top</a></p>




<hr class="divide_hr" />




<hr class="divide_hr" />
<h2 id="h_install_tasks_reference">Installation Tasks/Reference:</h2>




<h2 id="supported_databases">Supported databases</h2>
<p>For information on the supported database versions for the Akana API Platform 2018.0.0, refer to <a href="../system_requirements/system_requirements_akana_platform_2018x.htm#versions_db">System Requirements for Akana Platform 2018.0.0</a>.</p>
<p>Notes:</p>
<ul>
	<li>Oracle: See <a href="#notes_database_oracle">Database notes: Oracle</a> below.</li>
	<li>MySQL:
		<ul>
			<li>If you're using MySQL, there are specific configuration requirements for certain MySQL properties. See <a href="#notes_database_mysql_settings">MySQL: database settings for the API Platform</a> below.</li>
			<li>If you're running MySQL and are using the Lifecycle Repository feature, see <a href="#notes_database_mysql_rm_all">Database notes: MySQL with Lifecycle Repository</a> below.</li>
		</ul>
	</li>
	<li>Microsoft SQL Server: You'll need to modify a specific property in the Akana Administration Console. see <a href="#notes_database_ms_sql_server">Database notes: Microsoft SQL Server</a> below.</li>
</ul>



<h2 id="database_notes">Database notes</h2>
<p>This section includes notes and additional information relating to installation with supported databases. It includes:</p>
<ul>
	<li><a href="#notes_database_general">Database notes, all: user permissions</a></li>
	<li><a href="#notes_database_oracle">Database notes: Oracle</a></li>
	<li><a href="#notes_database_ms_sql_server">Database notes: Microsoft SQL Server</a></li>
	<li><a href="#notes_database_mysql">Database Notes, MySQL</a></li>
</ul>
<p>For database driver information for all database types, see <a href="#database_drivers">Database drivers</a>.</p>


<h3 id="notes_database_general">Database notes, all: user permissions</h3>
<p>You'll need to grant the following database permissions, depending on the user role:</p>
<ul>
	<li><strong>User creating the database</strong>: This user will need to have permissions to:
<ul>
			<li>Create a user.</li>
			<li>Create the schema, including creating, altering and dropping tables, indices and constraints.</li>
		</ul>
	</li>
	<li><strong>Runtime user</strong>: The runtime user created by the scripts should have a minimal set of permissions for runtime plus schema updates. If you remove this user's ability to add/alter/drop objects, you'll need to add them back when it's time to perform schema updates.</li>
</ul>


<h3 id="notes_database_oracle">Database notes: Oracle</h3>
<p>Please note the following if you're working with an Oracle database:</p>
<ul>
	<li><a href="#note_oracle_drivers">Database drivers</a></li>
	<li><a href="#note_oracle_password">Oracle password</a></li>
	<li><a href="#note_oracle_12c">Database permissions, Oracle 12c or later</a></li>
</ul>

<h4 id="note_oracle_drivers">Database drivers</h4>
<p>For Oracle database drivers, see <a href="#database_drivers">Database drivers</a> below.</p>

<h4 id="note_oracle_password">Oracle password</h4>
<p>If you're creating a new Oracle database using the <strong>Create New Database</strong> wizard (standard installation procedure), make sure the Oracle database password does not start with a number or special character.</p>

<h4 id="note_oracle_12c">Database permissions, Oracle 12c or later</h4>
<p>When using Oracle 12c or later to configure a new database, the DBA must GRANT SELECT ON SYS.USER$ TO SYSTEM; (substitute the SYSTEM user for the user specified for the Administrator credentials). This is because Oracle 12c introduced restricted access to SYS.USER$, which the platform uses to query on.</p>


<h3 id="notes_database_ms_sql_server">Database notes: Microsoft SQL Server</h3>
<p>If you're working with a Microsoft SQL Server database, please note the following:</p>
<ul>
	<li><a href="#note_ms_sql_server_quartz_trigger">Verifying the quartz trigger property for Microsoft SQL Server</a></li>
	<li><a href="#note_ms_sql_server_snapshot">Database notes: Microsoft SQL Server with Lifecycle Repository</a></li>
</ul>
<p>For additional information on using a Microsoft SQL Server database with Akana products, see <a href="install_db_mssql.htm">Microsoft SQL Server Database Installation and Configuration</a>.</p>

<h4 id="note_ms_sql_server_quartz_trigger">Verifying the quartz trigger property for Microsoft SQL Server</h4>
<p>If you're using Microsoft SQL Server, you must make sure that the quartz trigger property in the Akana Administration Console is set to <strong>True</strong>. Follow the steps below.</p
><ol>
	<li>Log in to the Akana Administration Console for the CM container.</li>
	<li>Click the <strong>Configuration</strong> tab.</li>
	<li>On the left, under <strong>Configuration Categories</strong>, find the <strong>com.soa.scheduler.quartz</strong> category.</li>
	<li>On the right, find the <strong>org.quartz.jobStore.acquireTriggersWithinLock</strong> property, and make sure it is set to <strong>True</strong>. Change it if needed.</li>
	<li>Save your changes.</li>
</ol>


<h3 id="note_ms_sql_server_snapshot">Database notes: Microsoft SQL Server with Lifecycle Repository</h3>
<p>When using any version of MSSQL with Lifecycle Repository, the DBA will need to manually alter the database to set read committed snapshot and enable snapshot isolation mode. This is not required for installation; however, it will affect how the application behaves once asset content is being populated. Run the following:</p>
<pre>ALTER DATABASE {db.instance.name}
  SET READ_COMMITTED_SNAPSHOT ON;
ALTER DATABASE {db.instance.name}
  SET ALLOW_SNAPSHOT_ISOLATION ON;</pre>


<h3 id="notes_database_mysql">Database Notes, MySQL</h3>
<p>If you're working with a MySQL database, please note the following:</p>
<ul>
	<li><a href="#notes_database_mysql_settings">Database Notes, MySQL: database settings for the API Platform</a></li>
	<li><a href="#notes_database_mysql_sql_mode">Database Notes, MySQL 5.7: modifications to sql_mode default value</a></li>
	<li><a href="#notes_database_mysql_rm_all">Database notes: MySQL with Lifecycle Repository</a></li>
</ul>


<h4 id="notes_database_mysql_settings">Database Notes, MySQL: database settings for the API Platform</h4>
<p>If you're using MySQL 5.6, the settings below are required for the API Platform. You'll need to configure these settings in the <strong>my.ini</strong> file <strong>before</strong> loading the database schema in MySQL.</p>
<p>Specific properties are listed below, with references to the applicable MySQL documentation:</p>
<ul>
	<li>innodb_large_prefix=ON; (<a href="http://dev.mysql.com/doc/refman/5.6/en/innodb-parameters.html#sysvar_innodb_large_prefix" title="http://dev.mysql.com/doc/refman/5.6/en/innodb-parameters.html#sysvar_innodb_large_prefix" target="_blank">http://dev.mysql.com/doc/refman/5.6/en/innodb-parameters.html#sysvar_innodb_large_prefix</a>)</li>
	<li>innodb_file_format=barracuda; (<a href="http://dev.mysql.com/doc/refman/5.6/en/innodb-parameters.html#sysvar_innodb_file_format" title="http://dev.mysql.com/doc/refman/5.6/en/innodb-parameters.html#sysvar_innodb_file_format" target="_blank">http://dev.mysql.com/doc/refman/5.6/en/innodb-parameters.html#sysvar_innodb_file_format</a>)</li>
	<li>innodb_file_per_table=ON; (<a href="http://dev.mysql.com/doc/refman/5.6/en/innodb-parameters.html#sysvar_innodb_file_per_table" title="http://dev.mysql.com/doc/refman/5.6/en/innodb-parameters.html#sysvar_innodb_file_per_table" target="_blank">http://dev.mysql.com/doc/refman/5.6/en/innodb-parameters.html#sysvar_innodb_file_per_table</a>)</li>
	<li>Optional, for better performance: 
	<p>innodb_flush_log_at_trx_commit=0; (<a href="http://dev.mysql.com/doc/refman/5.6/en/innodb-parameters.html#sysvar_innodb_flush_log_at_trx_commit" title="http://dev.mysql.com/doc/refman/5.6/en/innodb-parameters.html#sysvar_innodb_flush_log_at_trx_commit" target="_blank">http://dev.mysql.com/doc/refman/5.6/en/innodb-parameters.html#sysvar_innodb_flush_log_at_trx_commit</a>) </p></li>
	<li>max_allowed_packet=1073741824; (<a href="http://dev.mysql.com/doc/refman/5.6/en/server-system-variables.html#sysvar_max_allowed_packet" title="http://dev.mysql.com/doc/refman/5.6/en/server-system-variables.html#sysvar_max_allowed_packet" target="_blank">http://dev.mysql.com/doc/refman/5.6/en/server-system-variables.html#sysvar_max_allowed_packet</a>)</li>
</ul>
<p>For more information, refer to <a href="install_mysql_dbsettings.htm">MySQL Database Property Settings</a>.</p>


<h4 id="notes_database_mysql_sql_mode">Database Notes, MySQL 5.7: modifications to sql_mode default value</h4>
<p><strong>Note</strong>: Akana support of MySQL 5.7 ends October 2020.</p>
<p>In MySQL 5.7, the default value of <span class="apidoc_code">sql_mode</span> includes <strong>NO_ZERO_IN_DATE</strong> and <strong>NO_ZERO_DATE</strong>, which are not currently compatible with Akana.</p>
<p>The default value for <span class="apidoc_code">sql_mode</span> in MySQL 5.7 is:</p>
<pre>ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</pre>
<p>If you're using MySQL 5.7 with Akana products, you must modify <span class="apidoc_code">sql_mode</span> in your MySQL config files to exclude these two values.</p>
<p>An example of a valid setting for <span class="apidoc_code">sql_mode</span> with the Akana API Platform is:</p>
<pre>ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION,ALLOW_INVALID_DATES</pre>

<h4 id="notes_database_mysql_rm_all">Database notes: MySQL with Lifecycle Coordinator/Lifecycle Repository</h4>
<p>For Akana API Platform installs using the Lifecycle Coordinator or Lifecycle Repository features, there are some constraints. </p>
<p>The Lifecycle Repository feature requires the following installation features:</p>
<ul>
	<li>Akana Lifecycle Repository (Provides metadata repository and configuration services)</li>
	<li>Akana API Platform Repository Plug-In (Extended Properties and Workflow feature)</li>
</ul>
<p>The Lifecycle Coordinator feature requires the following installation features:</p>
<ul>
	<li>Akana Lifecycle Coordinator (Lifecycle Coordinator for the Akana Platform)</li>
</ul>
<p>Review the following information:</p>
<ul>
	<li><a href="#notes_database_mysql_rm_01">LC/LR: Additional database privileges required for installation</a></li>
	<li><a href="#notes_database_mysql_rm_02">LC/LR: Adding the correct database permissions</a></li>
	<li><a href="#notes_database_mysql_rm_03">LC/LR: Setting the log_bin_trust_function_creators system variable</a></li>
	<li><a href="#notes_database_mysql_rm_04">LC/LR: Create libraries before enabling extended properties in developer portal</a></li>
</ul>

<p id="notes_database_mysql_rm_01"><strong>LC/LR: Additional database privileges required for installation</strong></p>
<p>When installing on MySQL, you'll need to do one of the following:</p>
<ul>
	<li>Disable MySQL  binary logging. Note that this might not be feasible in some cases because binary logging is a hard requirement for replication. In addition, if you're using AWS RDS with a Multi-AZ deployment, the replication used for Multi-AZ implicitly enables binary logging.
		<p>For more information on binary logging, see <a href="https://dev.mysql.com/doc/refman/5.7/en/stored-programs-logging.html" title="Link to MySQL documentation re binary logging" target="_blank">https://dev.mysql.com/doc/refman/5.7/en/stored-programs-logging.html</a> (MySQL documentation).</p></li>
	<li>Grant the <strong>super</strong> privilege to the database user for the Akana API Platform for the duration of the time that Lifecycle Coordinator/Lifecycle Repository features are being installed and libraries (either tenant libraries or topology libraries) are being created.
	<p>An alternative to granting the <strong>super</strong> privilege is to modify the <strong>log_bin_trust_function_creators</strong> variable. See <a href="#notes_database_mysql_rm_03">LC/LR: Setting the log_bin_trust_function_creators system variable</a> below.</p></li>
</ul>
<p id="notes_database_mysql_rm_02"><strong>LC/LR: Adding the correct database permissions</strong></p>
<p>With the Lifecycle Coordinator or Lifecycle Repository features, the database user requires specific additional grants when using MySQL. These grants are required for successful completion of the <strong>Initialize Repository Database</strong> configuration task; otherwise, the task fails.</p>
<p>For MySQL installs, the user must have the following grants:</p>
<ul>
	<li>TRIGGER</li>
	<li>CREATE ROUTINE</li>
	<li>ALTER ROUTINE</li>
</ul>
<p>You'll need to run the following MySQL statement to add the correct permissions:</p>
<pre>GRANT ALTER ROUTINE, CREATE ROUTINE, TRIGGER ON {database_instance_name}.* TO '{database_user}'@'%';</pre>
<p>For example:</p>
<pre>GRANT ALTER ROUTINE, CREATE ROUTINE, TRIGGER ON LXC1PM8X21.* TO 'LXC1PM8X21'@'%';</pre>
<p>In the above, <strong>LXC1PM8X21</strong> is both the database instance name and the database user name.</p>
<p>Use the following command to confirm the change:</p>
<pre>mysql> show grants for 'LXC1PM8X21'@'%';</pre>
<p>You'll see a response such as the following, which confirms that the grants were updated successfully:</p>
<pre>+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
 | Grants for LXC1PM8X21@%                                                                                                                                                                                                                               |
 +-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
 | GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, RELOAD, PROCESS, REFERENCES, INDEX, ALTER, CREATE TEMPORARY TABLES, EXECUTE, CREATE VIEW, SHOW VIEW ON *.* TO 'LXC1PM8X21'@'%' IDENTIFIED BY PASSWORD '*2A5FDEE54AE88A62B88A1A6C5389C23A529F20EE' |
 | GRANT ALTER ROUTINE, CREATE ROUTINE, TRIGGER ON 'LXC1PM8X21'.* TO 'LXC1PM8X21'@'%'                                                                                                                                                                                   |
 +-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
 2 rows in set (0.00 sec)</pre>
<p><strong>Note</strong>: Lifecycle Coordinator and/or Lifecycle Repository on MySQL imposes limitations on such things as Advanced Queries using custom XPathCriteria, and only a limited number of fixed XPathCriteria are support in the default searches.</p>

<p id="notes_database_mysql_rm_03"><strong>LC/LR: Setting the log_bin_trust_function_creators system variable</strong></p>
<p>Additional user privileges are needed to successfully initialize the repository database. If the privileges are not in place, the <strong>Initialize Repository Database</strong> task might fail, with the following error message:</p>
<pre>exception:java.sql.SQLException: You do not have the SUPER privilege and binary logging is enabled (you *might* want to use the less safe log_bin_trust_function_creators variable)</pre>
<p>In some cases, it might not be feasible to grant the <strong>super</strong> privilege to the database user or to disable binary logging. An alternative approach is to set the <strong>log_bin_trust_function_creators</strong> system variable to a value of 1, as shown below:</p>
<pre>mysql> set global log_bin_trust_function_creators=1;
Query OK, 0 rows affected (0.00 sec)</pre>
<p>However, this is only an in-memory variable. For persistence, you could add the following to the <strong>/etc/my.cnf</strong> file:</p>
<pre>log-bin-trust-function-creators=1</pre>

<p id="notes_database_mysql_rm_04"><strong>LC/LR: Create libraries before enabling extended properties in developer portal</strong></p>
<p>For more information on using the <strong>log_bin_trust_function_creators </strong> system variable, see <a href="https://dev.mysql.com/doc/refman/5.7/en/faqs-stored-procs.html" title="Link to MySQL FAQ re stored procedures" target="_blank">https://dev.mysql.com/doc/refman/5.7/en/faqs-stored-procs.html</a>, sections A.4.25 and A.4.26 (MySQL documentation).</p>
<p>When the Akana API Platform is installed on MSSQL, tenant (repository) libraries should initially be created using the <strong>Synchronize Lifecycle Manager Data</strong> admin task, <strong>before</strong> enabling the <strong>Extended Properties and Workflow</strong> flag in the developer portal settings (<strong>Admin</strong> &gt; <strong>Site</strong>). </p>
<p><a href="#top">back to top</a></p>



<h2 id="database_drivers">Database drivers</h2>
<p>Depending on which database server you're using, you might need to install a database driver before running the <strong>Configure Database Options</strong> Wizard.</p>
<p>If you need to install a database driver, place it in this location:</p>
<ul>
	<li> <strong>/instances/{container_name}/deploy</strong> folder</li>
</ul>
<p>Database options, with driver information:</p>
<ul>
	<li><strong>MySQL 5.7</strong>: install this file: 
		<p><strong>mysql-connector-java-8.0.13.jar</strong></p>
		<p>Downloadable from: <a href="https://mvnrepository.com/artifact/mysql/mysql-connector-java/8.0.13" title="download location for MySQL database driver" target="_blank">https://mvnrepository.com/artifact/mysql/mysql-connector-java/8.0.13</a></p>
		</li>
	<li><strong>MySQL 5.6</strong>: install this file:
		<p><strong>mysql-connector-java-5.1.40-bin.jar</strong></p>
		<p>Downloadable from: <a href="https://mvnrepository.com/artifact/mysql/mysql-connector-java/5.1.40" title="download location for MySQL database driver" target="_blank">https://mvnrepository.com/artifact/mysql/mysql-connector-java/5.1.40</a></p>
		</li>
	<li><strong>Oracle 12c Release 2</strong>: install this file:
	<p><strong>Ojdbc8.jar</strong></p>
		<p>Downloadable from: <a href="http://www.oracle.com/technetwork/database/features/jdbc/jdbc-ucp-122-3110062.html" title="download location for Oracle 12c R2 database driver" target="_blank">http://www.oracle.com/technetwork/database/features/jdbc/jdbc-ucp-122-3110062.html</a> (download requires accepting the agreement and logging in).</p>
		<p>Also, for Oracle 12c and later, see <a href="#note_oracle_12c">note about database permissions needed</a>.</p>
		</li>
	<li><strong>Oracle 12c</strong>: install this file:
		<p><strong>Ojdbc7.jar</strong></p>
		<p>Downloadable from: <a href="http://www.oracle.com/technetwork/database/features/jdbc/jdbc-drivers-12c-download-1958347.html" title="download location for Oracle 12c database driver" target="_blank">http://www.oracle.com/technetwork/database/features/jdbc/jdbc-drivers-12c-download-1958347.html</a> (download requires accepting the agreement and logging in).</p>
		<p>Also, for Oracle 12c and later, see <a href="#note_oracle_12c">note about database permissions needed</a>.</p>
		</li>
	<li><strong>Microsoft SQL Server 2012</strong>: no database driver installation is required.</li>
	<li><strong>Microsoft SQL Server 2016</strong>: no database driver installation is required. If you don't install a driver, the default JTDS driver is used.
		<p>Akana API Platform has also been tested with the following driver (Version: 2018.0.5 and later):</p>
		<p><strong>mssql-jdbc-7.0.0.jre8.jar</strong></p>
		<p>Downloadable from: <a href="https://www.microsoft.com/en-us/download/details.aspx?id=57175" title="Link for Microsoft SQL Server 2016 driver download" target="_blank">https://www.microsoft.com/en-us/download/details.aspx?id=57175</a>.</p>
		<p>If you use this driver, you'll need to install using the default JTDS driver, then run the first two pending tasks, <strong>Manage PKI Keys</strong> and <strong>Add Database</strong>, and then modify some configuration settings and restart the container. You can modify the settings in the Akana Administration Console or by editing the configuration file (<strong>{install_dir}/instances/{instance}/cm/com/soa/database/config/{config_file}</strong>). The settings you'll need to update are:</p>
		<ul>
			<li><strong>com.soa.database.config</strong> &gt; <strong>driver</strong>: change to <strong>com.microsoft.sqlserver.jdbc.SQLServerDriver</strong>.</li>
			<li><strong>com.soa.database.config</strong> &gt; <strong>url</strong>: change to <strong>jdbc:sqlserver://{server}:{port}/{database};user={user};password={password}</strong>. Be sure to substitute the correct values for your installation.</li>
		</ul>
	<p>When you've updated the settings, remember to restart the container, and then resume the standard installation process from <a href="#configure_pm">Step 6: Complete pending tasks to configure container features</a> with the <strong>Manage Schemas</strong> pending task.</p>
	</li>
	</ul>
<p><a href="#top">back to top</a></p>



<h2 id="installation_folder_structure">Installation folder structure</h2>
<p>When you install the Akana Platform, the installation process creates the folder structure shown below:</p>
<p><img src="images_201800/install_folders_platform.jpg" alt="Installation folder structure: Akana Platform" /></p>
<p>Installation includes the following folders:</p>

<dl>
<dt>bin</dt>
<dd>Includes the Akana Platform shell and batch scripts. This includes Start/Stop scripts for all the Akana Platform processes, scripts used to register and un-register Windows services, and scripts for launching the Akana Platform administration and configuration wizards. This folder also includes a script to run the Akana Platform product as a unique Cron job.</dd>


<dt>config</dt>
<dd>Includes Akana Platform properties files. Reserved for system use.</dd>


<dt>docs</dt>
<dd>Includes product documentation.</dd>


<dt>instances</dt>
<dd>After installation, the initial <strong>instances</strong> folder includes <strong>config.properties</strong> and <strong>system.properties</strong> files. </dd>
<dd>When you launch and complete the <strong>Configure Container Instance</strong> wizard, a Configurator folder is created that includes the following sub-folders:
	<ul>
	<li><strong>asynchworkflow</strong>&#8212;Stores code samples for platform APIs.</li>
	<li><strong>cache</strong>&#8212;Stores OSGi bundles for installed features.</li>
	<li><strong>deploy</strong>&#8212;Includes properties files (<strong>com.soa.config.cfg</strong> and <strong>com.soa.log.cfg</strong>) that include Akana Platform default configuration settings. These files are used to push default configuration information to the Administration Console and are typically for one-time use only. After initial configuration, you can update properties in the Administration Console via the <strong>Configuration</strong> tab. Bundles and other .cfg files can also be added to the \deploy folder and will be published to the Administration Console. These properties can also be updated via the <strong>Configuration</strong> tab.</li>
	<li><strong>log</strong>&#8212;Stores log files that are automatically generated when an Akana Platform function is operating. The logging process records the actions performed for each Akana Platform function and stores the information in the log file. You can archive log files for historical record as needed.</li>
</ul></dd>
<dd>Each time a new container instance is created, the platform creates a new folder using the container name. For example, if you install the Policy Manager ZIP file and name the container instance, the associated folder includes the above folders plus the following:
	<ul>
	<li><strong>cachedir</strong>&#8212;Reserved for system use.</li>
	<li><strong>cm</strong>&#8212;Stores configuration data associated with the Akana Administration Console <strong>Configure</strong> tab.</li>
	<li><strong>scriptStore</strong>&#8212;Stores code samples for platform APIs.</li>
	<li><strong>snapshot</strong>&#8212;Stores changes to a container made during updates. Also used for update rollbacks.</li>
	<li><strong>wsdlStore</strong>&#8212;Stores code samples for platform APIs. </li>
</ul></dd>



<dt>jre</dt>
<dd>A Java Runtime Environment (JRE) folder that is automatically created during an Akana product installation. The Akana Platform is packaged with the applicable JRE version for each release.</dd>


<dt>jreupdate</dt>
<dd>Includes an <strong>ext</strong> folder that stores bouncy castle artifacts, and a <strong>security</strong> folder that provides security algorithms and is used for PKCS12 keystore management.</dd>


<dt>lib</dt>
<dd>Includes the <strong>jar</strong> files needed by the available Akana features.</dd>


<dt>recipes</dt>
<dd>A set of JSON files that can be used in automating processes.</dd>


<dt>scripts</dt>
<dd>Includes script utilities that you can use to create containers without using the <strong>Configure Container Instance wizard</strong> UI. </dd>


<dt>yajsw</dt>
<dd>Includes files used by the Akana Platform to support YAJSW. See <a href="http://yajsw.sourceforge.net" title="http://yajsw.sourceforge.net" target="_blank">http://yajsw.sourceforge.net</a>.</dd>
</dl>
<p><a href="#top">back to top</a></p>



<h2 id="clear_configurator_cache">Clear Configurator cache</h2>
<p>You might need to clear the configurator cache. Follow the steps below.</p>

<h4>To clear configurator cache</h4>
<ol>
	<li>Locate the configurator cache folder: \instances\configurator\cache, as shown below.
	<p><img src="images_84/01_05_configurator_cache.jpg" alt="Configurator cache folder" /></p>
	</li>
	<li>Delete the folder if it exists (if there is no cache, the folder will not be there).</li>
</ol>
<p><a href="#top">back to top</a></p>



<h2 id="starting_container">Starting a container</h2>
<p>There are several approaches to starting a container:</p>
<ul>
	<li><strong>In Windows:</strong>
		<ul>
			<li>At a command prompt: see <a href="#proc_container_start_cmd">To start a container in Windows at a command prompt</a> below</li>
			<li>As a Windows service: see <a href="#proc_container_start_windows">To start a container as a Windows service</a> below</li>
		</ul>
	</li>
	<li><strong>In Unix:</strong>
		<ul>
			<li>At the command line: see <a href="#proc_container_start_unix">To start a container in Unix</a> below</li>
			<li>With background option: see <a href="#proc_container_start_unix_bg">To start a container in Unix (background)</a> below</li>
			</ul>
	</li>
	</ul>

<h4 id="proc_container_start_cmd">To start a container in Windows at a command prompt</h4>
<ol>
	<li>At a command prompt, navigate to the \bin folder for the implementation. For example: <strong>c:\akana\aap201800\bin</strong>.</li>
	<li>Type:
	<pre>startup {containername}</pre></li>
</ol>
<p>There might be a short delay while the container starts.</p>

<h4 id="proc_container_start_windows">To start a container as a Windows service</h4>
<p><strong>Note</strong>: You can only start a container as a Windows service if it was installed as a Windows service.</p>
<ol>
	<li>Launch the Services list (<strong>Control Panel</strong> &gt; <strong>Administrative Tools</strong> &gt; <strong>Services</strong>).</li>
	<li>Select the instance name on the list.</li>
	<li>From the right-click <strong>Actions</strong> menu, choose <strong>Stop</strong>.</li>
</ol>
<p>There might be a short delay while the container starts.</p>

<h4 id="proc_container_start_unix">To start a container in Unix</h4>
<ol>
	<li>At the command line, navigate to the /bin folder for the implementation. For example: <strong>/akana/aap201800/bin</strong>. </li>
	<li>Type:
		<pre>startup.sh {containername}</pre>
	</li>
</ol>
<p>There might be a short delay while the container starts.</p>

<h4 id="proc_container_start_unix_bg">To start a container in Unix (background)</h4>
<ol>
	<li>At the command line, navigate to the /bin folder for the implementation. For example:<strong> /akana/aap201800/bin</strong>. </li>
	<li>Type:
		<pre>startup.sh {containername} -bg</pre>
	</li>
</ol>
<p>There might be a short delay while the container starts.</p>
<p><a href="#top">back to top</a></p>



<h2 id="stopping_container">Stopping a container</h2>
<p>You can stop a container in several ways.</p>

<h4>To stop a container at a command prompt</h4>
<ol>
	<li>Go to the command prompt window where the process is running.</li>
	<li>Type <strong>Ctrl+C</strong> or close the command prompt.</li>
</ol>

<h4>To stop a container as a Windows service</h4>
<p><strong>Note</strong>: You can only start/stop a container as a Windows service if it was installed as a Windows service.</p>
<ol>
	<li>Launch the Services list (<strong>Control Panel</strong> &gt; <strong>Administrative Tools</strong> &gt; <strong>Services</strong>).</li>
	<li>Select the instance name on the list.</li>
	<li>From the right-click <strong>Actions</strong> menu, choose <strong>Stop</strong>.</li>
</ol>

<h4>To stop a container in Unix</h4>
<ol>
	<li>Go to the command line window where the process is running.</li>
	<li>Send the process a KILL signal or type <strong>Ctrl+C</strong>.</li>
</ol>

<h4>To stop a container in Unix (background)</h4>
<ol>
	<li>At the command line, navigate to the /bin folder for the implementation. For example: <strong>/akana/aap201800/bin</strong>. </li>
	<li>Type:
		<pre>shutdown.sh</pre>
	</li>
</ol>
<p><a href="#top">back to top</a></p>



<h2 id="creating_container_gui">Creating a container via the GUI</h2>
<p>As part of <a href="#run_configurator_pm">Step 3: Run Configurator to create the first container</a>, you might choose to create the container via the GUI, a Windows-based wizard that steps you through the installation process.</p>

<h4 id="proc_create_container_gui">To create a container via the GUI</h4>
<p>For more information on the wizard, see <a href="#wizard_configure_container_instance">Installation wizard: Configure Container Instance</a>.</p>
<ol>
	<li>In Windows, open a command prompt.
		<p><strong>Note</strong>: if you want to install the container as a Windows service, open the command prompt in Administrator mode.</p></li>
	<li>Go to the new folder where you unzipped the version 2018.0.0 files (for example, <strong>aap201800</strong>).</li>
	<li>Navigate to the \bin subfolder and run one of the following commands, depending on your operating system:
		<p><strong>Windows</strong>:</p>
		<pre>startup.bat configurator</pre>
		<p><strong>Unix</strong>:</p>
		<pre>startup.sh configurator</pre>
		<p>The Configurator starts with the <strong>Welcome to Configure Container Instance wizard</strong> page, as shown below.</p>
		<p><img src="images_201800/ac_configurator.jpg" alt="Configurator" /></p>
	</li>
	<li>Click <strong>Next</strong>. The wizard steps you through the following pages:
		<ol>
			<li><strong>Instance Name</strong>: Specify the name of the Akana container instance; for example, <strong>pmcm1</strong>. Click <strong>Next</strong>.</li>
			<li><strong>Default Admin User</strong>: Specify Administrator Credentials (username and password). Click <strong>Next</strong>.</li>
			<li><strong>Default HTTP Listener</strong>: Specify port, host IP address, and bind to all interfaces/specified interface only, or accept defaults. Click <strong>Next</strong>.</li>
			<li><strong>Instance Startup</strong>: Choose <strong>Standalone</strong>, <strong>Install as Windows Service</strong>, or <strong>Do Not Start Instance</strong>. Click <strong>Next</strong>.
				<p><strong>Note</strong> if you want to install as Windows service, the command prompt you used to start the Configurator must be running in Administrator mode.</p>
			</li>
			<li><strong>Launch Admin Console</strong>: The checkbox is selected by default. If you do <strong>not</strong> want to launch the Akana Administration Console, clear the checkbox. Click <strong>Next</strong>.</li>
			<li><strong>Instance Configuration Summary</strong>: Review the summary. If all OK, click <strong>Finish</strong>. The container is configured. When configuration is complete, the Akana Administration Console starts automatically (unless you cleared the checkbox in the previous step; if so, you'll need to start it manually).</li>
		</ol>
	</li>
	</ol>
	<p>When you've created the container, continue with the next step of the installation procedure: see <a href="#install_pm_cm">Step 4: Install Policy Manager/Community Manager features on the container</a>.</p>
<p><a href="#top">back to top</a></p>



<h2 id="creating_container_silent">Creating a container using silent install (Linux)</h2>
<p>As part of <a href="#run_configurator_pm">Step 3: Run Configurator to create the first container</a>, in some scenarios such as Linux installations, you'll create the container using silent install.</p>
<p>Before you begin, make sure you have Administrator rights on the machine you're using.</p>
<p>A silent installation is an automatic process that installs the Akana Platform without any user interaction. Before running the silent install, you must configure the properties file that you'll use for the installation. This file will include the specific values that you'd provide in the user interface if you're doing an installation using the GUI. For example, you must specify a target installation directory, install set, and input options to be executed at the end of the installation. Once you've configured the properties file, you can deploy the platform onto multiple machines in a scripted, non-interactive way.</p>
<p>The name of the properties file you use doesn't matter as long as you reference it correctly when running the silent install.</p>
<p>One way to generate a &quot;starter&quot; properties file is to first create a container using the GUI. When you do this, the properties file for the container is automatically saved in the directory for the container (<strong>../instances/{container_name}/system.properties</strong>). For example, if you create a pm01 container via the GUI, you can then look in the /instances/pm01 folder and you'll see the <strong>system.properties</strong> file for the container. You can use the values in this file as a help in setting up the properties file for creating subsequent containers, such as <strong>pm02</strong>, using the silent install method.</p>
<p>Be sure to copy and modify the file rather than changing the original file, and update the <strong>container.key</strong> property so that it's unique. Note: <strong>container.key</strong> can only be specified at the time of container creation; you cannot change it later.</p>
<p>You can also create the properties file from scratch. An example is shown below. For more details about the properties file, see <a href="../container_management/configure_standalone_container.htm#container_silent">Configure Container (Silent Option)</a>.</p>
<p><strong>Note</strong>: When you create the properties file, make sure there are no trailing spaces. </p>

<p><strong>Properties file with placeholders:</strong></p>
<pre>
//Required properties
container.instance.name={instancename}
credential.username = {username}
credential.password = {password}
default.host={hostname}
default.port={port}

//Optional properties
container.key={container_key_name}</pre>
<p><strong>Sample properties file with values:</strong></p>
<pre>container.instance.name=aap201800
credential.username = administrator
credential.password = password
default.host=rhe12345.akana.local
default.port=9945
container.key=aap201800</pre>
<p>To run the properties file in a Linux environment, go to the <strong>{release_directory}/bin</strong> folder and run the following command:</p>
<pre>startup.sh configurator -Dsilent=true -Dproperties={full path to properties file}/{filename}.properties</pre>
<p>For example:</p>
<pre>startup.sh configurator -Dsilent=true -Dproperties=/root/akana/aap/properties/pmcm_silentinstall.properties</pre>
<p>Then:</p>
<ul>
	<li>Start the container.</li>
	<li>Continue with the rest of the installation procedure from <a href="#install_pm_cm">Step 4: Install Policy Manager/Community Manager features on the container</a>.</li>
</ul>
<p>For full instructions, refer to: <a href="../container_management/configure_standalone_container.htm#container_silent">Configure Container (Silent Option)</a>.</p>
<p><a href="#top">back to top</a></p>



<h2 id="unregister_reregister_windows_service">Unregistering and re-registering the Windows service</h2>
<p>If you have a container registered as a Windows service so that the container will start automatically when Windows starts, and you want to unregister and re-register the Windows service, follow the steps below for each container.</p>
<p>Unregistering/re-registering the Windows service is generally part of upgrade procedure, but you might need to do this for some other reason.</p>
<p>If you're not sure which containers are registered as a Windows service, you can check (<strong>Control Panel</strong> &gt; <strong>Administrative Tools</strong> > <strong>Services</strong>).</p>
<p class="apidoc_note"><strong>Note</strong>: To change the services, you must run the process as an Administrator. If you don't use Administrator mode, Windows prompts for Admin permission before unregistering/registering the service, but doesn't actually start the service.</p>

<h4>To unregister and re-register the Windows service</h4>
<ol>
<li>Open a command prompt in Administrator mode.</li>
<li>Run the command below:
	<pre>.\sm70\bin\unregisterContainerServiceYAJWS.bat{instance_name}</pre></li>
<li>Register the new version as a Windows service:
<pre>.\{<strong>aap201800</strong>_foldername}\bin\registerContainerServiceYAJWS.bat {instance_name}</pre>
<p>If you're running in Administrator mode, Windows registers the service and also starts it.</p>
<p><strong>Note</strong>: Versions prior to 2019.0.0 also include files <strong>unregisterContainerService.bat</strong> and <strong>registerContainerService.bat</strong>. These are present for compatibility with earlier versions. Do <strong>not</strong> use those files; use the versions listed above.</p>
</li>
<li>Repeat steps 2 and 3 for each additional container that's registered as a Windows service.</li>
</ol>
<p><a href="#top">back to top</a></p>



<h2 id="linux_java_home_variable">Linux install: exporting the JAVA_HOME variable</h2>
<p>Because Linux containers don't have a JAVA_HOME environment variable set, you'll need to export the JAVA_HOME location to your installation directory.</p>
<p>For example:</p>
<pre>export JAVA_HOME=/opt/akana/aap201800/jre</pre>
<p>If you omit this step, you'll get an error during the installation.</p>
<p><a href="#top">back to top</a></p>



<h2 id="install_tasks_manage_pki_keys">Installation wizard: Manage PKI Keys</h2>
<p>The <strong>Manage PKI Keys</strong> pending installation task opens the <strong>Manage PKI Keys</strong> wizard, as shown below.</p>
<p>It's best to use external keys for your container. See <a href="../admin_console/config_actions.htm#aac_ca_managepkikeys">Manage PKI Keys</a> (Akana Administration Console configuration task).</p>
<p><img src="images_201800/ac_ca_manage_pki_keys.png" alt="Manage PKI Keys wizard" /></p>
<p><a href="#top">back to top</a></p>


<h2 id="install_tasks_add_database">Installation wizard: Add Database</h2>
<p>The <strong>Add Database</strong> pending installation task opens the <strong>Configure Database Options</strong> wizard. This task creates the database for the installation. The wizard has two pages, as shown below.</p>
<p><strong>Note</strong>: Depending on which database server you're using, you might need to install a database driver before running the <strong>Configure Database Options</strong> Wizard. See <a href="#database_drivers">Database drivers</a>.</p>
<p>On the first page, specify new or existing database, and then click <strong>Next</strong>.</p>
<p><img src="images_201800/ca_add_database.jpg" alt=" Configure Database Options wizard, page 1" /></p>
<p>On the second page, enter all the database details such as type and credentials, and then click <strong>Finish</strong>.</p>
<p><img src="images_84/pi_tasks_ConfigureDatabaseOptions_02.jpg" alt=" Configure Database Options wizard, page 2" /></p>
<p><a href="#top">back to top</a></p>


<h2 id="install_tasks_manage_schemas">Installation wizard: Manage Schemas</h2>
<p>The <strong>Manage Schemas</strong> pending installation task opens the <strong>Manage Schemas</strong> wizard. This task manages the database schemas for the container.</p>
<p>Make sure available schemas are checked, and then click <strong>Finish</strong>.</p>
<p><img src="images_201800/pi_tasks_install_schemas.jpg" alt=" Manage Schemas wizard, page 1" /></p>
<p>When schema installation is complete, a <strong>Summary</strong> page is displayed. Click <strong>Go to Next Task</strong>.</p>
<p><a href="#top">back to top</a></p>


<h2 id="install_tasks_create_pm_admin_user">Installation wizard: Define Policy Manager Administrator Credentials</h2>
<p>The <strong>Create Policy Manager Admin User</strong> pending installation task opens the <strong>Define Policy Manager Administrator Credentials</strong> wizard. This task creates the top-level Policy Manager user.</p>
<p>Enter the user credentials, and then click <strong>Finish</strong>.</p>
<p><img src="images_84/pi_tasks_DefinePolicyManagerAdminCred.jpg" alt=" Define Policy Manager Administrator Credentials wizard" /></p>
<p>Review the summary page and then click <strong>Go to Next Task</strong>.</p>
<p><a href="#top">back to top</a></p>


<h2 id="install_tasks_provisioning">Installation wizard: Provisioning</h2>
<p>The <strong>Provisioning</strong> pending installation task opens the <strong>Provisioning</strong> wizard. This task Initializes resources associated with the features installed on the container.</p>
<p>Make sure the box is checked, and then click <strong>Finish</strong>.</p>
<p><strong>Note</strong>: Make sure the Provisioning task is 100% complete before moving to the next task.</p>
<p><img src="images_84/pi_tasks_Provisioning.jpg" alt=" Provisioning wizard" /></p>
<p><a href="#top">back to top</a></p>



<h2 id="wizard_configure_container_instance">Installation wizard: Configure Container Instance</h2>

<h4>Configure Container Instance wizard pages:</h4>
<ul>
	<li><b>Instance Name</b>: provide name; for example, <b>aap201800</b>.</li>
	<li><b>Default Admin User</b>: specify Administrator Credentials (username and password).</li>
	<li><b>Default HTTP Listener</b>: port, host IP address, bind to all interfaces/specified interface only.</li>
	<li><b>Instance Startup</b>: Choose <strong>Standalone</strong>, <strong>Install as Windows Service</strong>, or <strong>Do Not Start Instance</strong>.
<p><b>Note</b>: If you want to run Install as Windows Service, the command prompt you used to start the Configurator must be in Administrator mode. If necessary, restart the Configurator in a new window in Administrator mode.</p></li>
	<li><b>Launch Admin Console</b>: The checkbox is selected by default. If you do <strong>not</strong> want to launch the Akana Administration Console, clear the checkbox. Click <b>Next</b>.</li>
	<li><b>Instance Configuration Summary</b>: review options. If all OK, click <b>Finish</b>.</li>
</ul>
<p><a href="#top">back to top</a></p>



<h2 id="install_tasks_nd_configure_wsmex">Installation wizard, ND container: Configure WS-Metadata Exchange Options</h2>
<p>The <strong>Configure WS-Metadata Exchange Options</strong> task for the Network Director container opens the <strong>WS-Metadata Exchange Options</strong> wizard. This task Initializes resources associated with the features installed on the container.</p>
<p>Put in the metadata URL for the Network Director container, using the URL you set up for the container and appending <strong>/wsmex</strong>; for example: <strong>http://localhost:9902/wsmex</strong>. Click <strong>Finish</strong>.</p>
<p><img src="images_84/pi_tasks_ND_MetadataURL.jpg" alt=" Specify Metadata Import Options" /></p>
<p><a href="#top">back to top</a></p>



<h2 id="install_options">Installation Options: Full List</h2>
<p>Installation can include one or more of the following:</p>
<ul>
	<li><strong><a href="#installation_features">Features</a></strong>: Core products or major features that support core products.</li>
	<li><strong><a href="#installation_plugins">Plug-Ins</a></strong>: Additions to core products that add to the functionality.</li>
	<li><strong><a href="#installation_tools">Tools</a></strong>: Tools that provide specific functionality for maintaining or upgrading features and plug-ins.</li>
</ul>

<h4 id="installation_features">Installation Features</h4>
<p>The full list of installation features, on the Available Features list, is shown below.</p>
<p><img src="images_201800/List_01_Features.jpg" alt=" Features" /></p>

<h4 id="installation_plugins">Installation Plug-ins</h4>
<p>The full list of plug-ins is shown below.</p>
<p><img src="images_201800/List_02_PlugIns.jpg" alt=" Plug-Ins" /></p>

<h4 id="installation_tools">Installation Tools</h4>
<p>The full list of tools is shown below.</p>
<p><img src="images_201800/List_03_Tools.jpg" alt=" Tools" /></p>
<p><a href="#top">back to top</a></p>



<h2 id="pm_add_container_wizard">Policy Manager Add Container wizard</h2>
<p>When adding the Network Director to Policy Manager (<a href="#add_nd_to_pm">step 8</a> above) you'll use the <strong>Add Container</strong> wizard. The pages for this wizard are shown below.</p>
<p><strong>Page 1: Select Container Type</strong></p>
<p>Select Container Type and click <strong>Next</strong>.</p>
<p><img src="images_84/pm_addcontainer_01_SelectType.jpg" alt=" Add Container wizard, Select Container Type page" /></p>

<p><strong>Page 2: Specify Metadata Import Options</strong></p>
<p>Specify the metadata URL and click <strong>Next</strong>.</p>
<p><img src="images_84/pm_addcontainer_02_SpecifyMetadataImportOptions.jpg" alt=" Add Container wizard, Specify Metadata Import Options" /></p>

<p><strong>X.509 Certificate Not Trusted</strong></p>
<p>If you get this message, you'll need to decide whether to add the certificate to the Policy Manager certificate store.</p>
<p><img src="images_84/pm_addcontainer_03_CertNotTrusted.jpg" alt=" Add Container wizard, X.509 Certificate Not Trusted" /></p>

<p><strong>Page 3: Specify Container Details</strong></p>
<p>If needed, add information about the container.</p>
<p><img src="images_84/pm_addcontainer_04_ContainerDetails.jpg" alt=" Add Container wizard, Specify Container Details" /></p>

<p><strong>Completion Summary</strong></p>
<p>At the <strong>Completion Summary</strong> page, click <strong>Close</strong>.</p>
<p><img src="images_84/pm_addcontainer_05_CompletionSummary.jpg" alt=" Add Container wizard, Completion Summary" /></p>
<p><a href="#top">back to top</a></p>



<h2 id="installation_scenarios">Sample deployment scenarios</h2>
<p>The deployment scenarios below list the installation options you should choose depending on the features you'll be running in your containers. It includes the containers for the simple installation scenario covered in this document:</p>
<ul>
	<li><a href="#features_cm_pm">Community Manager/Policy Manager container features with access to MongoDB</a></li>
	<li><a href="#features_nd_oauth">Standalone API Gateway (Network Director) (with OAuth)</a></li>
	<li><a href="#features_oauth_alone">Standalone OAuth container features</a></li>
	<li><a href="#features_sched_jobs">Scheduled Jobs container features</a></li>
</ul>

<p>This section also includes feature installation information for the following additional container scenarios:</p>
<ul>
	<li><a href="#features_pm_alone">Container features for standalone Policy Manager container</a></li>
	<li><a href="#features_pm_cm_oauth">Community Manager with Policy Manager and OAuth</a></li>
	<li><a href="#features_pm_remote_cm">Policy Manager with remote Community Manager</a></li>
	<li><a href="#features_cm_alone">Standalone Community Manager (developer portal)</a></li>
	<li><a href="#features_cm_oauth">Standalone Community Manager with OAuth</a></li>
	<li><a href="#features_nd_alone">Standalone Internal/External Gateway (Network Director) container features (without OAuth)</a></li>
</ul>


<h3 id="features_cm_pm">Community Manager/Policy Manager container features with access to MongoDB</h3>
<p>In each CM/PM combo container shown in this sample deployment, install the following features:</p>
<ul>
	<li>Akana Policy Manager Console <!--(policy.manager.console)--></li>
	<li>Akana Policy Manager Services&#8212;this feature bundle includes the Akana Scheduled Jobs feature which adds jobs to the Quartz scheduler. It also includes Akana Security Services<!--(security.services)-->. This feature is needed on all containers except Network Director.<!--(policy.manager.services)--></li>
	<li>Akana Community Manager <!--(community.manager)--></li>
	<li>Akana Community Manager Scheduled Jobs <!--(community.manager.scheduled.jobs)--></li>
</ul>
<p>Install the following plug-ins:</p>
<ul>
	<li>Akana MongoDB Support (Plug-In)<!-- (mongo.db)--> (if using MongoDB for analytics)</li>
	<li>Akana Community Manager Policy Console <!--(community.manager.plugin)-->(needed on every CM container. Without it the API security policy configuration GUI is not available; XML is shown instead)</li>
	<li>Akana OAuth Plug-In (must be installed on the Community Manager container if OAuth is installed on a separate container)</li>
	<li>One or more of the following (at least one theme is required for Community Manager):
		<ul>
			<li>Akana Community Manager Default Theme <!--(community.manager.default.theme)--></li>
			<li>Akana Community Manager Hermosa Theme <!--(community.manager.hermosa.theme)--></li>
			<li>Akana Community Manager Simple Developer Theme <!--(community.manager.simple.developer.theme)--></li>
		</ul>
	</li>
</ul>


<h3 id="features_nd_oauth">Standalone API Gateway (Network Director)</h3>
<p>Install the following features on each container running Network Director:</p>
<ul>
	<li>Akana Network Director <!--(network.director)--><!--(community.manager.oauth.provider.agent)--></li>
</ul>
<p>Install the following plug-in:</p>
<ul>
	<li>Akana API Platform ND Extensions Feature (needed for API analytics and Akana API Platform OAuth and security policies)<!--(api.security.policy.handler)--></li>
</ul>


<h3 id="features_oauth_alone">Standalone OAuth container features</h3>
<p>If you are using the Akana API Platform as your OAuth Provider, install the following features on the standalone OAuth container, or the container where you want the OAuth feature to reside. These are not required if you're using an external OAuth provider.</p>
<ul>
	<li>Akana OAuth Provider <!--(oauth.provider)--></li>
	<li>Akana Community Manager OAuth Provider <!--(community.manager.oauth.provider)--></li>
</ul>
<p><strong>Note</strong>: If you install OAuth on a separate container from Community Manager, make sure the <strong>Akana OAuth Plug-In</strong> is installed on the Community Manager container. This is needed so that you can configure OAuth via the Community Manager portal.</p>
<h3 id="features_sched_jobs">Scheduled Jobs container features</h3>
<p>If you have a standalone container for the Scheduled Jobs features, that add jobs to the Quartz scheduler, install the following:</p>
<ul>
	<li>Akana Policy Manager Services&#8212;this feature bundle includes the Akana Scheduled Jobs feature which adds jobs to the Quartz scheduler. It also includes Akana Security Services<!--(security.services)-->. This feature is needed on all containers except Network Director.</li>
	<li>Akana Community Manager Scheduled Jobs <!--(community.manager.scheduled.jobs)--></li>
</ul>
<p><strong>Note</strong>: There are other scheduled jobs that are run on each container. For example, Network Director has a job scheduler that is responsible for reaching out to Policy Manager to get updated information on which APIs to load. These scheduled jobs are not separate installation features, they are built in to each container.</p>
<p><a href="#top">Back to top</a></p>
<!--<p>https://gitlab.com/akana/automation/blob/master/README.md. Section Container Features.</p>-->


<h3 id="features_pm_alone">Container features for standalone Policy Manager container</h3>
<p>Install the following features:</p>
<ul>
	<li>Akana Policy Manager Console <!--(policy.manager.console)--></li>
	<li>Akana Policy Manager Services&#8212;this feature bundle includes the Akana Scheduled Jobs feature which adds jobs to the Quartz scheduler. It also includes Akana Security Services<!--(security.services)-->. This feature is needed on all containers except Network Director.<!-- (policy.manager.services)--></li>
	<li>Akana MongoDB Support (Plug-In)<!-- (mongo.db)--> (if using MongoDB for analytics)</li>
</ul>


<h3 id="features_pm_cm_oauth">Community Manager with Policy Manager and OAuth</h3>
<p>Install the following features:</p>
<ul>
	<li>All features listed in <a href="#features_cm_pm">Community Manager/Policy Manager container features with access to MongoDB</a> above.</li>
	<li>Akana Community Manager OAuth Provider <!--(community.manager.oauth.provider)--></li>
	<li>Akana OAuth Provider <!--(oauth.provider)--></li>
</ul>


<h3 id="features_pm_remote_cm">Policy Manager with remote Community Manager</h3>
<p>Install the following features:</p>
<ul>
	<li>All features listed in <a href="#features_pm_alone">Container features for standalone Policy Manager container</a> above.</li>
	<li>Akana Community Manager Scheduled Jobs <!--(community.manager.scheduled.jobs)--></li>
	<li>Akana API Platform Plug-In <!--(community.manager.plugin)--></li>
	<li>Akana Community Manager Policy Console <!--(community.manager.policy.console)--></li>
</ul>


<h3 id="features_cm_alone">Standalone Community Manager (developer portal)</h3>
<p><strong>Note</strong>: The developer portal would be for app developers only.</p>
<p>Install the following features:</p>
<ul>
	<li>Akana Community Manager APIs <!--(community.manager.apis)--></li>
</ul>
<p>Install the following plug-ins for Community Manager:</p>
<ul>
	<li>Akana OAuth Plug-In (must be installed on the Community Manager container if OAuth is installed on a separate container)</li>
	<li>One or more of the following (at least one theme is required for Community Manager):
		<ul>
			<li>Akana Community Manager Default Theme <!--(community.manager.default.theme)--></li>
			<li>Akana Community Manager Hermosa Theme <!--(community.manager.hermosa.theme)--></li>
			<li>Akana Community Manager Simple Developer Theme <!--(community.manager.simple.developer.theme)--></li>
			</ul>
	</li>
</ul>


<h3 id="features_cm_oauth">Standalone Community Manager with OAuth</h3>
<p>Install the following features:</p>
<ul>
	<li>All features listed in <a href="#features_cm_alone">Standalone Community Manager</a> above.</li>
	<li>Akana Community Manager OAuth Provider <!--(community.manager.oauth.provider)--></li>
	<li>Akana OAuth Provider <!--(oauth.provider)--></li>
</ul>


<h3 id="features_nd_alone">Standalone Internal/External Gateway (Network Director) container features (without OAuth)</h3>
<p>Install the following feature:</p>
<ul>
	
	<li>Akana Network Director <!--(network.director)--></li>
</ul>
<p>Install the following plug-in:</p>
<ul>
	<li>Akana API Platform ND Extensions Feature (needed for API analytics and Akana API Platform OAuth and security policies)<!--(api.security.policy.handler)--></li>
</ul>
<p><a href="#top">Back to top</a></p>
<!--<p>https://gitlab.com/akana/automation/blob/master/README.md. Section Container Features.</p>-->



<h2 id="container_creation_sequence">Container creation sequence</h2>
<p>In terms of the sequence of containers, it's best to start by upgrading one of the Policy Manager containers. This accomplishes the database upgrade as well.</p>
<p>After that point, the sequence of containers really doesn't matter. These upgrade instructions suggest the following sequence once the first container has been updated:</p>
<ol>
	<li>First, any additional containers running Policy Manager and/or the API Platform.</li>
	<li>Then, any Network Director or other containers.</li>
</ol>
<p>However, the sequence is not important after the first container. You could upgrade the Network Director container at any point. There is no dependency; containers that have been upgraded will work with containers that haven't yet been upgraded. You can even upgrade additional containers in parallel.</p>
<p>Just make sure you upgrade an initial Policy Manager container first, with the associated database upgrade, and then follow any logical approach, making sure that each step completes successfully before starting the next one.</p>
<p><a href="#top">Back to top</a></p>



<h3 id="fn_scheduled_jobs">Feature Notes: Scheduled jobs</h3>
<p>Platform installation options include the following scheduled jobs features:</p>
<ul>
	<li>Akana Scheduled Jobs&#8212;bundled with the Akana Policy Manager Services feature</li>
	<li>Akana Community Manager Scheduled Jobs</li>
</ul>
<p>There might be additional scheduled jobs features for additional add-ons.</p>
<p>In general, we recommend that you install all scheduled jobs on the same container. In a scenario where Policy Manager and Community Manager are on different containers, you'd most likely install the scheduled jobs on the Policy Manager container. This helps avoid overload on the Community Manager container, since Community Manager might be processing a lot of traffic, whereas the Policy Manager container is likely to be inside the firewall and used internally.</p>
<p><a href="#top">back to top</a></p>



<h3 id="fn_embedded_es_node">Feature Notes: Akana Embedded Elasticsearch Node feature</h3>
<p>If you are using Elasticsearch in Embedded Mode, note that the <strong>Akana Embedded Elasticsearch Node</strong> feature requires that the <strong>Akana Community Manager Scheduled Jobs</strong> feature is installed on the same container, as well as the Community Manager portal features where the search is being performed.</p>
<p>However, bear in mind that we do not recommend using Elasticsearch Embedded mode in a production environment.</p>
<p>If you are running an external Elasticsearch server with Transport Client mode, it's not necessary to install the <strong>Akana Embedded Elasticsearch Node</strong> feature.</p>
<p>For more information on installing and configuring Elasticsearch, see <a href="../../cm/learnmore/site_admin_es.htm">Elasticsearch: Information for Site Admins</a> (developer portal help).</p>
<p><a href="#top">back to top</a></p>



<h2 id="optional_additional_features">Optional Additional Features</h2>
<p>The platform installation includes some optional additional features:</p>
<ul>
	<li><strong>Admin Monitoring tool</strong>: an optional plug-in, this tool provides a way to view the monitored attributes published by different components in the product. This tool is used mainly to monitor thread pools and usage data queues. For more information on this tool, see <a href="../monitoring/using_admin_monitoring_tool.htm">Using the Admin Monitoring Tool</a>.
	<p><strong>Note</strong>: The product also includes the <strong>System Health</strong> tool (Akana Administration Console for the container &gt; <strong>Health</strong> tab), which is part of basic installation and also allows you to create your own monitoring dashboard. We recommend using the System Health tool rather than the Admin Monitoring tool. See <a href="../monitoring/monitoring_container_health.htm">Monitoring the Health of a Container: Akana System Health Tool</a>.</p></li>
	<li><strong>Additional themes</strong>: As part of setting up Community Manager you'll need to set up at least one <a href="../../cm/learnmore/basics_glossary.htm#gl_theme">theme</a>. However, you might want to use more than one. For example, you might install Hermosa Theme for the full functionality of the developer portal and have a separate <a href="../../cm/learnmore/basics_glossary.htm#gl_theme_simpledev">Simple Developer theme</a> instance for your app developers to connect to APIs (streamlined UI with app and API functionality but without Site Admin functions).</li>
</ul>
<p><a href="#top">back to top</a></p>



<hr class="divide_hr" />



<h2 id="related_topics">Related Topics</h2>
<div class="relatedlinks" id="install"><!-- #BeginLibraryItem "/Library/relatedtopics_install.lbi" -->
<ul>
	<li><a href="../upgrade/upgrading_akana_api_platform_all.htm">Upgrading the Akana API Platform (all versions)</a></li>
	<li><a href="../upgrade/upgrading_min_downtime.htm">Use Case: Upgrading with Minimum Downtime</a></li>
	<li><a href="../upgrade/upgrading_micro.htm">Minor-Version Update Notes</a></li>
</ul>
<ul>
	<li><a href="installing_akana_api_platform_all.htm">Installing the Akana API Platform (all versions)</a></li>
	<li><a href="implementation_planning.htm">Planning Your Implementation</a></li>
	<li><a href="install_cm_jython_script.htm">Installation Jython Script</a></li>
	<li><a href="install_es_config.htm">Installing and Configuring Elasticsearch</a></li>
	<li><a href="install_es_secure_tc.htm">Configuring Elasticsearch with Security</a></li>
</ul><!-- #EndLibraryItem --></div>