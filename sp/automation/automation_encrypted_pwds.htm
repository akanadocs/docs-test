---
layout: page
title: Including Encrypted Passwords in Automation Recipes
description: Learn how to generated encrypted passwords and use them in recipe files.
product: sp
category: ref
weight: 05
sub-nav-class: Automation
type: page
nav-title: Encrypted Passwords in Recipes
---
<h1 id="top">Automation: Including Encrypted Passwords in Recipes</h1>
<p>Learn how to generate encrypted passwords and use them in recipe files.</p>
<p>For general information about using automation recipes, and simple examples to get you started, refer to the files below.</p>
<p><strong>Note</strong>: Automation is valid for Linux only. It is not valid for Windows at this time.</p>
<h4 class="stamp">Supported Platforms: 8.4.x and later</h4>
<div class = "divider1"></div>



<h2 style="color: gray;">Table of Contents</h2>
<ol class="table_of_contents">
	<li><a href="#overview">Overview</a></li>
	<li><a href="#automation_encryption_create_key">Creating the encryption key</a></li>
	<li><a href="#automation_encryption_encrypt_value">Encrypting a value</a></li>
	<li><a href="#automation_encryption_use_value">Using the encrypted value in a properties file</a></li>
	<li><a href="#automation_encryption_executing">Executing a recipe with encrypted properties</a></li>
</ol>
<div class = "divider1"></div>



<h2 id="overview">Overview</h2>
<p>When using automation <a href="../../ag/glossary_pm_nd.htm#gl_pm_recipe">recipes</a>, in some cases it's important that credentials are encrypted for security reasons.</p>
<p>In version 2019.0.0 and later, automation functionality includes an encryption feature that uses a <strong>secret</strong> directive to indicate that a value is encrypted, and can be decrypted using the key in the secrets file.</p>
<p>The basic steps are:</p>
<ol>
	<li>Create an encryption key and store it in a file. For example, the command below creates an encryption key and stores it in a file named <strong>secret.key</strong>:
<pre>./jython.sh -m akana.secrets --keygen --secrets-file secret.key</pre>
	</li>
	<li>Encrypt a value, or a set of values, that will be used in executing a recipe using the generated key. For example:
		<pre>./jython.sh -m akana.secrets --encrypt --secrets-file secret.key &quot;some value&quot;</pre>
		<p>This prints the encrypted value into console output; for example:</p>
		<pre>secret:some_hash</pre>
	</li>
	<li>Use the encrypted value in a properties file.</li>
</ol>
<p><a href="#top">back to top</a></p>



<h2 id="automation_encryption_create_key">Creating the encryption key</h2>
<p>To create an encryption key, use the following command:</p>
<pre>./jython.sh -m akana.secrets --keygen --secrets-file secret.key</pre>
<p>In the above:</p>
<ul>
	<li><span class="apidoc_code">akana.secrets</span> is the name of the automation module that supports managing encryption in automation recipes.</li>
	<li><span class="apidoc_code">--keygen</span> is the option to generate the encryption key.</li>
	<li><span class="apidoc_code">--secrets-file</span> specifies the user-defined name of the file where the encryption key is stored (in this case, <strong>secret.key</strong>).</li>
</ul>
<p><a href="#top">back to top</a></p>



<h2 id="automation_encryption_encrypt_value">Encrypting a value</h2>
<p>To encrypt a value, use the following command:</p>
<pre>./jython.sh -m akana.secrets --encrypt --secrets-file secret.key &quot;some value&quot;</pre>
<p>In the above:</p>
<ul>
	<li><span class="apidoc_code">akana.secrets</span> is the name of the automation module that supports managing encryption in automation recipes.</li>
	<li><span class="apidoc_code">--encrypt</span> is the option to encrypt a value.</li>
	<li><span class="apidoc_code">--secrets-file</span> specifies the user-defined name of the file where the encryption key is stored (in this case, <strong>secret.key</strong>).
	<p><strong>Note</strong>: As an alternative to <span class="apidoc_code">--secrets-file</span>, you could use: <span class="apidoc_code">-s {filename}</span>.</p></li>
	<li>&quot;some value&quot; is the value to be encrypted.</li>
</ul>
<p><a href="#top">back to top</a></p>



<h2 id="automation_encryption_use_value">Using the encrypted value in a properties file</h2>
<p>Let's say you need to configure automation recipes with encryption, and there are two passwords, one for the database administration and one for the database schema.</p>
<p>The default recipes include the following:</p>
<pre>"name":"set.database.options",
"properties":{
  "admin.username":"${DB_ADMIN_USERNAME|root}",
  "admin.password":"${DB_ADMIN_PASSWORD|password}",
  "user":"${DB_USERNAME|user123}",
  "password":"${DB_PASSWORD|password}",
</pre>
<p>In this scenario, the DB_ADMIN_PASSWORD and DB_PASSWORD values would be encrypted separately using the same key file.</p>
<p>For example, for this recipe variable:</p>
<pre>${DB_ADMIN_PASSWORD}</pre>
<p>The entry in the properties file might be:</p>
<pre>DB_ADMIN_PASSWORD=secret:VdRdHt61SENlNrufQw2maonU9jZEcNMrprE5L_HDBrE</pre>
<p><a href="#top">back to to</a><a href="#top">p</a></p>



<h2 id="automation_encryption_executing">Executing a recipe with encrypted properties</h2>
<p>Once you've generated the password, and updated the properties file with the encrypted values, you'll need to pass the key file when executing a recipe with encrypted properties.</p>
<p>An example is shown below.</p>
<pre>/opt/akana/bin/jython.sh -m akana.container --secrets-file=secret.key --recipe &lt;recipe name&gt; --props &lt;properties file&gt;</pre>
<p>In the above:</p>
<ul>
	<li><span class="apidoc_code">--secrets-file</span> specifies the user-defined name and path for the file where the encryption key is stored (in this case, <strong>secret.key</strong>).</li>
	<li><span class="apidoc_code">--recipe &lt;recipe name&gt;</span> is the recipe filename and path.</li>
	<li><span class="apidoc_code">--props &lt;properties file&gt;</span> is the properties file for the recipe.</li>
</ul>
<p><a href="#top">back to top</a></p>



<div class = "divider1"></div>



<h2 id="related_topics">Related Topics</h2>
<div class="relatedlinks" id="install"><!-- #BeginLibraryItem "/Library/relatedtopics_install.lbi" -->
<ul>
	<li><a href="../upgrade/upgrading_akana_api_platform_all.htm">Upgrading the Akana API Platform (all versions)</a></li>
	<li><a href="../upgrade/upgrading_min_downtime.htm">Use Case: Upgrading with Minimum Downtime</a></li>
	<li><a href="../upgrade/upgrading_micro.htm">Minor-Version Update Notes</a></li>
</ul>
<ul>
	<li><a href="../platform_install/installing_akana_api_platform_all.htm">Installing the Akana API Platform (all versions)</a></li>
	<li><a href="../platform_install/implementation_planning.htm">Planning Your Implementation</a></li>
	<li><a href="../platform_install/install_cm_jython_script.htm">Installation Jython Script</a></li>
	<li><a href="../platform_install/install_es_config.htm">Installing and Configuring Elasticsearch</a></li>
	<li><a href="../platform_install/install_es_secure_tc.htm">Configuring Elasticsearch with Security</a></li>
</ul><!-- #EndLibraryItem --></div>