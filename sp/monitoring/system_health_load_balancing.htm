---
layout: page
title: Monitoring Container Status with Load Balancing
description: An example of monitoring container status with load balancing.
product: sp
category: learn
weight: 7
sub-nav-class: Monitoring
type: page
nav-title: Monitoring with Load Balancing
---
<h1 id="top">Monitoring Container Status with Load Balancing</h1>
<p>An example of monitoring container status with load balancing.</p>
<div class = "divider1"></div>



<h2 style="color: gray;">Table of Contents</h2>
<ol class="table_of_contents">
	<li><a href="#monitoring_load_balancing">Monitoring container status with load balancing</a>
		<ul>
			<li><a href="#checking_health_define_resp_code_examples">Using response codes to monitor status: examples</a></li>
		</ul>
		</li>
</ol>
<div class = "divider1"></div>



<h2 id="monitoring_load_balancing">Monitoring container status with load balancing</h2>
<p>In a typical production Akana deployment, the Akana containers are deployed in a cluster and behind a load balancer. The diagram below shows the Network Director behind a load balancer. An application invokes an API hosted on the Network Director through the load balancer.</p>
<p>It is important that the Network Director is functioning, and all the APIs are deployed on it, before any API is invoked. This helps avoid 404 errors being returned to the application/consumer.</p>
<p>This configuration is applicable for any of the Akana containers that are behind a load balancer (for example, Policy Manager, Community Manager, OAuth Provider).</p>
<p><img src="../admin_console/images/health_flowchart.png" alt="Container health with load balancing: flowchart" /></p>
<p>To ensure that the Network Director or container is ready to receive requests, the load balancers should be configured to monitor the state of the container using the Load Balancer's system health check URL. This URL returns one of the following:</p>
<ul>
	<li>An HTTP 200 status code if the container ready to process inbound traffic.</li>
	<li>An HTTP 503 status code if the container is still coming up.</li>
</ul>
<p>All the Akana containers that are configured behind a Load Balancer should use the Load Balancer's system health check URL to monitor system health status.</p>
<p>Configure the following container system health check URL in the Load Balancer and check for the following status codes.</p>
<p><strong>Method</strong>: GET</p>
<p><strong>URL</strong>: <span class="apidoc_code">http(s)://&lt;container_admin_host&gt;:&lt;container_port&gt;/admin/health/measurables/akana.service.container.readiness?normal-status=200&amp;failure-status=503&amp;warning-status=503&amp;brief=true</span></p>
<p><strong>HTTP Status Codes</strong>:</p>
<ul>
	<li><strong>200</strong>&#8212;Container is ready, the services/apis are deployed and the container can receive requests.</li>
	<li><strong>503</strong>&#8212;Container is still not ready to receive requests. </li>
</ul>


<h3 id="checking_health_define_resp_code_examples">Using response codes to monitor status: examples</h3>
<p>An example of the request and responses are below.</p>


<h4>Request</h4>
<pre>GET https://10.1.16.24:8867/admin/health/measurables/akana.service.container.readiness?normal-status=200&amp;failure-status=503&amp;warning-status=503&amp;brief=true HTTP/1.1
Host: 10.1.16.24:8867
Connection: Keep-Alive
User-Agent: Apache-HttpClient/4.1.1 (java 1.5)</pre>

<h4>Response headers: Container is still coming up and is not ready to receive requests</h4>
<pre>HTTP/1.1 503 Service Unavailable
Date: Tue, 05 Nov 2019 17:13:46 GMT
Content-Type: application/json
Transfer-Encoding: chunked</pre>

<h4>Response content: Container is still coming up and is not ready to receive requests</h4>
<pre>{
  "id":"akana.service.container.readiness",
  "name":"Service Container Readiness",
  "path":"akana.service.container.readiness",
  "state":"FAILURE",
  "childCount":7,
  "editable":false,
  "options":{
    "enableAuth":true,
    "links":[
      {
        "rel":"self",
        "href":"https://10.1.16.24:8867/admin/health/measurables/akana.service.container.readiness/configuration"
      }
    ]
  },
  "links":[
    {
      "rel":"self",
      "href":"https://10.1.16.24:8867/admin/health/measurables/akana.service.container.readiness"
    },
    {
      "rel":"brief",
      "href":"https://10.1.16.24:8867/admin/health/measurables/akana.service.container.readiness?brief=true"
    },
    {
      "rel":"children",
      "href":"https://10.1.16.24:8867/admin/health/measurables/akana.service.container.readiness/children"
    },
    {
      "rel":"options",
      "href":"https://10.1.16.24:8867/admin/health/measurables/akana.service.container.readiness/configuration"
    }
  ]
}</pre>


<h4>Response headers: Container is ready to receive traffic</h4>
<pre>HTTP/1.1 200 OK
Date: Tue, 05 Nov 2019 17:12:20 GMT
Content-Type: application/json
Vary: Accept-Encoding, User-Agent
Transfer-Encoding: chunked</pre>


<h4>Response content: Container is ready to receive traffic</h4>
<pre>{
  "id":"akana.service.container.readiness",
  "name":"Service Container Readiness",
  "path":"akana.service.container.readiness",
  "state":"NORMAL",
  "childCount":7,
  "editable":false,
  "options":{
    "enableAuth":true,
    "links":[
      {
        "rel":"self",
        "href":"https://10.1.16.24:8867/admin/health/measurables/akana.service.container.readiness/configuration"
      }
    ]
  },
  "links":[
    {
      "rel":"self",
      "href":"https://10.1.16.24:8867/admin/health/measurables/akana.service.container.readiness"
    },
    {
      "rel":"brief",
      "href":"https://10.1.16.24:8867/admin/health/measurables/akana.service.container.readiness?brief=true"
    },
    {
      "rel":"children",
      "href":"https://10.1.16.24:8867/admin/health/measurables/akana.service.container.readiness/children"
    },
    {
      "rel":"options",
      "href":"https://10.1.16.24:8867/admin/health/measurables/akana.service.container.readiness/configuration"
    }
  ]
}</pre>
<p><a href="#top">Back to top</a></p>