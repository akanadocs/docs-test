---
layout: page
title: Enable HTTPS access to the Akana Administration Console
description: Configure the container system.properties file to enable HTTPS access to the Akana Administration Console.
product: sp
category: gs
weight: 15
sub-nav-class: Akana Admin Console
type: page
nav-title: Enable HTTPS Access to the Administration Console
---
<h1 id="top">Enable HTTPS access to the Akana Administration Console</h1>
<p>Configure the container <strong>system.properties</strong> file to enable HTTPS access to the Akana Administration Console.</p>
<hr class="divide_hr" />



<h2 style="color: gray;">Table of Contents</h2>
<ol class="table_of_contents">
<li><a href="#introduction">Introduction</a></li>
<li><a href="#configuration">Configuration</a>
	<ol>
		<li><a href="#aac_http_access_01_properties">Step 1: Add HTTPS listener in properties file</a></li>
		<li><a href="#aac_http_access_02_config">Step 2: Optional additional configuration to restrict Akana Administration Console access to ports defined in the system.properties file</a></li>
	</ol>
</li>
<li><a href="#troubleshooting">Troubleshooting</a></li>
</ol>
<hr class="divide_hr" />



<h2 id="introduction">Introduction</h2>
<p>You can set up HTTPS access to the Akana Administration Console by enabling an HTTPS port.</p>
<p>All you need to do is define the HTTPS listener in the <strong>system.properties</strong> file for the container.</p>
<p><a href="#top">Back to top</a></p>



<h2 id="configuration">Configuration</h2>
<p>There is one basic configuration step, and one additional step you can take to further restrict assess:</p>
<ul>
	<li><a href="#aac_http_access_01_properties">Step 1: Add HTTPS listener in properties file</a></li>
	<li><a href="#aac_http_access_02_config">Step 2: Optional additional configuration to restrict Akana Administration Console access to ports defined in the system.properties file</a></li>
</ul>

<h3 id="aac_http_access_01_properties">Step 1: Add HTTPS listener in properties file</h3>
<p>To enable an HTTPS listener, you must update the <strong>system.properties</strong> file in the {release_directory}/instances/{containername} folder, as shown below. In this example, we use port 9446.</p>

<p>With the settings below, access to the Akana Administration Console is limited to the specified HTTPS listener.</p>

<h4>To modify the system.properties file to enable an HTTPS listener</h4>
<ol>
	<li>Open the <strong>{release_directory}/instances/{containername}/system.properties</strong> file in a text editor. An example is shown below.
		<p><img src="images/ac_folder_system_properties.png" alt="Akana Administration Console folder structure: location of system.properties file" /></p>
	</li>
	<li>Remove the following settings:
		<ul>
			<li><strong>org.osgi.service.http.port=9000</strong></li>
			<li><strong>com.soa.http.bind.all=true</strong></li>
			</ul>
		</li>
	
	<li>Add the following settings:
		<ul>
			<li><strong>org.osgi.service.http.port.secure=9446</strong></li>
			<li><strong>com.soa.http.bind.all.secure=true</strong></li>
		</ul>
		</li>
	
	<li>
		Save changes.</li>
	<li>Restart the container. </li>
</ol>

<h3 id="aac_http_access_02_config">Step 2: Optional additional configuration to restrict Akana Administration Console access to ports defined in the system.properties file</h3>
<p>When you've modified the properties in the <strong>system.properties</strong> file as covered in Step 1 above, the Akana Administration Console is accessible:</p>
<ul>
	<li>To the port you defined in the system.properties file.</li>
	<li>To any other ports defined for that container in Policy Manager.</li>
</ul>
<p>If you want to further restrict access to the Akana Administration Console, so that it is only accessible via the port defined in the <strong>system.properties</strong> file, there is an additional configuration step you can take.&nbsp;By modifying a specific configuration property in the Akana Administration Console, it will not be available to additional ports defined for the container in Policy Manager.</p>
<p>To do this, follow the steps below.</p>
<h4>To restrict Akana Administration Console access to ports defined in the system.properties file</h4>
<ol>
	<li>When the container is up and running, log in to the Akana Administration Console (<strong>https://localhost:{port}/admin/</strong>).</li>
	<li>Go to <strong>Configuration</strong> &gt; <strong>Configuration Categories</strong> and choose the <strong>com.soa.admin.console</strong> category as shown below.
<p><img src="images/ac_cc_com_soa_admin_console.png" alt="Configuration Categories: com.soa.admin.console" /></p></li>
	<li>Change the <strong>admin.console.access.restricted</strong> property from <strong>false</strong> (the default) to <strong>true</strong>.
		<p>For details about this property, see <a href="#aac_admin_console_access_restricted">admin.console.access.restricted property settings</a> below.</p>
	</li>
	<li>Save changes.</li>
</ol>

<h4 id="aac_admin_console_access_restricted">admin.console.access.restricted property settings</h4>
<p>The <strong>admin.console.access.restricted</strong> setting has two possible values:</p>
<ul>
	<li><strong>False</strong> (the default) means you can access the Akana Administration Console:
<ul>
			<li>Through the port defined in the <strong>system.properties</strong> file.</li>
			<li>Via any other ports defined for that container in Policy Manager / Through the listeners defined in the Policy Manager workbench (see <a href="../../ag/listeners/about_listeners.htm">About Listeners</a> in the Policy Manager help).</li>
		</ul>
	</li>
	<li><strong>True</strong> (more secure) means you can access the Akana Administration Console:
<ul>
			<li>Only through the port defined in the <strong>system.properties</strong> file.
				<p>If you try to access the Akana Administration Console using any port not defined in the <strong>system.properties</strong> file, the response will be a 404 error.</p>
			</li>
		</ul>
	</li>
</ul>
<p><a href="#top">Back to top</a></p>



<h2 id="troubleshooting">Troubleshooting</h2>
<p>If everything appears to be configured correctly and you are still seeing 404 errors when you try to launch the Akana Administration Console, review the following steps to attempt to troubleshoot the problem.</p>

<h4>Step 1: Inspect Log</h4>
<p>Inspect the container logs in the {release_directory}\instances\{containername}\logs folder and search for the following errors near the startup:</p>
<pre>Caused by: java.net.BindException: Address already in use
  at java.net.PlainSocketImpl.socketBind(Native Method)
  at java.net.PlainSocketImpl.bind(Unknown Source)
  at java.net.ServerSocket.bind(Unknown Source)
  at java.net.ServerSocket.&lt;init&gt;(Unknown Source)</pre>
<p>These errors mean that the container is trying to start its listener, but something is already listening on the port assigned in the <strong>system.properties</strong> file.</p>

<h4>Step 2: Resolve</h4>
<ol>
	<li>Stop the container and check to make sure that nothing is running on the port that the container is configured to run on. <strong>If nothing is running</strong>, it means that the container is trying to start <strong>TWO</strong> listeners on the same port. </li>
	<li>Check <strong>system.properties</strong> in the container directory. It will specify listeners that the container uses on initial startup. For example:
<pre>com.soa.http.host=hostname
org.osgi.service.http.port.secure=9446
com.soa.http.bind.all.secure=true</pre>
</li>
	<li>Compare the host, port, and bind settings above with the actual Policy Manager listeners defined in the Policy Manager Management Console. If the ports specified in the <strong>system.properties</strong> file are different from the ports specified in Policy Manager, the problem must exist elsewhere. If the port numbers match, then ONE of the following must occur:
<ul>
			<li><strong>com.soa.http.bind.all.secure</strong> in the system.properties file AND the <strong>Bind to All Interfaces</strong> option for the HTTPS container listener in the Policy Manager Management Console must both be set.</li>
			<li>The <strong>com.soa.http.host</strong> value in the <strong>system.properties</strong> file and the <strong>hostname</strong> in the Policy Manager Management Console must match.</li>
</ul>
<p>The reason is that when Policy Manager starts its listener, it tries to determine whether one already exists on the same port and host. If it finds one already running, it uses that port. If the host names are different, or if they are not running on all interfaces, Policy Manager might not be able to find the listener already running, and might therefore try to start a new one on the same port.</p></li>
</ol>
<p><a href="#top">Back to top</a></p>