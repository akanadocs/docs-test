#!/bin/bash
# $Id$
# $Rev$

PATH=$PATH:/usr/bin

DB_USER="root"
DB_PASS="soa"
DB_HOST="localhost"
DB_NAME="pm6db"

[ $# -ne 1 ] && { echo "Usage $0 \"YYYY-MM-DD hh:mm:ss\"|\"ALL\""; exit 0; }

USER_D="$1"
if [ "$USER_D" != "ALL" ]
then
  date -d "$USER_D"  > /dev/null 2>&1
  [ $? -ne 0 ] && { echo "Invalid date $USER_D. Must be the form of \"YYYY-MM-DD hh:mm:ss\" or \"ALL\""; exit -1; }
fi


sqlcmd1="mysql -u $DB_USER -p${DB_PASS} -D $DB_NAME -h $DB_HOST -BNe"
sqlcmd2="mysql -u $DB_USER -p${DB_PASS} -D $DB_NAME -h $DB_HOST -BN"

for tbl in MO_USAGE_NEXTHOP MO_USAGEDATA  MO_USAGEMSGS
do
  case $tbl in


##### Merge MO_USAGE_NEXTHOP ####
  MO_USAGE_NEXTHOP)
     DTS="REQUESTDTS";
     if [ "$USER_D" = "ALL" ]
     then
       $sqlcmd2<<EOF
INSERT INTO MO_USAGE_NEXTHOP
    (EVENTID, URL, REQUESTDTS, CREATEDTS, RESPTIME)
SELECT EVENTID, URL, REQUESTDTS, CREATEDTS, RESPTIME
    FROM MO_USAGE_NEXTHOP_BCK;
EOF
       [ $? -ne 0 ] { echo "INSERT INTO MO_USAGE_NEXTHOP failed"; exit -1; }
     else
       MIN=`$sqlcmd1 "select min(${DTS}) from $tbl"`
       $sqlcmd2<<EOF
INSERT INTO MO_USAGE_NEXTHOP
    (EVENTID, URL, REQUESTDTS, CREATEDTS, RESPTIME)
SELECT EVENTID, URL, REQUESTDTS, CREATEDTS, RESPTIME
    FROM MO_USAGE_NEXTHOP_BCK where REQUESTDTS >= '${MIN}' and REQUESTDTS < '${USER_D}';
EOF
       [ $? -ne 0 ] { echo "INSERT INTO MO_USAGE_NEXTHOP failed"; exit -1; }
     fi
     ;;



##### Merge MO_USAGEDATA ####
  MO_USAGEDATA)
     DTS="REQUESTDTS";
     if [ "$USER_D" = "ALL" ]
     then
       $sqlcmd2<<EOF
INSERT INTO MO_USAGEDATA 
    (EVENTID PARENTEVENTID CLIENTHOST MPNAME OPERATIONID SERVICEID ORGID CONTRACTID BINDTEMPLATEID REQUSERNAME REQUESTDTS REQUESTMILLIS RESPONSETIME REQMSGSIZE NMREQMSGSIZE RESPMSGSIZE NMRESPMSGSIZE ERRCATEGORY ERRMESSAGE ERRDETAILS CREATEDTS CREATEDMILLIS NEXTHOPURL ISSOAPFLTBYMP ISSOAPFLTBYNEXTHOP LISTENERURL NEXTHOPRESPTIME APPUSERNAME OTHERUSERNAMES CUSTOMFIELD1 VERB STATUS_CODE) 
SELECT EVENTID PARENTEVENTID CLIENTHOST MPNAME OPERATIONID SERVICEID ORGID CONTRACTID BINDTEMPLATEID REQUSERNAME REQUESTDTS REQUESTMILLIS RESPONSETIME REQMSGSIZE NMREQMSGSIZE RESPMSGSIZE NMRESPMSGSIZE ERRCATEGORY ERRMESSAGE ERRDETAILS CREATEDTS CREATEDMILLIS NEXTHOPURL ISSOAPFLTBYMP ISSOAPFLTBYNEXTHOP LISTENERURL NEXTHOPRESPTIME APPUSERNAME OTHERUSERNAMES CUSTOMFIELD1 VERB STATUS_CODE FROM MO_USAGEDATA_BCK;
EOF
       [ $? -ne 0 ] { echo "INSERT INTO MO_USAGEDATA failed"; exit -1; }
     else
       MIN=`$sqlcmd1 "select min(${DTS}) from $tbl"`
       $sqlcmd2<<EOF
INSERT INTO MO_USAGEDATA 
    (EVENTID PARENTEVENTID CLIENTHOST MPNAME OPERATIONID SERVICEID ORGID CONTRACTID BINDTEMPLATEID REQUSERNAME REQUESTDTS REQUESTMILLIS RESPONSETIME REQMSGSIZE NMREQMSGSIZE RESPMSGSIZE NMRESPMSGSIZE ERRCATEGORY ERRMESSAGE ERRDETAILS CREATEDTS CREATEDMILLIS NEXTHOPURL ISSOAPFLTBYMP ISSOAPFLTBYNEXTHOP LISTENERURL NEXTHOPRESPTIME APPUSERNAME OTHERUSERNAMES CUSTOMFIELD1 VERB STATUS_CODE) 
SELECT EVENTID PARENTEVENTID CLIENTHOST MPNAME OPERATIONID SERVICEID ORGID CONTRACTID BINDTEMPLATEID REQUSERNAME REQUESTDTS REQUESTMILLIS RESPONSETIME REQMSGSIZE NMREQMSGSIZE RESPMSGSIZE NMRESPMSGSIZE ERRCATEGORY ERRMESSAGE ERRDETAILS CREATEDTS CREATEDMILLIS NEXTHOPURL ISSOAPFLTBYMP ISSOAPFLTBYNEXTHOP LISTENERURL NEXTHOPRESPTIME APPUSERNAME OTHERUSERNAMES CUSTOMFIELD1 VERB STATUS_CODE 
    FROM MO_USAGEDATA_BCK where REQUESTDTS >=  '${MIN}' and REQUESTDTS < '${USER_D}';
EOF
       [ $? -ne 0 ] { echo "INSERT INTO MO_USAGEDATA failed"; exit -1; }
     fi
     ;;


##### Merge MO_USAGEMSGS ####
  MO_USAGEMSGS)
     DTS="MSGCAPTUREDDTS";
     if [ "$USER_D" = "ALL" ]
     then
       $sqlcmd2<<EOF
INSERT INTO MO_USAGEMSGS 
    SELECT * FROM MO_USAGEMSGS_BCK
EOF
       [ $? -ne 0 ] { echo "INSERT INTO MO_USAGEMSGS failed"; exit -1; }
     else
       MIN=`$sqlcmd1 "select min(${DTS}) from $tbl"`
       $sqlcmd2<<EOF
INSERT INTO MO_USAGEMSGS 
    SELECT * FROM MO_USAGEMSGS_BCK where MSGCAPTUREDDTS >= '${MIN}' and MSGCAPTUREDDTS < '${USER_D}';
EOF
       [ $? -ne 0 ] { echo "INSERT INTO MO_USAGEMSGS failed"; exit -1; }
     fi
     ;;



  *)
     echo "Unknown table $tbl";
     exit 1;
     break;;
  esac
done
